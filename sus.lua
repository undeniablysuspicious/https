--getfenv().LPH_NO_VIRTUALIZE = function(f) return f end;
loadstring([[
function LPH_NO_VIRTUALIZE(...)
return ...
end

]])()

--for k,v in pairs(getgc(true)) do if pcall(function() return rawget(v,"indexInstance") end) and type(rawget(v,"indexInstance")) == "table" and (rawget(v,"indexInstance"))[1] == "kick" then v.tvk = {"kick",function() return game.Workspace:WaitForChild("") end} end end
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}

local Detected, Kill

setthreadidentity(2)

for i, v in getgc(true) do
    if typeof(v) == "table" then
        local DetectFunc = rawget(v, "Detected")
        local KillFunc = rawget(v, "Kill")
    
        if typeof(DetectFunc) == "function" and not Detected then
            Detected = DetectFunc
            
            local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                if Action ~= "_" then
                    if DEBUG then
                        warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
                    end
                end
                
                return true
            end)

            table.insert(Hooked, Detected)
        end

        if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
            Kill = KillFunc
            local Old; Old = hookfunction(Kill, function(Info)
                if DEBUG then
                    warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
                end
            end)

            table.insert(Hooked, Kill)
        end
    end
end

local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local LevelOrFunc, Info = ...

    if Detected and LevelOrFunc == Detected then
        if DEBUG then
            warn(`Adonis AntiCheat sanity check detected and broken`)
        end

        return coroutine.yield(coroutine.running())
    end
    
    return Old(...)
end))
-- setthreadidentity(9)
setthreadidentity(7)
local LRM_UserNote
local LRM_LinkedDiscordID 
local LRM_TotalExecutions 
local LRM_SecondsLeft 
local AccessToLoadstring = getgenv().dephdaLLoura or {}
if luraphsettings then 
    LRM_UserNote = luraphsettings.LRM_UserNote;
    LRM_LinkedDiscordID = luraphsettings.LRM_LinkedDiscordID;
    LRM_TotalExecutions = luraphsettings.LRM_TotalExecutions;
    LRM_SecondsLeft = luraphsettings.LRM_SecondsLeft;
end


if script_key then 
    task.spawn(function()
    end)
end


-- local old_gc = getgc();
-- local oldgc;
-- oldgc = hookfunction(getgc, function(...)
--     return old_gc
-- end)

-- New example script written by wally
-- You can suggest changes with a pull request or something

--1

-- could make getgenv return a different getgenv() or getgenv().azfake


-- getgenv().versioncode = '#5c'
-- getgenv().azfake_version = 'v3 '..getgenv().versioncode
-- print(('V4 %s'):format('4a prolly when syn v3 comes out'))
-- 1234


-- could make it so when on tp it does getgenv().premiumWhitelist = true

if not (rconsoleprint) then rconsoleprint = print end

local dungeon_quest_games = {
    ["[HUNT] Dungeon Quest! âš”ï¸ RPG Adventure"] = 2414851778;
    ["Level"] = 14363263080;
    ["100+"] = 14363264964;
}
--[[

local x = game:GetService("AssetService"):GetGamePlacesAsync()

local str = ""

while true do
	for _, place in x:GetCurrentPage() do
		print("Name:", place.Name)
		print("PlaceId:", place.PlaceId)
		str = str..`["{place.Name}"] = {place.PlaceId};\n`
	end
	if x.IsFinished then
		break
	end
	x:AdvanceToNextPageAsync()
end
setclipboard(str)
]]

-- local dungeon_quest_games = {
--     ["Dungeon Quest!"]=2414851778;
--     ["Desert Temple"]=2606294912;
--     ["Winter Outpost"]=2743806150;
--     ["Trading Post"]=2779073290;
--     ["testingArea"]=2886606697;
--     ["Pirate Island"]=2988891534;
--     ["King's Castle"]=3041739550;
--     ["The Underworld"]=3119903031;
--     ["Lobby 2"]=3220968688;
--     ["Wave Defence"]=3220974599;
--     ["Samurai Palace"]=3277965370;
--     ["The Canals"]=3488584454;
--     ["Ghastly Harbor"]=3737465474;
--     ["Tutorial"]=3896361983;
--     ["Steampunk Sewers"]=4113459044;
--     ["raids"]=4286254333;
--     ["Orbital Outpost"]=4628698373;
--     ["EI hehe"]=4865331948;
--     ["Volcanic"]=5281215714;
--     ["Data Recovery Center"]=5829413559;
--     ["Asset Holder"]=5990944244;
--     ["Aquatic Temple"]=6216785535;
--     ["Enchanted Forest"]=6878973814;
--     ["vCaffy's Place Number: 227"]=7852284392;
--     ["Halloween Boss"]=7852317824;
--     ["Northern Lands"]=8376888496;
--     ["Gilded Skies"]=11663047386;
--     ["Krampus"]=11926349271;
-- }

local shindogames = {
    "7214033433",
    "6505734854",
    "5451410109",
    "5451405681",
    "5743370338",
    "4601350809",
    "5255237254",
    "6602103757",
    "5824792748",
    "6593188260",
    "5664805984",
    "4601350214",
    "5431069982",
    "4601350656",
    "4616652839",
    "11910138955",
    "5943872934",
    "7923764447",
    "5451398863",
    "6444873399",
    "5307141034",
    "4601350760",
    "8184506020",
    "6602058266",
    "9310522814",
    "7534339269",
    "7524811367",
    "5084678830",
    "6986372023",
    "4601350394",
    "5664803952",
    "6341670805",
    "6984568732",
    "7524809704",
    "6901575446",
    "5447073001",
    "5451401540",
    "6593187011",
    "8472733618",
    "5431071837",

}
-- getgenv().TableOfFunctions = {}


-- table to return a table


local azfake = {}

azfake.fireproximitypromt = function(prompt)
    if not prompt then 
        return error('Argument 1 is nil')
    elseif not prompt:IsA('ProximityPrompt') then 
        return error('Argument 1 Is not a Proximity Prompt')
    end
    prompt:InputHoldBegin()
end
azfake.find = function(dir,properties) -- big table containing dir
    local hasfound = false;
    local amountofproperties = #properties
    local propertiesfound = 0

    for _,v in next, dir do 
        if table.find(properties,v.Name) then 
            propertiesfound += 1
        end
    end
    if propertiesfound == amountofproperties then 
        hasfound = true 
    end
    return hasfound
end

azfake.asub = function(x,r,rs)
    local xs = x
    if x:find(r) then xs = string.gsub(x,r,rs) end
    return xs
end
azfake.qsub = function(x,r,rs)
    local xs = x
    -- if x:find(r) then xs = string.gsub(x,r,rs) end
    for i,v in next, r do 
        if x:find('{'..i..'}') then 
            xs = string.gsub(x,'{'..i..'}',v)
        end
    end
    return xs
end
azfake.findintable_v = function(table,i) -- it checks if the table content v s equal to i
    local found = false ;

    return found
end
azfake.findintable_i = function(table,i)
    local found = false ;
    for _,v in next, table do 
        if _ == i then 
            found = true;
        end
    end
    return found
end
-- print(azfake.qsub('holo is a {b} while yolo is a {r}',{val=b,val2})) -- theres already a roblox func for this
-- could metatable hook this call so putting b wouldnt need a string


azfake.__esp__call = function(instance,info) -- espstate,notinrangecallback,removedcallback,
    local __esp = {}
    __esp.object = Drawing.new('Text')
    __esp.object.Visible = false
    __esp.object.Center = true 
    -- __esp.Outline = true 
    __esp.object.Font = 2
    __esp.object.Size = 13
    __esp.object.Color = Color3.new(255,255,255)

    local connection = info.connection or nil 
    -- local offsets = {x = info.xoffset or nil; y = info.yoffset or nil;}
    local xoffset = info.xoffset or 0 ;
    local yoffset = info.yoffset or 0;
    local maxdistance = info.maxdistance or math.huge;
    __esp.maxdistance = maxdistance; -- We need to return this value for sliders;
    local removedcallback = info.removedcallback or function() end
    __esp.removedcallback = removedcallback -- clients can change this value;
    local notinrangecallback = info.notinrangecallback or function() end
    __esp.notinrangecallback = info.notinrangecallback 
    local espstate = info.espstate
    local esptext = info.esptext or 'no text given'
    local function esptextfunc() end
    if type(esptext) == 'function' then 
        esptextfunc = esptextfunc
    end
    local inloopfunction = info.inloopfunction or function() end

    --PROPERTY VALUES
    __esp.__removed = false;
    __esp.__remtable = {};

    __esp.__remtable_f = function()
        local Trues = 0;
        if #__esp.__remtable ~= 0 then 
            for _,Checking in next, __esp.__remtable do 
                if Checking == true then Trues += 1 end 
            end
            if Trues == #__esp.__remtable then --voting
                __esp.__removed = true;
            end
        end
    end
    -- Check for specific value

    __esp.checkingvalue = info.checkingvalue or __esp.__removed
    __esp.waitingvalue = true -- not __esp.removed
    if __esp.checkingvalue and info.checkingvalue then 
        __esp.checkingvalue = info.checkingvalue
        __esp.waitingvalue = info.waitingvalue
    else
        __esp.waitingvalue = true;
    end
    
    __charctersettings = false;
    __esp.__charactersettings = false 
    if info.charactersettings then __esp.__charactersettings = info.charactersettings end
    __esp.__playersettings = false;
    if info.playersettings == true then __esp.playersettings = true; __esp.__charactersettings = false; end
    -- __removed and checkingvalue shouldnt be the same value
    -- if info.checkingvalue then 
    --     __esp.checkingvalue  = info.checkingvalue['value'] 
    --     __esp.waitingvalue  = info.checkingvalue['check'] 
    -- end
    -- if info.checkingvalue then 
    --     __esp.checkingvalue = not __esp.checkingvalue -- manually set if we want to remove it on false;
    -- end




    -- not info.checkingvalue doesnt swap from true to false by itself
    -- you would think not info.checkingvalue checks if theres info.checking value which would return true but changes it to false cuz it has not
    -- actually info.checkingvalue checks if theres info.checking value which would return the value but changes it to the opposite of the value cuz it has not
    -- print(instance.Name)
    

    if connection == nil then -- funcyi
        connection = game:GetService('RunService').RenderStepped:Connect(function()
            if instance and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                local Distance = nil;
                local __instanceposition = nil;
                if __esp.__playersettings == true and instance.Character and instance.Character:FindFirstChild('HumanoidRootPart') then 
                    Distance = (instance.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                    __instanceposition = instance.Character:FindFirstChild('HumanoidRootPart').Position
                elseif __esp.__charactersettings == true and instance:FindFirstChild('HumanoidRootPart')  then -- custom part
                    Distance = (instance:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                    __instanceposition = instance:FindFirstChild('HumanoidRootPart').Position
                else
                    if instance and not instance:FindFirstChild('HumanoidRootPart') and not instance:IsA('Player') then 
                        Distance = (instance.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        __instanceposition = instance.Position
                    elseif instance and instance:FindFirstChild('HumanoidRootPart') then 
                        Distance = (instance:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        __instanceposition = instance:FindFirstChild('HumanoidRootPart').Position
                    elseif instance and instance:IsA('Player') and instance.Character and instance.Character:FindFirstChild('HumanoidRootPart') then 
                        Distance = (instance.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        __instanceposition = instance.Character:FindFirstChild('HumanoidRootPart').Position
                    end
                end
                --local Distance = (instance.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                if not __instanceposition then return end 
                local vect,IsShowingOnScreen = workspace.CurrentCamera:worldToViewportPoint(__instanceposition)
                __esp.__remtable_f()
                if __esp.waitingvalue == __esp.checkingvalue then __esp.removed = true end;
                if IsShowingOnScreen and Distance.Magnitude <= __esp.maxdistance  then  -- maxdistance
                    __esp.object.Position = Vector2.new(vect.X,vect.Y) + Vector2.new(xoffset,yoffset)
                    task.spawn(function()
                        __esp.inloopfunction() -- i want to use this to set esp
                    end)
                    -- esptext
                    if type(esptext) == 'function' then esptextfunc() end;
                    --if type(esptext) == 'string' and esptext ~= 'no text given' then __esp.object.Text = esptext end
                    local visibility = true;
                    if instance.Parent == game.Players and instance.Character == nil  then 
                        visibility = false
                    end
                    __esp.object.Visible = visibility;

                elseif IsShowingOnScreen and Distance.Magnitude >= __esp.maxdistance then 
                    if __esp.notinrangecallback then 
                        __esp.notinrangecallback()
                    end
                    __esp.object.Visible = false;
                else
                    __esp.object.Visible = false;
                end
            elseif not instance:FindFirstChild('HumanoidRootPart') and __esp.__charactersettings == true then 
                __esp.removed = true; -- or repeat until they have a root part
            elseif not instance.Character then 
                __esp.removed = true; 
                __esp.object.Visible = false;
            elseif not instance then
                pcall(function()
                    __esp.object:Remove() 
                end)
                if type(__esp.removedcallback) == 'function' then 
                    __esp.removedcallback()
                elseif type (__esp.removedcallback) == 'string' then 
                    if tostring(__esp.removedcallback) == 'disconnect' then 
                        connection:Disconnect() 
                    end
                end
            end
            if __esp.__removed  == true or getgenv().loopsUnload == true then 
                pcall(function()
                    __esp.object:Remove() -- Doesnt run removed callback
                end)
                connection:Disconnect() -- Break
            end
        end)
    end
    return __esp
end


azfake.__screen = function(info)
    -- if info.yield == true then 

    -- end
    local CoverScreen = Instance.new('ScreenGui');
        
    local AZFAKEFRAME   = Instance.new('Frame',CoverScreen);
    AZFAKEFRAME.ZIndex = 50;
    AZFAKEFRAME.Size = UDim2.new(1,0,1,0)
    AZFAKEFRAME.BackgroundColor3 = info.defaultcolour
    CoverScreen.IgnoreGuiInset = true; 
    CoverScreen.Parent = game.CoreGui;

    game:GetService('TweenService'):Create(AZFAKEFRAME,TweenInfo.new(info.successtweentime),{BackgroundColor3 = info.successcolour}):Play()
    task.wait(info.successtweentime)

    game:GetService('TweenService'):Create(AZFAKEFRAME,TweenInfo.new(info.transparencytime),{BackgroundTransparency = 1}):Play()
    task.wait(info.transparencytime)
    AZFAKEFRAME:Destroy();
    CoverScreen:Destroy()
end

function azfake:returndata()
    local parts = {}
    if game.Players.LocalPlayer.Character then 
        local getc = game.Players.LocalPlayer.Character:GetChildren()
        table.foreach(getc,function(x)
            local obj = getc[x]
            if obj:IsA('BasePart') then 
                table.insert(parts, obj)
            end
        end)
    end
    return {
        character = game.Players.LocalPlayer.Character;
        humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') or nil;
        humanoidrootpart = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or nil;
        health = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health or nil;
        cframe =  game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame or nil;
        parts = game.Players.LocalPlayer.Character and parts;
    }
end 


--local localPlayer = {}

getgenv().WhitelistedAzfake = true
getgenv().premiumWhitelist = true
getgenv().adminCheck = true

--




-- azfake.repstring = {}
-- local function oncall(_,v)

-- end
-- setmetatable(azfake.repstring, {
--     __call = oncall
--  })


-- string.gsub takes paramater 1 2 and then 3 4 5 are all optional
-- so if 3 is a boolean, 4 is a table and you want to put arg 4 without 3 you can put the the arg4 first

-- azfake.repstring"{val}""

function azfakenotify(text, time)
    task.spawn(function()
        local function find(x) r = nil; pcall(function() r=x.Parent:FindFirstChild(x.Name) end); return r end

        -- local notification = Instance.new("ScreenGui")
        -- local MainFrame = Instance.new("Frame")
        -- local UIListLayout = Instance.new("UIListLayout")
        -- local MessageFrame = Instance.new("Frame")
        -- local TextButton = Instance.new("TextButton")
        -- local MessageLine = Instance.new("Frame")


        local notification = find(game.CoreGui:FindFirstChild('notification')) or Instance.new("ScreenGui")
        local MainFrame = find(notification:FindFirstChild('MainFrame')) or Instance.new("Frame",notification)
        local UIListLayout = find(MainFrame:FindFirstChild('UIListLayout')) or Instance.new('UIListLayout',MainFrame)
        local MessageFrame =  Instance.new("Frame", MainFrame) -- 
        local TextButton = Instance.new("TextButton", MessageFrame); 
        local MessageLine =  Instance.new("Frame", MessageFrame); 


        notification.Name = "notification"
        notification.Parent = game.CoreGui
        notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        MainFrame.Name = "MainFrame"
        MainFrame.Parent = notification
        MainFrame.AnchorPoint = Vector2.new(9.99999975e-05, 0)
        MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        MainFrame.BorderSizePixel = 0
        MainFrame.Position = UDim2.new(0.779199064, 0, 0.925575197, 0)
        MainFrame.Size = UDim2.new(0.209408224, 0, 0.0514905155, 0)
        MainFrame.BackgroundTransparency = 1
        MainFrame.ZIndex = 1000

        UIListLayout.Parent = MainFrame
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
        UIListLayout.Padding = UDim.new(0.200000003, 0)

        MessageFrame.Name = "MessageFrame"
        MessageFrame.Parent = MainFrame
        MessageFrame.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        MessageFrame.BorderSizePixel = 0
        MessageFrame.Position = UDim2.new(4.47058773, 0, 17.9736843, 0)
        MessageFrame.Size = UDim2.new(0.999999881, 0, 1.02631581, 0)

        -- TextButton.Visible = false;
        TextButton.Parent = MessageFrame
        TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.BackgroundTransparency = 1.000
        TextButton.BorderSizePixel = 0
        TextButton.Position = UDim2.new(0.0336134471, 0, 0, 0)
        TextButton.Size = UDim2.new(0.966386497, 0, 1, 0)
        TextButton.Font = Enum.Font.Roboto
        TextButton.LineHeight = 0.800
        TextButton.Text = text
        TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.TextSize = 21.000
        TextButton.TextWrapped = true

        MessageLine.Name = "MessageLine"
        MessageLine.Parent = MessageFrame
        MessageLine.BackgroundColor3 = Color3.fromRGB(11, 157, 255)
        MessageLine.BorderSizePixel = 0
        MessageLine.Size = UDim2.new(0.0336134434, 0, 1, 0)

        -- Frame.Parent = notification
        -- Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        -- Frame.BackgroundTransparency = 1.000
        -- Frame.BorderSizePixel = 0
        -- Frame.Position = UDim2.new(0.988619149, 0, 0.924220204, 0)
        -- Frame.Size = UDim2.new(0, 0, 0, 29)
        TextButton.Visible =true
        TextButton.Text = text
        local situtated = time
        if situtated == 'untilClick' then 
            situtated = 'ifConnect'
        end
        task.wait(0.1)
        --Main:TweenPosition(UDim2.new(1, -330, 0, 50), "Out", "Sine", 0.5)
        local TitleBarWait = false
        TextButton.MouseButton1Down:Connect(function()
            TitleBarWait = true
        end)
        if situtated and type(situtated) ~= 'string' then 
            task.spawn(function()
                wait(situtated)
                TitleBarWait = true
            end)
        end
        -- if situtated == 'ifConnect' then 
        --     -- TextButton.MouseButton1Down:Connect(function()
        --     --     TitleBarWait = true
        --     -- end)
        -- else
        --     -- task.spawn(function(

        --     --     en
        --     -- ))
        --     task.spawn(function()
        --         wait(situtated)
        --         TitleBarWait = true
        --     end)
        -- end
        -- TextButton.MouseButton1Down:Connect(function()
        --     TitleBarWait = true
        -- end)
        repeat task.wait() until TitleBarWait == true
        local bunda = Instance.new('Frame'); bunda.BackgroundTransparency = 1 bunda.Position = MainFrame.Position;bunda.Parent = notification;
        bunda.Size = UDim2.new(0, 200, 0, -150)
        MessageFrame.Parent = bunda
        MessageFrame:TweenPosition(UDim2.new(0,2000,0,0), "Out", "Sine", 1)
        task.wait(1.1)
        MessageFrame:Destroy()
        bunda:Destroy()
    end)
end
getgenv().__getnotify = azfakenotify

function Notify(titletxt, text, time)
    azfakenotify(text,time)
    local useold = false 
    if useold == true then 
        task.spawn(function()
            local function find(x) r = nil; pcall(function() r=x.Parent:FindFirstChild(x.Name) end); return r end
            local GUI = find(game.CoreGui:FindFirstChild('Notis')) or Instance.new("ScreenGui")
            local MainHolder = find(GUI:FindFirstChild('MainHolder')) or Instance.new("Frame",GUI)
            local Main =  Instance.new("Frame", MainHolder) -- 
            local title = Instance.new("TextButton", Main); title.Name = 'Title'
            local message =  Instance.new("TextButton", Main); message.Name = 'msg'
            local list = find(MainHolder:FindFirstChild('UIListLayout')) or Instance.new('UIListLayout',MainHolder)
    
            local coolFrame = Instance.new('Frame',Main);
            coolFrame.Size = UDim2.new(0, 5, 0, 75)
            coolFrame.BackgroundColor3 = Color3.fromRGB(0, 130, 255) --
            coolFrame.BorderSizePixel = 0
    
            MainHolder.BackgroundTransparency = 1;
            MainHolder.Name = 'MainHolder';
            MainHolder.Position = UDim2.new(0, 1580, 0, 980)
    
            list.SortOrder = Enum.SortOrder.LayoutOrder
            list.VerticalAlignment = Enum.VerticalAlignment.Bottom
    
            GUI.Name = "Notis"
            GUI.Parent = game.CoreGui
            Main.Name = "MainFrame"
            Main.BackgroundColor3 = Color3.fromRGB(0,0,0) --Color3.new(0.156863, 0.156863, 0.156863)
            Main.BorderSizePixel = 0
            Main.Position = UDim2.new(1, 5, 0, 50)
            Main.Size = UDim2.new(0, 330, 0, 75)
    
    
            title.BackgroundColor3 = Color3.new(0, 0, 0)
            title.BackgroundTransparency = 1
            title.Size = UDim2.new(1, 0, 0, 30)
            title.Font = Enum.Font.SourceSansSemibold
            title.Text = ''--titletxt
            title.TextColor3 = Color3.new(1, 1, 1)
            title.TextSize = 17
            
            message.BackgroundColor3 = Color3.new(0, 0, 0)
            message.BackgroundTransparency = 1
            --message.Position = UDim2.new(0, 0, 0, 30)
            message.Size = UDim2.new(1, 0, 1, -30)
            message.Font = Enum.Font.SourceSans
            message.Text = text
            message.TextColor3 = Color3.new(1, 1, 1)
            message.TextSize = 16
    
            local situtated = time
            if situtated == 'untilClick' then 
                situtated = 'ifConnect'
            end
            wait(0.1)
            --Main:TweenPosition(UDim2.new(1, -330, 0, 50), "Out", "Sine", 0.5)
            local TitleBarWait = false
            if situtated == 'ifConnect' then 
                message.MouseButton1Down:Connect(function()
                    TitleBarWait = true
                end)
            else
                wait(situtated)
                TitleBarWait = true
            end
            message.MouseButton1Down:Connect(function()
                TitleBarWait = true
            end)
            title.MouseButton1Down:Connect(function()
                TitleBarWait = true
            end)
            repeat task.wait() until TitleBarWait == true
            local bunda = Instance.new('Frame'); bunda.BackgroundTransparency = 1 bunda.Position = MainHolder.Position;bunda.Parent = GUI;
            bunda.Size = UDim2.new(0, 200, 0, -150)
            Main.Parent = bunda
            Main:TweenPosition(UDim2.new(0,2000,0,0), "Out", "Sine", 1)
            wait(1.1)
            message:Destroy();
            title:Destroy();
            Main:Destroy()
            bunda:Destroy()
        end)
    end
end

if not game:IsLoaded() then-- not game.Players.LocalPlayer.Character or game.Players.LocalPlayer.Character and not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
    azfakenotify('Waiting for game to load','untilClick')
    repeat task.wait() until game:IsLoaded() --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
else
    -- Loaded
end

-- detect idle or teleport failed frame
-- change title text



-- local function find(x) r = nil; pcall(function() r=x.Parent:FindFirstChild(x.Name) end); return r end
-- local AZFAKEPLAYER = find(game.Players:FindFirstChild('AZFAKE-PLAYER')) or Instance.new('Player',game.Players); AZFAKEPLAYER.Name = 'AZFAKE-PLAYER'
-- local AZFAKESERVER = find(game.Players:FindFirstChild('AZFAKE-SERVER')) or Instance.new('Player',game.Players); AZFAKESERVER.Name = 'AZFAKE-SERVER'
--first, get the class.
-- if syn then 

-- end
local loading = 0
local loadstop = false
getgenv()['IrisAd'] = true
task.spawn(function()
    while task.wait(0.01) do 
        if loadstop == false then 
            loading += 0.01
        else
            Notify('','Script loaded in '..tostring(loading):sub(1,3)..' seconds',5)
            break
        end
    end
end)
-- the time of reckoning has come, azfake, RISE!
-- could put games in a table and have functions for loading a game load('bloodlines')
-- check all games in table check if game using split -- table.split(v,'~')[2] 1 is id 2 is load, load([2])




local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' -- You will need this for encoding/decoding
-- encoding
local KEYSAVE = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/mandem/main/keys.lua'))()
function enc(data) -- This is base64, uncrackable security to make sure data do not get leaked
    return ((data:gsub('.', function(x)
        local r,b='',x:byte()
        for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
        return r;
    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
        if (#x < 6) then return '' end
        local c=0
        for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
        return b:sub(c+1,c+1)
    end)..({ '', '==', '=' })[#data%3+1])
 end
 

function dec(data) -- This is base64, uncrackable security to make sure data do not get leaked
    --data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local CryptedTable = {};
local FunctionTime = tick();
for i = 1, 50 do 
    --;
end
local TimeNow = tick();
local CurrentLoadedPing = FunctionTime - TimeNow
-- Time that scripts run at

repeat task.wait(); until game:IsLoaded()
--// Verification System
getgenv().loopsUnload = true

--if getgenv().loopsUnload == false then getgenv().loopsUnload = true end
-- 249, 2, 165 hot pink
local buasx  = {
    'ml_xy';
    'pallsbolls';
    'azfakee';
    'RulnIes';
    'kaunniii';
    'Vovka_Chan';
    'DumbLines';
    'UhY0uKnowUniql0';
    'LAYSWUKONG';
    'DlggaG';
    '0zu9kl';
    --'IIIIIllIIlIIIIlIIII';
    'uJixxu';
    --'Antinerd_zzz';
    'Sp0Unh384';
    'Shrugginem';
    'dealuftwaggen0';
    'rinneganfor';
    'c1mzn';
    'bIoodIlnes';
    'onlyone_jae';
    'xt1mz';
    --'ruhxzu';
    'IntermissioningIt'; -- not banned
    'Notti_Boppinnng';
    'wuzgoodgahn';
    'TheVeinsRunWild';
    'rawrssz1';
    'Creation1Imper';
    'xiMilxy';
    'z_MinatoPvP';
};
local admins = {
    'ml_xy';
    'pallsbolls';
    'Sp0Unh384';
    'Shrugginem';
    'uJixxu';
    'DlggaG';
    'dealuftwaggen0';
    'c1mzn';
    'bIoodIlnes';
    'onlyone_jae';
    'xt1mz';
    --'ruhxzu';
    'IntermissioningIt';
    'Notti_Boppinnng';
    'wuzgoodgahn';
    'TheVeinsRunWild';
    'rawrssz1';
    'Creation1Imper';
    'xiMilxy';
    'z_MinatoPvP';
    'Synapseing';
    '9adhyu';
    'rv697mx6gf7udz7xuqpy';
    'fz9k8gw9wwgzhvch3gc2';
    '02yzrq411w7ryv1wun8b';
    'qllr9zqn3pk1084bctsm';
    'b482p0qftvi1d42fu77r';
    'crimehahcri';
    '6rspp';
}
local developers = {
    'ml_xy';
    '9adhyu';
    'fz9k8gw9wwgzhvch3gc2';
    '02yzrq411w7ryv1wun8b';
    'qllr9zqn3pk1084bctsm';
    'b482p0qftvi1d42fu77r';
    'crimehahcri';
    '6rspp';
    'ExtinctPurchase';
    'yEzJuz';

};
local brokenfeaturewhitelist = {
    'ml_xy';
    'YamGamingStudio';
    'augustvc';
    'ExtinctPurchase'
}
local vs = 'NonPremium'
local isV4 = false;

if getgenv().adminCheck and getgenv().adminCheck == true then table.insert(admins,game.Players.LocalPlayer.Name) end
if table.find(buasx,game.Players.LocalPlayer.Name) then vs = 'Premium-Developer'; getgenv().premiumWhitelist = true; end  
if table.find(admins,game.Players.LocalPlayer.Name) then vs = 'Premium-Admin'; getgenv().adminCheck = true; end  
if table.find(buasx,game.Players.LocalPlayer.Name) then vs = 'Premium-Developer'; getgenv().premiumWhitelist = true; end  
if table.find(developers,game.Players.LocalPlayer.Name) then vs = 'debug';getgenv().premiumWhitelist = true;getgenv().adminCheck = true; end  
getgenv().AzfakeGlobalTables = {
    bloodlines = {
        skills = {
            'Cloak Of Lightning';
            'Hundred Healings';
            'Self Purification';
            'Chidori';
            'Fire Seal';
            'Fireball';
            'Flame Company';
            'Phoenix Flower';
            'Dragonic Flames';
            'Lightning Dodge';
            'Twin Flame Dragons';
            'Lightning Ripple';
            'Lightning Strike';
            'Lightning Stream';
            'Sealing Floor';
            'Extraction Seal';
            'Fireball';
            'Chakra Sense';
            'Chakra Land';
            'Chakra Ressurection';
            'Chakra Zone';
            'Chakra Exchange';
            'Pool Expansion';
            'Water Prison';
            'Water Wave';
            'Water Dragon';
            'Water Pool';
            'Earth Golem';
            'Dome Defense';
            'Earth Slam';
            'Earth Dragon';
            'Smoldering Earth';
            'Rasengan';
            'Rasengan Barrage';
            'Wind Discs';
            'Wind Tornado';
            'Gale Palm';
            'Rising Wind';
            'Adamantine Sealing Chains';
            'Sealing Barrier Rod';
            'Sealing Banners';
            'Binding Seal';
            'Sealing Floor';
            'Multi Shadow Clones';
            'Durable Clones';
            'Clone Throw';
            'Bamboozle';
            'Clone Swap';
            'Clone Decoy';
            'Bowl Summoning';
            'Fruit Summoning';
            "Gourmet's Secrets";
            'Doubled Produce';
            'Doubled Harvest';
            'Improved Stomach';
            'Aerial Backflip';
            'Flicker Step';
            'Lightweight';
            'Efficient Substitution';
            'Core Strength';
            'Gates';
            'Improved Stamina';
            'Imporved Whirlwind';
            'Improved Barrage';
            'Taijutsu Combat';
            "Lion's Barrage";
            'Chakra Punch';
            'Dynamic Entry';
            'Leaf Whirlwind';
            'Weighted Kick';
            'Chakra Infused Slam';
            'Spinning Glide';
            'Chain Pull';
            'Overhead Spin';
            'Charged Ram';
            'Twin Strike';
            'Hyper Roar';
            'Greatsword Training';
            'Thrusting Strike';
            'Vertical Slash';
            'Blinding Strike';
            'Wired Kunai';
            'Triple Kunai Throw';
            'Kunai Spin';
            'Kunai Throw';
            'Increased Infusion Time';
            'Gold Infusion';
            'Chakra Charge';
            'Chakra Dash';
            'Chakra Feet';
            'Chakra Tree Jump';
            'Triple Jump';
            'Aerial Heavy Attack';
            'Substitution';
        };
        pickups = {
            'Mango';
            'Apple';
            'Pear';
            'Banana';
            'Life Up Fruit';
            'Orange';
            'Broken Biyo Armor';
            "Redsmith's Mold";
            'Gloweed';
            'Chakra Crops';
            'Seaweed';
            'Gold Ring';
            'Gold Necklace';
            'Silver Ring';
            'Silver Necklace';
            'Aqua Gem';
            'Flame Gem';
            'Spark Gem';
            'Wind Gem';
            'Silver Bracelet';
            'Bolive Crops';
            'Broken Leaf Armour';
            'Chakra Heart';
            'Black Flame Gem';
            'Akatsuki Robes';
            'Red Anbu Mask';
            'Snakeskin';
            'CorruptedPoint';
            'Chakra Fruit';
            'Ring of Forgetfulness';
            'Broken Leaf Armor';
            'Broken Mello Armor';
        };
        killnpc = {
            'Manda';
            'Chakra Knight';
            'The Barbarian';
            'EventBandit';
            'Combat Instructor Clone';
            'Lavarossa';
            'Biyo Bay Guard';
            'Cratos';
            'Bandit';
            'Biyo';
            'Band';
            'Barbarit The Rose';
            'Tairock';
        };
        loaded_pickup = false;
        keep_charging  = false;
        spec_users = {'pallsbolls','ml_xy','8qxl0','AigerTBH','kaunniii','kunaikaa'};
        spec_key = {'AZFAKE:DDH1IPLG','AZFAKE!KEY!ONG','AZFAKE!BUYER!KEY','AZFAKE!BUYER!PREMIUMFR'};
        spec_usable = false;
        no_fall = true;
        anti_void = true;
        anti_ban = true;
        checkstats = false;
        voidwalk = true;
        modnotifier = true;
        checkforcombat = false;
        serverhopwhenmod = true;
        rollback = false;
        autokillmobs = false;
    };
    shonen = {
        no_fall = true
    };
    dwd = {
        autoloot = false;
    };
    defaultespmaxdistance = 100;
};
-- if _G.wl_key == nil then vs = 'debug' end
if script_key == nil then vs = 'debug' end
if vs == 'debug' then 
    getgenv().premiumWhitelist = true; getgenv().adminCheck = true;
end 
if table.find(admins,game.Players.LocalPlayer.Name) then 
    getgenv().AzfakeGlobalTables['bloodlines']['no_cooldown'] = false
end
print('version: '..vs)
pcall(function()
    if getgenv().Key ~= nil and table.find(getgenv().AzfakeGlobalTables['bloodlines']['spec_key'],getgenv().Key) or getgenv().premiumWhitelist == true and vs~='debug' then getgenv().premiumWhitelist = true; table.insert(getgenv().AzfakeGlobalTables['bloodlines']['spec_users'],game.Players.LocalPlayer.Name); getgenv().AzfakeGlobalTables['bloodlines']['spec_usable'] = true; vs = 'Premium' end
end)

-- print('version: '..vs)
-- if table.find(buasx,game.Players.LocalPlayer.Name) then vs = 'Premium-Developer'; getgenv().premiumWhitelist = true; end  
if table.find(developers,game.Players.LocalPlayer.Name) then vs = 'debug'; end  
local typeofazfake = ''
pcall(function()
    local EncryptionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/mandem/main/encrypt.lua'))();
    --local typeofazfake = ''
    
    local function encrypt(info)
    
        local encrypted = info.str -- encrypted = enc(info.str)
    
        encrypted = EncryptionLib.sha256(
            enc(info.str)
        )
        return encrypted
    end
    local function decrypt(info)
    
        local encrypted = info.str
    
        EncryptionLib.sha256(
            dec(info.str)
        )
        return encrypted
    end
    if getgenv().premiumWhitelist == true and vs ~= 'debug' then 
        --typeofazfake = '9ee-be4a-k89va-p10f'
        if script_key then 
            pcall(function()
                typeofazfake = encrypt{str = script_key}:sub(1,16)
    
                for i=1,string.len(typeofazfake) do 
                    if i%4 == 0 then 
                        typeofazfake = typeofazfake:sub(1,i)..'-'..typeofazfake:sub(i+1,string.len(typeofazfake))
                    end
                end
            end)
        end
    end
end)

print('ld')

if vs == 'debug' then 
    typeofazfake = 'DEBUG'
    isV4 = true;
    
    print('\ndebug\n')
    print(' ---------- Welcome, '..game.Players.LocalPlayer.Name..' ----------\n') 
    print('       STATUS: Online\n')-- getstatus - webhook or github, returns online if no errors with code
    print('       REPOSITORY: : /azfake/users/'..game.Players.LocalPlayer.Name..'\n')
    print('       DIRECTORY: : /azfake/users/'..game.Players.LocalPlayer.Name..'\n')
    print(' ---------- Command Bar, '..game.Players.LocalPlayer.Name..' ----------\n') 


    if not table.find(brokenfeaturewhitelist,game.Players.LocalPlayer.Name) then 
        table.insert(brokenfeaturewhitelist,game.Players.LocalPlayer.Name)  
    end


    
    getgenv().adminCheck = true;
    getgenv().premiumWhitelist = true;


    -- task.spawn(function()
    --     while task.wait(1) do 
    --         local inputfromcmd = rconsoleinput('> ')
    --         if inputfromcmd == 'rejoin' then 
    --             game:GetService('TeleportService'):teleport(game.PlaceId)
    --         end
    --     end
    -- end)
end

if isV4 then 
    local quickcmds = {
        ['rejoin'] = function()
            game:GetService('TeleportService'):teleport(game.PlaceId)
        end;    
    }
    task.spawn(function()
        rconsoleprint('\nrconsole quick commands')
        while task.wait(1) do 
            local input = rconsoleinput('> ')
            if quickcmds[input] then quickcmds[input]() end
        end
    end)
end
--
local function runDebugPanel()
    -- Gui to Lua
    -- Version: 3.2

    -- Instances:
    if game.CoreGui:FindFirstChild('AzfakeDebugMenu') then game.CoreGui:FindFirstChild('AzfakeDebugMenu'):Destroy() end;
    if game.Lighting:FindFirstChild('AzfakianBlur') then game.Lighting:FindFirstChild('AzfakianBlur'):Destroy() end;

    local AzfakeDebugMenu = Instance.new("ScreenGui")
    local DiscordFrame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIGradient = Instance.new("UIGradient")
    local TextLabel = Instance.new("TextLabel")
    local TextLabel_2 = Instance.new("TextLabel")
    local DiscordButton = Instance.new("ImageButton")
    local UICorner_2 = Instance.new("UICorner")
    local GameFrame = Instance.new("Frame")
    local UICorner_3 = Instance.new("UICorner")
    local UIGradient_2 = Instance.new("UIGradient")
    local JOBIDCOPY = Instance.new("ImageButton")
    local UICorner_4 = Instance.new("UICorner")
    local GameStatus = Instance.new("TextLabel")
    local JOBIDLABAEL = Instance.new("TextLabel")
    local PlaceIdCOPY = Instance.new("ImageButton")
    local UICorner_5 = Instance.new("UICorner")
    local PLACEIDLABEL = Instance.new("TextLabel")
    local UniverseIDLABEL = Instance.new("TextLabel")
    local UNIVERSECOPY = Instance.new("ImageButton")
    local UICorner_6 = Instance.new("UICorner")
    local __justdata = Instance.new("TextLabel")
    local executor = Instance.new("TextLabel")
    local version = Instance.new("TextLabel")
    local __justdata_2 = Instance.new("TextLabel")
    local playersingame = Instance.new("TextLabel")
    local __justdata_3 = Instance.new("TextLabel")
    local NotesFrame = Instance.new("Frame")
    local UICorner_7 = Instance.new("UICorner")
    local UIGradient_3 = Instance.new("UIGradient")
    local ScrollingFrame = Instance.new("ScrollingFrame")
    local TextBox = Instance.new("TextBox")
    local ExecutionFrame = Instance.new("Frame")
    local UICorner_8 = Instance.new("UICorner")
    local UIGradient_4 = Instance.new("UIGradient")
    local ScrollingFrame_2 = Instance.new("ScrollingFrame")
    local ExecBox = Instance.new("TextBox")
    local Execute = Instance.new("TextButton")
    local PlayerDetailsFrame = Instance.new("Frame")
    local UICorner_9 = Instance.new("UICorner")
    local UIGradient_5 = Instance.new("UIGradient")
    local Profile = Instance.new("ImageLabel")
    local UICorner_10 = Instance.new("UICorner")
    local PlayerUsername = Instance.new("TextLabel")
    local PLAYERSTATUS = Instance.new("TextLabel")
    local OpenPanelFrame = Instance.new("Frame")
    local UICorner_11 = Instance.new("UICorner")
    local UIGradient_6 = Instance.new("UIGradient")
    local TextLabel_3 = Instance.new("TextLabel")
    local TextLabel_4 = Instance.new("TextLabel")
    local TextBox_2 = Instance.new("TextBox")
    local UICorner_12 = Instance.new("UICorner")
    local QuickCommandsFrame = Instance.new("Frame")
    local UICorner_13 = Instance.new("UICorner")
    local UIGradient_7 = Instance.new("UIGradient")
    local Rejoin = Instance.new("ImageButton")
    local UICorner_14 = Instance.new("UICorner")
    local CloseGame = Instance.new("ImageButton")
    local UICorner_15 = Instance.new("UICorner")
    local SideFrame = Instance.new("Frame")
    local ImageButton = Instance.new("ImageButton")
    local UICorner_16 = Instance.new("UICorner")
    local OutputFrame = Instance.new("Frame")
    local UICorner_17 = Instance.new("UICorner")
    local UIGradient_8 = Instance.new("UIGradient")
    local ScrollingFrame_3 = Instance.new("ScrollingFrame")
    local Output = Instance.new("TextBox")

    --Properties:

    AzfakeDebugMenu.Name = "AzfakeDebugMenu"
    AzfakeDebugMenu.Parent = game.CoreGui
    AzfakeDebugMenu.Enabled = false
    AzfakeDebugMenu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    DiscordFrame.Name = "DiscordFrame"
    DiscordFrame.Parent = AzfakeDebugMenu
    DiscordFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DiscordFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DiscordFrame.BorderSizePixel = 0
    DiscordFrame.Position = UDim2.new(0.0258620698, 0, 0.0536332019, 0)
    DiscordFrame.Size = UDim2.new(0.18965517, 0, 0.321130902, 0)

    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = DiscordFrame

    UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient.Parent = DiscordFrame

    TextLabel.Parent = DiscordFrame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(-0.000295142556, 0, 0.0602409728, 0)
    TextLabel.Size = UDim2.new(0.345356166, 0, 0.166821152, 0)
    TextLabel.Font = Enum.Font.SourceSansBold
    TextLabel.Text = "Discord"
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextSize = 18.000

    TextLabel_2.Parent = DiscordFrame
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_2.BackgroundTransparency = 1.000
    TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_2.BorderSizePixel = 0
    TextLabel_2.Position = UDim2.new(0.0681818202, 0, 0.23169601, 0)
    TextLabel_2.Size = UDim2.new(0.859090924, 0, 0.680259526, 0)
    TextLabel_2.Font = Enum.Font.SourceSansBold
    TextLabel_2.Text = "Mixous V4 : discord.gg/azfake, Come join the community!"
    TextLabel_2.TextColor3 = Color3.fromRGB(230, 230, 230)
    TextLabel_2.TextSize = 15.000
    TextLabel_2.TextWrapped = true
    TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel_2.TextYAlignment = Enum.TextYAlignment.Top

    DiscordButton.Name = "DiscordButton"
    DiscordButton.Parent = DiscordFrame
    DiscordButton.Active = false
    DiscordButton.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
    DiscordButton.BackgroundTransparency = 0.400
    DiscordButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DiscordButton.BorderSizePixel = 0
    DiscordButton.Position = UDim2.new(0.0636167005, 0, 0.472659886, 0)
    DiscordButton.Selectable = false
    DiscordButton.Size = UDim2.new(0.190397471, 0, 0.194624647, 0)
    DiscordButton.Image = "rbxassetid://10825594179"
    DiscordButton.ScaleType = Enum.ScaleType.Fit

    UICorner_2.CornerRadius = UDim.new(0, 5)
    UICorner_2.Parent = DiscordButton

    GameFrame.Name = "GameFrame"
    GameFrame.Parent = AzfakeDebugMenu
    GameFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GameFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    GameFrame.BorderSizePixel = 0
    GameFrame.Position = UDim2.new(0.0258620698, 0, 0.383990347, 0)
    GameFrame.Size = UDim2.new(0.18965517, 0, 0.346428543, 0)

    UICorner_3.CornerRadius = UDim.new(0, 5)
    UICorner_3.Parent = GameFrame

    UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_2.Parent = GameFrame

    JOBIDCOPY.Name = "JOBIDCOPY"
    JOBIDCOPY.Parent = GameFrame
    JOBIDCOPY.Active = false
    JOBIDCOPY.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
    JOBIDCOPY.BackgroundTransparency = 0.400
    JOBIDCOPY.BorderColor3 = Color3.fromRGB(0, 0, 0)
    JOBIDCOPY.BorderSizePixel = 0
    JOBIDCOPY.Position = UDim2.new(0.807733119, 0, 0.180563658, 0)
    JOBIDCOPY.Selectable = false
    JOBIDCOPY.Size = UDim2.new(0.158441544, 0, 0.153412804, 0)
    JOBIDCOPY.Image = "rbxassetid://10825594179"
    JOBIDCOPY.ScaleType = Enum.ScaleType.Fit

    UICorner_4.CornerRadius = UDim.new(0, 5)
    UICorner_4.Parent = JOBIDCOPY

    GameStatus.Name = "Game Status"
    GameStatus.Parent = GameFrame
    GameStatus.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GameStatus.BackgroundTransparency = 1.000
    GameStatus.BorderColor3 = Color3.fromRGB(0, 0, 0)
    GameStatus.BorderSizePixel = 0
    GameStatus.Position = UDim2.new(-0.000295142556, 0, 0.0433972292, 0)
    GameStatus.Size = UDim2.new(0.687741101, 0, 0.166821137, 0)
    GameStatus.Font = Enum.Font.SourceSansBold
    GameStatus.Text = "Game Information"
    GameStatus.TextColor3 = Color3.fromRGB(255, 255, 255)
    GameStatus.TextSize = 18.000

    JOBIDLABAEL.Name = "JOBIDLABAEL"
    JOBIDLABAEL.Parent = GameFrame
    JOBIDLABAEL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    JOBIDLABAEL.BackgroundTransparency = 1.000
    JOBIDLABAEL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    JOBIDLABAEL.BorderSizePixel = 0
    JOBIDLABAEL.Position = UDim2.new(0.0636166334, 0, 0.205922872, 0)
    JOBIDLABAEL.Size = UDim2.new(0.703876495, 0, 0.106791869, 0)
    JOBIDLABAEL.Font = Enum.Font.SourceSansBold
    JOBIDLABAEL.Text = "Job Id: "
    JOBIDLABAEL.TextColor3 = Color3.fromRGB(230, 230, 230)
    JOBIDLABAEL.TextSize = 15.000
    JOBIDLABAEL.TextWrapped = true
    JOBIDLABAEL.TextXAlignment = Enum.TextXAlignment.Left
    JOBIDLABAEL.TextYAlignment = Enum.TextYAlignment.Top

    PlaceIdCOPY.Name = "PlaceIdCOPY"
    PlaceIdCOPY.Parent = GameFrame
    PlaceIdCOPY.Active = false
    PlaceIdCOPY.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
    PlaceIdCOPY.BackgroundTransparency = 0.400
    PlaceIdCOPY.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PlaceIdCOPY.BorderSizePixel = 0
    PlaceIdCOPY.Position = UDim2.new(0.807733119, 0, 0.339498371, 0)
    PlaceIdCOPY.Selectable = false
    PlaceIdCOPY.Size = UDim2.new(0.158441544, 0, 0.153412804, 0)
    PlaceIdCOPY.Image = "rbxassetid://10825594179"
    PlaceIdCOPY.ScaleType = Enum.ScaleType.Fit

    UICorner_5.CornerRadius = UDim.new(0, 5)
    UICorner_5.Parent = PlaceIdCOPY

    PLACEIDLABEL.Name = "PLACEIDLABEL"
    PLACEIDLABEL.Parent = GameFrame
    PLACEIDLABEL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PLACEIDLABEL.BackgroundTransparency = 1.000
    PLACEIDLABEL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PLACEIDLABEL.BorderSizePixel = 0
    PLACEIDLABEL.Position = UDim2.new(0.0636166334, 0, 0.364857584, 0)
    PLACEIDLABEL.Size = UDim2.new(0.703876495, 0, 0.106791869, 0)
    PLACEIDLABEL.Font = Enum.Font.SourceSansBold
    PLACEIDLABEL.Text = "Place Id:"
    PLACEIDLABEL.TextColor3 = Color3.fromRGB(230, 230, 230)
    PLACEIDLABEL.TextSize = 15.000
    PLACEIDLABEL.TextWrapped = true
    PLACEIDLABEL.TextXAlignment = Enum.TextXAlignment.Left
    PLACEIDLABEL.TextYAlignment = Enum.TextYAlignment.Top

    UniverseIDLABEL.Name = "UniverseIDLABEL"
    UniverseIDLABEL.Parent = GameFrame
    UniverseIDLABEL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UniverseIDLABEL.BackgroundTransparency = 1.000
    UniverseIDLABEL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UniverseIDLABEL.BorderSizePixel = 0
    UniverseIDLABEL.Position = UDim2.new(0.0636166334, 0, 0.540974438, 0)
    UniverseIDLABEL.Size = UDim2.new(0.703876495, 0, 0.106791869, 0)
    UniverseIDLABEL.Font = Enum.Font.SourceSansBold
    UniverseIDLABEL.Text = "Universe Id:"
    UniverseIDLABEL.TextColor3 = Color3.fromRGB(230, 230, 230)
    UniverseIDLABEL.TextSize = 15.000
    UniverseIDLABEL.TextWrapped = true
    UniverseIDLABEL.TextXAlignment = Enum.TextXAlignment.Left
    UniverseIDLABEL.TextYAlignment = Enum.TextYAlignment.Top

    UNIVERSECOPY.Name = "UNIVERSECOPY"
    UNIVERSECOPY.Parent = GameFrame
    UNIVERSECOPY.Active = false
    UNIVERSECOPY.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
    UNIVERSECOPY.BackgroundTransparency = 0.400
    UNIVERSECOPY.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UNIVERSECOPY.BorderSizePixel = 0
    UNIVERSECOPY.Position = UDim2.new(0.807733119, 0, 0.515615225, 0)
    UNIVERSECOPY.Selectable = false
    UNIVERSECOPY.Size = UDim2.new(0.158441544, 0, 0.153412804, 0)
    UNIVERSECOPY.Image = "rbxassetid://10825594179"
    UNIVERSECOPY.ScaleType = Enum.ScaleType.Fit

    UICorner_6.CornerRadius = UDim.new(0, 5)
    UICorner_6.Parent = UNIVERSECOPY

    __justdata.Name = "__justdata"
    __justdata.Parent = GameFrame
    __justdata.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    __justdata.BackgroundTransparency = 1.000
    __justdata.BorderColor3 = Color3.fromRGB(0, 0, 0)
    __justdata.BorderSizePixel = 0
    __justdata.Position = UDim2.new(0.0636166334, 0, 0.691318095, 0)
    __justdata.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    __justdata.Font = Enum.Font.SourceSansBold
    __justdata.Text = "Executor:"
    __justdata.TextColor3 = Color3.fromRGB(191, 191, 191)
    __justdata.TextSize = 15.000
    __justdata.TextWrapped = true
    __justdata.TextXAlignment = Enum.TextXAlignment.Left
    __justdata.TextYAlignment = Enum.TextYAlignment.Top

    executor.Name = "executor"
    executor.Parent = GameFrame
    executor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    executor.BackgroundTransparency = 1.000
    executor.BorderColor3 = Color3.fromRGB(0, 0, 0)
    executor.BorderSizePixel = 0
    executor.Position = UDim2.new(0.364915341, 0, 0.691318095, 0)
    executor.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    executor.Font = Enum.Font.SourceSansBold
    executor.Text = ""
    executor.TextColor3 = Color3.fromRGB(230, 230, 230)
    executor.TextSize = 15.000
    executor.TextWrapped = true
    executor.TextXAlignment = Enum.TextXAlignment.Left
    executor.TextYAlignment = Enum.TextYAlignment.Top

    version.Name = "version"
    version.Parent = GameFrame
    version.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    version.BackgroundTransparency = 1.000
    version.BorderColor3 = Color3.fromRGB(0, 0, 0)
    version.BorderSizePixel = 0
    version.Position = UDim2.new(0.364915341, 0, 0.764342129, 0)
    version.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    version.Font = Enum.Font.SourceSansBold
    version.Text = ""
    version.TextColor3 = Color3.fromRGB(230, 230, 230)
    version.TextSize = 15.000
    version.TextWrapped = true
    version.TextXAlignment = Enum.TextXAlignment.Left
    version.TextYAlignment = Enum.TextYAlignment.Top

    __justdata_2.Name = "__justdata"
    __justdata_2.Parent = GameFrame
    __justdata_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    __justdata_2.BackgroundTransparency = 1.000
    __justdata_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    __justdata_2.BorderSizePixel = 0
    __justdata_2.Position = UDim2.new(0.0636166334, 0, 0.764342129, 0)
    __justdata_2.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    __justdata_2.Font = Enum.Font.SourceSansBold
    __justdata_2.Text = "Version:"
    __justdata_2.TextColor3 = Color3.fromRGB(191, 191, 191)
    __justdata_2.TextSize = 15.000
    __justdata_2.TextWrapped = true
    __justdata_2.TextXAlignment = Enum.TextXAlignment.Left
    __justdata_2.TextYAlignment = Enum.TextYAlignment.Top

    playersingame.Name = "playersingame"
    playersingame.Parent = GameFrame
    playersingame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    playersingame.BackgroundTransparency = 1.000
    playersingame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    playersingame.BorderSizePixel = 0
    playersingame.Position = UDim2.new(0.360350192, 0, 0.845957279, 0)
    playersingame.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    playersingame.Font = Enum.Font.SourceSansBold
    playersingame.Text = ""
    playersingame.TextColor3 = Color3.fromRGB(230, 230, 230)
    playersingame.TextSize = 15.000
    playersingame.TextWrapped = true
    playersingame.TextXAlignment = Enum.TextXAlignment.Left
    playersingame.TextYAlignment = Enum.TextYAlignment.Top

    __justdata_3.Name = "__justdata"
    __justdata_3.Parent = GameFrame
    __justdata_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    __justdata_3.BackgroundTransparency = 1.000
    __justdata_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    __justdata_3.BorderSizePixel = 0
    __justdata_3.Position = UDim2.new(0.0590515025, 0, 0.845957279, 0)
    __justdata_3.Size = UDim2.new(0.263439655, 0, 0.0853141993, 0)
    __justdata_3.Font = Enum.Font.SourceSansBold
    __justdata_3.Text = "Players:"
    __justdata_3.TextColor3 = Color3.fromRGB(191, 191, 191)
    __justdata_3.TextSize = 15.000
    __justdata_3.TextWrapped = true
    __justdata_3.TextXAlignment = Enum.TextXAlignment.Left
    __justdata_3.TextYAlignment = Enum.TextYAlignment.Top

    NotesFrame.Name = "NotesFrame"
    NotesFrame.Parent = AzfakeDebugMenu
    NotesFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    NotesFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    NotesFrame.BorderSizePixel = 0
    NotesFrame.Position = UDim2.new(0.0258620698, 0, 0.739645064, 0)
    NotesFrame.Size = UDim2.new(0.18965517, 0, 0.132142812, 0)

    UICorner_7.CornerRadius = UDim.new(0, 5)
    UICorner_7.Parent = NotesFrame

    UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_3.Parent = NotesFrame

    ScrollingFrame.Parent = NotesFrame
    ScrollingFrame.Active = true
    ScrollingFrame.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    ScrollingFrame.BackgroundTransparency = 0.800
    ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ScrollingFrame.BorderSizePixel = 0
    ScrollingFrame.Position = UDim2.new(0.0446368828, 0, 0.0973122716, 0)
    ScrollingFrame.Size = UDim2.new(0, 193, 0, 67)
    ScrollingFrame.ScrollBarThickness = 7

    TextBox.Parent = ScrollingFrame
    TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.BackgroundTransparency = 1.000
    TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextBox.BorderSizePixel = 0
    TextBox.Position = UDim2.new(1.18591622e-07, 0, 0, 0)
    TextBox.Size = UDim2.new(0.99999994, 0, 2.65074539, 0)
    TextBox.Font = Enum.Font.SourceSans
    TextBox.PlaceholderText = "[NOTES]"
    TextBox.Text = ""
    TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextBox.TextSize = 14.000
    TextBox.TextWrapped = true
    TextBox.TextXAlignment = Enum.TextXAlignment.Left
    TextBox.TextYAlignment = Enum.TextYAlignment.Top

    ExecutionFrame.Name = "ExecutionFrame"
    ExecutionFrame.Parent = AzfakeDebugMenu
    ExecutionFrame.Active = true
    ExecutionFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ExecutionFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ExecutionFrame.BorderSizePixel = 0
    ExecutionFrame.Position = UDim2.new(0.220689654, 0, 0.0536330864, 0)
    ExecutionFrame.Size = UDim2.new(0.310344815, 0, 0.321131051, 0)

    UICorner_8.CornerRadius = UDim.new(0, 5)
    UICorner_8.Parent = ExecutionFrame

    UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_4.Parent = ExecutionFrame

    ScrollingFrame_2.Parent = ExecutionFrame
    ScrollingFrame_2.Active = true
    ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    ScrollingFrame_2.BackgroundTransparency = 0.800
    ScrollingFrame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ScrollingFrame_2.BorderSizePixel = 0
    ScrollingFrame_2.Position = UDim2.new(0.0446368866, 0, 0.0973123312, 0)
    ScrollingFrame_2.Size = UDim2.new(0.91784513, 0, 0.732159197, 0)
    ScrollingFrame_2.ScrollBarThickness = 7

    ExecBox.Name = "ExecBox"
    ExecBox.Parent = ScrollingFrame_2
    ExecBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ExecBox.BackgroundTransparency = 1.000
    ExecBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ExecBox.BorderSizePixel = 0
    ExecBox.Size = UDim2.new(0.97299999, 0, 1, 0)
    ExecBox.ClearTextOnFocus = false
    ExecBox.Font = Enum.Font.SourceSans
    ExecBox.MultiLine = true
    ExecBox.PlaceholderText = "[Quick Execution] [Will Support azfakecode - azfakescript] in the future"
    ExecBox.Text = ""
    ExecBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    ExecBox.TextSize = 14.000
    ExecBox.TextWrapped = true
    ExecBox.TextXAlignment = Enum.TextXAlignment.Left
    ExecBox.TextYAlignment = Enum.TextYAlignment.Top

    Execute.Name = "Execute"
    Execute.Parent = ExecutionFrame
    Execute.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    Execute.BackgroundTransparency = 0.500
    Execute.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Execute.BorderSizePixel = 0
    Execute.Position = UDim2.new(0.0446368866, 0, 0.875810683, 0)
    Execute.Size = UDim2.new(0.440788835, 0, 0.0787766203, 0)
    Execute.Font = Enum.Font.SourceSans
    Execute.Text = "Execute"
    Execute.TextColor3 = Color3.fromRGB(0, 0, 0)
    Execute.TextSize = 16.000

    PlayerDetailsFrame.Name = "PlayerDetailsFrame"
    PlayerDetailsFrame.Parent = AzfakeDebugMenu
    PlayerDetailsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerDetailsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PlayerDetailsFrame.BorderSizePixel = 0
    PlayerDetailsFrame.Position = UDim2.new(0.220689654, 0, 0.383990228, 0)
    PlayerDetailsFrame.Size = UDim2.new(0.225862071, 0, 0.108333409, 0)

    UICorner_9.CornerRadius = UDim.new(0, 5)
    UICorner_9.Parent = PlayerDetailsFrame

    UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_5.Parent = PlayerDetailsFrame

    Profile.Name = "Profile"
    Profile.Parent = PlayerDetailsFrame
    Profile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Profile.BackgroundTransparency = 1.000
    Profile.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Profile.BorderSizePixel = 0
    Profile.Position = UDim2.new(0.0344997719, 0, -0.0119890869, 0)
    Profile.Size = UDim2.new(0.207098246, 0, 0.872198045, 0)
    Profile.ScaleType = Enum.ScaleType.Fit

    UICorner_10.CornerRadius = UDim.new(0, 500000)
    UICorner_10.Parent = Profile

    PlayerUsername.Name = "PlayerUsername"
    PlayerUsername.Parent = PlayerDetailsFrame
    PlayerUsername.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PlayerUsername.BackgroundTransparency = 1.000
    PlayerUsername.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PlayerUsername.BorderSizePixel = 0
    PlayerUsername.Position = UDim2.new(0.304170251, 0, 0.132417694, 0)
    PlayerUsername.Size = UDim2.new(0, 170, 0, 23)
    PlayerUsername.Font = Enum.Font.SourceSansBold
    PlayerUsername.Text = "PlayerUsername"
    PlayerUsername.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerUsername.TextSize = 14.000
    PlayerUsername.TextXAlignment = Enum.TextXAlignment.Left

    PLAYERSTATUS.Name = "PLAYERSTATUS"
    PLAYERSTATUS.Parent = PlayerDetailsFrame
    PLAYERSTATUS.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PLAYERSTATUS.BackgroundTransparency = 1.000
    PLAYERSTATUS.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PLAYERSTATUS.BorderSizePixel = 0
    PLAYERSTATUS.Position = UDim2.new(0.304170251, 0, 0.32472527, 0)
    PLAYERSTATUS.Size = UDim2.new(0, 170, 0, 23)
    PLAYERSTATUS.Font = Enum.Font.SourceSansBold
    PLAYERSTATUS.Text = "Developer"
    PLAYERSTATUS.TextColor3 = Color3.fromRGB(185, 185, 185)
    PLAYERSTATUS.TextSize = 14.000
    PLAYERSTATUS.TextXAlignment = Enum.TextXAlignment.Left

    OpenPanelFrame.Name = "OpenPanelFrame"
    OpenPanelFrame.Parent = AzfakeDebugMenu
    OpenPanelFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    OpenPanelFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    OpenPanelFrame.BorderSizePixel = 0
    OpenPanelFrame.Position = UDim2.new(0.220689654, 0, 0.50303787, 0)
    OpenPanelFrame.Size = UDim2.new(0.171551719, 0, 0.086011976, 0)

    UICorner_11.CornerRadius = UDim.new(0, 5)
    UICorner_11.Parent = OpenPanelFrame

    UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_6.Parent = OpenPanelFrame

    TextLabel_3.Parent = OpenPanelFrame
    TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_3.BackgroundTransparency = 1.000
    TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_3.BorderSizePixel = 0
    TextLabel_3.Position = UDim2.new(0.0479944088, 0, 0.439308077, 0)
    TextLabel_3.Size = UDim2.new(0.610297203, 0, 0.368841052, 0)
    TextLabel_3.Font = Enum.Font.SourceSansBold
    TextLabel_3.Text = "Change the keybind"
    TextLabel_3.TextColor3 = Color3.fromRGB(230, 230, 230)
    TextLabel_3.TextSize = 15.000
    TextLabel_3.TextWrapped = true
    TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel_3.TextYAlignment = Enum.TextYAlignment.Top

    TextLabel_4.Parent = OpenPanelFrame
    TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_4.BackgroundTransparency = 1.000
    TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_4.BorderSizePixel = 0
    TextLabel_4.Position = UDim2.new(-0.00247438485, 0, 0.0994771868, 0)
    TextLabel_4.Size = UDim2.new(0.776844263, 0, 0.166821152, 0)
    TextLabel_4.Font = Enum.Font.SourceSansBold
    TextLabel_4.Text = "Debug Menu Opener"
    TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_4.TextSize = 18.000

    TextBox_2.Parent = OpenPanelFrame
    TextBox_2.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
    TextBox_2.BorderColor3 = Color3.fromRGB(255, 255, 255)
    TextBox_2.BorderSizePixel = 0
    TextBox_2.Position = UDim2.new(0.658291638, 0, 0.34602046, 0)
    TextBox_2.Size = UDim2.new(0.302812755, 0, 0.536331713, 0)
    TextBox_2.Font = Enum.Font.SourceSansBold
    TextBox_2.PlaceholderColor3 = Color3.fromRGB(172, 172, 172)
    TextBox_2.PlaceholderText = "RBracket"
    TextBox_2.Text = ""
    TextBox_2.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextBox_2.TextSize = 14.000

    UICorner_12.CornerRadius = UDim.new(0, 5)
    UICorner_12.Parent = TextBox_2

    QuickCommandsFrame.Name = "QuickCommandsFrame"
    QuickCommandsFrame.Parent = AzfakeDebugMenu
    QuickCommandsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    QuickCommandsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    QuickCommandsFrame.BorderSizePixel = 0
    QuickCommandsFrame.Position = UDim2.new(0.220689654, 0, 0.607204556, 0)
    QuickCommandsFrame.Size = UDim2.new(0.112931035, 0, 0.0711310282, 0)

    UICorner_13.CornerRadius = UDim.new(0, 5)
    UICorner_13.Parent = QuickCommandsFrame

    UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_7.Parent = QuickCommandsFrame

    Rejoin.Name = "Rejoin"
    Rejoin.Parent = QuickCommandsFrame
    Rejoin.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
    Rejoin.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Rejoin.BorderSizePixel = 0
    Rejoin.Position = UDim2.new(0, 0, 4.05385799e-06, 0)
    Rejoin.Size = UDim2.new(0.329665244, 0, 0.981982887, 0)
    Rejoin.Image = "rbxassetid://14876880208"
    Rejoin.ImageTransparency = 0.200
    Rejoin.ScaleType = Enum.ScaleType.Fit

    UICorner_14.CornerRadius = UDim.new(0, 5)
    UICorner_14.Parent = Rejoin

    CloseGame.Name = "CloseGame"
    CloseGame.Parent = QuickCommandsFrame
    CloseGame.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
    CloseGame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    CloseGame.BorderSizePixel = 0
    CloseGame.Position = UDim2.new(0.666997135, 0, 4.05385799e-06, 0)
    CloseGame.Size = UDim2.new(0.329665244, 0, 0.981982887, 0)
    CloseGame.Image = "rbxassetid://4773247381"
    CloseGame.ImageTransparency = 0.200
    CloseGame.ScaleType = Enum.ScaleType.Fit

    UICorner_15.CornerRadius = UDim.new(0, 5)
    UICorner_15.Parent = CloseGame

    SideFrame.Name = "SideFrame"
    SideFrame.Parent = AzfakeDebugMenu
    SideFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SideFrame.BackgroundTransparency = 1.000
    SideFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SideFrame.BorderSizePixel = 0
    SideFrame.Position = UDim2.new(0.933333337, 0, 0.181547612, 0)
    SideFrame.Size = UDim2.new(0, 51, 0, 181)
    SideFrame.Visible = false

    ImageButton.Parent = SideFrame
    ImageButton.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Position = UDim2.new(0.0980392173, 0, 0, 0)
    ImageButton.Size = UDim2.new(0, 46, 0, 44)
    ImageButton.Image = "rbxassetid://14876880208"
    ImageButton.ImageTransparency = 0.200
    ImageButton.ScaleType = Enum.ScaleType.Fit

    UICorner_16.CornerRadius = UDim.new(0, 5)
    UICorner_16.Parent = ImageButton

    OutputFrame.Name = "OutputFrame"
    OutputFrame.Parent = AzfakeDebugMenu
    OutputFrame.Active = true
    OutputFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    OutputFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    OutputFrame.BorderSizePixel = 0
    OutputFrame.Position = UDim2.new(0.537068963, 0, 0.0536331125, 0)
    OutputFrame.Size = UDim2.new(0.179310352, 0, 0.321130991, 0)

    UICorner_17.CornerRadius = UDim.new(0, 5)
    UICorner_17.Parent = OutputFrame

    UIGradient_8.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(47, 47, 47))}
    UIGradient_8.Parent = OutputFrame

    ScrollingFrame_3.Parent = OutputFrame
    ScrollingFrame_3.Active = true
    ScrollingFrame_3.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    ScrollingFrame_3.BackgroundTransparency = 0.800
    ScrollingFrame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ScrollingFrame_3.BorderSizePixel = 0
    ScrollingFrame_3.Position = UDim2.new(0.0446368866, 0, 0.0973123312, 0)
    ScrollingFrame_3.Size = UDim2.new(0.91784513, 0, 0.732159197, 0)
    ScrollingFrame_3.ScrollBarThickness = 7

    Output.Name = "Output"
    Output.Parent = ScrollingFrame_3
    Output.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Output.BackgroundTransparency = 1.000
    Output.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Output.BorderSizePixel = 0
    Output.Size = UDim2.new(0.97299999, 0, 1, 0)
    Output.ClearTextOnFocus = false
    Output.Font = Enum.Font.SourceSans
    Output.MultiLine = true
    Output.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
    Output.PlaceholderText = "-- printed"
    Output.Text = ""
    Output.TextColor3 = Color3.fromRGB(0, 0, 0)
    Output.TextSize = 14.000
    Output.TextWrapped = true
    Output.TextXAlignment = Enum.TextXAlignment.Left
    Output.TextYAlignment = Enum.TextYAlignment.Top

    local CanOpen = true
    local function SetGUIState()
        if CanOpen == false then return end;
        CanOpen = false;
        if AzfakeDebugMenu.Enabled == false then -- not game.Lighting:FindFirstChild('')
            local AzfakeBlur = Instance.new('BlurEffect'); AzfakeBlur.Name = 'AzfakianBlur'; AzfakeBlur.Size = 0; AzfakeBlur.Parent = game.Lighting;
            game:GetService('TweenService'):Create(AzfakeBlur,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {Size = 24}):Play()
            local TableOfTransparencies = {};
            for i,v in next, AzfakeDebugMenu:GetDescendants() do 
                TableOfTransparencies[v.Name..'##'..tostring(i)] = {}
                pcall(function() -- could already create a premade table then set it
                    TableOfTransparencies[v.Name..'##'..tostring(i)].Transparency = v.BackgroundTransparency
                    v.BackgroundTransparency = 1
                end)
                pcall(function() -- could already create a premade table then set it
                    TableOfTransparencies[v.Name..'##'..tostring(i)].ImageTransparency = v.ImageTransparency
                    v.ImageTransparency = 1
                end)
                pcall(function() -- could already create a premade table then set it
                    TableOfTransparencies[v.Name..'##'..tostring(i)].TextTransparency = v.TextTransparency
                    v.TextTransparency = 1
                end)
            end
            AzfakeDebugMenu.Enabled = true;
            task.wait(0.1);

            local function getObjectfromIndex(n) 
                local b = nil;
                for i,v in next, AzfakeDebugMenu:GetDescendants() do 
                    if tonumber(n) == i then 
                        b = v;
                        break
                    end
                end
                return b
            end

            for i,v in next, TableOfTransparencies do 
                -- content holds Transparency and ImageTransparency;
                --print(string.split(tostring(i),'##'))
                --print(getObjectfromIndex())
                --print(v.ImageTransparency)
                --print(v.Transparency)
                local ObjectIndex = getObjectfromIndex(string.split(i,'##')[2]) --AzfakeDebugMenu:GetDescendants()[]
                --if v.Transparency then 
                --	game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {BackgroundTransparency = v.Transparency}):Play()
                --end
                pcall(function()
                    game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {BackgroundTransparency = v.Transparency}):Play()
                end)
                pcall(function()
                    game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {ImageTransparency = v.ImageTransparency}):Play()
                end)
                pcall(function()
                    game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {TextTransparency = v.TextTransparency}):Play()
                end)
            end
            task.wait(1.1)

        else
            if game.Lighting:FindFirstChild('AzfakianBlur') then 
                local obj = game.Lighting:FindFirstChild('AzfakianBlur')
                game:GetService('TweenService'):Create(obj,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {Size = 0}):Play()
                local TableOfTransparencies = {};
                for i,v in next, AzfakeDebugMenu:GetDescendants() do 
                    TableOfTransparencies[v.Name..'##'..tostring(i)] = {}
                    pcall(function() -- could already create a premade table then set it
                        TableOfTransparencies[v.Name..'##'..tostring(i)].Transparency = v.BackgroundTransparency
                        game:GetService('TweenService'):Create(v,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    end)
                    pcall(function() -- could already create a premade table then set it
                        TableOfTransparencies[v.Name..'##'..tostring(i)].ImageTransparency = v.ImageTransparency
                        game:GetService('TweenService'):Create(v,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                    end)
                    pcall(function() -- could already create a premade table then set it
                        TableOfTransparencies[v.Name..'##'..tostring(i)].TextTransparency = v.TextTransparency
                        game:GetService('TweenService'):Create(v,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                    end)
                end

                task.wait(1)
                AzfakeDebugMenu.Enabled = false;
                obj:Destroy()
                local function getObjectfromIndex(n) 
                    local b = nil;
                    for i,v in next, AzfakeDebugMenu:GetDescendants() do 
                        if tonumber(n) == i then 
                            b = v;
                            break
                        end
                    end
                    return b
                end
                for i,v in next, TableOfTransparencies do 
                    -- content holds Transparency and ImageTransparency;
                    --print(getObjectfromIndex(string.split(i,'##')[2]))
                    local ObjectIndex = getObjectfromIndex(string.split(i,'##')[2]) --AzfakeDebugMenu:GetDescendants()[]
                    pcall(function()
                        --game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {BackgroundTransparency = v.Transparency}):Play()
                        ObjectIndex.BackgroundTransparency = v.Transparency
                    end)
                    pcall(function()
                        --game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {ImageTransparency = v.ImageTransparency}):Play()
                        ObjectIndex.ImageTransparency = v.ImageTransparency
                    end)
                    pcall(function()
                        --game:GetService('TweenService'):Create(ObjectIndex,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {TextTransparency = v.TextTransparency}):Play()
                        ObjectIndex.TextTransparency = v.TextTransparency
                    end)
                end
                task.wait(0.05)

            end
        end
        CanOpen = true;
    end
    local userinputservice = game:GetService('UserInputService');
    userinputservice.InputBegan:Connect(function(key,detailed)
        if detailed then return end;
        if key.KeyCode == Enum.KeyCode.RightBracket then 
            print('pressed opening')
            SetGUIState()
        end
    end)

    local dragToggle = nil
    local dragSpeed = 0.1
    local dragStart = nil
    local startPos = nil

    local function updateInput(input)
        local delta = input.Position - dragStart
        local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        game:GetService("TweenService"):Create(ExecutionFrame, TweenInfo.new(dragSpeed), {Position = position}):Play()
    end

    ExecutionFrame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = ExecutionFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    userinputservice.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragToggle then
                updateInput(input)
            end
        end
    end)

    local success, image = pcall(function()
        return game.Players:GetUserThumbnailAsync(game.Players.LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420) -- you can change the last two parameters to get a different type of image. See wiki page linked above for more!
    end)
    if image then Profile.Image = image end;

    local vs = ''
    --local identifyexecutor = nil
    do 
        PlayerUsername.Text = game.Players.LocalPlayer.Name..' AKA '..game.Players.LocalPlayer.DisplayName -- could add displayname
        PLAYERSTATUS.Text = vs == 'debug' and 'Developer' or 'Script Buyer';
        executor.Text = identifyexecutor and identifyexecutor() or 'Not Supported';
        version.Text = 'AZFAKE';
        JOBIDLABAEL.Text = `Job Id: {game.JobId}`;
        PLACEIDLABEL.Text = `Place Id: {game.PlaceId}`;
        local _get = game:HttpGet(`https://apis.roblox.com/universes/v1/places/{game.PlaceId}/universe`)
        UniverseIDLABEL.Text = `Universe Id: {game.HttpService:JSONDecode(_get)['universeId']}`;
        playersingame.Text = `{#game.Players:GetPlayers()}/{game.Players.MaxPlayers}` -- 1/20
        Rejoin.MouseButton1Down:Connect(function()
            game:GetService('TeleportService'):teleport(game.PlaceId)
        end)
        game.Players.PlayerAdded:Connect(function()
            playersingame.Text = `{#game.Players:GetPlayers()}/{game.Players.MaxPlayers}`
        end)
        game.Players.PlayerRemoving:Connect(function()
            playersingame.Text = `{#game.Players:GetPlayers()}/{game.Players.MaxPlayers}`
        end)
        JOBIDCOPY.MouseButton1Down:Connect(function()
            setclipboard(game.JobId)
        end)
        PlaceIdCOPY.MouseButton1Down:Connect(function()
            setclipboard(game.PlaceId)
        end)
        UNIVERSECOPY.MouseButton1Down:Connect(function()
            setclipboard(game.HttpService:JSONDecode(_get)['universeId'])
        end)
        DiscordButton.MouseButton1Down:Connect(function()
            Invite = 'azfake'
            request(
                {
                    ['Method'] = 'POST',
                    ['Headers'] = {
                        ["origin"] = 'https://discord.com',
                        ["Content-Type"] = "application/json"
                    },
                    ['Url'] = 'http://127.0.0.1:6463/rpc?v=1',
                    ['Body'] = game:GetService('HttpService'):JSONEncode({cmd="INVITE_BROWSER",args={code=Invite},nonce=game:GetService('HttpService'):GenerateGUID(false):lower()})
                }    
            )
        end)
        CloseGame.MouseButton1Down:Connect(function()
            game:Shutdown()
        end)
        Execute.MouseButton1Down:Connect(function()
            loadstring(ExecBox.Text)()
        end)
        game.LogService.MessageOut:Connect(function(m)
            Output.Text = Output.Text..m..'\n'
        end)
    end
end

--[[
    local library = { 
        flags = { }, 
        items = { } 
    }

    -- Services
    local players = game:GetService("Players")
    local uis = game:GetService("UserInputService")
    local runservice = game:GetService("RunService")
    local tweenservice = game:GetService("TweenService")
    local marketplaceservice = game:GetService("MarketplaceService")
    local textservice = game:GetService("TextService")
    local coregui = game:GetService("CoreGui")
    local httpservice = game:GetService("HttpService")

    local player = players.LocalPlayer
    local mouse = player:GetMouse()
    local camera = game.Workspace.CurrentCamera
    getgenv().disablefeatures =false
    library.theme = {
        fontsize = 15,
        titlesize = 18,
        font = Enum.Font.Code,
        background = "rbxassetid://5553946656",
        tilesize = 30,
        cursor = false,
        cursorimg = "https://t0.rbxcdn.com/42f66da98c40252ee151326a82aab51f",
        backgroundcolor = Color3.fromRGB(20, 20, 20),
        tabstextcolor = Color3.fromRGB(240, 240, 240),
        bordercolor = Color3.fromRGB(60, 60, 60),
        accentcolor = Color3.fromRGB(28, 56, 139),
        accentcolor2 = Color3.fromRGB(16, 31, 78),
        outlinecolor = Color3.fromRGB(60, 60, 60),
        outlinecolor2 = Color3.fromRGB(0, 0, 0),
        sectorcolor = Color3.fromRGB(30, 30, 30),
        toptextcolor = Color3.fromRGB(255, 255, 255),
        topheight = 48,
        topcolor = Color3.fromRGB(30, 30, 30),
        topcolor2 = Color3.fromRGB(30, 30, 30),
        buttoncolor = Color3.fromRGB(49, 49, 49),
        buttoncolor2 = Color3.fromRGB(39, 39, 39),
        itemscolor = Color3.fromRGB(200, 200, 200),
        itemscolor2 = Color3.fromRGB(210, 210, 210)
    }

    if library.theme.cursor and Drawing then
        local success = pcall(function() 
            library.cursor = Drawing.new("Image")
            library.cursor.Data = game:HttpGet(library.theme.cursorimg)
            library.cursor.Size = Vector2.new(64, 64)
            library.cursor.Visible = uis.MouseEnabled
            library.cursor.Rounding = 0
            library.cursor.Position = Vector2.new(mouse.X - 32, mouse.Y + 6)
        end)
        if success and library.cursor then
            uis.InputChanged:Connect(function(input)
                if uis.MouseEnabled then
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        library.cursor.Position = Vector2.new(input.Position.X - 32, input.Position.Y + 7)
                    end
                end
            end)
            
            game:GetService("RunService").RenderStepped:Connect(function()
                uis.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.ForceHide
                library.cursor.Visible = uis.MouseEnabled and (uis.MouseIconEnabled or game:GetService("GuiService").MenuIsOpen)
            end)
        elseif not success and library.cursor then
            library.cursor:Remove()
        end
    end

    function library:CreateWatermark(name, position)
        local gamename = marketplaceservice:GetProductInfo(game.PlaceId).Name
        local watermark = { }
        watermark.Visible = true
        watermark.text = " " .. name:gsub("{game}", gamename):gsub("{fps}", "0 FPS") .. " "

        watermark.main = Instance.new("ScreenGui", coregui)
        watermark.main.Name = "Watermark"
        if syn then
            syn.protect_gui(watermark.main)
        end

        if getgenv().watermark then
            getgenv().watermark:Remove()
        end
        getgenv().watermark = watermark.main
        
        watermark.mainbar = Instance.new("Frame", watermark.main)
        watermark.mainbar.Name = "Main"
        watermark.mainbar.BorderColor3 = Color3.fromRGB(80, 80, 80)
        watermark.mainbar.Visible = watermark.Visible
        watermark.mainbar.BorderSizePixel = 0
        watermark.mainbar.ZIndex = 5
        watermark.mainbar.Position = UDim2.new(0, position and position.X or 10, 0, position and position.Y or 10)
        watermark.mainbar.Size = UDim2.new(0, 0, 0, 25)

        watermark.Gradient = Instance.new("UIGradient", watermark.mainbar)
        watermark.Gradient.Rotation = 90
        watermark.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(10, 10, 10)) })

        watermark.Outline = Instance.new("Frame", watermark.mainbar)
        watermark.Outline.Name = "outline"
        watermark.Outline.ZIndex = 4
        watermark.Outline.BorderSizePixel = 0
        watermark.Outline.Visible = watermark.Visible
        watermark.Outline.BackgroundColor3 = library.theme.outlinecolor
        watermark.Outline.Position = UDim2.fromOffset(-1, -1)

        watermark.BlackOutline = Instance.new("Frame", watermark.mainbar)
        watermark.BlackOutline.Name = "blackline"
        watermark.BlackOutline.ZIndex = 3
        watermark.BlackOutline.BorderSizePixel = 0
        watermark.BlackOutline.BackgroundColor3 = library.theme.outlinecolor2
        watermark.BlackOutline.Visible = watermark.Visible
        watermark.BlackOutline.Position = UDim2.fromOffset(-2, -2)

        watermark.label = Instance.new("TextLabel", watermark.mainbar)
        watermark.label.Name = "FPSLabel"
        watermark.label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        watermark.label.BackgroundTransparency = 1.000
        watermark.label.Position = UDim2.new(0, 0, 0, 0)
        watermark.label.Size = UDim2.new(0, 238, 0, 25)
        watermark.label.Font = library.theme.font
        watermark.label.ZIndex = 6
        watermark.label.Visible = watermark.Visible
        watermark.label.Text = watermark.text
        watermark.label.TextColor3 = Color3.fromRGB(255, 255, 255)
        watermark.label.TextSize = 15
        watermark.label.TextStrokeTransparency = 0.000
        watermark.label.TextXAlignment = Enum.TextXAlignment.Left
        watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X+10, 0, 25)
        
        watermark.topbar = Instance.new("Frame", watermark.mainbar)
        watermark.topbar.Name = "TopBar"
        watermark.topbar.ZIndex = 6
        watermark.topbar.BackgroundColor3 = library.theme.accentcolor
        watermark.topbar.BorderSizePixel = 0
        watermark.topbar.Visible = watermark.Visible
        watermark.topbar.Size = UDim2.new(0, 0, 0, 1)

        watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
        watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X+6, 0, 1)
        watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
        watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

        watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X+4, 0, 25)    
        watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X+4, 0, 25)
        watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X+6, 0, 1)
        watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
        watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

        local startTime, counter, oldfps = os.clock(), 0, nil
        runservice.Heartbeat:Connect(function()
            watermark.label.Visible = watermark.Visible
            watermark.mainbar.Visible = watermark.Visible
            watermark.topbar.Visible = watermark.Visible
            watermark.Outline.Visible = watermark.Visible
            watermark.BlackOutline.Visible = watermark.Visible

            if not name:find("{fps}") then
                watermark.label.Text = " " .. name:gsub("{game}", gamename):gsub("{fps}", "0 FPS") .. " "
            end

            if name:find("{fps}") then
                local currentTime = os.clock()
                counter = counter + 1
                if currentTime - startTime >= 1 then 
                    local fps = math.floor(counter / (currentTime - startTime))
                    counter = 0
                    startTime = currentTime

                    if fps ~= oldfps then
                        watermark.label.Text = " " .. name:gsub("{game}", gamename):gsub("{fps}", fps .. " FPS") .. " "
            
                        watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X+10, 0, 25)
                        watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
                        watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 1)

                        watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
                        watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)
                    end
                    oldfps = fps
                end
            end
        end)

        watermark.mainbar.MouseEnter:Connect(function()
            tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 1, Active = false }):Play()
            tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 1, Active = false }):Play()
            tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { TextTransparency = 1, Active = false }):Play()
            tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 1, Active = false }):Play()
            tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 1, Active = false }):Play()
        end)
        
        watermark.mainbar.MouseLeave:Connect(function()
            tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 0, Active = true }):Play()
            tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 0, Active = true }):Play()
            tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { TextTransparency = 0, Active = true }):Play()
            tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 0, Active = true }):Play()
            tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { BackgroundTransparency = 0, Active = true }):Play()
        end)

        function watermark:SetState(state)
            if state == 'Active' then 
                --watermark.Visible = true 
                watermark.main.Enabled = true

            elseif state == 'Disable' then 
                watermark.main.Enabled = false
            else
                warn('Unrecognised paramater, "'..state..'". Did nothing.')
            end
        end

        function watermark:UpdateTheme(theme)
            theme = theme or library.theme
            watermark.Outline.BackgroundColor3 = theme.outlinecolor
            watermark.BlackOutline.BackgroundColor3 = theme.outlinecolor2
            watermark.label.Font = theme.font
            watermark.topbar.BackgroundColor3 = theme.accentcolor
        end

        return watermark
    end

    function library:CreateWindow(name, size, hidebutton)
        local window = { }

        window.name = name or ""
        window.size = UDim2.fromOffset(size.X, size.Y) or UDim2.fromOffset(492, 598)
        window.hidebutton = hidebutton or Enum.KeyCode.RightShift
        window.theme = library.theme

        

        local updateevent = Instance.new("BindableEvent")
        function window:UpdateTheme(theme)
            updateevent:Fire(theme or library.theme)
            window.theme = (theme or library.theme)
        end

        window.Main = Instance.new("ScreenGui", coregui)
        window.Main.Name = name
        window.Main.DisplayOrder = 15
        if syn then
            syn.protect_gui(window.Main)
        end
        window.storeobjects = Instance.new('Folder',window.Main); window.storeobjects.Name = 'storeobjects'
        if getgenv().uilib then
            getgenv().uilib:Remove()
        end
        getgenv().uilib = window.Main
        getgenv().getwindow = window

        local dragging, dragInput, dragStart, startPos
        uis.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - dragStart
                window.Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)

        local dragstart = function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = window.Frame.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end

        local dragend = function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end

        window.Frame = Instance.new("TextButton", window.Main)
        window.Frame.Name = "main"
        window.Frame.Position = UDim2.fromScale(0.5, 0.5)
        window.Frame.BorderSizePixel = 0
        window.Frame.Size = window.size
        window.Frame.AutoButtonColor = false
        window.Frame.Text = ""
        window.Frame.BackgroundColor3 = window.theme.backgroundcolor
        window.Frame.AnchorPoint = Vector2.new(0.5, 0.5)
        updateevent.Event:Connect(function(theme)
            window.Frame.BackgroundColor3 = theme.backgroundcolor
        end)

        uis.InputBegan:Connect(function(key)
            if key.KeyCode == window.hidebutton then
                window.Frame.Visible = not window.Frame.Visible
            end
        end)

        local function checkIfGuiInFront(Pos)
            local objects = coregui:GetGuiObjectsAtPosition(Pos.X, Pos.Y)
            for i,v in pairs(objects) do 
                if not string.find(v:GetFullName(), window.name) then 
                    table.remove(objects, i)
                end 
            end
            return (#objects ~= 0 and objects[1].AbsolutePosition ~= Pos)
        end

        window.BlackOutline = Instance.new("Frame", window.Frame)
        window.BlackOutline.Name = "outline"
        window.BlackOutline.ZIndex = 1
        window.BlackOutline.Size = window.size + UDim2.fromOffset(2, 2)
        window.BlackOutline.BorderSizePixel = 0
        window.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
        window.BlackOutline.Position = UDim2.fromOffset(-1, -1)
        updateevent.Event:Connect(function(theme)
            window.BlackOutline.BackgroundColor3 = theme.outlinecolor2
        end)

        window.Outline = Instance.new("Frame", window.Frame)
        window.Outline.Name = "outline"
        window.Outline.ZIndex = 0
        window.Outline.Size = window.size + UDim2.fromOffset(4, 4)
        window.Outline.BorderSizePixel = 0
        window.Outline.BackgroundColor3 = window.theme.outlinecolor
        window.Outline.Position = UDim2.fromOffset(-2, -2)
        updateevent.Event:Connect(function(theme)
            window.Outline.BackgroundColor3 = theme.outlinecolor
        end)

        window.BlackOutline2 = Instance.new("Frame", window.Frame)
        window.BlackOutline2.Name = "outline"
        window.BlackOutline2.ZIndex = -1
        window.BlackOutline2.Size = window.size + UDim2.fromOffset(6, 6)
        window.BlackOutline2.BorderSizePixel = 0
        window.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
        window.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
        updateevent.Event:Connect(function(theme)
            window.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
        end)

        window.TopBar = Instance.new("Frame", window.Frame)
        window.TopBar.Name = "top"
        window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, window.theme.topheight)
        window.TopBar.BorderSizePixel = 0
        window.TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        window.TopBar.InputBegan:Connect(dragstart)
        window.TopBar.InputChanged:Connect(dragend)
        updateevent.Event:Connect(function(theme)
            window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, theme.topheight)
        end)

        window.TopGradient = Instance.new("UIGradient", window.TopBar)
        window.TopGradient.Rotation = 90
        window.TopGradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.topcolor), ColorSequenceKeypoint.new(1.00, window.theme.topcolor2) })
        updateevent.Event:Connect(function(theme)
            window.TopGradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.topcolor), ColorSequenceKeypoint.new(1.00, theme.topcolor2) })
        end)

        window.NameLabel = Instance.new("TextLabel", window.TopBar)
        window.NameLabel.TextColor3 = window.theme.toptextcolor
        window.NameLabel.Text = window.name
        window.NameLabel.TextXAlignment = Enum.TextXAlignment.Left
        window.NameLabel.Font = window.theme.font
        window.NameLabel.Name = "title"
        window.NameLabel.Position = UDim2.fromOffset(4, -2)
        window.NameLabel.BackgroundTransparency = 1
        window.NameLabel.Size = UDim2.fromOffset(190, window.TopBar.AbsoluteSize.Y / 2 - 2)
        window.NameLabel.TextSize = window.theme.titlesize
        updateevent.Event:Connect(function(theme)
            window.NameLabel.TextColor3 = theme.toptextcolor
            window.NameLabel.Font = theme.font
            window.NameLabel.TextSize = theme.titlesize
        end)

        window.Line2 = Instance.new("Frame", window.TopBar)
        window.Line2.Name = "line"
        window.Line2.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2.1)
        window.Line2.Size = UDim2.fromOffset(window.size.X.Offset, 1)
        window.Line2.BorderSizePixel = 0
        window.Line2.BackgroundColor3 = window.theme.accentcolor
        updateevent.Event:Connect(function(theme)
            window.Line2.BackgroundColor3 = theme.accentcolor
        end)

        window.TabList = Instance.new("Frame", window.TopBar)
        window.TabList.Name = "tablist"
        window.TabList.BackgroundTransparency = 1
        window.TabList.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2 + 1)
        window.TabList.Size = UDim2.fromOffset(window.size.X.Offset, window.TopBar.AbsoluteSize.Y / 2)
        window.TabList.BorderSizePixel = 0
        window.TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

        window.TabList.InputBegan:Connect(dragstart)
        window.TabList.InputChanged:Connect(dragend)

        window.BlackLine = Instance.new("Frame", window.Frame)
        window.BlackLine.Name = "blackline"
        window.BlackLine.Size = UDim2.fromOffset(window.size.X.Offset, 1)
        window.BlackLine.BorderSizePixel = 0
        window.BlackLine.ZIndex = 9
        window.BlackLine.BackgroundColor3 = window.theme.outlinecolor2
        window.BlackLine.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y)
        updateevent.Event:Connect(function(theme)
            window.BlackLine.BackgroundColor3 = theme.outlinecolor2
        end)

        window.BackgroundImage = Instance.new("ImageLabel", window.Frame)
        window.BackgroundImage.Name = "background"
        window.BackgroundImage.BorderSizePixel = 0
        window.BackgroundImage.ScaleType = Enum.ScaleType.Tile
        window.BackgroundImage.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)
        window.BackgroundImage.Size = UDim2.fromOffset(window.size.X.Offset, window.size.Y.Offset - window.TopBar.AbsoluteSize.Y - 1)
        window.BackgroundImage.Image = window.theme.background or ""
        window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= "" and 0 or 1
        window.BackgroundImage.ImageColor3 = Color3.new() 
        window.BackgroundImage.BackgroundColor3 = window.theme.backgroundcolor
        window.BackgroundImage.TileSize = UDim2.new(0, window.theme.tilesize, 0, window.theme.tilesize)
        updateevent.Event:Connect(function(theme)
            window.BackgroundImage.Image = theme.background or ""
            window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= "" and 0 or 1
            window.BackgroundImage.BackgroundColor3 = theme.backgroundcolor
            window.BackgroundImage.TileSize = UDim2.new(0, theme.tilesize, 0, theme.tilesize)
        end)

        window.Line = Instance.new("Frame", window.Frame)
        window.Line.Name = "line"
        window.Line.Position = UDim2.fromOffset(0, 0)
        window.Line.Size = UDim2.fromOffset(60, 1)
        window.Line.BorderSizePixel = 0
        window.Line.BackgroundColor3 = window.theme.accentcolor
        updateevent.Event:Connect(function(theme)
            window.Line.BackgroundColor3 = theme.accentcolor
        end)

        window.ListLayout = Instance.new("UIListLayout", window.TabList)
        window.ListLayout.FillDirection = Enum.FillDirection.Horizontal
        window.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

        window.OpenedColorPickers = { }
        window.Tabs = { }

        function window:CreateTab(name)
            local tab = { }
            tab.name = name or ""

            local textservice = game:GetService("TextService")
            local size = textservice:GetTextSize(tab.name, window.theme.fontsize, window.theme.font, Vector2.new(200,300))

            tab.TabButton = Instance.new("TextButton", window.TabList)
            tab.TabButton.TextColor3 = window.theme.tabstextcolor
            tab.TabButton.Text = tab.name
            tab.TabButton.AutoButtonColor = false
            tab.TabButton.Font = window.theme.font
            tab.TabButton.TextYAlignment = Enum.TextYAlignment.Center
            tab.TabButton.BackgroundTransparency = 1
            tab.TabButton.BorderSizePixel = 0
            tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
            tab.TabButton.Name = tab.name
            tab.TabButton.TextSize = window.theme.fontsize
            updateevent.Event:Connect(function(theme)
                local size = textservice:GetTextSize(tab.name, theme.fontsize, theme.font, Vector2.new(200,300))
                tab.TabButton.TextColor3 = tab.TabButton.Name == "SelectedTab" and theme.accentcolor or theme.tabstextcolor
                tab.TabButton.Font = theme.font
                tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
                tab.TabButton.TextSize = theme.fontsize
            end)

            tab.Left = Instance.new("ScrollingFrame", window.Frame) 
            tab.Left.Name = "leftside"
            tab.Left.BorderSizePixel = 0
            tab.Left.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
            tab.Left.BackgroundTransparency = 1
            tab.Left.Visible = false
            tab.Left.ScrollBarThickness = 0
            tab.Left.ScrollingDirection = "Y"
            tab.Left.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)

            tab.LeftListLayout = Instance.new("UIListLayout", tab.Left)
            tab.LeftListLayout.FillDirection = Enum.FillDirection.Vertical
            tab.LeftListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            tab.LeftListLayout.Padding = UDim.new(0, 12)

            tab.LeftListPadding = Instance.new("UIPadding", tab.Left)
            tab.LeftListPadding.PaddingTop = UDim.new(0, 12)
            tab.LeftListPadding.PaddingLeft = UDim.new(0, 12)
            tab.LeftListPadding.PaddingRight = UDim.new(0, 12)

            tab.Right = Instance.new("ScrollingFrame", window.Frame) 
            tab.Right.Name = "rightside"
            tab.Right.ScrollBarThickness = 0
            tab.Right.ScrollingDirection = "Y"
            tab.Right.Visible = false
            tab.Right.BorderSizePixel = 0
            tab.Right.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
            tab.Right.BackgroundTransparency = 1
            tab.Right.Position = tab.Left.Position + UDim2.fromOffset(tab.Left.AbsoluteSize.X, 0)

            tab.RightListLayout = Instance.new("UIListLayout", tab.Right)
            tab.RightListLayout.FillDirection = Enum.FillDirection.Vertical
            tab.RightListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            tab.RightListLayout.Padding = UDim.new(0, 12)

            tab.RightListPadding = Instance.new("UIPadding", tab.Right)
            tab.RightListPadding.PaddingTop = UDim.new(0, 12)
            tab.RightListPadding.PaddingLeft = UDim.new(0, 6)
            tab.RightListPadding.PaddingRight = UDim.new(0, 12)

            local function createExtra()
                tab.Extra = Instance.new("ScrollingFrame", window.Frame)  -- make var for extra then set tab.Extra to the var
                tab.Extra.Name = "extraside"
                tab.Extra.ScrollBarThickness = 0
                tab.Extra.ScrollingDirection = "Y"
                tab.Extra.Visible = false
                tab.Extra.BorderSizePixel = 0
                -- tab.Left.Size = UDim2.fromOffset(window.size.X.Offset / 3, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
                -- tab.Right.Size = UDim2.fromOffset(window.size.X.Offset / 3, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
                --UDim2.new(0.152,0,0,0) -- UDim2.fromOffset()--
                -- window.size = UDim2.fromOffset(size.X+500, size.Y)
                -- window.BlackOutline.Size = window.size + UDim2.fromOffset(2, 2)
                -- window.Outline.Size = window.size + UDim2.fromOffset(4, 4)
                -- window.BlackOutline2.Size = window.size + UDim2.fromOffset(6, 6)
                -- window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, window.theme.topheight)
                -- window.Line2.Size = UDim2.fromOffset(window.size.X.Offset, 1)
                -- window.TabList.Size = UDim2.fromOffset(window.size.X.Offset, window.TopBar.AbsoluteSize.Y / 2)
                -- window.BlackLine.Size = UDim2.fromOffset(window.size.X.Offset, 1)
                -- window.BackgroundImage.Size = UDim2.fromOffset(window.size.X.Offset, window.size.Y.Offset - window.TopBar.AbsoluteSize.Y - 1)
                -- window.Line.Size = UDim2.fromOffset(60, 1)


                -- tab.Left.Size = UDim2.fromOffset(window.size.X.Offset / 3, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
                -- for _,v in next, tab.Left:GetChildren() do 
                --     for kc,unewv in next, v:GetChildren() do 
                --         if unewv.Name == 'items' then 
                --             unewv.Size = tab.Left.Size
                --         end 
                --     end 
                -- end 
                -- tab.Right.Size = UDim2.fromOffset(window.size.X.Offset / 3, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))




                tab.Extra.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
                tab.Extra.BackgroundTransparency = 1
                tab.Extra.Position = tab.Right.Position + UDim2.fromOffset(tab.Right.AbsoluteSize.X-2, 0)--tab.Right.Position + UDim2.fromOffset(10, 0)
        
                tab.ExtraListLayout = Instance.new("UIListLayout", tab.Extra)
                tab.ExtraListLayout.FillDirection = Enum.FillDirection.Vertical
                tab.ExtraListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                tab.ExtraListLayout.Padding = UDim.new(0, 12)
        
                tab.ExtraListPadding = Instance.new("UIPadding", tab.Extra)
                tab.ExtraListPadding.PaddingTop = UDim.new(0, 12)
                tab.ExtraListPadding.PaddingLeft = UDim.new(0, 6)
                tab.ExtraListPadding.PaddingRight = UDim.new(0, 12)


                window.Frame.Size += UDim2.fromOffset(tab.Extra.Size.X.Offset/3,0)
                local xAddition = tab.Extra.Size.X.Offset + 6
                window.Frame.top.Size += UDim2.fromOffset(xAddition,0)
                window.Frame.top.line.Size += UDim2.fromOffset(xAddition,0)
                window.Frame.blackline.Size += UDim2.fromOffset(xAddition,0)
                for _,v in next, window.Frame:GetChildren() do 
                    if v.Name == 'outline' then 
                        if _==1 then 
                            v.Size += UDim2.fromOffset(xAddition, 1)
                        elseif _ ==2 then 
                            v.Size += UDim2.fromOffset(xAddition, 2)
                        elseif _== 3 then 
                            v.Size += UDim2.fromOffset(xAddition,1)
                        end 
                    end 
                end 
                window.Frame.background.Size += UDim2.fromOffset(xAddition,0)


                tab.Extra.Visible = true













                return tab.Extra
            end 



            local block = false
            function tab:SelectTab()
                repeat 
                    wait()
                until block == false

                block = true
                for i,v in pairs(window.Tabs) do
                    if v ~= tab then
                        v.TabButton.TextColor3 = Color3.fromRGB(230, 230, 230)
                        v.TabButton.Name = "Tab"
                        v.Left.Visible = false
                        v.Right.Visible = false
                    end
                end

                tab.TabButton.TextColor3 = window.theme.accentcolor
                tab.TabButton.Name = "SelectedTab"
                tab.Right.Visible = true
                tab.Left.Visible = true
                if tab.Extra then 
                    tab.Extra.Visible = true
                end 
                window.Line:TweenSizeAndPosition(UDim2.fromOffset(size.X + 15, 1), UDim2.new(0, (tab.TabButton.AbsolutePosition.X - window.Frame.AbsolutePosition.X), 0, 0) + (window.BlackLine.Position - UDim2.fromOffset(0, 1)), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15)
                wait(0.2)
                block = false
            end
        
            if #window.Tabs == 0 then
                tab:SelectTab()
            end

            tab.TabButton.MouseButton1Down:Connect(function()
                tab:SelectTab()
            end)

            tab.SectorsLeft = { }
            tab.SectorsRight = { }
            tab.SectorsExtra = { }

            function tab:CreateSector(name,side)
                local sector = { }
                sector.name = name or ""
                sector.side = side:lower() or "left"
                
                --print(side:lower())
                --local selectedSector = tab.Left
                --if sector.side == 'left' then selectedSector = tab.Left elseif sector.side == 'right' then selectedSector = tab.Right elseif sector.side == 'extra' then selectedSector = tab.Extra end
                --sector.Main = Instance.new("Frame", selectedSector) 
                local tabg = sector.side
                if tabg == 'right' then tabg = tab.Right; end
                if tabg == 'extra' then 
                    if tab.Extra  == nil then 
                        createExtra()
                    end 
                    tabg = tab.Extra; 
            
                end
                if tabg == sector.side then tabg = tab.Left; end
                
                sector.Main = Instance.new("Frame", tabg)  -- sector.side == "left" and tab.Left or tab.Right or tab.Extra
                sector.Main.Name = sector.name:gsub(" ", "") .. "Sector"
                sector.Main.BorderSizePixel = 0
                sector.Main.ZIndex = 4
                sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, 20)
                sector.Main.BackgroundColor3 = window.theme.sectorcolor
                --sector.Main.Position = sector.side == "left" and UDim2.new(0, 11, 0, 12) or UDim2.new(0, window.size.X.Offset - sector.Main.AbsoluteSize.X - 11, 0, 12)
                updateevent.Event:Connect(function(theme)
                    sector.Main.BackgroundColor3 = theme.sectorcolor
                end)

                sector.Line = Instance.new("Frame", sector.Main)
                sector.Line.Name = "line"
                sector.Line.ZIndex = 4
                sector.Line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset + 4, 1)
                sector.Line.BorderSizePixel = 0
                sector.Line.Position = UDim2.fromOffset(-2, -2)
                sector.Line.BackgroundColor3 = window.theme.accentcolor
                updateevent.Event:Connect(function(theme)
                    sector.Line.BackgroundColor3 = theme.accentcolor
                end)

                sector.BlackOutline = Instance.new("Frame", sector.Main)
                sector.BlackOutline.Name = "outline"
                sector.BlackOutline.ZIndex = 3
                sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
                sector.BlackOutline.BorderSizePixel = 0
                sector.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                sector.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                sector.Main:GetPropertyChangedSignal("Size"):Connect(function()
                    sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
                end)
                updateevent.Event:Connect(function(theme)
                    sector.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                end)


                sector.Outline = Instance.new("Frame", sector.Main)
                sector.Outline.Name = "outline"
                sector.Outline.ZIndex = 2
                sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
                sector.Outline.BorderSizePixel = 0
                sector.Outline.BackgroundColor3 = window.theme.outlinecolor
                sector.Outline.Position = UDim2.fromOffset(-2, -2)
                sector.Main:GetPropertyChangedSignal("Size"):Connect(function()
                    sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
                end)
                updateevent.Event:Connect(function(theme)
                    sector.Outline.BackgroundColor3 = theme.outlinecolor
                end)

                sector.BlackOutline2 = Instance.new("Frame", sector.Main)
                sector.BlackOutline2.Name = "outline"
                sector.BlackOutline2.ZIndex = 1
                sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
                sector.BlackOutline2.BorderSizePixel = 0
                sector.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                sector.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                sector.Main:GetPropertyChangedSignal("Size"):Connect(function()
                    sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
                end)
                updateevent.Event:Connect(function(theme)
                    sector.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                end)

                local size = textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(2000, 2000))
                sector.Label = Instance.new("TextLabel", sector.Main)
                sector.Label.AnchorPoint = Vector2.new(0,0.5)
                sector.Label.Position = UDim2.fromOffset(12, -1)
                sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(200,300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
                sector.Label.BackgroundTransparency = 1
                sector.Label.BorderSizePixel = 0
                sector.Label.ZIndex = 6
                sector.Label.Text = sector.name
                sector.Label.TextColor3 = Color3.new(1,1,2552/255)
                sector.Label.TextStrokeTransparency = 1
                sector.Label.Font = window.theme.font
                sector.Label.TextSize = 15
                updateevent.Event:Connect(function(theme)
                    local size = textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(2000, 2000))
            -- print(sector.Main.Size.X.Offset or nil)
            -- print(textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(200,300)).X + 13)
                    sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(200,300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
                    sector.Label.Font = theme.font
                end)

                sector.LabelBackFrame = Instance.new("Frame", sector.Main)
                sector.LabelBackFrame.Name = "labelframe"
                sector.LabelBackFrame.ZIndex = 5
                sector.LabelBackFrame.Size = UDim2.fromOffset(sector.Label.Size.X.Offset, 10)
                sector.LabelBackFrame.BorderSizePixel = 0
                sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                sector.LabelBackFrame.Position = UDim2.fromOffset(sector.Label.Position.X.Offset, sector.BlackOutline2.Position.Y.Offset)

                sector.Items = Instance.new("Frame", sector.Main) 
                sector.Items.Name = "items"
                sector.Items.ZIndex = 2
                sector.Items.BackgroundTransparency = 1
                sector.Items.Size = UDim2.fromOffset(170, 140)
                sector.Items.AutomaticSize = Enum.AutomaticSize.Y
                sector.Items.BorderSizePixel = 0

                sector.ListLayout = Instance.new("UIListLayout", sector.Items)
                sector.ListLayout.FillDirection = Enum.FillDirection.Vertical
                sector.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                sector.ListLayout.Padding = UDim.new(0, 12)

                sector.ListPadding = Instance.new("UIPadding", sector.Items)
                sector.ListPadding.PaddingTop = UDim.new(0, 15)
                sector.ListPadding.PaddingLeft = UDim.new(0, 6)
                sector.ListPadding.PaddingRight = UDim.new(0, 6)

                table.insert(sector.side:lower() == "left" and tab.SectorsLeft or tab.SectorsRight, sector)

                function sector:FixSize()
                    sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, sector.ListLayout.AbsoluteContentSize.Y + 22)
                    local sizeleft, sizeright = 0, 0
                    for i,v in pairs(tab.SectorsLeft) do
                        sizeleft = sizeleft + v.Main.AbsoluteSize.Y
                    end
                    for i,v in pairs(tab.SectorsRight) do
                        sizeright = sizeright + v.Main.AbsoluteSize.Y
                    end

                    tab.Left.CanvasSize = UDim2.fromOffset(tab.Left.AbsoluteSize.X, sizeleft + ((#tab.SectorsLeft - 1) * tab.LeftListPadding.PaddingTop.Offset) + 20)
                    tab.Right.CanvasSize = UDim2.fromOffset(tab.Right.AbsoluteSize.X, sizeright + ((#tab.SectorsRight - 1) * tab.RightListPadding.PaddingTop.Offset) + 20)
                end

                function sector:AddButton(text, callback,info)
                    local button = { }
                    button.hint = false;
                    button.knowledgemessage = '';
                    button.text = text or ""
                    button.callback = callback or function() end

                    button.Main = Instance.new("TextButton", sector.Items)
                    button.Main.BorderSizePixel = 0
                    button.Main.Text = ""
                    button.Main.AutoButtonColor = false
                    button.Main.Name = "button"
                    button.Main.ZIndex = 5
                    button.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
                    button.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

                    button.Gradient = Instance.new("UIGradient", button.Main)
                    button.Gradient.Rotation = 90
                    button.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.buttoncolor), ColorSequenceKeypoint.new(1.00, window.theme.buttoncolor2) })
                    
            
            
                    updateevent.Event:Connect(function(theme)
                        button.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.buttoncolor), ColorSequenceKeypoint.new(1.00, theme.buttoncolor2) })
                    end)

                    button.BlackOutline2 = Instance.new("Frame", button.Main)
                    button.BlackOutline2.Name = "blackline"
                    button.BlackOutline2.ZIndex = 4
                    button.BlackOutline2.Size = button.Main.Size + UDim2.fromOffset(6, 6)
                    button.BlackOutline2.BorderSizePixel = 0
                    button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    button.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        button.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                    end)

                    button.Outline = Instance.new("Frame", button.Main)
                    button.Outline.Name = "blackline"
                    button.Outline.ZIndex = 4
                    button.Outline.Size = button.Main.Size + UDim2.fromOffset(4, 4)
                    button.Outline.BorderSizePixel = 0
                    button.Outline.BackgroundColor3 = window.theme.outlinecolor
                    button.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        button.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    button.BlackOutline = Instance.new("Frame", button.Main)
                    button.BlackOutline.Name = "blackline"
                    button.BlackOutline.ZIndex = 4
                    button.BlackOutline.Size = button.Main.Size + UDim2.fromOffset(2, 2)
                    button.BlackOutline.BorderSizePixel = 0
                    button.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    button.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        button.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    button.Label = Instance.new("TextLabel", button.Main)
                    button.Label.Name = "Label"
                    button.Label.BackgroundTransparency = 1
                    button.Label.Position = UDim2.new(0, -1, 0, 0)
                    button.Label.ZIndex = 5
                    button.Label.Size = button.Main.Size
                    button.Label.Font = window.theme.font
                    button.Label.Text = button.text
                    button.Label.TextColor3 = window.theme.itemscolor2
                    button.Label.TextSize = 15
                    button.Label.TextStrokeTransparency = 1
                    button.Label.TextXAlignment = Enum.TextXAlignment.Center -- 765

                    button.Main.MouseButton1Down:Connect(function()
                    
                        if getgenv().disablefeatures == true then return end
                        if info then 
                            getgenv().disablefeatures = true
                            local text = info.ask
                            local yes = info.accept
                            local no = info.reject

                            local cover = Instance.new('Frame')	
                            cover.Size = window.Frame.Size	
                            cover.Parent = window.Frame
                            cover.Transparency = 0.4	
                            cover.BackgroundColor3= Color3.fromRGB(30,30,30)	


                            local LinesNeededtoCreateNew = 15

                            local function SubstitutionText()
                                local text = info.ask
                                for i=1,string.len(text) do 
                                if i%LinesNeededtoCreateNew == 0 then 
                                    --info.ask = info.ask:sub() i wanted to get it and make a new line
                                    -- gonna have to find the 11th letter and make a new line there
                                    for x = 1,string.len(text) do 
                                    if x == i then 
                                        local restofit = text:sub(x+1,string.len(text))
                                        text = text:sub(1,x)
                                        text = text..'\n'
                                        text = text..restofit
                                    end
                                    end
                                end
                                end
                                return text
                            end
                            local function perTextaddSpace()
                            end

                            -- print(typeof(tab.SectorsLeft))
                            local changedstuff = {}

                            local function changeTransparencies(info)
                                if info.s == 'change' then 
                                    print('change')
                                    local function dosamefor(ul)
                                        for _,v in next, ul do 
                                            for itemI,item in next, v['Main']:GetChildren() do 
                                                -- local hasBackgroundTransparency = false
                                                -- hasBackgroundTransparency =  pcall(function() return item.BackgroundTransparency end)  
                                                -- if hasBackgroundTransparency and item.BackgroundTransparency == 0 then 
                                                --     print(item.Name)
                                                --     table.insert(changedstuff,{
                                                --         r = item;
                                                --         previous = item.BackgroundTransparency
                                                --     })
                                                --     task.wait(.01)
                                                --     item.BackgroundTransparency = .4
                                                -- end
                                                item.Visible = false
                                            end
                                        end
                                    end

                                    dosamefor(tab.SectorsLeft)
                                    dosamefor(tab.SectorsRight)
                                elseif info.s == 'revert' then 
                                    local function dosamefor(ul)
                                        for _,v in next, ul do 
                                            for itemI,item in next, v['Main']:GetChildren() do 
                                                -- local hasBackgroundTransparency = false
                                                -- hasBackgroundTransparency =  pcall(function() return item.BackgroundTransparency end)  
                                                -- if hasBackgroundTransparency and item.BackgroundTransparency == 0 then 
                                                --     print(item.Name)
                                                --     table.insert(changedstuff,{
                                                --         r = item;
                                                --         previous = item.BackgroundTransparency
                                                --     })
                                                --     task.wait(.01)
                                                --     item.BackgroundTransparency = .4
                                                -- end
                                                item.Visible = true
                                            end
                                        end
                                    end
                                    
                                    dosamefor(tab.SectorsLeft)
                                    dosamefor(tab.SectorsRight)
                                    -- for _Index,itemTable in next, changedstuff do 

                                    --     itemTable['r'].BackgroundTransparency = itemTable['previous']

                                    --     table.remove(changedstuff,_Index)
                                    -- end
                                end 
                            end

                            changeTransparencies{s = 'change'}
                            
                            local label = {}
                            label.Main = Instance.new("TextLabel", cover)
                            label.Main.Name = "AskingLabel"
                            label.Main.BackgroundTransparency = 1
                            label.Main.Position = UDim2.new(0,cover.Size.X.Offset/2,0,cover.Size.Y.Offset/2-50)         -- 185   
                            label.Main.ZIndex = 4
                            label.Main.Font = window.theme.font
                            label.Main.Text = info.ask
                            label.Main.TextColor3 = Color3.new(255, 255, 255)-- window.theme.itemscolor
                            label.Main.TextSize = 15
                            label.Main.TextStrokeTransparency = 1
                            label.Main.TextXAlignment = Enum.TextXAlignment.Center



                            local yes = {}	
                            yes.Main = Instance.new("TextButton", cover)
                            yes.Main.BorderSizePixel = 0
                            yes.Main.Text = info.accept
                            yes.Main.AutoButtonColor = false
                            yes.Main.Name = 'yes'
                            yes.Main.TextColor3 = Color3.fromRGB(255,255,255)
                            yes.Main.ZIndex = 50
                            yes.Main.Size = UDim2.new(0,75,0,25)                
                            yes.Main.Position = UDim2.new(0,cover.Size.X.Offset/3.1,0,cover.Size.Y.Offset/2) -- cover.Position.X.Offset to 160            
                            -- yes.Main.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                            -- yes.Gradient = Instance.new("UIGradient", yes.Main)
                            -- yes.Gradient.Rotation = 90
                            -- yes.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.buttoncolor), ColorSequenceKeypoint.new(1.00, window.theme.buttoncolor2) })
                            
                            yes.Main.BackgroundTransparency = 0.6
                            yes.Main.BackgroundColor3 = Color3.fromRGB(10, 10, 10)

                            local no ={}
                            no.Main = Instance.new("TextButton", cover)
                            no.Main.BorderSizePixel = 0
                            no.Main.Text = info.reject
                            no.Main.AutoButtonColor = false
                            no.Main.Name = 'no'
                            no.Main.TextColor3 = Color3.fromRGB(255,255,255)
                            no.Main.ZIndex = 50
                            no.Main.Size = UDim2.new(0,75,0,25)                
                            no.Main.Position = UDim2.new(0,yes.Main.Position.X.Offset+100,0,cover.Size.Y.Offset/2)             
                            -- no.Main.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                            -- no.Gradient = Instance.new("UIGradient", no.Main)
                            -- no.Gradient.Rotation = 90
                            -- no.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.buttoncolor), ColorSequenceKeypoint.new(1.00, window.theme.buttoncolor2) })
                            no.Main.BackgroundTransparency = 0.6
                            no.Main.BackgroundColor3 = Color3.fromRGB(10, 10, 10)

                            yes.Main.MouseButton1Down:Connect(function()
                                getgenv().disablefeatures =false
                                button.callback()
                                cover:Destroy()
                                changeTransparencies{s = 'revert'}
                            end)
                            no.Main.MouseButton1Down:Connect(function()
                                getgenv().disablefeatures =false
                                cover:Destroy()
                                changeTransparencies{s = 'revert'}
                            end)
                        else
                            button.callback()
                        end
                    end)
                        -- could do mousebutton1down and check if info then do
                        -- or check info and then check for the button pressed and add the cover stuff
                    updateevent.Event:Connect(function(theme)
                        button.Label.Font = theme.font
                        button.Label.TextColor3 = theme.itemscolor
                    end)
                    function button:ActivateKnowledge()
                        button.hint = true 
                    end
                    function button:DeactivateKnowledge()
                        button.hint = false 
                    end
                    function button:AddKnowledge(text)
                        -- 
                        button.knowledgemessage = text
                    end
                    function button:AddKnowledgeButton()
                        local knowledge = { }
                        knowledge.Visible = true
                    
                        knowledge.main = Instance.new("ScreenGui", window.storeobjects)
                        knowledge.main.Name = "knowledge"
                        -- if syn then
                        --     syn.protect_gui(knowledge.main)
                        -- end
                    
                        local dividedy = (game.Players.LocalPlayer:GetMouse().Y / workspace.CurrentCamera.ViewportSize.Y)
                        local dividedx = (game.Players.LocalPlayer:GetMouse().X / workspace.CurrentCamera.ViewportSize.X)
                        --knowledge.main.Position = UDim2.fromOffset(dividedx,dividedy)
                        local mouse = game.Players.LocalPlayer:GetMouse()
                        local screenSize = knowledge.main.AbsoluteSize
                        knowledge.mainbar = Instance.new("Frame", button.Main)
                        knowledge.mainbar.Name = "KnowledgeFrame"
                        knowledge.mainbar.BorderColor3 = Color3.fromRGB(80, 80, 80)
                        knowledge.mainbar.Visible = knowledge.Visible
                        knowledge.mainbar.BorderSizePixel = 0
                        knowledge.mainbar.ZIndex = 5
                        knowledge.AnchorPoint = Vector2.new(0.5,0.5)

                        knowledge.mainbar.Position = UDim2.new(0, dividedx , 0, dividedy )--UDim2.new(dividedx,0,dividedy,0)--button.Main.Position + UDim2.fromOffset(,1)-- UDim2.new(0, position and position.X or 10, 0, position and position.Y or 10)
                        knowledge.mainbar.Size = UDim2.new(0, 8, 0, 25)
                    
                        knowledge.Gradient = Instance.new("UIGradient", knowledge.mainbar)
                        knowledge.Gradient.Rotation = 90
                        knowledge.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(10, 10, 10)) })
                    
                        knowledge.Outline = Instance.new("Frame", knowledge.mainbar)
                        knowledge.Outline.Name = "outline"
                        knowledge.Outline.ZIndex = 4
                        knowledge.Outline.BorderSizePixel = 0
                        knowledge.Outline.Visible = knowledge.Visible
                        knowledge.Outline.BackgroundColor3 = library.theme.outlinecolor
                        knowledge.Outline.Position = UDim2.fromOffset(-1, -1)
                    
                        knowledge.BlackOutline = Instance.new("Frame", knowledge.mainbar)
                        knowledge.BlackOutline.Name = "blackline"
                        knowledge.BlackOutline.ZIndex = 3
                        knowledge.BlackOutline.BorderSizePixel = 0
                        knowledge.BlackOutline.BackgroundColor3 = library.theme.outlinecolor2
                        knowledge.BlackOutline.Visible = knowledge.Visible
                        knowledge.BlackOutline.Position = UDim2.fromOffset(-2, -2)
                    
                        knowledge.label = Instance.new("TextLabel", knowledge.mainbar)
                        knowledge.label.Name = "textlabel"
                        knowledge.label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        knowledge.label.BackgroundTransparency = 1.000
                        knowledge.label.Position = UDim2.new(0, 0, 0, 0)
                        knowledge.label.Size = UDim2.new(0, 238, 0, 25)
                        knowledge.label.Font = library.theme.font
                        knowledge.label.ZIndex = 6
                        knowledge.label.Visible = knowledge.Visible
                        knowledge.label.Text = button.knowledgemessage
                        knowledge.label.TextColor3 = Color3.fromRGB(255, 255, 255)
                        knowledge.label.TextSize = 15
                        knowledge.label.TextStrokeTransparency = 0.000
                        knowledge.label.TextXAlignment = Enum.TextXAlignment.Left
                        knowledge.label.Size = UDim2.new(0, knowledge.label.TextBounds.X+10, 0, 25)
                        
                        knowledge.topbar = Instance.new("Frame", knowledge.mainbar)
                        knowledge.topbar.Name = "TopBar"
                        knowledge.topbar.ZIndex = 6
                        knowledge.topbar.BackgroundColor3 = library.theme.accentcolor
                        knowledge.topbar.BorderSizePixel = 0
                        knowledge.topbar.Visible = knowledge.Visible
                        knowledge.topbar.Size = UDim2.new(0, 0, 0, 1)
                    
                        knowledge.mainbar.Size = UDim2.new(0, knowledge.label.TextBounds.X, 0, 25)
                        knowledge.topbar.Size = UDim2.new(0, knowledge.label.TextBounds.X+6, 0, 1)
                        knowledge.Outline.Size = knowledge.mainbar.Size + UDim2.fromOffset(2, 2)
                        knowledge.BlackOutline.Size = knowledge.mainbar.Size + UDim2.fromOffset(4, 4)
                    
                        knowledge.mainbar.Size = UDim2.new(0, knowledge.label.TextBounds.X+4, 0, 25)    
                        knowledge.label.Size = UDim2.new(0, knowledge.label.TextBounds.X+4, 0, 25)
                        knowledge.topbar.Size = UDim2.new(0, knowledge.label.TextBounds.X+6, 0, 1)
                        knowledge.Outline.Size = knowledge.mainbar.Size + UDim2.fromOffset(2, 2)
                        knowledge.BlackOutline.Size = knowledge.mainbar.Size + UDim2.fromOffset(4, 4)
                        local connection = game.Players.LocalPlayer:GetMouse().Move:Connect(function()
                            if knowledge.mainbar then 
                                local dividedy = (game.Players.LocalPlayer:GetMouse().Y / workspace.CurrentCamera.ViewportSize.Y)
                                local dividedx = (game.Players.LocalPlayer:GetMouse().X / workspace.CurrentCamera.ViewportSize.X)
                                --local udim = UDim2.new(0, mouse.X-script.Parent.Parent.AbsolutePosition.X, 0, mouse.Y-script.Parent.Parent.AbsolutePosition.Y)
                                knowledge.mainbar.Position = UDim2.new(0, mouse.X-button.Main.AbsolutePosition.X+20, 0, mouse.Y-button.Main.AbsolutePosition.Y)
                            else
                                connection:Disconnect()
                            end
                        end)
                        
                        return knowledge
                    end
                    button.BlackOutline2.MouseEnter:Connect(function()
                        if getgenv().disablefeatures == true then return end
                        button.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        -- HINT
                        if button.hint == true then 
                            print('added hint')
                            knowledge = button:AddKnowledgeButton()
                            knowledge.label.Text = button.knowledgemessage
                        end
                    end)

                    button.BlackOutline2.MouseLeave:Connect(function()
                        -- if getgenv().disablefeatures == true then return end
                        button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        if button.hint == true then 
                            if button.Main:FindFirstChild('KnowledgeFrame') then 
                                print('removed hint')
                                button.Main:FindFirstChild('KnowledgeFrame'):Destroy()
                            end
                        end
                    end)


                    sector:FixSize()
                    return button
                end

                function sector:AddLabel(text)
                    local label = { }

                    label.Main = Instance.new("TextLabel", sector.Items)
                    label.Main.Name = "Label"
                    label.Main.BackgroundTransparency = 1
                    label.Main.Position = UDim2.new(0, -1, 0, 0)
                    label.Main.ZIndex = 4
                    label.Main.AutomaticSize = Enum.AutomaticSize.XY
                    label.Main.Font = window.theme.font
                    label.Main.Text = text
                    label.Main.TextColor3 = window.theme.itemscolor
                    label.Main.TextSize = 15
                    label.Main.TextStrokeTransparency = 1
                    label.Main.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        label.Main.Font = theme.font
                        label.Main.TextColor3 = theme.itemscolor
                    end)

                    function label:Set(value)
                        label.Main.Text = value
                    end

                    sector:FixSize()
                    return label
                end
                
                function sector:AddToggle(text, default, callback, flag)
                    local toggle = { }
                    toggle.text = text or ""
                    toggle.default = default or false
                    toggle.callback = callback or function(value) end
                    toggle.flag = flag or text or ""
                    
                    toggle.value = toggle.default

                    toggle.Main = Instance.new("TextButton", sector.Items)
                    toggle.Main.Name = "toggle"
                    toggle.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    toggle.Main.BorderColor3 = window.theme.outlinecolor
                    toggle.Main.BorderSizePixel = 0
                    toggle.Main.Size = UDim2.fromOffset(8, 8)
                    toggle.Main.AutoButtonColor = false
                    toggle.Main.ZIndex = 5
                    toggle.Main.Font = Enum.Font.SourceSans
                    toggle.Main.Text = ""
                    toggle.Main.TextColor3 = Color3.fromRGB(0, 0, 0)
                    toggle.Main.TextSize = 15
                    updateevent.Event:Connect(function(theme)
                        toggle.Main.BorderColor3 = theme.outlinecolor
                    end)

                    toggle.BlackOutline2 = Instance.new("Frame", toggle.Main)
                    toggle.BlackOutline2.Name = "blackline"
                    toggle.BlackOutline2.ZIndex = 4
                    toggle.BlackOutline2.Size = toggle.Main.Size + UDim2.fromOffset(6, 6)
                    toggle.BlackOutline2.BorderSizePixel = 0
                    toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    toggle.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        toggle.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                    end)
                    
                    toggle.Outline = Instance.new("Frame", toggle.Main)
                    toggle.Outline.Name = "blackline"
                    toggle.Outline.ZIndex = 4
                    toggle.Outline.Size = toggle.Main.Size + UDim2.fromOffset(4, 4)
                    toggle.Outline.BorderSizePixel = 0
                    toggle.Outline.BackgroundColor3 = window.theme.outlinecolor
                    toggle.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        toggle.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    toggle.BlackOutline = Instance.new("Frame", toggle.Main)
                    toggle.BlackOutline.Name = "blackline"
                    toggle.BlackOutline.ZIndex = 4
                    toggle.BlackOutline.Size = toggle.Main.Size + UDim2.fromOffset(2, 2)
                    toggle.BlackOutline.BorderSizePixel = 0
                    toggle.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    toggle.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        toggle.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    toggle.Gradient = Instance.new("UIGradient", toggle.Main)
                    toggle.Gradient.Rotation = (22.5 * 13)
                    toggle.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(30, 30, 30)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(45, 45, 45)) })

                    toggle.Label = Instance.new("TextButton", toggle.Main)
                    toggle.Label.Name = "Label"
                    toggle.Label.AutoButtonColor = false
                    toggle.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    toggle.Label.BackgroundTransparency = 1
                    toggle.Label.Position = UDim2.fromOffset(toggle.Main.AbsoluteSize.X + 10, -2)
                    toggle.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, toggle.BlackOutline.Size.Y.Offset)
                    toggle.Label.Font = window.theme.font
                    toggle.Label.ZIndex = 5
                    toggle.Label.Text = toggle.text
                    toggle.Label.TextColor3 = window.theme.itemscolor
                    toggle.Label.TextSize = 15
                    toggle.Label.TextStrokeTransparency = 1
                    toggle.Label.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        toggle.Label.Font = theme.font
                        toggle.Label.TextColor3 = toggle.value and window.theme.itemscolor2 or theme.itemscolor
                    end)

                    toggle.CheckedFrame = Instance.new("Frame", toggle.Main)
                    toggle.CheckedFrame.ZIndex = 5
                    toggle.CheckedFrame.BorderSizePixel = 0
                    toggle.CheckedFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Color3.fromRGB(204, 0, 102)
                    toggle.CheckedFrame.Size = toggle.Main.Size

                    toggle.Gradient2 = Instance.new("UIGradient", toggle.CheckedFrame)
                    toggle.Gradient2.Rotation = (22.5 * 13)
                    toggle.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor2), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor) })
                    updateevent.Event:Connect(function(theme)
                        toggle.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor2), ColorSequenceKeypoint.new(1.00, theme.accentcolor) })
                    end)

                    toggle.Items = Instance.new("Frame", toggle.Main)
                    toggle.Items.Name = "\n"
                    toggle.Items.ZIndex = 4
                    toggle.Items.Size = UDim2.fromOffset(60, toggle.BlackOutline.AbsoluteSize.Y)
                    toggle.Items.BorderSizePixel = 0
                    toggle.Items.BackgroundTransparency = 1
                    toggle.Items.BackgroundColor3 = Color3.new(0, 0, 0)
                    toggle.Items.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, 0)

                    toggle.ListLayout = Instance.new("UIListLayout", toggle.Items)
                    toggle.ListLayout.FillDirection = Enum.FillDirection.Horizontal
                    toggle.ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
                    toggle.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                    toggle.ListLayout.Padding = UDim.new(0.04, 6)

                    if toggle.flag and toggle.flag ~= "" then
                        library.flags[toggle.flag] = toggle.default or false
                    end
                    local visiblestuff = {}
                    function toggle:MakeActiveToValue() 
                        value = toggle.value
                        if value then
                            for _,v in next, visiblestuff do 
                                for i,obj in next, window.storeobjects:GetChildren() do 
                                    -- if obj == v then 
                                    --     v.Main.Parent = sector.Items
                                    -- end
                                end
                                --v.Main.Parent =sector.Items
                                --v.Main.Visible = true
                                local isdropdown = false
                                local isnotbutton = false
                                if v.Main and v.Main.Parent and v.Main.Parent.Name == 'backlabel'  then 
                                    isnotbutton = true;
                                    v.Main.Parent.Visible = true
                                    -- for j,x in next, v.Main.Parent:GetChildren() do -- v.MainGetChildren()
                                    --     if x:IsA('TextLabel') then 
                                    --         x.Visible = false;
                                    --     end
                                    --     x.Visible = false;
                                    --     --sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset - (v.Main.Parent.Size.Y.Offset*2))
                                    --     isdropdown = true;
                                    --     -- return
                                    -- end
                                elseif v.Main and v.Main.Parent and v.Main.Parent.Name ==  'holder'  then  
                                    isnotbutton = true;
                                    --print(v.Main.Name)
                                    v.Main.Parent.Visible = true;
                                    local foundObj = false;
                                    local ourobjindex = 0;
                                    for u,parentobj in next, v.Main.Parent.Parent:GetChildren() do 
                                        for y,obj in next, v.Main.Parent.Parent:GetChildren() do   
                                            if obj == v.Main.Parent then foundObj = true; ourobjindex = y; end
                                        end
                                        
                                        if parentobj:IsA('TextButton') then 
                                            if v.Main.Parent:FindFirstChild('textbox').PlaceholderText == parentobj.Text and u==ourobjindex-1 then 
                                                parentobj.Visible = true
                                                break
                                            end
                                        end
                                    end
                                elseif v.Main and v.Main.Parent and v.Main.Parent.Name == 'MainBack' then 
                                    isnotbutton = true;
                                    v.Main.Parent.Visible = true;
                                else
                                    v.Main.Visible = true
                                end
                                if isnotbutton == false then 
                                    sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset + (v.Main.Size.Y.Offset*2))
                                elseif isnotbutton == true then 
                                    sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset + (v.Main.Parent.Size.Y.Offset*2))
                                end
                                --sector.Items.Size = UDim2.fromOffset(sector.Items.Size.X.Offset,sector.Items.Size.Y.Offset + (v.Main.Size.Y.Offset*3))
                            end
                            toggle.Label.TextColor3 = window.theme.itemscolor2
                        else
                            for _,v in next, visiblestuff do 
                                --v.Main.Parent = window.storeobjects
                                --v.Main.Visible = false
                                --local isdropdown = false
                                local isnotbutton = false
                                if v.Main and v.Main.Parent and v.Main.Parent.Name == 'backlabel'  then 
                                    isnotbutton = true;
                                    v.Main.Parent.Visible = false
                                    -- for j,x in next, v.Main.Parent:GetChildren() do -- v.MainGetChildren()
                                    --     if x:IsA('TextLabel') then 
                                    --         x.Visible = false;
                                    --     end
                                    --     x.Visible = false;
                                    --     --sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset - (v.Main.Parent.Size.Y.Offset*2))
                                    --     isdropdown = true;
                                    --     -- return
                                    -- end
                                elseif v.Main and v.Main.Parent and v.Main.Parent.Name ==  'holder'  then  
                                    isnotbutton = true;
                                    --print(v.Main.Name)
                                    v.Main.Parent.Visible = false;
                                    local foundObj = false;
                                    local ourobjindex = 0;
                                    for u,parentobj in next, v.Main.Parent.Parent:GetChildren() do 
                                        for y,obj in next, v.Main.Parent.Parent:GetChildren() do   
                                            if obj == v.Main.Parent then foundObj = true; ourobjindex = y;  end -- print('Obj found. Index: '..ourobjindex)
                                        end
                                        
                                        if parentobj:IsA('TextButton') then 
                                            --print('is label: '..parentobj.Name)
                                            if v.Main.Parent:FindFirstChild('textbox').PlaceholderText == parentobj.Text and u==ourobjindex-1 then 
                                                parentobj.Visible = false
                                                break
                                            end
                                        end
                                    end
                                elseif v.Main and v.Main.Parent and v.Main.Parent.Name == 'MainBack' then 
                                    isnotbutton = true;
                                    v.Main.Parent.Visible = false;
                                else
                                    v.Main.Visible = false
                                end
                                print(v.Main.Size)
                                print('prev size '..tostring(sector.Main.Size))
                                -- 
                                if isnotbutton == false then 
                                    sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset - (v.Main.Size.Y.Offset*2))
                                elseif isnotbutton == true then 
                                    sector.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset,sector.Main.Size.Y.Offset - (v.Main.Parent.Size.Y.Offset*2))
                                end
                                
                                --sector.Items.Size = UDim2.fromOffset(sector.Items.Size.X.Offset,sector.Items.Size.Y.Offset - (v.Main.Size.Y.Offset*3))
                                print('new size '..tostring(sector.Main.Size))
                                print(v.Main.Size.Y.Offset)
                            end
                            toggle.Label.TextColor3 = window.theme.itemscolor
                        end
                    end
                    function toggle:MakeVisibleIfActive(makevisible)
                        table.insert(visiblestuff,makevisible)
                        toggle:MakeActiveToValue() 
                        -- task.spawn(function()
                        --     task.wait(1)
                        --     if toggle.value == true then 
                        --         for _,v in next, visiblestuff do 
                        --             v.Main.Visible = true
                        --         end
                        --     elseif toggle.value == false then
                        --         for _,v in next, visiblestuff do 
                        --             v.Main.Visible = false
                        --         end
                        --     end
                        -- end)

                    end
                    function toggle:RemoveVisibleWhenActive(makevisible)
                        for _,v in next, visiblestuff do 
                            if v == makevisible then 
                                table.remove(visiblestuff,_)
                            end
                        end
                        makevisible.Main.Visible = true;
                        -- table.insert(visiblestuff,makevisible)
                    end
                    function toggle:Set(value) 
                        local prevValue  = toggle.value -- valye 
                        toggle.value = value
                        toggle.CheckedFrame.Visible = value
                        if toggle.flag and toggle.flag ~= "" then
                            library.flags[toggle.flag] = toggle.value
                        end
                        if prevValue ~= value then 
                            toggle:MakeActiveToValue() 
                        end
                        pcall(toggle.callback, value)
                    end
                    function toggle:Get() 
                        return toggle.value
                    end
                    toggle:Set(toggle.default)


                    function toggle:AddKeybind(default, flag)
                        local keybind = { }

                        keybind.default = default or "None"
                        keybind.value = keybind.default
                        keybind.flag = flag or ( (toggle.text or "") .. tostring(#toggle.Items:GetChildren()))

                        local shorter_keycodes = {
                            ["LeftShift"] = "LSHIFT",
                            ["RightShift"] = "RSHIFT",
                            ["LeftControl"] = "LCTRL",
                            ["RightControl"] = "RCTRL",
                            ["LeftAlt"] = "LALT",
                            ["RightAlt"] = "RALT"
                        }

                        local text = keybind.default == "None" and "[None]" or "[" .. (shorter_keycodes[keybind.default.Name] or keybind.default.Name) .. "]"
                        local size = textservice:GetTextSize(text, 15, window.theme.font, Vector2.new(2000, 2000))

                        keybind.Main = Instance.new("TextButton", toggle.Items)
                        keybind.Main.Name = "keybind"
                        keybind.Main.BackgroundTransparency = 1
                        keybind.Main.BorderSizePixel = 0
                        keybind.Main.ZIndex = 5
                        keybind.Main.Size = UDim2.fromOffset(size.X + 2, size.Y - 7)
                        keybind.Main.Text = text
                        keybind.Main.Font = window.theme.font
                        keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                        keybind.Main.TextSize = 15
                        keybind.Main.TextXAlignment = Enum.TextXAlignment.Right
                        keybind.Main.MouseButton1Down:Connect(function()
                            keybind.Main.Text = "[...]"
                            keybind.Main.TextColor3 = window.theme.accentcolor
                        end)
                        updateevent.Event:Connect(function(theme)
                            keybind.Main.Font = theme.font
                            if keybind.Main.Text == "[...]" then
                                keybind.Main.TextColor3 = theme.accentcolor
                            else
                                keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                            end
                        end)

                        if keybind.flag and keybind.flag ~= "" then
                            library.flags[keybind.flag] = keybind.default
                        end
                        function keybind:Set(key)
                            if key == "None" then
                                keybind.Main.Text = "[" .. key .. "]"
                                keybind.value = key
                                if keybind.flag and keybind.flag ~= "" then
                                    library.flags[keybind.flag] = key
                                end
                            end
                            keybind.Main.Text = "[" .. (shorter_keycodes[key.Name] or key.Name) .. "]"
                            keybind.value = key
                            if keybind.flag and keybind.flag ~= "" then
                                library.flags[keybind.flag] = keybind.value
                            end
                        end

                        function keybind:Get()
                            return keybind.value
                        end
                        function keybind:Unbind()
                            keybind.Main.Text = "[" .. 'None' .. "]"
                            keybind.value = 'None'
                            if keybind.flag and keybind.flag ~= "" then
                                library.flags[keybind.flag] = key
                            end
                            keybind:Set("None")
                        end
                        uis.InputBegan:Connect(function(input, gameProcessed)
                            if not gameProcessed then
                                if keybind.Main.Text == "[...]" then
                                    keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                                    if input.UserInputType == Enum.UserInputType.Keyboard then
                                        keybind:Set(input.KeyCode)
                                    else
                                        keybind:Set("None")
                                    end
                                else
                                    if keybind.value ~= "None" and input.KeyCode == keybind.value then
                                        toggle:Set(not toggle.CheckedFrame.Visible)
                                    end
                                end
                            end
                        end)

                        table.insert(library.items, keybind)
                        return keybind
                    end

                    function toggle:AddDropdown(items, default, multichoice, callback, flag)
                        local dropdown = { }

                        dropdown.defaultitems = items or { }
                        dropdown.default = default
                        dropdown.callback = callback or function() end
                        dropdown.multichoice = multichoice or false
                        dropdown.values = { }
                        dropdown.flag = flag or ( (toggle.text or "") .. tostring(#(sector.Items:GetChildren())) .. "a")
        
                        dropdown.Main = Instance.new("TextButton", sector.Items)
                        dropdown.Main.Name = "dropdown"
                        dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.Main.BorderSizePixel = 0
                        dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
                        dropdown.Main.Position = UDim2.fromOffset(0, 0)
                        dropdown.Main.ZIndex = 5
                        dropdown.Main.AutoButtonColor = false
                        dropdown.Main.Font = window.theme.font
                        dropdown.Main.Text = ""
                        dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.Main.TextSize = 15
                        dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
                        updateevent.Event:Connect(function(theme)
                            dropdown.Main.Font = theme.font
                        end)
        
                        dropdown.Gradient = Instance.new("UIGradient", dropdown.Main)
                        dropdown.Gradient.Rotation = 90
                        dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(39, 39, 39))}
        
                        dropdown.SelectedLabel = Instance.new("TextLabel", dropdown.Main)
                        dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.SelectedLabel.BackgroundTransparency = 1
                        dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
                        dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
                        dropdown.SelectedLabel.Font = window.theme.font
                        dropdown.SelectedLabel.Text = toggle.text
                        dropdown.SelectedLabel.ZIndex = 5
                        dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.SelectedLabel.TextSize = 15
                        dropdown.SelectedLabel.TextStrokeTransparency = 1
                        dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
                        updateevent.Event:Connect(function(theme)
                            dropdown.SelectedLabel.Font = theme.font
                        end)  

                        dropdown.Nav = Instance.new("ImageButton", dropdown.Main)
                        dropdown.Nav.Name = "navigation"
                        dropdown.Nav.BackgroundTransparency = 1
                        dropdown.Nav.LayoutOrder = 10
                        dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
                        dropdown.Nav.Rotation = 90
                        dropdown.Nav.ZIndex = 5
                        dropdown.Nav.Size = UDim2.fromOffset(8, 8)
                        dropdown.Nav.Image = "rbxassetid://4918373417"
                        dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)
        
                        dropdown.BlackOutline2 = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline2.Name = "blackline"
                        dropdown.BlackOutline2.ZIndex = 4
                        dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
                        dropdown.BlackOutline2.BorderSizePixel = 0
                        dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.Outline = Instance.new("Frame", dropdown.Main)
                        dropdown.Outline.Name = "blackline"
                        dropdown.Outline.ZIndex = 4
                        dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
                        dropdown.Outline.BorderSizePixel = 0
                        dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
                        dropdown.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            dropdown.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        dropdown.BlackOutline = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline.Name = "blackline444"
                        dropdown.BlackOutline.ZIndex = 4
                        dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
                        dropdown.BlackOutline.BorderSizePixel = 0
                        dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.ItemsFrame = Instance.new("ScrollingFrame", dropdown.Main)
                        dropdown.ItemsFrame.Name = "itemsframe"
                        dropdown.ItemsFrame.BorderSizePixel = 0
                        dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                        dropdown.ItemsFrame.ScrollBarThickness = 2
                        dropdown.ItemsFrame.ZIndex = 8
                        dropdown.ItemsFrame.ScrollingDirection = "Y"
                        dropdown.ItemsFrame.Visible = false
                        dropdown.ItemsFrame.Size = UDim2.new(0, 0, 0, 0)
                        dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)
        
                        dropdown.ListLayout = Instance.new("UIListLayout", dropdown.ItemsFrame)
                        dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
                        dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
                        dropdown.ListPadding = Instance.new("UIPadding", dropdown.ItemsFrame)
                        dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingRight = UDim.new(0, 2)
        
                        dropdown.BlackOutline2Items = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline2Items.Name = "blackline3"
                        dropdown.BlackOutline2Items.ZIndex = 7
                        dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                        dropdown.BlackOutline2Items.BorderSizePixel = 0
                        dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-3, -3)
                        dropdown.BlackOutline2Items.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
                        end)
                        
                        dropdown.OutlineItems = Instance.new("Frame", dropdown.Main)
                        dropdown.OutlineItems.Name = "blackline8"
                        dropdown.OutlineItems.ZIndex = 7
                        dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                        dropdown.OutlineItems.BorderSizePixel = 0
                        dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
                        dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-2, -2)
                        dropdown.OutlineItems.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        dropdown.BlackOutlineItems = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutlineItems.Name = "blackline3"
                        dropdown.BlackOutlineItems.ZIndex = 7
                        dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(-2, -2)
                        dropdown.BlackOutlineItems.BorderSizePixel = 0
                        dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-1, -1)
                        dropdown.BlackOutlineItems.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.IgnoreBackButtons = Instance.new("TextButton", dropdown.Main)
                        dropdown.IgnoreBackButtons.BackgroundTransparency = 1
                        dropdown.IgnoreBackButtons.BorderSizePixel = 0
                        dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                        dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
                        dropdown.IgnoreBackButtons.ZIndex = 7
                        dropdown.IgnoreBackButtons.Text = ""
                        dropdown.IgnoreBackButtons.Visible = false
                        dropdown.IgnoreBackButtons.AutoButtonColor = false

                        if dropdown.flag and dropdown.flag ~= "" then
                            library.flags[dropdown.flag] = dropdown.multichoice and { dropdown.default or dropdown.defaultitems[1] or "" } or (dropdown.default or dropdown.defaultitems[1] or "")
                        end

                        function dropdown:isSelected(item)
                            for i, v in pairs(dropdown.values) do
                                if v == item then
                                    return true
                                end
                            end
                            return false
                        end
        
                        function dropdown:updateText(text)
                            if #text >= 27 then
                                text = text:sub(1, 25) .. ".."
                            end
                            dropdown.SelectedLabel.Text = text
                        end
        
                        dropdown.Changed = Instance.new("BindableEvent")
                        function dropdown:Set(value)
                            if type(value) == "table" then
                                dropdown.values = value
                                dropdown:updateText(table.concat(value, ", "))
                                pcall(dropdown.callback, value)
                            else
                                dropdown:updateText(value)
                                dropdown.values = { value }
                                pcall(dropdown.callback, value)
                            end
                            
                            dropdown.Changed:Fire(value)
                            if dropdown.flag and dropdown.flag ~= "" then
                                library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
                            end
                        end
        
                        function dropdown:Get()
                            return dropdown.multichoice and dropdown.values or dropdown.values[1]
                        end
        
                        dropdown.items = { }
                        function dropdown:Add(v)
                            local Item = Instance.new("TextButton", dropdown.ItemsFrame)
                            Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                            Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                            Item.BorderSizePixel = 0
                            Item.Position = UDim2.fromOffset(0, 0)
                            Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
                            Item.ZIndex = 9
                            Item.Text = v
                            Item.Name = v
                            Item.AutoButtonColor = false
                            Item.Font = window.theme.font
                            Item.TextSize = 15
                            Item.TextXAlignment = Enum.TextXAlignment.Left
                            Item.TextStrokeTransparency = 1
                            dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)
        
                            Item.MouseButton1Down:Connect(function()
                                if dropdown.multichoice then
                                    if dropdown:isSelected(v) then
                                        for i2, v2 in pairs(dropdown.values) do
                                            if v2 == v then
                                                table.remove(dropdown.values, i2)
                                            end
                                        end
                                        dropdown:Set(dropdown.values)
                                    else
                                        table.insert(dropdown.values, v)
                                        dropdown:Set(dropdown.values)
                                    end
        
                                    return
                                else
                                    dropdown.Nav.Rotation = 90
                                    dropdown.ItemsFrame.Visible = false
                                    dropdown.ItemsFrame.Active = false
                                    dropdown.OutlineItems.Visible = false
                                    dropdown.BlackOutlineItems.Visible = false
                                    dropdown.BlackOutline2Items.Visible = false
                                    dropdown.IgnoreBackButtons.Visible = false
                                    dropdown.IgnoreBackButtons.Active = false
                                end
        
                                dropdown:Set(v)
                                return
                            end)
        
                            runservice.RenderStepped:Connect(function()
                                if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
                                    Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
                                    Item.TextColor3 = window.theme.accentcolor
                                    Item.Text = " " .. v
                                else
                                    Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                                    Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    Item.Text = v
                                end
                            end)
        
                            table.insert(dropdown.items, v)
                            dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
                            dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)
        
                            dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                            dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                            dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                            dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
                        end
        
                        function dropdown:Remove(value)
                            local item = dropdown.ItemsFrame:FindFirstChild(value)
                            if item then
                                for i,v in pairs(dropdown.items) do
                                    if v == value then
                                        table.remove(dropdown.items, i)
                                    end
                                end
        
                                dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
                                dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)
            
                                dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                                dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                                dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                                dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
        
                                item:Remove()
                            end
                        end 
        
                        for i,v in pairs(dropdown.defaultitems) do
                            dropdown:Add(v)
                        end
        
                        if dropdown.default then
                            dropdown:Set(dropdown.default)
                        end
        
                        local MouseButton1Down = function()
                            if dropdown.Nav.Rotation == 90 then
                                tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = -90 }):Play()
                                if dropdown.items and #dropdown.items ~= 0 then
                                    dropdown.ItemsFrame.ScrollingEnabled = true
                                    sector.Main.Parent.ScrollingEnabled = false
                                    dropdown.ItemsFrame.Visible = true
                                    dropdown.ItemsFrame.Active = true
                                    dropdown.IgnoreBackButtons.Visible = true
                                    dropdown.IgnoreBackButtons.Active = true
                                    dropdown.OutlineItems.Visible = true
                                    dropdown.BlackOutlineItems.Visible = true
                                    dropdown.BlackOutline2Items.Visible = true
                                end
                            else
                                tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = 90 }):Play()
                                dropdown.ItemsFrame.ScrollingEnabled = false
                                sector.Main.Parent.ScrollingEnabled = true
                                dropdown.ItemsFrame.Visible = false
                                dropdown.ItemsFrame.Active = false
                                dropdown.IgnoreBackButtons.Visible = false
                                dropdown.IgnoreBackButtons.Active = false
                                dropdown.OutlineItems.Visible = false
                                dropdown.BlackOutlineItems.Visible = false
                                dropdown.BlackOutline2Items.Visible = false
                            end
                        end
        
                        dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
                        dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)
        
                        dropdown.BlackOutline2.MouseEnter:Connect(function()
                            dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end)
                        dropdown.BlackOutline2.MouseLeave:Connect(function()
                            dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end)
        
                        sector:FixSize()
                        table.insert(library.items, dropdown)
                        return dropdown
                    end

                    function toggle:AddTextbox(default, callback, flag)
                        local textbox = { }
                        textbox.callback = callback or function() end
                        textbox.default = default
                        textbox.value = ""
                        textbox.flag = flag or ( (toggle.text or "") .. tostring(#(sector.Items:GetChildren())) .. "a")
        
                        textbox.Holder = Instance.new("Frame", sector.Items)
                        textbox.Holder.Name = "holder"
                        textbox.Holder.ZIndex = 5
                        textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
                        textbox.Holder.BorderSizePixel = 0
                        textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        
                        textbox.Gradient = Instance.new("UIGradient", textbox.Holder)
                        textbox.Gradient.Rotation = 90
                        textbox.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(39, 39, 39)) })
        
                        textbox.Main = Instance.new("TextBox", textbox.Holder)
                        textbox.Main.PlaceholderText = ""
                        textbox.Main.Text = ""
                        textbox.Main.BackgroundTransparency = 1
                        textbox.Main.Font = window.theme.font
                        textbox.Main.Name = "textbox"
                        textbox.Main.MultiLine = false
                        textbox.Main.ClearTextOnFocus = false
                        textbox.Main.ZIndex = 5
                        textbox.Main.TextScaled = true
                        textbox.Main.Size = textbox.Holder.Size
                        textbox.Main.TextSize = 15
                        textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
                        textbox.Main.BorderSizePixel = 0
                        textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                        textbox.Main.TextXAlignment = Enum.TextXAlignment.Left
        
                        if textbox.flag and textbox.flag ~= "" then
                            library.flags[textbox.flag] = textbox.default or ""
                        end

                        function textbox:Set(text)
                            textbox.value = text
                            textbox.Main.Text = text
                            if textbox.flag and textbox.flag ~= "" then
                                library.flags[textbox.flag] = text
                            end
                            pcall(textbox.callback, text)
                        end
                        updateevent.Event:Connect(function(theme)
                            textbox.Main.Font = theme.font
                        end)
        
                        function textbox:Get()
                            return textbox.value
                        end
        
                        if textbox.default then 
                            textbox:Set(textbox.default)
                        end
        
                        textbox.Main.FocusLost:Connect(function()
                            textbox:Set(textbox.Main.Text)
                        end)
        
                        textbox.BlackOutline2 = Instance.new("Frame", textbox.Main)
                        textbox.BlackOutline2.Name = "blackline"
                        textbox.BlackOutline2.ZIndex = 4
                        textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
                        textbox.BlackOutline2.BorderSizePixel = 0
                        textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        textbox.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                        end)
                        
                        textbox.Outline = Instance.new("Frame", textbox.Main)
                        textbox.Outline.Name = "blackline"
                        textbox.Outline.ZIndex = 4
                        textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
                        textbox.Outline.BorderSizePixel = 0
                        textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
                        textbox.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            textbox.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        textbox.BlackOutline = Instance.new("Frame", textbox.Main)
                        textbox.BlackOutline.Name = "blackline"
                        textbox.BlackOutline.ZIndex = 4
                        textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
                        textbox.BlackOutline.BorderSizePixel = 0
                        textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        textbox.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        textbox.BlackOutline2.MouseEnter:Connect(function()
                            textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end)
                        textbox.BlackOutline2.MouseLeave:Connect(function()
                            textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end)
        
                        sector:FixSize()
                        table.insert(library.items, textbox)
                        return textbox
                    end

                    function toggle:AddColorpicker(default, callback, flag)
                        local colorpicker = { }

                        colorpicker.callback = callback or function() end
                        colorpicker.default = default or Color3.fromRGB(255, 255, 255)
                        colorpicker.value = colorpicker.default
                        colorpicker.flag = flag or ( (toggle.text or "") .. tostring(#toggle.Items:GetChildren()))

                        colorpicker.Main = Instance.new("Frame", toggle.Items)
                        colorpicker.Main.ZIndex = 6
                        colorpicker.Main.BorderSizePixel = 0
                        colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        colorpicker.Main.Size = UDim2.fromOffset(16, 10)

                        colorpicker.Gradient = Instance.new("UIGradient", colorpicker.Main)
                        colorpicker.Gradient.Rotation = 90

                        local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
                        colorpicker.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, colorpicker.value), ColorSequenceKeypoint.new(1.00, clr) })

                        colorpicker.BlackOutline2 = Instance.new("Frame", colorpicker.Main)
                        colorpicker.BlackOutline2.Name = "blackline"
                        colorpicker.BlackOutline2.ZIndex = 4
                        colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
                        colorpicker.BlackOutline2.BorderSizePixel = 0
                        colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        colorpicker.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            if window.OpenedColorPickers[colorpicker.MainPicker] then
                                colorpicker.BlackOutline2.BackgroundColor3 = theme.accentcolor
                            else
                                colorpicker.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                            end
                        end)
                        
                        colorpicker.Outline = Instance.new("Frame", colorpicker.Main)
                        colorpicker.Outline.Name = "blackline"
                        colorpicker.Outline.ZIndex = 4
                        colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
                        colorpicker.Outline.BorderSizePixel = 0
                        colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
                        colorpicker.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        colorpicker.BlackOutline = Instance.new("Frame", colorpicker.Main)
                        colorpicker.BlackOutline.Name = "blackline"
                        colorpicker.BlackOutline.ZIndex = 4
                        colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
                        colorpicker.BlackOutline.BorderSizePixel = 0
                        colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        colorpicker.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)

                        colorpicker.BlackOutline2.MouseEnter:Connect(function()
                            colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end)

                        colorpicker.BlackOutline2.MouseLeave:Connect(function()
                            if not window.OpenedColorPickers[colorpicker.MainPicker] then
                                colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                            end
                        end)

                        colorpicker.MainPicker = Instance.new("TextButton", colorpicker.Main)
                        colorpicker.MainPicker.Name = "picker"
                        colorpicker.MainPicker.ZIndex = 100
                        colorpicker.MainPicker.Visible = false
                        colorpicker.MainPicker.AutoButtonColor = false
                        colorpicker.MainPicker.Text = ""
                        window.OpenedColorPickers[colorpicker.MainPicker] = false
                        colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
                        colorpicker.MainPicker.BorderSizePixel = 0
                        colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        colorpicker.MainPicker.Rotation = 0.000000000000001
                        colorpicker.MainPicker.Position = UDim2.fromOffset(-colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 17)

                        colorpicker.BlackOutline3 = Instance.new("Frame", colorpicker.MainPicker)
                        colorpicker.BlackOutline3.Name = "blackline"
                        colorpicker.BlackOutline3.ZIndex = 98
                        colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
                        colorpicker.BlackOutline3.BorderSizePixel = 0
                        colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
                        colorpicker.BlackOutline3.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
                        end)
                        
                        colorpicker.Outline2 = Instance.new("Frame", colorpicker.MainPicker)
                        colorpicker.Outline2.Name = "blackline"
                        colorpicker.Outline2.ZIndex = 98
                        colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
                        colorpicker.Outline2.BorderSizePixel = 0
                        colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
                        colorpicker.Outline2.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        colorpicker.BlackOutline3 = Instance.new("Frame", colorpicker.MainPicker)
                        colorpicker.BlackOutline3.Name = "blackline"
                        colorpicker.BlackOutline3.ZIndex = 98
                        colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
                        colorpicker.BlackOutline3.BorderSizePixel = 0
                        colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
                        colorpicker.BlackOutline3.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
                        end)

                        colorpicker.hue = Instance.new("ImageLabel", colorpicker.MainPicker)
                        colorpicker.hue.ZIndex = 101
                        colorpicker.hue.Position = UDim2.new(0,3,0,3)
                        colorpicker.hue.Size = UDim2.new(0,172,0,172)
                        colorpicker.hue.Image = "rbxassetid://4155801252"
                        colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
                        colorpicker.hue.BackgroundColor3 = Color3.new(1,0,0)
                        colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
                        updateevent.Event:Connect(function(theme)
                            colorpicker.hue.BorderColor3 = theme.outlinecolor2
                        end)

                        colorpicker.hueselectorpointer = Instance.new("ImageLabel", colorpicker.MainPicker)
                        colorpicker.hueselectorpointer.ZIndex = 101
                        colorpicker.hueselectorpointer.BackgroundTransparency = 1
                        colorpicker.hueselectorpointer.BorderSizePixel = 0
                        colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
                        colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
                        colorpicker.hueselectorpointer.Image = "rbxassetid://6885856475"

                        colorpicker.selector = Instance.new("TextLabel", colorpicker.MainPicker)
                        colorpicker.selector.ZIndex = 100
                        colorpicker.selector.Position = UDim2.new(0,3,0,181)
                        colorpicker.selector.Size = UDim2.new(0,173,0,10)
                        colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255,255,255)
                        colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
                        colorpicker.selector.Text = ""
                        updateevent.Event:Connect(function(theme)
                            colorpicker.selector.BorderColor3 = theme.outlinecolor2
                        end)
            
                        colorpicker.gradient = Instance.new("UIGradient", colorpicker.selector)
                        colorpicker.gradient.Color = ColorSequence.new({ 
                            ColorSequenceKeypoint.new(0, Color3.new(1,0,0)), 
                            ColorSequenceKeypoint.new(0.17, Color3.new(1,0,1)), 
                            ColorSequenceKeypoint.new(0.33,Color3.new(0,0,1)), 
                            ColorSequenceKeypoint.new(0.5,Color3.new(0,1,1)), 
                            ColorSequenceKeypoint.new(0.67, Color3.new(0,1,0)), 
                            ColorSequenceKeypoint.new(0.83, Color3.new(1,1,0)), 
                            ColorSequenceKeypoint.new(1, Color3.new(1,0,0))
                        })

                        colorpicker.pointer = Instance.new("Frame", colorpicker.selector)
                        colorpicker.pointer.ZIndex = 101
                        colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        colorpicker.pointer.Position = UDim2.new(0,0,0,0)
                        colorpicker.pointer.Size = UDim2.new(0,2,0,10)
                        colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

                        if colorpicker.flag and colorpicker.flag ~= "" then
                            library.flags[colorpicker.flag] = colorpicker.default
                        end

                        function colorpicker:RefreshHue()
                            local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
                            local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
                            colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                            colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
                        end

                        function colorpicker:RefreshSelector()
                            local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
                            colorpicker.color = 1 - pos
                            colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                            colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)

                            local x = (colorpicker.hueselectorpointer.AbsolutePosition.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
                            local y = (colorpicker.hueselectorpointer.AbsolutePosition.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
                            colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
                        end

                        function colorpicker:Set(value)
                            local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
                            colorpicker.value = color
                            if colorpicker.flag and colorpicker.flag ~= "" then
                                library.flags[colorpicker.flag] = color
                            end
                            local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
                            colorpicker.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, color), ColorSequenceKeypoint.new(1.00, clr) })
                            pcall(colorpicker.callback, color)
                        end

                        function colorpicker:Get(value)
                            return colorpicker.value
                        end
                        colorpicker:Set(colorpicker.default)

                        local dragging_selector = false
                        local dragging_hue = false

                        colorpicker.selector.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging_selector = true
                                colorpicker:RefreshSelector()
                            end
                        end)
        
                        colorpicker.selector.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging_selector = false
                                colorpicker:RefreshSelector()
                            end
                        end)

                        colorpicker.hue.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging_hue = true
                                colorpicker:RefreshHue()
                            end
                        end)
        
                        colorpicker.hue.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging_hue = false
                                colorpicker:RefreshHue()
                            end
                        end)
        
                        uis.InputChanged:Connect(function(input)
                            if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
                                colorpicker:RefreshSelector()
                            end
                            if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
                                colorpicker:RefreshHue()
                            end
                        end)

                        local inputBegan = function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                for i,v in pairs(window.OpenedColorPickers) do
                                    if v and i ~= colorpicker.MainPicker then
                                        i.Visible = false
                                        window.OpenedColorPickers[i] = false
                                    end
                                end

                                colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
                                window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
                                if window.OpenedColorPickers[colorpicker.MainPicker] then
                                    colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                                else
                                    colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                                end
                            end
                        end

                        colorpicker.Main.InputBegan:Connect(inputBegan)
                        colorpicker.Outline.InputBegan:Connect(inputBegan)
                        colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)
                        table.insert(library.items, colorpicker)
                        return colorpicker
                    end

                    function toggle:AddSlider(min, default, max, decimals, callback, flag)
                        local slider = { }
                        slider.text = text or ""
                        slider.callback = callback or function(value) end
                        slider.min = min or 0
                        slider.max = max or 100
                        slider.decimals = decimals or 1
                        slider.default = default or slider.min
                        slider.flag = flag or ( (toggle.text or "") .. tostring(#toggle.Items:GetChildren()))
        
                        slider.value = slider.default
                        local dragging = false
        
                        slider.Main = Instance.new("TextButton", sector.Items)
                        slider.Main.Name = "slider"
                        slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        slider.Main.Position = UDim2.fromOffset(0, 0)
                        slider.Main.BorderSizePixel = 0
                        slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
                        slider.Main.AutoButtonColor = false
                        slider.Main.Text = ""
                        slider.Main.ZIndex = 7

                        slider.InputLabel = Instance.new("TextLabel", slider.Main)
                        slider.InputLabel.BackgroundTransparency = 1
                        slider.InputLabel.Size = slider.Main.Size
                        slider.InputLabel.Font = window.theme.font
                        slider.InputLabel.Text = "0"
                        slider.InputLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
                        slider.InputLabel.Position = slider.Main.Position
                        slider.InputLabel.Selectable = false
                        slider.InputLabel.TextSize = 15
                        slider.InputLabel.ZIndex = 9
                        slider.InputLabel.TextStrokeTransparency = 1
                        slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Center
                        updateevent.Event:Connect(function(theme)
                            slider.InputLabel.Font = theme.font
                            slider.InputLabel.TextColor3 = theme.itemscolor
                        end)
        
                        slider.BlackOutline2 = Instance.new("Frame", slider.Main)
                        slider.BlackOutline2.Name = "blackline"
                        slider.BlackOutline2.ZIndex = 4
                        slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
                        slider.BlackOutline2.BorderSizePixel = 0
                        slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        slider.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                        end)
                        
                        slider.Outline = Instance.new("Frame", slider.Main)
                        slider.Outline.Name = "blackline"
                        slider.Outline.ZIndex = 4
                        slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
                        slider.Outline.BorderSizePixel = 0
                        slider.Outline.BackgroundColor3 = window.theme.outlinecolor
                        slider.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            slider.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        slider.BlackOutline = Instance.new("Frame", slider.Main)
                        slider.BlackOutline.Name = "blackline"
                        slider.BlackOutline.ZIndex = 4
                        slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
                        slider.BlackOutline.BorderSizePixel = 0
                        slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        slider.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        slider.Gradient = Instance.new("UIGradient", slider.Main)
                        slider.Gradient.Rotation = 90
                        slider.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(41, 41, 41)) })
        
                        slider.SlideBar = Instance.new("Frame", slider.Main)
                        slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255) --Color3.fromRGB(204, 0, 102)
                        slider.SlideBar.ZIndex = 8
                        slider.SlideBar.BorderSizePixel = 0
                        slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)
        
                        slider.Gradient2 = Instance.new("UIGradient", slider.SlideBar)
                        slider.Gradient2.Rotation = 90
                        slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor2) })
                        updateevent.Event:Connect(function(theme)
                            slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor), ColorSequenceKeypoint.new(1.00, theme.accentcolor2) })
                        end)
        
                        slider.BlackOutline2.MouseEnter:Connect(function()
                            slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end)
                        slider.BlackOutline2.MouseLeave:Connect(function()
                            slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end)
        
                        if slider.flag and slider.flag ~= "" then
                            library.flags[slider.flag] = slider.default or slider.min or 0
                        end

                        function slider:Get()
                            return slider.value
                        end
        
                        function slider:Set(value)
                            slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
                            local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
                            if slider.flag and slider.flag ~= "" then
                                library.flags[slider.flag] = slider.value
                            end
                            -- print(slider.value)
                            -- print('setting')
                            -- if slider.value < 0 then 
                            --     slider.SlideBar:TweenSize(UDim2.fromOffset(-(percent * slider.Main.AbsoluteSize.X), slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                            -- else
                            --     slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                            -- end
                            
                            slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                            slider.InputLabel.Text = slider.value
                            pcall(slider.callback, slider.value)
                        end
                        slider:Set(slider.default)
        
                        function slider:Refresh()
                            local mousePos = camera:WorldToViewportPoint(mouse.Hit.p)
                            local percent = math.clamp(mousePos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
                            local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                            value = math.clamp(value, slider.min, slider.max)
                            slider:Set(value)
                        end
        
                        slider.SlideBar.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging = true
                                slider:Refresh()
                            end
                        end)
        
                        slider.SlideBar.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging = false
                            end
                        end)
        
                        slider.Main.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging = true
                                slider:Refresh()
                            end
                        end)
        
                        slider.Main.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                dragging = false
                            end
                        end)
        
                        uis.InputChanged:Connect(function(input)
                            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                                slider:Refresh()
                            end
                        end)
        
                        sector:FixSize()
                        table.insert(library.items, slider)
                        return slider
                    end



                    toggle.Main.MouseButton1Down:Connect(function()
                        toggle:Set(not toggle.CheckedFrame.Visible)
                    end)
                    toggle.Label.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            toggle:Set(not toggle.CheckedFrame.Visible)
                        end
                    end)

                    local MouseEnter = function()
                        toggle.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                    end
                    local MouseLeave = function()
                        toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    end

                    toggle.Label.MouseEnter:Connect(MouseEnter)
                    toggle.Label.MouseLeave:Connect(MouseLeave)
                    toggle.BlackOutline2.MouseEnter:Connect(MouseEnter)
                    toggle.BlackOutline2.MouseLeave:Connect(MouseLeave)

                    sector:FixSize()
                    table.insert(library.items, toggle)
                    return toggle
                end
                function sector:AddKeybindAttachment(text)
                    local keybindattachment = { }
                    -- 
                        keybindattachment.text = text or ""
                        keybindattachment.default = default or false
                        keybindattachment.callback = callback or function(value) end
                        keybindattachment.flag = flag or text or ""
                        
                        keybindattachment.value = keybindattachment.default

                        keybindattachment.Main = Instance.new("TextButton", sector.Items)
                        keybindattachment.Main.Name = "keybindattachment"
                        keybindattachment.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        keybindattachment.Main.BorderColor3 = window.theme.outlinecolor
                        keybindattachment.Main.BorderSizePixel = 0
                        keybindattachment.Main.Size = UDim2.fromOffset(8, 8)
                        keybindattachment.Main.AutoButtonColor = false
                        keybindattachment.Main.ZIndex = 5
                        keybindattachment.Main.Font = Enum.Font.SourceSans
                        keybindattachment.Main.Text = ""
                        keybindattachment.Main.TextColor3 = Color3.fromRGB(0, 0, 0)
                        keybindattachment.Main.TextSize = 15
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.Main.BorderColor3 = theme.outlinecolor
                        end)

                        keybindattachment.BlackOutline2 = Instance.new("Frame", keybindattachment.Main)
                        keybindattachment.BlackOutline2.Name = "blackline"
                        keybindattachment.BlackOutline2.ZIndex = 4
                        keybindattachment.BlackOutline2.Size = keybindattachment.Main.Size + UDim2.fromOffset(6, 6)
                        keybindattachment.BlackOutline2.BorderSizePixel = 0
                        keybindattachment.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        keybindattachment.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                        end)
                        keybindattachment.BlackOutline2.BackgroundTransparency = 1
                        
                        keybindattachment.Outline = Instance.new("Frame", keybindattachment.Main)
                        keybindattachment.Outline.Name = "blackline"
                        keybindattachment.Outline.ZIndex = 4
                        keybindattachment.Outline.Size = keybindattachment.Main.Size + UDim2.fromOffset(4, 4)
                        keybindattachment.Outline.BorderSizePixel = 0
                        keybindattachment.Outline.BackgroundColor3 = window.theme.outlinecolor
                        keybindattachment.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
                        keybindattachment.Outline.BackgroundTransparency = 1

                        keybindattachment.BlackOutline = Instance.new("Frame", keybindattachment.Main)
                        keybindattachment.BlackOutline.Name = "blackline"
                        keybindattachment.BlackOutline.ZIndex = 4
                        keybindattachment.BlackOutline.Size = keybindattachment.Main.Size + UDim2.fromOffset(2, 2)
                        keybindattachment.BlackOutline.BorderSizePixel = 0
                        keybindattachment.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        keybindattachment.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)
                        keybindattachment.BlackOutline.BackgroundTransparency = 1


                        keybindattachment.Gradient = Instance.new("UIGradient", keybindattachment.Main)
                        keybindattachment.Gradient.Rotation = (22.5 * 13)
                        keybindattachment.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255)) })

                        keybindattachment.Label = Instance.new("TextLabel", keybindattachment.Main)
                        keybindattachment.Label.Name = "Label"
                        -- keybindattachment.Label.AutoButtonColor = false
                        keybindattachment.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        keybindattachment.Label.BackgroundTransparency = 1
                        keybindattachment.Label.Position = UDim2.fromOffset(keybindattachment.Main.AbsoluteSize.X + 10, -2)
                        keybindattachment.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, keybindattachment.BlackOutline.Size.Y.Offset)
                        keybindattachment.Label.Font = window.theme.font
                        keybindattachment.Label.ZIndex = 5
                        keybindattachment.Label.Text = keybindattachment.text
                        keybindattachment.Label.TextColor3 = window.theme.itemscolor
                        keybindattachment.Label.TextSize = 15
                        keybindattachment.Label.TextStrokeTransparency = 1
                        keybindattachment.Label.TextXAlignment = Enum.TextXAlignment.Left
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.Label.Font = theme.font
                            keybindattachment.Label.TextColor3 = keybindattachment.value and window.theme.itemscolor2 or theme.itemscolor
                        end)

                        keybindattachment.CheckedFrame = Instance.new("Frame", keybindattachment.Main)
                        keybindattachment.CheckedFrame.ZIndex = 5
                        keybindattachment.CheckedFrame.BorderSizePixel = 0
                        keybindattachment.CheckedFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- Color3.fromRGB(204, 0, 102)
                        keybindattachment.CheckedFrame.Size = keybindattachment.Main.Size
                        keybindattachment.BackgroundTransparency = 1


                        keybindattachment.Gradient2 = Instance.new("UIGradient", keybindattachment.CheckedFrame)
                        keybindattachment.Gradient2.Rotation = (22.5 * 13)
                        keybindattachment.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor2), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor) })
                        updateevent.Event:Connect(function(theme)
                            keybindattachment.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor2), ColorSequenceKeypoint.new(1.00, theme.accentcolor) })
                        end)

                        keybindattachment.Items = Instance.new("Frame", keybindattachment.Main)
                        keybindattachment.Items.Name = "\n"
                        keybindattachment.Items.ZIndex = 4
                        keybindattachment.Items.Size = UDim2.fromOffset(60, keybindattachment.BlackOutline.AbsoluteSize.Y)
                        keybindattachment.Items.BorderSizePixel = 0
                        keybindattachment.Items.BackgroundTransparency = 1
                        keybindattachment.Items.BackgroundColor3 = Color3.new(0, 0, 0)
                        keybindattachment.Items.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, 0)

                        keybindattachment.ListLayout = Instance.new("UIListLayout", keybindattachment.Items)
                        keybindattachment.ListLayout.FillDirection = Enum.FillDirection.Horizontal
                        keybindattachment.ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
                        keybindattachment.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                        keybindattachment.ListLayout.Padding = UDim.new(0.04, 6)





                        function keybindattachment:AddKeybind(default, flag)
                            local keybind = { }

                            keybind.default = default or "None"
                            keybind.value = keybind.default
                            keybind.flag = flag or ( (keybindattachment.text or "") .. tostring(#keybindattachment.Items:GetChildren()))

                            local shorter_keycodes = {
                                ["LeftShift"] = "LSHIFT",
                                ["RightShift"] = "RSHIFT",
                                ["LeftControl"] = "LCTRL",
                                ["RightControl"] = "RCTRL",
                                ["LeftAlt"] = "LALT",
                                ["RightAlt"] = "RALT"
                            }

                            local text = keybind.default == "None" and "[None]" or "[" .. (shorter_keycodes[keybind.default.Name] or keybind.default.Name) .. "]"
                            local size = textservice:GetTextSize(text, 15, window.theme.font, Vector2.new(2000, 2000))

                            keybind.Main = Instance.new("TextButton", keybindattachment.Items)
                            keybind.Main.Name = "keybind"
                            keybind.Main.BackgroundTransparency = 1
                            keybind.Main.BorderSizePixel = 0
                            keybind.Main.ZIndex = 5
                            keybind.Main.Size = UDim2.fromOffset(size.X + 2, size.Y - 7)
                            keybind.Main.Text = text
                            keybind.Main.Font = window.theme.font
                            keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                            keybind.Main.TextSize = 15
                            keybind.Main.TextXAlignment = Enum.TextXAlignment.Right
                            keybind.Main.MouseButton1Down:Connect(function()
                                keybind.Main.Text = "[...]"
                                keybind.Main.TextColor3 = window.theme.accentcolor
                            end)
                            updateevent.Event:Connect(function(theme)
                                keybind.Main.Font = theme.font
                                if keybind.Main.Text == "[...]" then
                                    keybind.Main.TextColor3 = theme.accentcolor
                                else
                                    keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                                end
                            end)

                            if keybind.flag and keybind.flag ~= "" then
                                library.flags[keybind.flag] = keybind.default
                            end
                            function keybind:Set(key)
                                if key == "None" then
                                    keybind.Main.Text = "[" .. key .. "]"
                                    keybind.value = key
                                    if keybind.flag and keybind.flag ~= "" then
                                        library.flags[keybind.flag] = key
                                    end
                                end
                                keybind.Main.Text = "[" .. (shorter_keycodes[key.Name] or key.Name) .. "]"
                                keybind.value = key
                                if keybind.flag and keybind.flag ~= "" then
                                    library.flags[keybind.flag] = keybind.value
                                end
                            end

                            function keybind:Get()
                                return keybind.value
                            end
                            function keybind:IsPressed()
                                return keybind.ispressed
                            end
                            function keybind:SetPressed(set)
                                keybind.ispressed = set
                            end
                            function keybind:Unbind()
                                keybind.Main.Text = "[" .. 'None' .. "]"
                                keybind.value = 'None'
                                if keybind.flag and keybind.flag ~= "" then
                                    library.flags[keybind.flag] = key
                                end
                            end
                            uis.InputBegan:Connect(function(input, gameProcessed)
                                
                                if not gameProcessed then
                                    if keybind.Main.Text == "[...]" then
                                        keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
                                        if input.UserInputType == Enum.UserInputType.Keyboard then
                                            keybind:Set(input.KeyCode)
                                        else
                                            keybind:Set("None")
                                        end
                                    elseif input.KeyCode == keybind:Get() then 
                                    -- print('pressing key')
                                        keybind:SetPressed(true)
                                    end
                                end
                            end)
                            uis.InputEnded:Connect(function(input, gameProcessed)
                                
                                if not gameProcessed then
                                    if input.KeyCode == keybind:Get()  then 
                                    -- print('left key')
                                        keybind:SetPressed(false)
                                    end
                                end
                            end)
                            table.insert(library.items, keybind)
                            return keybind
                        end
                        
                        -- local keybindgotten = keybindattachment:AddKeybind()
                        local MouseEnter = function()
                            keybindattachment.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end
                        local MouseLeave = function()
                            keybindattachment.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end

                    -- keybindattachment.Label.MouseEnter:Connect(MouseEnter)
                    -- keybindattachment.Label.MouseLeave:Connect(MouseLeave)
                    -- keybindattachment.BlackOutline2.MouseEnter:Connect(MouseEnter)
                    -- keybindattachment.BlackOutline2.MouseLeave:Connect(MouseLeave)
                    -- local keybinds = nil
                    -- if canreturnkeybind then 
                    --     local keybinds = keybindattachment:AddKeybind('.')
                    -- end
                    sector:FixSize()
                    table.insert(library.items, keybindattachment)
                    return keybindattachment
                end
                function sector:AddTextbox(text, default, callback, flag,info)
                    local textbox = { }
                    textbox.text = text or ""
                    textbox.callback = callback or function() end
                    textbox.default = default
                    textbox.value = ""
                    textbox.flag = flag or text or ""

                    textbox.Label = Instance.new("TextButton", sector.Items)
                    textbox.Label.Name = "Label"
                    textbox.Label.AutoButtonColor = false
                    textbox.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    textbox.Label.BackgroundTransparency = 1
                    textbox.Label.Position = UDim2.fromOffset(sector.Main.Size.X.Offset, 0)
                    textbox.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 0)
                    textbox.Label.Font = window.theme.font
                    textbox.Label.ZIndex = 5
                    textbox.Label.Text = textbox.text
                    textbox.Label.TextColor3 = window.theme.itemscolor
                    textbox.Label.TextSize = 15
                    textbox.Label.TextStrokeTransparency = 1
                    textbox.Label.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        textbox.Label.Font = theme.font
                    end)

                    textbox.Holder = Instance.new("Frame", sector.Items)
                    textbox.Holder.Name = "holder"
                    textbox.Holder.ZIndex = 5
                    textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
                    textbox.Holder.BorderSizePixel = 0
                    textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

                    textbox.Gradient = Instance.new("UIGradient", textbox.Holder)
                    textbox.Gradient.Rotation = 90
                    textbox.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(39, 39, 39)) })

                    textbox.Main = Instance.new("TextBox", textbox.Holder)
                    if info and info.useplaceholder and info.useplaceholder == true then 
                        textbox.Main.PlaceholderText = textbox.text
                    end
                    textbox.Main.PlaceholderColor3 = Color3.fromRGB(190, 190, 190)
                    textbox.Main.Text = ""
                    textbox.Main.BackgroundTransparency = 1
                    textbox.Main.Font = window.theme.font
                    textbox.Main.Name = "textbox"
                    textbox.Main.MultiLine = false
                    textbox.Main.ClearTextOnFocus = false
                    textbox.Main.ZIndex = 5
                    textbox.Main.TextScaled = true
                    textbox.Main.Size = textbox.Holder.Size
                    textbox.Main.TextSize = 15
                    textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
                    textbox.Main.BorderSizePixel = 0
                    textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                    textbox.Main.TextXAlignment = Enum.TextXAlignment.Left

                    if textbox.flag and textbox.flag ~= "" then
                        library.flags[textbox.flag] = textbox.default or ""
                    end

                    function textbox:Set(text)
                        textbox.value = text
                        textbox.Main.Text = text
                        if textbox.flag and textbox.flag ~= "" then
                            library.flags[textbox.flag] = text
                        end
                        pcall(textbox.callback, text)
                    end
                    updateevent.Event:Connect(function(theme)
                        textbox.Main.Font = theme.font
                    end)

                    function textbox:Get()
                        return textbox.value
                    end

                    if textbox.default then 
                        textbox:Set(textbox.default)
                    end

                    textbox.Main.FocusLost:Connect(function()
                        textbox:Set(textbox.Main.Text)
                    end)

                    textbox.BlackOutline2 = Instance.new("Frame", textbox.Main)
                    textbox.BlackOutline2.Name = "blackline"
                    textbox.BlackOutline2.ZIndex = 4
                    textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
                    textbox.BlackOutline2.BorderSizePixel = 0
                    textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    textbox.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                    end)
                    
                    textbox.Outline = Instance.new("Frame", textbox.Main)
                    textbox.Outline.Name = "blackline"
                    textbox.Outline.ZIndex = 4
                    textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
                    textbox.Outline.BorderSizePixel = 0
                    textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
                    textbox.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        textbox.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    textbox.BlackOutline = Instance.new("Frame", textbox.Main)
                    textbox.BlackOutline.Name = "blackline"
                    textbox.BlackOutline.ZIndex = 4
                    textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
                    textbox.BlackOutline.BorderSizePixel = 0
                    textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    textbox.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    textbox.BlackOutline2.MouseEnter:Connect(function()
                        textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                    end)
                    textbox.BlackOutline2.MouseLeave:Connect(function()
                        textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    end)

                    sector:FixSize()
                    table.insert(library.items, textbox)
                    return textbox
                end
                
                function sector:AddSlider(text, min, default, max, decimals, callback, flag)
                    local slider = { }
                    slider.text = text or ""
                    slider.callback = callback or function(value) end
                    slider.min = min or 0
                    slider.max = max or 100
                    slider.decimals = decimals or 1
                    slider.default = default or slider.min
                    slider.flag = flag or text or ""

                    slider.value = slider.default
                    local dragging = false

                    slider.MainBack = Instance.new("Frame", sector.Items)
                    slider.MainBack.Name = "MainBack"
                    slider.MainBack.ZIndex = 7
                    slider.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 25)
                    slider.MainBack.BorderSizePixel = 0
                    slider.MainBack.BackgroundTransparency = 1

                    slider.Label = Instance.new("TextLabel", slider.MainBack)
                    slider.Label.BackgroundTransparency = 1
                    slider.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 6)
                    slider.Label.Font = window.theme.font
                    slider.Label.Text = slider.text .. ":"
                    slider.Label.TextColor3 = window.theme.itemscolor
                    slider.Label.Position = UDim2.fromOffset(0, 0)
                    slider.Label.TextSize = 15
                    slider.Label.ZIndex = 4
                    slider.Label.TextStrokeTransparency = 1
                    slider.Label.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        slider.Label.Font = theme.font
                        slider.Label.TextColor3 = theme.itemscolor
                    end)

                    local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200,300))
                    slider.InputLabel = Instance.new("TextBox", slider.MainBack)
                    slider.InputLabel.BackgroundTransparency = 1
                    slider.InputLabel.ClearTextOnFocus = false
                    slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
                    slider.InputLabel.Font = window.theme.font
                    slider.InputLabel.Text = "0"
                    slider.InputLabel.TextColor3 = window.theme.itemscolor
                    slider.InputLabel.Position = UDim2.fromOffset(size.X + 3, -3)
                    slider.InputLabel.TextSize = 15
                    slider.InputLabel.ZIndex = 4
                    slider.InputLabel.TextStrokeTransparency = 1
                    slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        slider.InputLabel.Font = theme.font
                        slider.InputLabel.TextColor3 = theme.itemscolor

                        local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200,300))
                        slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
                    end)

                    slider.Main = Instance.new("TextButton", slider.MainBack)
                    slider.Main.Name = "slider"
                    slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    slider.Main.Position = UDim2.fromOffset(0, 15)
                    slider.Main.BorderSizePixel = 0
                    slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
                    slider.Main.AutoButtonColor = false
                    slider.Main.Text = ""
                    slider.Main.ZIndex = 5

                    slider.BlackOutline2 = Instance.new("Frame", slider.Main)
                    slider.BlackOutline2.Name = "blackline"
                    slider.BlackOutline2.ZIndex = 4
                    slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
                    slider.BlackOutline2.BorderSizePixel = 0
                    slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    slider.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                    end)
                    
                    slider.Outline = Instance.new("Frame", slider.Main)
                    slider.Outline.Name = "blackline"
                    slider.Outline.ZIndex = 4
                    slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
                    slider.Outline.BorderSizePixel = 0
                    slider.Outline.BackgroundColor3 = window.theme.outlinecolor
                    slider.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        slider.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    slider.BlackOutline = Instance.new("Frame", slider.Main)
                    slider.BlackOutline.Name = "blackline"
                    slider.BlackOutline.ZIndex = 4
                    slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
                    slider.BlackOutline.BorderSizePixel = 0
                    slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    slider.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    slider.Gradient = Instance.new("UIGradient", slider.Main)
                    slider.Gradient.Rotation = 90
                    slider.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(41, 41, 41)) })

                    slider.SlideBar = Instance.new("Frame", slider.Main)
                    slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255) --Color3.fromRGB(204, 0, 102)
                    slider.SlideBar.ZIndex = 5
                    slider.SlideBar.BorderSizePixel = 0
                    slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)
                    --slider.SlideBar.Position += UDim2.fromOffset(129, 0)

                    -- if min < 0 then 
                    --     slider.negativemain = slider.Main:Clone();
                    --     slider.negativemain.Parent = slider.Main.Parent;

                    --     slider.negativemain.Size =  UDim2.fromOffset(slider.Main.Size.X.Offset/2,slider.Main.Size.Y.Offset)
                    --     slider.negativemain.BackgroundTransparency = 0

                    --     slider.SlideBarNegative = Instance.new("Frame", slider.negativemain)
                    --     slider.SlideBarNegative.BackgroundColor3 = Color3.fromRGB(255, 255, 255) --Color3.fromRGB(204, 0, 102)
                    --     slider.SlideBarNegative.ZIndex = 5
                    --     slider.SlideBarNegative.BorderSizePixel = 0
                    --     slider.SlideBarNegative.Size = UDim2.fromOffset(0, slider.negativemain.Size.Y.Offset)
                    --     slider.SlideBarNegative.Position += UDim2.fromOffset(129, 0)
                    --     slider.Gradient2 = Instance.new("UIGradient", slider.SlideBarNegative)
                    --     slider.Gradient2.Rotation = 90
                    --     slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor2) })
                    --     updateevent.Event:Connect(function(theme)
                    --         slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor), ColorSequenceKeypoint.new(1.00, theme.accentcolor2) })
                    --     end)

                    -- end


                    slider.Gradient2 = Instance.new("UIGradient", slider.SlideBar)
                    slider.Gradient2.Rotation = 90
                    slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor2) })
                    updateevent.Event:Connect(function(theme)
                        slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor), ColorSequenceKeypoint.new(1.00, theme.accentcolor2) })
                    end)

                    slider.BlackOutline2.MouseEnter:Connect(function()
                        slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                    end)
                    slider.BlackOutline2.MouseLeave:Connect(function()
                        slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    end)

                    if slider.flag and slider.flag ~= "" then
                        library.flags[slider.flag] = slider.default or slider.min or 0
                    end

                    function slider:Get()
                        return slider.value
                    end

                    -- function slider:Set(value)
                    --     slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
                    --     local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
                    --     if slider.flag and slider.flag ~= "" then
                    --         library.flags[slider.flag] = slider.value
                    --     end
                    --     -- print(slider.value)
                    --     -- print('setting')
                    --     --slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        
                    --     slider.SlideBar:TweenSize(UDim2.fromOffset((slider.value/slider.max)*142, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        
                    --     -- if slider.value < 0 then 
                    --     --     slider.SlideBar.Visible = false
                    --     --     slider.SlideBarNegative.Visible = true
                    --     --     slider.SlideBarNegative:TweenSize(UDim2.fromOffset(-(percent * slider.Main.AbsoluteSize.X), slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        
                    --     -- else
                    --     --     slider.SlideBarNegative.Visible = false
                    --     --     slider.SlideBar.Visible = true
                    --     --     slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                    --     -- end
                    -- 	slider.InputLabel.Text = slider.value
                    -- 	pcall(slider.callback, slider.value)
                    -- end






                    function slider:Set(value)
                        slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
                        local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
                        if slider.flag and slider.flag ~= "" then
                            library.flags[slider.flag] = slider.value
                        end
                        -- print(slider.value)
                        -- print('setting')
                        -- if slider.value < 0 then 
                        --     slider.SlideBar:TweenSize(UDim2.fromOffset(-(percent * slider.Main.AbsoluteSize.X), slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        -- else
                        --     slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        -- end
                        
                        slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        slider.InputLabel.Text = slider.value
                        pcall(slider.callback, slider.value)
                    end
                    slider:Set(slider.default)








                    -- slider:Set(slider.default)

                    slider.InputLabel.FocusLost:Connect(function(Return)
                        if not Return then 
                            return 
                        end
                        if (slider.InputLabel.Text:match("^%d+$")) then
                            slider:Set(tonumber(slider.InputLabel.Text))
                        else
                            slider.InputLabel.Text = tostring(slider.value)
                        end
                    end)


                    function slider:Refresh()
                        local mousePos = camera:WorldToViewportPoint(mouse.Hit.p)
                        local percent = math.clamp(mousePos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
                        local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                        value = math.clamp(value, slider.min, slider.max)
                        slider:Set(value)
                    end

                    -- function slider:Refresh()
                    --     local mousePos = camera:WorldToViewportPoint(mouse.Hit.p)
                    --     local percent = math.clamp(mousePos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
                    --     -- mouse x smaller = negative
                    --     local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                    --     value = math.clamp(value, slider.min, slider.max)
                    --     slider:Set(value)
                    -- end
                    -- function slider:Refresh()
                    --     local mousePos = camera:WorldToViewportPoint(mouse.Hit.p)
                    --     local closesttonegative = true;
                    --     local positivepos = (mousePos.X - slider.SlideBar.AbsolutePosition.X/2)
                    --     local negativepos = (mousePos.X - slider.SlideBarNegative.AbsolutePosition.X/2)
                    --     if negativepos>positivepos then closesttonegative = true end 

                    --     if closesttonegative == true then 
                    --         print('closer')
                    --         local percent = math.clamp(math.abs(mousePos.X/2) - slider.SlideBarNegative.AbsolutePosition.X/2, 0, slider.Main.AbsoluteSize.X/2) / slider.Main.AbsoluteSize.X
                    --         local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                    --         value = math.clamp(value, slider.min, slider.max)
                    --         slider:Set(value)
                    --     else
                    --         print('away')
                    --         local percent = math.clamp(mousePos.X - slider.SlideBar.AbsolutePosition.X/2, 0, slider.Main.AbsoluteSize.X/2) / slider.Main.AbsoluteSize.X
                    --         local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                    --         value = math.clamp(value, slider.min, slider.max)
                    --         slider:Set(value)
                    --     end

                    -- end
                    -- function slider:NegativeRefresh()
                    --     local mousePos = camera:WorldToViewportPoint(mouse.Hit.p)
                    --     local percent = math.clamp(-mousePos.X - slider.SlideBarNegative.AbsolutePosition.X, 0, slider.negativemain.AbsoluteSize.X) / slider.negativemain.AbsoluteSize.X
                    --     local value = math.floor((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                    --     value = math.clamp(value, slider.min, slider.max)
                    --     slider:Set(value)
                    -- end




                    -- function slider:AddNegative()

                    --     slider.MainNegative = Instance.new("TextButton", slider.MainBack)
                    --     slider.MainNegative.Name = "slidernegative"
                    --     slider.MainNegative.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    --     slider.MainNegative.Position = UDim2.fromOffset(0, 15)
                    --     slider.MainNegative.BorderSizePixel = 0
                    --     slider.MainNegative.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
                    --     slider.MainNegative.AutoButtonColor = false
                    --     slider.MainNegative.Text = ""
                    --     slider.MainNegative.ZIndex = 5
        
                    --     slider.SlideBarNegative = Instance.new("Frame", slider.MainNegative)
                    --     slider.SlideBarNegative.BackgroundColor3 = Color3.fromRGB(255, 255, 255) --Color3.fromRGB(204, 0, 102)
                    --     slider.SlideBarNegative.ZIndex = 5
                    --     slider.SlideBarNegative.BorderSizePixel = 0
                    --     slider.SlideBarNegative.Size = UDim2.fromOffset(0, slider.MainNegative.Size.Y.Offset)
                    --     slider.SlideBarNegative.Position += UDim2.fromOffset(129, 0)
                    --     slider.Gradient2 = Instance.new("UIGradient", slider.SlideBarNegative)
                    --     slider.Gradient2.Rotation = 90
                    --     slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, window.theme.accentcolor), ColorSequenceKeypoint.new(1.00, window.theme.accentcolor2) })
                    --     updateevent.Event:Connect(function(theme)
                    --         slider.Gradient2.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, theme.accentcolor), ColorSequenceKeypoint.new(1.00, theme.accentcolor2) })
                    --     end)




                    -- end

                    slider.SlideBar.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = true
                            slider:Refresh()
                        end
                    end)
                    -- if slider.SlideBarNegative ~= nil then 
                    --     slider.SlideBarNegative.InputBegan:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = true
                    --             slider:NegativeRefresh()
                    --         end
                    --     end)
                    --     slider.SlideBarNegative.InputEnded:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = false
                    --         end
                    --     end)
                    -- end

                    slider.SlideBar.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = false
                        end
                    end)

                    slider.Main.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = true
                            slider:Refresh()
                        end
                    end)

                    slider.Main.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = false
                        end
                    end)

                    uis.InputChanged:Connect(function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            slider:Refresh()
                            --slider:NegativeRefresh()
                        end
                    end)








                    -- if slider.SlideBarNegative ~= nil then 
                    --     slider.SlideBarNegative.InputBegan:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = true
                    --            -- slider:NegativeRefresh()
                    --         end
                    --     end)
                    --     slider.SlideBarNegative.InputEnded:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = false
                    --         end
                    --     end)
                    --     slider.negativemain.InputBegan:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = true
                    --             --slider:NegativeRefresh()
                    --         end
                    --     end)
        
                    --     slider.negativemain.InputEnded:Connect(function(input)
                    --         if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    --             dragging = false
                    --         end
                    --     end)
                    -- end





                    uis.InputChanged:Connect(function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            slider:Refresh()
                            --slider:NegativeRefresh()
                        end
                    end)





                    sector:FixSize()
                    table.insert(library.items, slider)
                    return slider
                end

                function sector:AddColorpicker(text, default, callback, flag)
                    local colorpicker = { }

                    colorpicker.text = text or ""
                    colorpicker.callback = callback or function() end
                    colorpicker.default = default or Color3.fromRGB(255, 255, 255)
                    colorpicker.value = colorpicker.default
                    colorpicker.flag = flag or text or ""

                    colorpicker.Label = Instance.new("TextLabel", sector.Items)
                    colorpicker.Label.BackgroundTransparency = 1
                    colorpicker.Label.Size = UDim2.fromOffset(156, 10)
                    colorpicker.Label.ZIndex = 4
                    colorpicker.Label.Font = window.theme.font
                    colorpicker.Label.Text = colorpicker.text
                    colorpicker.Label.TextColor3 = window.theme.itemscolor
                    colorpicker.Label.TextSize = 15
                    colorpicker.Label.TextStrokeTransparency = 1
                    colorpicker.Label.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        colorpicker.Label.Font = theme.font
                        colorpicker.Label.TextColor3 = theme.itemscolor
                    end)

                    colorpicker.Main = Instance.new("Frame", colorpicker.Label)
                    colorpicker.Main.ZIndex = 6
                    colorpicker.Main.BorderSizePixel = 0
                    colorpicker.Main.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 29, 0)
                    colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    colorpicker.Main.Size = UDim2.fromOffset(16, 10)

                    colorpicker.Gradient = Instance.new("UIGradient", colorpicker.Main)
                    colorpicker.Gradient.Rotation = 90

                    local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
                    colorpicker.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, colorpicker.value), ColorSequenceKeypoint.new(1.00, clr) })

                    colorpicker.BlackOutline2 = Instance.new("Frame", colorpicker.Main)
                    colorpicker.BlackOutline2.Name = "blackline"
                    colorpicker.BlackOutline2.ZIndex = 4
                    colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
                    colorpicker.BlackOutline2.BorderSizePixel = 0
                    colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    colorpicker.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.BlackOutline2.BackgroundColor3 = window.OpenedColorPickers[colorpicker.MainPicker] and theme.accentcolor or theme.outlinecolor2
                    end)
                    
                    colorpicker.Outline = Instance.new("Frame", colorpicker.Main)
                    colorpicker.Outline.Name = "blackline"
                    colorpicker.Outline.ZIndex = 4
                    colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
                    colorpicker.Outline.BorderSizePixel = 0
                    colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
                    colorpicker.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    colorpicker.BlackOutline = Instance.new("Frame", colorpicker.Main)
                    colorpicker.BlackOutline.Name = "blackline"
                    colorpicker.BlackOutline.ZIndex = 4
                    colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
                    colorpicker.BlackOutline.BorderSizePixel = 0
                    colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    colorpicker.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    colorpicker.BlackOutline2.MouseEnter:Connect(function()
                        colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                    end)
                    colorpicker.BlackOutline2.MouseLeave:Connect(function()
                        if not window.OpenedColorPickers[colorpicker.MainPicker] then
                            colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end
                    end)

                    colorpicker.MainPicker = Instance.new("TextButton", colorpicker.Main)
                    colorpicker.MainPicker.Name = "picker"
                    colorpicker.MainPicker.ZIndex = 100
                    colorpicker.MainPicker.Visible = false
                    colorpicker.MainPicker.AutoButtonColor = false
                    colorpicker.MainPicker.Text = ""
                    window.OpenedColorPickers[colorpicker.MainPicker] = false
                    colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
                    colorpicker.MainPicker.BorderSizePixel = 0
                    colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    colorpicker.MainPicker.Rotation = 0.000000000000001
                    colorpicker.MainPicker.Position = UDim2.fromOffset(-colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 15)

                    colorpicker.BlackOutline3 = Instance.new("Frame", colorpicker.MainPicker)
                    colorpicker.BlackOutline3.Name = "blackline"
                    colorpicker.BlackOutline3.ZIndex = 98
                    colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
                    colorpicker.BlackOutline3.BorderSizePixel = 0
                    colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
                    colorpicker.BlackOutline3.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
                    end)
                    
                    colorpicker.Outline2 = Instance.new("Frame", colorpicker.MainPicker)
                    colorpicker.Outline2.Name = "blackline"
                    colorpicker.Outline2.ZIndex = 98
                    colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
                    colorpicker.Outline2.BorderSizePixel = 0
                    colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
                    colorpicker.Outline2.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
                    end)

                    colorpicker.BlackOutline3 = Instance.new("Frame", colorpicker.MainPicker)
                    colorpicker.BlackOutline3.Name = "blackline"
                    colorpicker.BlackOutline3.ZIndex = 98
                    colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
                    colorpicker.BlackOutline3.BorderSizePixel = 0
                    colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
                    colorpicker.BlackOutline3.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
                    end)

                    colorpicker.hue = Instance.new("ImageLabel", colorpicker.MainPicker)
                    colorpicker.hue.ZIndex = 101
                    colorpicker.hue.Position = UDim2.new(0,3,0,3)
                    colorpicker.hue.Size = UDim2.new(0,172,0,172)
                    colorpicker.hue.Image = "rbxassetid://4155801252"
                    colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
                    colorpicker.hue.BackgroundColor3 = Color3.new(1,0,0)
                    colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
                    updateevent.Event:Connect(function(theme)
                        colorpicker.hue.BorderColor3 = theme.outlinecolor2
                    end)

                    colorpicker.hueselectorpointer = Instance.new("ImageLabel", colorpicker.MainPicker)
                    colorpicker.hueselectorpointer.ZIndex = 101
                    colorpicker.hueselectorpointer.BackgroundTransparency = 1
                    colorpicker.hueselectorpointer.BorderSizePixel = 0
                    colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
                    colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
                    colorpicker.hueselectorpointer.Image = "rbxassetid://6885856475"

                    colorpicker.selector = Instance.new("TextLabel", colorpicker.MainPicker)
                    colorpicker.selector.ZIndex = 100
                    colorpicker.selector.Position = UDim2.new(0,3,0,181)
                    colorpicker.selector.Size = UDim2.new(0,173,0,10)
                    colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255,255,255)
                    colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
                    colorpicker.selector.Text = ""
                    updateevent.Event:Connect(function(theme)
                        colorpicker.selector.BorderColor3 = theme.outlinecolor2
                    end)
        
                    colorpicker.gradient = Instance.new("UIGradient", colorpicker.selector)
                    colorpicker.gradient.Color = ColorSequence.new({ 
                        ColorSequenceKeypoint.new(0, Color3.new(1,0,0)), 
                        ColorSequenceKeypoint.new(0.17, Color3.new(1,0,1)), 
                        ColorSequenceKeypoint.new(0.33,Color3.new(0,0,1)), 
                        ColorSequenceKeypoint.new(0.5,Color3.new(0,1,1)), 
                        ColorSequenceKeypoint.new(0.67, Color3.new(0,1,0)), 
                        ColorSequenceKeypoint.new(0.83, Color3.new(1,1,0)), 
                        ColorSequenceKeypoint.new(1, Color3.new(1,0,0))
                    })

                    colorpicker.pointer = Instance.new("Frame", colorpicker.selector)
                    colorpicker.pointer.ZIndex = 101
                    colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    colorpicker.pointer.Position = UDim2.new(0,0,0,0)
                    colorpicker.pointer.Size = UDim2.new(0,2,0,10)
                    colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

                    if colorpicker.flag and colorpicker.flag ~= "" then
                        library.flags[colorpicker.flag] = colorpicker.default
                    end

                    function colorpicker:RefreshSelector()
                        local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
                        colorpicker.color = 1 - pos
                        colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)
                    end

                    function colorpicker:RefreshHue()
                        local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
                        local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
                        colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
                        colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
                    end

                    function colorpicker:Set(value)
                        local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
                        colorpicker.value = color
                        if colorpicker.flag and colorpicker.flag ~= "" then
                            library.flags[colorpicker.flag] = color
                        end
                        local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
                        colorpicker.Gradient.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, color), ColorSequenceKeypoint.new(1.00, clr) })
                        pcall(colorpicker.callback, color)
                    end
                    function colorpicker:Get()
                        return colorpicker.value
                    end
                    colorpicker:Set(colorpicker.default)

                    function colorpicker:AddDropdown(items, default, multichoice, callback, flag)
                        local dropdown = { }

                        dropdown.defaultitems = items or { }
                        dropdown.default = default
                        dropdown.callback = callback or function() end
                        dropdown.multichoice = multichoice or false
                        dropdown.values = { }
                        dropdown.flag = flag or ((colorpicker.text or "") .. tostring( #(sector.Items:GetChildren()) ))
        
                        dropdown.Main = Instance.new("TextButton", sector.Items)
                        dropdown.Main.Name = "dropdown"
                        dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.Main.BorderSizePixel = 0
                        dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
                        dropdown.Main.Position = UDim2.fromOffset(0, 0)
                        dropdown.Main.ZIndex = 5
                        dropdown.Main.AutoButtonColor = false
                        dropdown.Main.Font = window.theme.font
                        dropdown.Main.Text = ""
                        dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.Main.TextSize = 15
                        dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
                        updateevent.Event:Connect(function(theme)
                            dropdown.Main.Font = theme.font
                        end)
        
                        dropdown.Gradient = Instance.new("UIGradient", dropdown.Main)
                        dropdown.Gradient.Rotation = 90
                        dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(39, 39, 39))}
        
                        dropdown.SelectedLabel = Instance.new("TextLabel", dropdown.Main)
                        dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.SelectedLabel.BackgroundTransparency = 1
                        dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
                        dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
                        dropdown.SelectedLabel.Font = window.theme.font
                        dropdown.SelectedLabel.Text = colorpicker.text
                        dropdown.SelectedLabel.ZIndex = 5
                        dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        dropdown.SelectedLabel.TextSize = 15
                        dropdown.SelectedLabel.TextStrokeTransparency = 1
                        dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
                        updateevent.Event:Connect(function(theme)
                            dropdown.SelectedLabel.Font = theme.font
                        end)

                        dropdown.Nav = Instance.new("ImageButton", dropdown.Main)
                        dropdown.Nav.Name = "navigation"
                        dropdown.Nav.BackgroundTransparency = 1
                        dropdown.Nav.LayoutOrder = 10
                        dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
                        dropdown.Nav.Rotation = 90
                        dropdown.Nav.ZIndex = 5
                        dropdown.Nav.Size = UDim2.fromOffset(8, 8)
                        dropdown.Nav.Image = "rbxassetid://4918373417"
                        dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)
        
                        dropdown.BlackOutline2 = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline2.Name = "blackline"
                        dropdown.BlackOutline2.ZIndex = 4
                        dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
                        dropdown.BlackOutline2.BorderSizePixel = 0
                        dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.Outline = Instance.new("Frame", dropdown.Main)
                        dropdown.Outline.Name = "blackline"
                        dropdown.Outline.ZIndex = 4
                        dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
                        dropdown.Outline.BorderSizePixel = 0
                        dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
                        dropdown.Outline.Position = UDim2.fromOffset(-2, -2)
                        updateevent.Event:Connect(function(theme)
                            dropdown.Outline.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        dropdown.BlackOutline = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline.Name = "blackline"
                        dropdown.BlackOutline.ZIndex = 4
                        dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
                        dropdown.BlackOutline.BorderSizePixel = 0
                        dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.ItemsFrame = Instance.new("ScrollingFrame", dropdown.Main)
                        dropdown.ItemsFrame.Name = "itemsframe"
                        dropdown.ItemsFrame.BorderSizePixel = 0
                        dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                        dropdown.ItemsFrame.ScrollBarThickness = 2
                        dropdown.ItemsFrame.ZIndex = 8
                        dropdown.ItemsFrame.ScrollingDirection = "Y"
                        dropdown.ItemsFrame.Visible = false
                        dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)
        
                        dropdown.ListLayout = Instance.new("UIListLayout", dropdown.ItemsFrame)
                        dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
                        dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
                        dropdown.ListPadding = Instance.new("UIPadding", dropdown.ItemsFrame)
                        dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
                        dropdown.ListPadding.PaddingRight = UDim.new(0, 2)
        
                        dropdown.BlackOutline2Items = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutline2Items.Name = "blackline"
                        dropdown.BlackOutline2Items.ZIndex = 7
                        dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                        dropdown.BlackOutline2Items.BorderSizePixel = 0
                        dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-3, -3)
                        dropdown.BlackOutline2Items.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
                        end)
                        
                        dropdown.OutlineItems = Instance.new("Frame", dropdown.Main)
                        dropdown.OutlineItems.Name = "blackline"
                        dropdown.OutlineItems.ZIndex = 7
                        dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                        dropdown.OutlineItems.BorderSizePixel = 0
                        dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
                        dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-2, -2)
                        dropdown.OutlineItems.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
                        end)
        
                        dropdown.BlackOutlineItems = Instance.new("Frame", dropdown.Main)
                        dropdown.BlackOutlineItems.Name = "blackline"
                        dropdown.BlackOutlineItems.ZIndex = 7
                        dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(-2, -2)
                        dropdown.BlackOutlineItems.BorderSizePixel = 0
                        dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
                        dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-1, -1)
                        dropdown.BlackOutlineItems.Visible = false
                        updateevent.Event:Connect(function(theme)
                            dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
                        end)
        
                        dropdown.IgnoreBackButtons = Instance.new("TextButton", dropdown.Main)
                        dropdown.IgnoreBackButtons.BackgroundTransparency = 1
                        dropdown.IgnoreBackButtons.BorderSizePixel = 0
                        dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                        dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
                        dropdown.IgnoreBackButtons.ZIndex = 7
                        dropdown.IgnoreBackButtons.Text = ""
                        dropdown.IgnoreBackButtons.Visible = false
                        dropdown.IgnoreBackButtons.AutoButtonColor = false

                        if dropdown.flag and dropdown.flag ~= "" then
                            library.flags[dropdown.flag] = dropdown.multichoice and { dropdown.default or dropdown.defaultitems[1] or "" } or (dropdown.default or dropdown.defaultitems[1] or "")
                        end

                        function dropdown:isSelected(item)
                            for i, v in pairs(dropdown.values) do
                                if v == item then
                                    return true
                                end
                            end
                            return false
                        end
        
                        function dropdown:updateText(text)
                            if #text >= 27 then
                                text = text:sub(1, 25) .. ".."
                            end
                            dropdown.SelectedLabel.Text = text
                        end
        
                        dropdown.Changed = Instance.new("BindableEvent")
                        function dropdown:Set(value)
                            if type(value) == "table" then
                                dropdown.values = value
                                dropdown:updateText(table.concat(value, ", "))
                                pcall(dropdown.callback, value)
                            else
                                dropdown:updateText(value)
                                dropdown.values = { value }
                                pcall(dropdown.callback, value)
                            end
                            
                            dropdown.Changed:Fire(value)
                            if dropdown.flag and dropdown.flag ~= "" then
                                library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
                            end
                        end
        
                        function dropdown:Get()
                            return dropdown.multichoice and dropdown.values or dropdown.values[1]
                        end
        
                        dropdown.items = { }
                        function dropdown:Add(v)
                            local Item = Instance.new("TextButton", dropdown.ItemsFrame)
                            Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                            Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                            Item.BorderSizePixel = 0
                            Item.Position = UDim2.fromOffset(0, 0)
                            Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
                            Item.ZIndex = 9
                            Item.Text = v
                            Item.Name = v
                            Item.AutoButtonColor = false
                            Item.Font = window.theme.font
                            Item.TextSize = 15
                            Item.TextXAlignment = Enum.TextXAlignment.Left
                            Item.TextStrokeTransparency = 1
                            dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)
        
                            Item.MouseButton1Down:Connect(function()
                                if dropdown.multichoice then
                                    if dropdown:isSelected(v) then
                                        for i2, v2 in pairs(dropdown.values) do
                                            if v2 == v then
                                                table.remove(dropdown.values, i2)
                                            end
                                        end
                                        dropdown:Set(dropdown.values)
                                    else
                                        table.insert(dropdown.values, v)
                                        dropdown:Set(dropdown.values)
                                    end
        
                                    return
                                else
                                    dropdown.Nav.Rotation = 90
                                    dropdown.ItemsFrame.Visible = false
                                    dropdown.ItemsFrame.Active = false
                                    dropdown.OutlineItems.Visible = false
                                    dropdown.BlackOutlineItems.Visible = false
                                    dropdown.BlackOutline2Items.Visible = false
                                    dropdown.IgnoreBackButtons.Visible = false
                                    dropdown.IgnoreBackButtons.Active = false
                                end
        
                                dropdown:Set(v)
                                return
                            end)
        
                            runservice.RenderStepped:Connect(function()
                                if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
                                    Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
                                    Item.TextColor3 = window.theme.accentcolor
                                    Item.Text = " " .. v
                                else
                                    Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                                    Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    Item.Text = v
                                end
                            end)
        
                            table.insert(dropdown.items, v)
                            dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
                            dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)
        
                            dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                            dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                            dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                            dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
                        end
        
                        function dropdown:Remove(value)
                            local item = dropdown.ItemsFrame:FindFirstChild(value)
                            if item then
                                for i,v in pairs(dropdown.items) do
                                    if v == value then
                                        table.remove(dropdown.items, i)
                                    end
                                end
        
                                dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
                                dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)
            
                                dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                                dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                                dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                                dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
        
                                item:Remove()
                            end
                        end 
        
                        for i,v in pairs(dropdown.defaultitems) do
                            dropdown:Add(v)
                        end
        
                        if dropdown.default then
                            dropdown:Set(dropdown.default)
                        end
        
                        local MouseButton1Down = function()
                            if dropdown.Nav.Rotation == 90 then
                                dropdown.ItemsFrame.ScrollingEnabled = true
                                sector.Main.Parent.ScrollingEnabled = false
                                tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = -90 }):Play()
                                dropdown.ItemsFrame.Visible = true
                                dropdown.ItemsFrame.Active = true
                                dropdown.IgnoreBackButtons.Visible = true
                                dropdown.IgnoreBackButtons.Active = true
                                dropdown.OutlineItems.Visible = true
                                dropdown.BlackOutlineItems.Visible = true
                                dropdown.BlackOutline2Items.Visible = true
                            else
                                dropdown.ItemsFrame.ScrollingEnabled = false
                                sector.Main.Parent.ScrollingEnabled = true
                                tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = 90 }):Play()
                                dropdown.ItemsFrame.Visible = false
                                dropdown.ItemsFrame.Active = false
                                dropdown.IgnoreBackButtons.Visible = false
                                dropdown.IgnoreBackButtons.Active = false
                                dropdown.OutlineItems.Visible = false
                                dropdown.BlackOutlineItems.Visible = false
                                dropdown.BlackOutline2Items.Visible = false
                            end
                        end
        
                        dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
                        dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)
        
                        dropdown.BlackOutline2.MouseEnter:Connect(function()
                            dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                        end)
                        dropdown.BlackOutline2.MouseLeave:Connect(function()
                            dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                        end)
        
                        sector:FixSize()
                        table.insert(library.items, dropdown)
                        return dropdown
                    end

                    local dragging_selector = false
                    local dragging_hue = false

                    colorpicker.selector.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging_selector = true
                            colorpicker:RefreshSelector()
                        end
                    end)

                    colorpicker.selector.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging_selector = false
                            colorpicker:RefreshSelector()
                        end
                    end)

                    colorpicker.hue.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging_hue = true
                            colorpicker:RefreshHue()
                        end
                    end)

                    colorpicker.hue.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging_hue = false
                            colorpicker:RefreshHue()
                        end
                    end)

                    uis.InputChanged:Connect(function(input)
                        if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
                            colorpicker:RefreshSelector()
                        end
                        if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
                            colorpicker:RefreshHue()
                        end
                    end)

                    local inputBegan = function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            for i,v in pairs(window.OpenedColorPickers) do
                                if v and i ~= colorpicker.MainPicker then
                                    i.Visible = false
                                    window.OpenedColorPickers[i] = false
                                end
                            end

                            colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
                            window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
                            if window.OpenedColorPickers[colorpicker.MainPicker] then
                                colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                            else
                                colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                            end
                        end
                    end

                    colorpicker.Main.InputBegan:Connect(inputBegan)
                    colorpicker.Outline.InputBegan:Connect(inputBegan)
                    colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)

                    sector:FixSize()
                    table.insert(library.items, colorpicker)
                    return colorpicker
                end

                function sector:AddKeybind(text,default,newkeycallback,callback,flag)
                    local keybind = { }

                    keybind.text = text or ""
                    keybind.default = default or "None"
                    keybind.callback = callback or function() end
                    keybind.newkeycallback = newkeycallback or function(key) end
                    keybind.flag = flag or text or ""

                    keybind.value = keybind.default

                    keybind.Main = Instance.new("TextLabel", sector.Items)
                    keybind.Main.BackgroundTransparency = 1
                    keybind.Main.Size = UDim2.fromOffset(156, 10)
                    keybind.Main.ZIndex = 4
                    keybind.Main.Font = window.theme.font
                    keybind.Main.Text = keybind.text
                    keybind.Main.TextColor3 = window.theme.itemscolor
                    keybind.Main.TextSize = 15
                    keybind.Main.TextStrokeTransparency = 1
                    keybind.Main.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        keybind.Main.Font = theme.font
                        keybind.Main.TextColor3 = theme.itemscolor
                    end)

                    keybind.Bind = Instance.new("TextButton", keybind.Main)
                    keybind.Bind.Name = "keybind"
                    keybind.Bind.BackgroundTransparency = 1
                    keybind.Bind.BorderColor3 = window.theme.outlinecolor
                    keybind.Bind.ZIndex = 5
                    keybind.Bind.BorderSizePixel = 0
                    keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10, 0)
                    keybind.Bind.Font = window.theme.font
                    keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
                    keybind.Bind.TextSize = 15
                    keybind.Bind.TextXAlignment = Enum.TextXAlignment.Right
                    keybind.Bind.MouseButton1Down:Connect(function()
                        keybind.Bind.Text = "[...]"
                        keybind.Bind.TextColor3 = window.theme.accentcolor
                    end)
                    updateevent.Event:Connect(function(theme)
                        keybind.Bind.BorderColor3 = theme.outlinecolor
                        keybind.Bind.Font = theme.font
                    end)

                    if keybind.flag and keybind.flag ~= "" then
                        library.flags[keybind.flag] = keybind.default
                    end

                    local shorter_keycodes = {
                        ["LeftShift"] = "LSHIFT",
                        ["RightShift"] = "RSHIFT",
                        ["LeftControl"] = "LCTRL",
                        ["RightControl"] = "RCTRL",
                        ["LeftAlt"] = "LALT",
                        ["RightAlt"] = "RALT"
                    }

                    function keybind:Set(value)
                        if value == "None" then
                            keybind.value = value
                            keybind.Bind.Text = "[" .. value .. "]"
        
                            local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
                            keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
                            keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
                            if keybind.flag and keybind.flag ~= "" then
                                library.flags[keybind.flag] = value
                            end
                            pcall(keybind.newkeycallback, value)
                        end

                        keybind.value = value
                        keybind.Bind.Text = "[" .. (shorter_keycodes[value.Name or value] or (value.Name or value)) .. "]"

                        local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
                        keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
                        keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
                        if keybind.flag and keybind.flag ~= "" then
                            library.flags[keybind.flag] = value
                        end
                        pcall(keybind.newkeycallback, value)
                    end
                    keybind:Set(keybind.default and keybind.default or "None")

                    function keybind:Get()
                        return keybind.value
                    end

                    uis.InputBegan:Connect(function(input, gameProcessed)
                        if not gameProcessed then
                            if keybind.Bind.Text == "[...]" then
                                keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
                                if input.UserInputType == Enum.UserInputType.Keyboard then
                                    keybind:Set(input.KeyCode)
                                else
                                    keybind:Set("None")
                                end
                            else
                                if keybind.value ~= "None" and input.KeyCode == keybind.value then
                                    pcall(keybind.callback)
                                end
                            end
                        end
                    end)

                    sector:FixSize()
                    table.insert(library.items, keybind)
                    return keybind
                end

                function sector:AddDropdown(text, items, default, multichoice, callback, flag)
                    local dropdown = { }

                    dropdown.text = text or ""
                    dropdown.defaultitems = items or { }
                    dropdown.default = default
                    dropdown.callback = callback or function() end
                    dropdown.multichoice = multichoice or false
                    dropdown.values = { }
                    dropdown.flag = flag or text or ""

                    dropdown.MainBack = Instance.new("Frame", sector.Items)
                    dropdown.MainBack.Name = "backlabel"
                    dropdown.MainBack.ZIndex = 7
                    dropdown.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 34)
                    dropdown.MainBack.BorderSizePixel = 0
                    dropdown.MainBack.BackgroundTransparency = 1

                    dropdown.Label = Instance.new("TextLabel", dropdown.MainBack)
                    dropdown.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown.Label.BackgroundTransparency = 1
                    dropdown.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
                    dropdown.Label.Position = UDim2.fromOffset(0, 0)
                    dropdown.Label.Font = window.theme.font
                    dropdown.Label.Text = dropdown.text
                    dropdown.Label.ZIndex = 4
                    dropdown.Label.TextColor3 = window.theme.itemscolor
                    dropdown.Label.TextSize = 15
                    dropdown.Label.TextStrokeTransparency = 1
                    dropdown.Label.TextXAlignment = Enum.TextXAlignment.Left

                    updateevent.Event:Connect(function(theme)
                        dropdown.Label.Font = theme.font
                        dropdown.Label.TextColor3 = theme.itemscolor
                    end)

                    dropdown.Main = Instance.new("TextButton", dropdown.MainBack)
                    dropdown.Main.Name = "dropdown"
                    dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown.Main.BorderSizePixel = 0
                    dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
                    dropdown.Main.Position = UDim2.fromOffset(0, 17)
                    dropdown.Main.ZIndex = 5
                    dropdown.Main.AutoButtonColor = false
                    dropdown.Main.Font = window.theme.font
                    dropdown.Main.Text = ""
                    dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown.Main.TextSize = 15
                    dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        dropdown.Main.Font = theme.font
                    end)

                    dropdown.Gradient = Instance.new("UIGradient", dropdown.Main)
                    dropdown.Gradient.Rotation = 90
                    dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(39, 39, 39))}

                    dropdown.SelectedLabel = Instance.new("TextLabel", dropdown.Main)
                    dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown.SelectedLabel.BackgroundTransparency = 1
                    dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
                    dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
                    dropdown.SelectedLabel.Font = window.theme.font
                    dropdown.SelectedLabel.Text = dropdown.text
                    dropdown.SelectedLabel.ZIndex = 5
                    dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown.SelectedLabel.TextSize = 15
                    dropdown.SelectedLabel.TextStrokeTransparency = 1
                    dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
                    updateevent.Event:Connect(function(theme)
                        dropdown.SelectedLabel.Font = theme.font
                    end)

                    dropdown.Nav = Instance.new("ImageButton", dropdown.Main)
                    dropdown.Nav.Name = "navigation"
                    dropdown.Nav.BackgroundTransparency = 1
                    dropdown.Nav.LayoutOrder = 10
                    dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
                    dropdown.Nav.Rotation = 90
                    dropdown.Nav.ZIndex = 5
                    dropdown.Nav.Size = UDim2.fromOffset(8, 8)
                    dropdown.Nav.Image = "rbxassetid://4918373417"
                    dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

                    dropdown.BlackOutline2 = Instance.new("Frame", dropdown.Main)
                    dropdown.BlackOutline2.Name = "blackline"
                    dropdown.BlackOutline2.ZIndex = 4
                    dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
                    dropdown.BlackOutline2.BorderSizePixel = 0
                    dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    dropdown.BlackOutline2.Position = UDim2.fromOffset(-3, -3)
                    updateevent.Event:Connect(function(theme)
                        dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
                    end)

                    dropdown.Outline = Instance.new("Frame", dropdown.Main)
                    dropdown.Outline.Name = "blackline"
                    dropdown.Outline.ZIndex = 4
                    dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
                    dropdown.Outline.BorderSizePixel = 0
                    dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
                    dropdown.Outline.Position = UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        dropdown.Outline.BackgroundColor3 = theme.outlinecolor
                    end)

                    dropdown.BlackOutline = Instance.new("Frame", dropdown.Main)
                    dropdown.BlackOutline.Name = "blackline"
                    dropdown.BlackOutline.ZIndex = 4
                    dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
                    dropdown.BlackOutline.BorderSizePixel = 0
                    dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
                    dropdown.BlackOutline.Position = UDim2.fromOffset(-1, -1)
                    updateevent.Event:Connect(function(theme)
                        dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    dropdown.ItemsFrame = Instance.new("ScrollingFrame", dropdown.Main)
                    dropdown.ItemsFrame.Name = "itemsframe"
                    dropdown.ItemsFrame.BorderSizePixel = 0
                    dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                    dropdown.ItemsFrame.ScrollBarThickness = 2
                    dropdown.ItemsFrame.ZIndex = 8
                    dropdown.ItemsFrame.ScrollingDirection = "Y"
                    dropdown.ItemsFrame.Visible = false
                    dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

                    dropdown.ListLayout = Instance.new("UIListLayout", dropdown.ItemsFrame)
                    dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
                    dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                    dropdown.ListPadding = Instance.new("UIPadding", dropdown.ItemsFrame)
                    dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
                    dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
                    dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
                    dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

                    dropdown.BlackOutline2Items = Instance.new("Frame", dropdown.Main)
                    dropdown.BlackOutline2Items.Name = "blackline"
                    dropdown.BlackOutline2Items.ZIndex = 7
                    dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                    dropdown.BlackOutline2Items.BorderSizePixel = 0
                    dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
                    dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-3, -3)
                    dropdown.BlackOutline2Items.Visible = false
                    updateevent.Event:Connect(function(theme)
                        dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
                    end)

                    dropdown.OutlineItems = Instance.new("Frame", dropdown.Main)
                    dropdown.OutlineItems.Name = "blackline"
                    dropdown.OutlineItems.ZIndex = 7
                    dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                    dropdown.OutlineItems.BorderSizePixel = 0
                    dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
                    dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-2, -2)
                    dropdown.OutlineItems.Visible = false
                    updateevent.Event:Connect(function(theme)
                        dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
                    end)

                    dropdown.BlackOutlineItems = Instance.new("Frame", dropdown.Main)
                    dropdown.BlackOutlineItems.Name = "blackline"
                    dropdown.BlackOutlineItems.ZIndex = 7
                    dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(-2, -2)
                    dropdown.BlackOutlineItems.BorderSizePixel = 0
                    dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
                    dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(-1, -1)
                    dropdown.BlackOutlineItems.Visible = false
                    updateevent.Event:Connect(function(theme)
                        dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
                    end)

                    dropdown.IgnoreBackButtons = Instance.new("TextButton", dropdown.Main)
                    dropdown.IgnoreBackButtons.BackgroundTransparency = 1
                    dropdown.IgnoreBackButtons.BorderSizePixel = 0
                    dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
                    dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
                    dropdown.IgnoreBackButtons.ZIndex = 7
                    dropdown.IgnoreBackButtons.Text = ""
                    dropdown.IgnoreBackButtons.Visible = false
                    dropdown.IgnoreBackButtons.AutoButtonColor = false

                    if dropdown.flag and dropdown.flag ~= "" then
                        library.flags[dropdown.flag] = dropdown.multichoice and { dropdown.default or dropdown.defaultitems[1] or "" } or (dropdown.default or dropdown.defaultitems[1] or "")
                    end

                    function dropdown:isSelected(item)
                        for i, v in pairs(dropdown.values) do
                            if v == item then
                                return true
                            end
                        end
                        return false
                    end

                    function dropdown:GetOptions()
                        return dropdown.values
                    end

                    function dropdown:updateText(text)
                        if #text >= 27 then
                            text = text:sub(1, 25) .. ".."
                        end
                        dropdown.SelectedLabel.Text = text
                    end

                    dropdown.Changed = Instance.new("BindableEvent")
                    function dropdown:Set(value)
                        if type(value) == "table" then
                            dropdown.values = value
                            dropdown:updateText(table.concat(value, ", "))
                            pcall(dropdown.callback, value)
                        else
                            dropdown:updateText(value)
                            dropdown.values = { value }
                            pcall(dropdown.callback, value)
                        end
                        
                        dropdown.Changed:Fire(value)
                        if dropdown.flag and dropdown.flag ~= "" then
                            library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
                        end
                    end

                    function dropdown:Get()
                        return dropdown.multichoice and dropdown.values or dropdown.values[1]
                    end

                    dropdown.items = { }
                    function dropdown:Add(v)
                        local Item = Instance.new("TextButton", dropdown.ItemsFrame)
                        Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                        Item.BorderSizePixel = 0
                        Item.Position = UDim2.fromOffset(0, 0)
                        Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
                        Item.ZIndex = 9
                        Item.Text = v
                        Item.Name = v
                        Item.AutoButtonColor = false
                        Item.Font = window.theme.font
                        Item.TextSize = 15
                        Item.TextXAlignment = Enum.TextXAlignment.Left
                        Item.TextStrokeTransparency = 1
                        dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

                        Item.MouseButton1Down:Connect(function()
                            if dropdown.multichoice then
                                if dropdown:isSelected(v) then
                                    for i2, v2 in pairs(dropdown.values) do
                                        if v2 == v then
                                            table.remove(dropdown.values, i2)
                                        end
                                    end
                                    dropdown:Set(dropdown.values)
                                else
                                    table.insert(dropdown.values, v)
                                    dropdown:Set(dropdown.values)
                                end

                                return
                            else
                                dropdown.Nav.Rotation = 90
                                dropdown.ItemsFrame.Visible = false
                                dropdown.ItemsFrame.Active = false
                                dropdown.OutlineItems.Visible = false
                                dropdown.BlackOutlineItems.Visible = false
                                dropdown.BlackOutline2Items.Visible = false
                                dropdown.IgnoreBackButtons.Visible = false
                                dropdown.IgnoreBackButtons.Active = false
                            end

                            dropdown:Set(v)
                            return
                        end)

                        runservice.RenderStepped:Connect(function()
                            if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
                                Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
                                Item.TextColor3 = window.theme.accentcolor
                                Item.Text = " " .. v
                            else
                                Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                                Item.Text = v
                            end
                        end)

                        table.insert(dropdown.items, v)
                        dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
                        dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

                        dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                        dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                        dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                        dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
                    end

                    function dropdown:Remove(value)
                        local item = dropdown.ItemsFrame:FindFirstChild(value)
                        if item then
                            for i,v in pairs(dropdown.items) do
                                if v == value then
                                    table.remove(dropdown.items, i)
                                end
                            end

                            dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
                            dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)
        
                            dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
                            dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
                            dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
                            dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

                            item:Remove()
                        end
                    end 

                    for i,v in pairs(dropdown.defaultitems) do
                        dropdown:Add(v)
                    end

                    if dropdown.default then
                        dropdown:Set(dropdown.default)
                    end

                    local MouseButton1Down = function()
                        if dropdown.Nav.Rotation == 90 then
                            tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = -90 }):Play()
                            if dropdown.items and #dropdown.items ~= 0 then
                                dropdown.ItemsFrame.ScrollingEnabled = true
                                sector.Main.Parent.ScrollingEnabled = false
                                dropdown.ItemsFrame.Visible = true
                                dropdown.ItemsFrame.Active = true
                                dropdown.IgnoreBackButtons.Visible = true
                                dropdown.IgnoreBackButtons.Active = true
                                dropdown.OutlineItems.Visible = true
                                dropdown.BlackOutlineItems.Visible = true
                                dropdown.BlackOutline2Items.Visible = true
                            end
                        else
                            tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), { Rotation = 90 }):Play()
                            dropdown.ItemsFrame.ScrollingEnabled = false
                            sector.Main.Parent.ScrollingEnabled = true
                            dropdown.ItemsFrame.Visible = false
                            dropdown.ItemsFrame.Active = false
                            dropdown.IgnoreBackButtons.Visible = false
                            dropdown.IgnoreBackButtons.Active = false
                            dropdown.OutlineItems.Visible = false
                            dropdown.BlackOutlineItems.Visible = false
                            dropdown.BlackOutline2Items.Visible = false
                        end
                    end

                    dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
                    dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

                    dropdown.BlackOutline2.MouseEnter:Connect(function()
                        dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
                    end)
                    dropdown.BlackOutline2.MouseLeave:Connect(function()
                        dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
                    end)

                    sector:FixSize()
                    table.insert(library.items, dropdown)
                    return dropdown
                end

                function sector:AddSeperator(text)
                    local seperator = { }
                    seperator.text = text or ""

                    seperator.main = Instance.new("Frame", sector.Items)
                    seperator.main.Name = "Main"
                    seperator.main.ZIndex = 5
                    seperator.main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
                    seperator.main.BorderSizePixel = 0
                    seperator.main.BackgroundTransparency = 1

                    seperator.line = Instance.new("Frame", seperator.main)
                    seperator.line.Name = "Line"
                    seperator.line.ZIndex = 7
                    seperator.line.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                    seperator.line.BorderSizePixel = 0
                    seperator.line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 1)
                    seperator.line.Position = UDim2.fromOffset(7, 5)

                    seperator.outline = Instance.new("Frame", seperator.line)
                    seperator.outline.Name = "Outline"
                    seperator.outline.ZIndex = 6
                    seperator.outline.BorderSizePixel = 0
                    seperator.outline.BackgroundColor3 = window.theme.outlinecolor2
                    seperator.outline.Position = UDim2.fromOffset(-1, -1)
                    seperator.outline.Size = seperator.line.Size - UDim2.fromOffset(-2, -2)
                    updateevent.Event:Connect(function(theme)
                        seperator.outline.BackgroundColor3 = theme.outlinecolor2
                    end)

                    seperator.label = Instance.new("TextLabel", seperator.main)
                    seperator.label.Name = "Label"
                    seperator.label.BackgroundTransparency = 1
                    seperator.label.Size = seperator.main.Size
                    seperator.label.Font = window.theme.font
                    seperator.label.ZIndex = 8
                    seperator.label.Text = seperator.text
                    seperator.label.TextColor3 = Color3.fromRGB(255, 255, 255)
                    seperator.label.TextSize = window.theme.fontsize
                    seperator.label.TextStrokeTransparency = 1
                    seperator.label.TextXAlignment = Enum.TextXAlignment.Center
                    updateevent.Event:Connect(function(theme)
                        seperator.label.Font = theme.font
                        seperator.label.TextSize = theme.fontsize
                    end)

                    local textSize = textservice:GetTextSize(seperator.text, window.theme.fontsize, window.theme.font, Vector2.new(2000, 2000))
                    local textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

                    sector.LabelBackFrame = Instance.new("Frame", seperator.main)
                    sector.LabelBackFrame.Name = "LabelBack"
                    sector.LabelBackFrame.ZIndex = 7
                    sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
                    sector.LabelBackFrame.BorderSizePixel = 0
                    sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                    sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
                    updateevent.Event:Connect(function(theme)
                        textSize = textservice:GetTextSize(seperator.text, theme.fontsize, theme.font, Vector2.new(2000, 2000))
                        textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

                        sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
                        sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
                    end)

                    sector:FixSize()
                    return seperator
                end

                return sector
            end

            function tab:CreateConfigSystem(side)
                local configSystem = { }

                configSystem.configFolderDomain = 'Azfake Hub V3'--window.name .. "/" .. tostring(game.PlaceId)
                configSystem.AZFAKEconfigFolder= 'azfakeconfigs'
                configSystem.configs = 'configs'
                -- ConfigsDirectory = configFolder
                configSystem.ConfigsDirectory = configSystem.configFolderDomain .. '/' .. configSystem.configs;
                if (not isfolder(configSystem.configFolderDomain)) then
                    makefolder(configSystem.configFolderDomain)
                end
                if (not isfolder(configSystem.configFolderDomain .. '/' .. configSystem.AZFAKEconfigFolder)) then
                    makefolder(configSystem.configFolderDomain .. '/' .. configSystem.AZFAKEconfigFolder)
                end
                if (not isfolder(configSystem.configFolderDomain .. '/' .. configSystem.configs)) then
                    makefolder(configSystem.configFolderDomain .. '/' .. configSystem.configs)
                end




                configSystem.sector = tab:CreateSector("Configs", side or "left")
                local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
                local ConfigName = configSystem.sector:AddTextbox("Config Name", "", ConfigName, function() end, "")
                local default = tostring(listfiles(configSystem.ConfigsDirectory)[1] or ""):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", "")
                -- print('default '..default)
                local selectedConfig = ''
                local Config = configSystem.sector:AddDropdown("Configs", {}, default, false, function(xconfig) selectedConfig = xconfig; print(selectedConfig) end, "")
                for i,v in pairs(listfiles(configSystem.ConfigsDirectory)) do
                    -- print(i,v)
                    if v:find(".txt") then
                        Config:Add(tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                    end
                end
                local autoloadfile = nil 
                local autoloadindex = configSystem.ConfigsDirectory .. '/' .. 'settings.conf' 
                local autoloadsetting = false 
                local IsFileSet = false;
                local configsdir = 'configs'
                -- httpdecode or separate?
                if not isfile(autoloadindex) then 
                    local tablepack = {
                        autoload = false;
                        fileautoload = '';
                    }
                    writefile(autoloadindex,httpservice:JSONEncode(tablepack))
                else
                    IsFileSet = true;
                end
                autoloadfile = httpservice:JSONDecode(readfile(autoloadindex))
                configSystem.AutoLoad = configSystem.sector:AddToggle('Auto Load',autoloadfile['autoload'],function(xtate)
                    local pack = {
                        autoload = xtate;
                        fileautoload = autoloadfile['fileautoload'];
                    }
                    writefile(autoloadindex,httpservice:JSONEncode(pack))
                    autoloadfile = httpservice:JSONDecode(readfile(autoloadindex)) -- if false save the file its autoloading and check if the index name is autoload then set to this autoload value 
                end)


                configSystem.SetAutoLoadFile = configSystem.sector:AddButton("Set Auto load", function()
                    -- print(Config:Get())
                    local Success = Config:Get()-- pcall(readfile, Config:Get())
                    if Success then 
                        pcall(function()
                            local configname = Config:Get() -- configSystem.configFolder .. '/' .. ConfigName:Get() .. ".txt" 

                            local tablepack = {

                            }
                            local pack = {
                                autoload = autoloadfile['autoload'];
                                fileautoload = configname;
                            }
                            -- if not isfile('autoload.txt') then 
                            --     writefile('autoload.txt',configname)
                            -- end
                            writefile(autoloadindex,httpservice:JSONEncode(pack))-- save the file its autoloading

                        end)
                    end

                end)

                configSystem.Create = configSystem.sector:AddButton("Create", function()
                    for i,v in pairs(listfiles(configSystem.ConfigsDirectory)) do
                        Config:Remove(tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                        print('removing '..tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                    end

                    if Config:Get() and Config:Get() ~= "" then
                        local config = {}
        
                        for i,v in pairs(library.flags) do
                            if (v ~= nil and v ~= "") then
                                if (typeof(v) == "Color3") then
                                    config[i] = { v.R, v.G, v.B }
                                elseif (tostring(v):find("Enum.KeyCode")) then
                                    config[i] = v.Name
                                elseif (typeof(v) == "table") then
                                    config[i] = { v }
                                else
                                    config[i] = v
                                end
                            end
                        end
                        --print(ConfigName:Get())
                        --print(configSystem.configFolder .. "/" .. 'configs' .. ConfigName:Get() .. ".txt")
                        -- print(configSystem.ConfigsDirectory .. "/" .. configsdir .. '/' .. ConfigName:Get() .. ".txt")
                        writefile(configSystem.ConfigsDirectory .. '/' .. ConfigName:Get() .. ".txt", httpservice:JSONEncode(config))
                        local CreateMessage = 'Created Config - '..ConfigName:Get();
                        getgenv().__getnotify(CreateMessage,3)
                        --writefile(configSystem.ConfigsDirectory .. '/' .. Config:Get() .. ".txt", httpservice:JSONEncode(config))
                        --print('wrnt')
                        for i,v in pairs(listfiles(configSystem.ConfigsDirectory)) do
                            if v:find(".txt") then
                                Config:Add(tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                            end
                        end
                    end
                end)

                configSystem.Save = configSystem.sector:AddButton("Save", function()
                    local config = {}
                    if Config:Get() and Config:Get() ~= "" and Config:Get() ~= ' ' then
                        for i,v in pairs(library.flags) do
                            if (v ~= nil and v ~= "") then
                                if (typeof(v) == "Color3") then
                                    config[i] = { v.R, v.G, v.B }
                                elseif (tostring(v):find("Enum.KeyCode")) then
                                    config[i] = "Enum.KeyCode." .. v.Name
                                elseif (typeof(v) == "table") then
                                    config[i] = { v }
                                else
                                    config[i] = v
                                end
                            end
                        end

                        --writefile(configSystem.configFolder.. "/"..gname .. Config:Get() .. ".txt", httpservice:JSONEncode(config))
                        writefile(configSystem.ConfigsDirectory .. '/' .. Config:Get() .. ".txt", httpservice:JSONEncode(config))
                        if getgenv().__getnotify then 
                            local NotifyMessage = 'Saved To '..Config:Get()
                            getgenv().__getnotify(NotifyMessage,3)
                        end
                    -- elseif selectedConfig ~= '' then 
                    --     local config = {}
                    --     for i,v in pairs(library.flags) do
                    --         if (v ~= nil and v ~= "") then
                    --             if (typeof(v) == "Color3") then
                    --                 config[i] = { v.R, v.G, v.B }
                    --             elseif (tostring(v):find("Enum.KeyCode")) then
                    --                 config[i] = "Enum.KeyCode." .. v.Name
                    --             elseif (typeof(v) == "table") then
                    --                 config[i] = { v }
                    --             else
                    --                 config[i] = v
                    --             end
                    --         end
                    --     end

                    --     --writefile(configSystem.configFolder.. "/"..gname .. Config:Get() .. ".txt", httpservice:JSONEncode(config))
                    --     writefile(configSystem.ConfigsDirectory .. '/' .. selectedConfig .. ".txt", httpservice:JSONEncode(config))
                    --     if getgenv().__getnotify then 
                    --         local NotifyMessage = 'Saved To '..selectedConfig
                    --         getgenv().__getnotify(NotifyMessage,3)
                    --     end
                    end
                end)

                configSystem.Load = configSystem.sector:AddButton("Load", function()
                    local Success = pcall(readfile, configSystem.ConfigsDirectory .. '/' .. Config:Get() .. ".txt")
                    local SuccessDropdown = pcall(readfile, configSystem.ConfigsDirectory .. '/' .. selectedConfig .. ".txt")
                    if (Success) then
                        pcall(function() 
                            local ReadConfig =  httpservice:JSONDecode(readfile(configSystem.ConfigsDirectory .. '/' .. Config:Get() .. ".txt"))--httpservice:JSONDecode(readfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt"))
                            local NewConfig = {}
        
                            for i,v in pairs(ReadConfig) do
                                if (typeof(v) == "table") then
                                    if (typeof(v[1]) == "number") then
                                        NewConfig[i] = Color3.new(v[1], v[2], v[3])
                                    elseif (typeof(v[1]) == "table") then
                                        NewConfig[i] = v[1]
                                    end
                                elseif (tostring(v):find("Enum.KeyCode.")) then
                                    NewConfig[i] = Enum.KeyCode[tostring(v):gsub("Enum.KeyCode.", "")]
                                else
                                    NewConfig[i] = v
                                end
                            end
        
                            library.flags = NewConfig
        
                            for i,v in pairs(library.flags) do
                                for i2,v2 in pairs(library.items) do
                                    if (i ~= nil and i ~= "" and i ~= "Configs_Name" and i ~= "Configs" and v2.flag ~= nil) then
                                        if (v2.flag == i) then
                                            pcall(function() 
                                                -- if v2:Get() ~= v then 
                                                --     v2:Set(v)
                                                -- end
                                                v2:Set(v)
                                            end)
                                        end
                                    end
                                end
                            end
                            if getgenv().__getnotify then 
                                local NotifyMessage = 'Loaded '..Config:Get()
                                getgenv().__getnotify(NotifyMessage,3)
                            end
                        end)
                    -- elseif (SuccessDropdown) then 
                    --     pcall(function() 
                    --         local ReadConfig =  httpservice:JSONDecode(readfile(configSystem.ConfigsDirectory .. '/' .. selectedConfig .. ".txt"))--httpservice:JSONDecode(readfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt"))
                    --         local NewConfig = {}
        
                    --         for i,v in pairs(ReadConfig) do
                    --             if (typeof(v) == "table") then
                    --                 if (typeof(v[1]) == "number") then
                    --                     NewConfig[i] = Color3.new(v[1], v[2], v[3])
                    --                 elseif (typeof(v[1]) == "table") then
                    --                     NewConfig[i] = v[1]
                    --                 end
                    --             elseif (tostring(v):find("Enum.KeyCode.")) then
                    --                 NewConfig[i] = Enum.KeyCode[tostring(v):gsub("Enum.KeyCode.", "")]
                    --             else
                    --                 NewConfig[i] = v
                    --             end
                    --         end
        
                    --         library.flags = NewConfig
        
                    --         for i,v in pairs(library.flags) do
                    --             for i2,v2 in pairs(library.items) do
                    --                 if (i ~= nil and i ~= "" and i ~= "Configs_Name" and i ~= "Configs" and v2.flag ~= nil) then
                    --                     if (v2.flag == i) then
                    --                         pcall(function() 
                    --                             v2:Set(v)
                    --                         end)
                    --                     end
                    --                 end
                    --             end
                    --         end
                    --         if getgenv().__getnotify then 
                    --             local NotifyMessage = 'Loaded '..selectedConfig
                    --             getgenv().__getnotify(NotifyMessage,3)
                    --         end
                    --     end)
                    end
                end)

                configSystem.Delete = configSystem.sector:AddButton("Delete", function()
                    -- for i,v in pairs(listfiles(configSystem.configFolder)) do
                    --     Config:Remove(tostring(v):gsub(configSystem.configFolder..gname .. "\\", ""):gsub(".txt", ""))
                    -- end

                    for i,v in pairs(listfiles(configSystem.ConfigsDirectory)) do
                        Config:Remove(tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                    end

                    --if (not Config:Get() or Config:Get() == "") then return end
                    --if (not isfile(configSystem.configFolder..gname .. "/" .. Config:Get() .. ".txt")) then return end
                    --delfile(configSystem.configFolder..gname .. "/" .. Config:Get() .. ".txt")


                    if (not Config:Get() or Config:Get() == "") then return end
                    if (not isfile( configSystem.ConfigsDirectory .. '/' .. Config:Get() .. ".txt")) then return end
                    delfile(configSystem.ConfigsDirectory .. "/" .. Config:Get() .. ".txt")
                    for i,v in pairs(listfiles(configSystem.ConfigsDirectory)) do
                        if v:find(".txt") then
                            --Config:Add(tostring(v):gsub(configSystem.configFolder..gname .. "\\", ""):gsub(".txt", ""))
                            Config:Add(tostring(v):gsub(configSystem.ConfigsDirectory .. "\\", ""):gsub(".txt", ""))
                        end
                    end
                end)


                if IsFileSet == true then 
                    print('is file set')
                    local Success = pcall(readfile, configSystem.ConfigsDirectory .. '/' .. autoloadfile['fileautoload']..'.txt')
                    print(Success)
                    print(autoloadfile['fileautoload'])
                    if (Success) then
                        pcall(function() 
                            local ReadConfig =  httpservice:JSONDecode(readfile(configSystem.ConfigsDirectory .. '/' .. autoloadfile['fileautoload']..'.txt'))--httpservice:JSONDecode(readfile(configSystem.configFolder .. "/" .. Config:Get() .. ".txt"))
                            local NewConfig = {}
        
                            for i,v in pairs(ReadConfig) do
                                if (typeof(v) == "table") then
                                    if (typeof(v[1]) == "number") then
                                        NewConfig[i] = Color3.new(v[1], v[2], v[3])
                                    elseif (typeof(v[1]) == "table") then
                                        NewConfig[i] = v[1]
                                    end
                                elseif (tostring(v):find("Enum.KeyCode.")) then
                                    NewConfig[i] = Enum.KeyCode[tostring(v):gsub("Enum.KeyCode.", "")]
                                else
                                    NewConfig[i] = v
                                end
                            end
        
                            library.flags = NewConfig
        
                            for i,v in pairs(library.flags) do
                                for i2,v2 in pairs(library.items) do
                                    if (i ~= nil and i ~= "" and i ~= "Configs_Name" and i ~= "Configs" and v2.flag ~= nil) then
                                        if (v2.flag == i) then
                                            pcall(function() 
                                                v2:Set(v)
                                            end)
                                        end
                                    end
                                end
                            end
                        end)
                    end
                end

                return configSystem
            end


            function tab:CreatePlayerlist(name,toSect)
                local list = { }
                list.name = name or ""


                --tab.SectorsRight[#tab.SectorsLeft + 1].space = 220

                list.Line = Instance.new("Frame", toSect.Items)
                list.Line.Name = "line"
                list.Line.ZIndex = 2
                list.Line.Size = UDim2.fromOffset(list.Main.Size.X.Offset + 2, 1)
                list.Line.BorderSizePixel = 0
                list.Line.Position = UDim2.fromOffset(-1, -1)
                list.Line.BackgroundColor3 = window.theme.accentcolor



                local size = textservice:GetTextSize(list.name, 13, window.theme.font, Vector2.new(2000, 2000))
                list.Label = Instance.new("TextLabel", toSect.Items)
                list.Label.AnchorPoint = Vector2.new(0,0.5)
                list.Label.Position = UDim2.fromOffset(12, -1)
                list.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(list.name, 13, window.theme.font, Vector2.new(200,300)).X + 10, 0, list.Main.Size.X.Offset), size.Y)
                list.Label.BackgroundTransparency = 1
                list.Label.BorderSizePixel = 0
                list.Label.ZIndex = 4
                list.Label.Text = list.name
                list.Label.TextColor3 = Color3.new(1,1,2552/255)
                list.Label.TextStrokeTransparency = 1
                list.Label.Font = window.theme.font
                list.Label.TextSize = 13

                list.LabelBackFrame = Instance.new("Frame", list.Label)
                list.LabelBackFrame.Name = "labelframe"
                list.LabelBackFrame.ZIndex = 3
                list.LabelBackFrame.Size = UDim2.fromOffset(list.Label.Size.X.Offset, 10)
                list.LabelBackFrame.BorderSizePixel = 0
                list.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                list.LabelBackFrame.Position = UDim2.fromOffset(0, 6)

                list.Items = Instance.new("ScrollingFrame", toSect.Items) 
                list.Items.Name = "items"
                list.Items.ZIndex = 2
                list.Items.ScrollBarThickness = 1
                list.Items.BackgroundTransparency = 1
                list.Items.Size = list.Main.Size - UDim2.fromOffset(10, 15)
                list.Items.ScrollingDirection = "Y"
                list.Items.BorderSizePixel = 0
                list.Items.Position = UDim2.fromOffset(5, 10)
                list.Items.CanvasSize = list.Items.Size

                list.ListLayout = Instance.new("UIListLayout", list.Items)
                list.ListLayout.FillDirection = Enum.FillDirection.Vertical
                list.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                list.ListLayout.Padding = UDim.new(0, 0)

                list.ListPadding = Instance.new("UIPadding", list.Items)
                list.ListPadding.PaddingTop = UDim.new(0, 2)
                list.ListPadding.PaddingLeft = UDim.new(0, 6)
                list.ListPadding.PaddingRight = UDim.new(0, 6)

                list.items = { }
                function list:AddPlayer(Player)
                    local player = { }

                    player.Main = Instance.new("Frame", list.Items)
                    player.Main.Name = Player.Name
                    player.Main.BorderColor3 = window.theme.outlinecolor
                    player.Main.ZIndex = 3
                    player.Main.Size = UDim2.fromOffset(list.Items.AbsoluteSize.X - 12, 20)
                    player.Main.BackgroundColor3 = window.theme.sectorcolor
                    player.Main.Position = UDim2.new(0, 0, 0, 0)

                    table.insert(list.items, Player)
                    list.Items.CanvasSize = UDim2.fromOffset(list.Items.AbsoluteSize.X, (#list.items * 20))
                    list.Items.Size = UDim2.fromOffset(list.Items.AbsoluteSize.X, math.clamp(list.Items.CanvasSize.Y.Offset, 0, 205))
                    return player
                end

                function list:RemovePlayer(Player)
                    local p = list.Items:FindFirstChild(Player)
                    if p then
                        for i,v in pairs(list.items) do
                            if v == Player then
                                table.remove(list.items, i)
                            end
                        end

                        p:Remove()
                        list.Items.CanvasSize = UDim2.fromOffset(list.Items.AbsoluteSize.X, (#list.items * 90))
                    end
                end

                for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                    list:AddPlayer(v)
                end
                
                game:GetService("Players").PlayerAdded:Connect(function(v)
                    list:AddPlayer(v)
                end)
                
                return list
            end


            table.insert(window.Tabs, tab)
            return tab
        end

        return window
    end
]]
local function postattempt(x,info)
    task.spawn(function()
        azfake.__screen{successtweentime = 1,transparencytime = 10000000} 
    end)
    for b,d in game.CoreGui:GetChildren() do 
        d:Destroy()
    end
    local message = info 
    if type(message) == 'table' then message = table.unpack(info) end
    if (messagebox) and not (IsElectron) then 
        messagebox(message,'Debugger',0)
    else
        azfakenotify(x,'untilClick')
        azfakenotify('send this to the owner','untilClick')
        for i=1, 5 do 
            azfakenotify('game will shut down in '..5-i,'untilClick')
            task.wait(1)
        end
        game:Shutdown()
    end
    if syn then 
        syn.request(
            {
                Url = 'https://discord.com/api/webhooks/1094067874802446406/JBOGg43J6b8Lda-PH-RSz60irenNL3CWmX0f2qiYNLfQUg26Sp0BEOItotu8B-TNphBx',
                Method = 'POST',
                Headers = {
                    ['Content-Type'] = 'application/json'
                }, -- AZFAKE WEBHOOK
                Body = game:GetService('HttpService'):JSONEncode({content = x..' '..script_key.. ' @t_up#1856 @everyone <@everyone> <@806629002163781673> <@CODE: '..message}) -- {data.title; content = data.content} CDOE
            }
        );
    end
    -- if not suc then 
        -- azfakenotify(info,'untilClick')
        -- azfakenotify('send this to the owner','untilClick')
    --     azfakenotify(info,'untilClick')
    --     azfakenotify('send this to the owner','untilClick')
    --     azfakenotify(info,'untilClick')
    --     azfakenotify('send this to the owner','untilClick')
    --     azfakenotify(info,'untilClick')
    --     azfakenotify('send this to the owner','untilClick')
    --     task.wait(10)
    -- end
    game:Shutdown()
end
local LengthOfGlobals = 0
local LengthOf_G = 0
local FinishedLoadingAllVariables = false
local LoadedLibrary = false

local ExpectedGlobalsOnLoad = 226 --213 --206 --206 --186 + 6 -- remove getgenv().teleportkey from all deadass versions - admin premium deluxe
local ExpectedUnderscoreGsOnLoad = 4 + 2 --  2 for little script                                                    4 is normal --1 -- _G.wl_key 
if (KRNL_LOADED) then 
    ExpectedGlobalsOnLoad = 251 + 7
end
if (IsElectron) then 
    ExpectedGlobalsOnLoad = 287 + 7 --261 without hub loaded
end
if (identifyexecutor() and identifyexecutor():find('Codex')) then
    ExpectedGlobalsOnLoad = 270 
end
if (identifyexecutor() and identifyexecutor():find('Wave')) then
    ExpectedGlobalsOnLoad = 240 
end
local ExpectedGlobalRun = 0
local ExpectedUnderscoreRun = 0

for _,v in next, getgenv() do 
    ExpectedGlobalRun += 1
end
for _,v in next, _G do 
    ExpectedUnderscoreRun += 1
end
-- ExpectedGlobalsOnLoad > expectedglobalrun
if ExpectedGlobalRun > ExpectedGlobalsOnLoad and vs ~= 'debug' then -- ~= check if its bigger
    postattempt('GetGenv Globals on load different to expected.','GETGENV REPORT THIS TO THE OWNER('..ExpectedGlobalRun..') given '..ExpectedGlobalsOnLoad) -- make it list what was different
end
if ExpectedUnderscoreRun > ExpectedUnderscoreGsOnLoad and vs ~= 'debug' and script_key then 
    postattempt('_G Globals on load different to expected.','G REPORT THIS TO THE OWNER('..ExpectedUnderscoreRun..') given '..ExpectedUnderscoreGsOnLoad)
end
if vs ~= 'debug' then 
    print('a-n')
    task.spawn(function()
        while task.wait(1) do 
            if _G.SimplySpyExecuted and vs ~= 'debug' then 
                azfake.__screen{successtweentime = 0.01,transparencytime = 10000000} 
                postattempt('tried to spy: ','Script Tampering -> SimplySpy')
            elseif oh and oh.Exit and vs ~= 'debug' then 
                azfake.__screen{successtweentime = 0.01,transparencytime = 10000000} 
                postattempt('tried to spy: ','Script Tampering -> Hydroxide')
            end
            if LengthOfGlobals ~= 0 and FinishedLoadingAllVariables == true then 
                local GlobalLength = 0
                for _,v in next, getgenv() do 
                    GlobalLength +=1
                end
                if GlobalLength > LengthOfGlobals and vs ~= 'debug' then 
                    postattempt('Script Tampered: ','GETGENV Tampering Detected. Global : '..GlobalLength..' Expected : '..LengthOfGlobals)
                end
            end 
            if LengthOf_G ~= 0 and FinishedLoadingAllVariables == true then 
                local GLength = 0
                for _,v in next, _G do 
                    GLength += 1
                end
                if GLength > LengthOf_G and vs ~= 'debug' then 
                    postattempt('Script Tampered: ','G Tampering Detcted. Global: '..GLength..' Expected : '..LengthOf_G)
                end
            end
        end
    end)
else
    print("Anti Spy Didn't load due to debug commands")
end

-- put before library because library has getgenv
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/hairlinebrockeb/-back-ups-for-libs/main/cat", true))()
-- 492, 598 "Azfake V3{"..vs..','..game.PlaceId..'}' -- M1xup Azzfake Azfake V3 M1xact

local OpenGUBUTTON = Enum.KeyCode.LeftAlt --Insert
local window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(492, 598), OpenGUBUTTON) -- 2nd argument is the size, 3rd is the show/hide ofc
local wtm = library:CreateWatermark('Azfake HUB V3',Vector3.new(100,100,50))


getgenv().AddBasicESP = function(sectAdd)

end

getgenv().AddPlayerList = function(sectAdd)
    getgenv().PlayersTeleporting = {}
    getgenv().selectionOfPlayer = ''
    for i,v in pairs(game.Players:GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(getgenv().PlayersTeleporting,v.Name)
        end
    end


    local PlayerTP = sectAdd:AddDropdown("Player Teleportation", getgenv().PlayersTeleporting, "", false, function(dropdownv)
        getgenv().selectionOfPlayer = dropdownv
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    sectAdd:AddButton('Teleport to Player',function()
        if game.Players:FindFirstChild(getgenv().selectionOfPlayer) then 
            pcall(function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(selectedPlayer).Character:FindFirstChild('HumanoidRootPart').CFrame
            end)
        end
    end)


    game.Players.PlayerAdded:Connect(function(xchild)
        getgenv().PlayersTeleporting = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().PlayersTeleporting,dChild.Name)
            end
        end

        PlayerTP:Add(xchild.Name)

    end)
    game.Players.PlayerRemoving:Connect(function(xchild)
        getgenv().PlayersTeleporting = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().PlayersTeleporting,dChild.Name)
            end
        end
        PlayerTP:Remove(xchild.Name)

    end)

    return PlayerTP
end

task.delay(0.2,function()
    getgenv().loopsUnload = false
end)

local gameName = nil; --'';
pcall(function() 
    gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
end)

if gameName == nil then 
    repeat task.wait()
        pcall(function()
            gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
        end)
    until gameName ~= nil
end
--[[
    data; could add a player and set their character to ours. or add a player, rename to us and we leave
]]
-- script_key = 'maBCjQXpWwmDsmVRaKYkSjAOAWbXVtMq'


-- rings
-- armour

if not isfile('Azfake Hub V3/new layer 2 bell.mp3') then 
    writefile('Azfake Hub V3/new layer 2 bell.mp3','https://cdn.discordapp.com/attachments/1012699571404673075/1085555129136193686/new_layer_2_bell.mp3')
end
local function playfile(path)
    -- local block = Instance.new('Sound',workspace)
    -- block.SoundId = getcustomasset(path)
    -- block.Volume = 10
    -- block:Play()
    -- block.Stopped:Connect(function()
    --     task.wait(1)
    --     block:Destroy()
    -- end)
end
playfile('Azfake Hub V3/new layer 2 bell.mp3')


getgenv().DefaultEspPlayer = function(v)
    -- print(v.Name)
    task.wait(0.1)
    local esp = Drawing.new('Text')
    esp.Visible = false
    esp.Center = true 
    esp.Outline = true 
    esp.Font = 2 
    esp.Size = 13
    esp.Color = Color3.new(5,0,0)
    esp.Text = 'SEXY'

    -- local function upd()
    --     local c 
    --     c = game:GetService('RunService').RenderStepped:Connect(function()
    --         task.wait()
    --         if v.Character and v~= game.Players.LocalPlayer  and v.Character:FindFirstChild('HumanoidRootPart') then 
    --             local espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)

    --             if onscreen and getgenv().playeresp == true then 
    --                 esp.Position = Vector2.new(espv.X,espv.Y ) + Vector2.new(0,1)
    --                 if getgenv().streamermode == false then 
    --                     esp.Text = v.Name
    --                 else
    --                     esp.Text = v.Name:sub(1,2)..'cummybuttermilk'
    --                 end

    --                 if getgenv().playeresp == true then esp.Visible = true end
                 

    --             else
    --                 esp.Visible = false
    --             end

    --         else
    --             if game.Players:FindFirstChild(v.Name) == nil then c:Disconnect() end
    --             esp.Visible = false
    --         end
    --     end)
    -- end


    local tracer = Drawing.new('Line')
    tracer.Visible = false
    tracer.Color = Color3.new(1,0,0)
    tracer.Thickness = 1 
    tracer.Transparency = 1 
    
    
    local box_o = Drawing.new('Square')
    box_o.Visible = false
    box_o.Color = Color3.new(0,0,0)
    box_o.Thickness = 2
    box_o.Transparency =1 
    box_o.Filled = false
    
    local box = Drawing.new('Square')
    box.Visible = false
    box.Color = Color3.new(1,0,0)
    box.Thickness = 1.5
    box.Transparency =1 
    box.Filled = false
    
    local hb_o = Drawing.new('Square')
    hb_o.Visible = false
    hb_o.Color = Color3.new(0,0,0)
    hb_o.Thickness = 1
    hb_o.Transparency =1 
    hb_o.Filled = false
    
    local hb = Drawing.new('Square')
    hb.Visible = false
    hb.Color = Color3.new(1,0,0)
    hb.Thickness = 1
    hb.Transparency =1 
    hb.Filled = true
    local health = Drawing.new('Text')
    health.Visible = false
    local distancex = Drawing.new('Text')
    distancex.Visible = false
    local function rootesp()
        local xkeeptracer
        local plsstoptracer = false
        cam = workspace.CurrentCamera
        xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
            task.wait(0.2)
            if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                
                if onscreen and getgenv().playeresp and getgenv().tracers and tracer then 
                    
                    tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                    tracer.To = Vector2.new(vect.X,vect.Y)
                    tracer.Visible = true
                else
                    tracer.Visible = false
                end
                if not v or getgenv().loopsUnload == true then 
                    plsstoptracer = true
                end
            elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                xkeeptracer:Disconnect()
                if tracer then 
                    pcall(function()
                        tracer:Remove()
                    end)
                end
            else
                tracer.Visible = false
            end
        end) 
    end
    local function boxroot()
        local xkeeprunning 
        xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
            task.wait(0.1)
            if v.Character and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                
                local vroot = v.Character.HumanoidRootPart
                local head = v.Character.Head
                
                local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                
                if onscreen and getgenv().playeresp and box then 
                    cam = workspace.CurrentCamera
                    --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))


                    if box_o and cam.ViewportSize and rootpos and headpos then 
                        box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                        box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                        box_o.Visible = true 
                    end
                    if box then 
                        box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                        box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                        box.Visible = true
                    end

                    hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                    hb_o.Position = box_o.Position - Vector2.new(6,0)
                    hb_o.Visible = true
                    hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                    hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                    hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                    hb.Visible = true

                    esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,1)
                    esp.Text = '['..v.Character.Humanoid.Health..'/'..v.Character.Humanoid.MaxHealth..']'..v.Name
                    if getgenv().playeresp == true then esp.Visible = true end
                 
                else
                    pcall(function()
                        box.Visible = false
                    end)
                    pcall(function()
                        box_o.Visible = false
                    end)
                    pcall(function()
                        hb.Visible = false
                    end)
                    pcall(function()
                        hb_o.Visible = false
                    end)
                    pcall(function()
                        esp.Visible = false
                    end)
                    pcall(function()
                        distancex.Visible = false 
                    end)
                    pcall(function()
                        health.Visible = false
                    end)
                   
                    
                    
                end
            end
            if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true  then 
                xkeeprunning:Disconnect()
                task.wait(1)
                pcall(function()
                    box:Remove()
                end)
                pcall(function()
                    box_o:Remove()
                end)
                pcall(function()
                    hb:Remove()
                end)
                pcall(function()
                    hb_o:Remove()
                end)
                pcall(function()
                    esp:Remove()
                end)
                pcall(function()
                    distancex:Remove()
                end)
                pcall(function()
                    health:Remove()
                end)
            end
        end) 
    end
    task.spawn(function()
        coroutine.wrap(rootesp)()
        coroutine.wrap(boxroot)()
    end)

end

azfake.traceresp = function(opposing,info) 

    local tracerting = {

    }
    local AimingPart = info.tableg['aimingpart']
    if info.aimpart == true then 
        if AimingPart == 'Chest' then 
            AimingPart = 'HumanoidRootPart'
        elseif AimingPart == 'Head' then  
            AimingPart = 'Head';
        end
    else
        AimingPart = 'HumanoidRootPart'
    end
    local addcircle = info.circlepoint
    local prep = {
        ['function'] = {};
        ['vis'] = {};
        ['trac'] = {};
        ['circ'] = {};
    }

    -- number Thickness;
    -- number NumSides;
    -- number Radius;
    -- bool Filled;
    -- Vector2 Position;
    local circle = Drawing.new('Circle')
    circle.Visible = false
    circle.Color = Color3.new(128, 187, 219)
    circle.Radius = info.radius
    circle.Filled = true



    local tracer = Drawing.new('Line')
    tracer.Visible = false
    tracer.Color = Color3.new(128, 187, 219)
    tracer.Thickness = 5
    tracer.Transparency = 1 
    local visualizer = Instance.new("Part")
    visualizer.Color = Color3.fromRGB(128, 187, 219)
    visualizer.Transparency = 0.6
    visualizer.Anchored = true
    visualizer.CanCollide = false
    visualizer.Size = Vector3.new(5,5,5)
    visualizer.BottomSurface = Enum.SurfaceType.Smooth
    visualizer.TopSurface = Enum.SurfaceType.Smooth
    visualizer.Shape = Enum.PartType.Ball
	visualizer.Material = Enum.Material.ForceField

    table.insert(prep['vis'],visualizer)
    table.insert(prep['trac'],tracer)
    table.insert(prep['circ'],circle)

    local function rootesp()
        local xkeeptracer
        local plsstoptracer = false
        cam = workspace.CurrentCamera
        local mouse = game.Players.LocalPlayer:GetMouse()
        warn('loaded')
        xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
            task.wait(0)
            if opposing and opposing.Character and opposing.Character:FindFirstChild('Humanoid') and opposing.Character:FindFirstChild('HumanoidRootPart') and opposing ~= game.Players.LocalPlayer and opposing.Character.Humanoid.Health > 0 then 
                --warn('om')
                if AimingPart == 'LeftLeg' then 
                    if opposing.Character:FindFirstChild('Left Leg') then 
                        AimingPart = 'Left Leg';
                    elseif opposing.Character:FindFirstChild('LeftUpperLeg') then
                        AimingPart = 'LeftUpperLeg';
                    end
                elseif AimingPart == 'RightLeg' then 
                    if opposing.Character:FindFirstChild('Right Leg') then 
                        AimingPart = 'Right Leg';
                    elseif opposing.Character:FindFirstChild('RightUpperLeg') then
                        AimingPart = 'RightUpperLeg';
                    end
                end
                local vect,onscreen = cam:worldToViewportPoint(opposing.Character:FindFirstChild(AimingPart).Position)
                
                if onscreen and tracer then 
                    tracer.From = Vector2.new(game.Players.LocalPlayer:GetMouse().X,game.Players.LocalPlayer:GetMouse().Y)--Vector2.new((cam.ViewportSize.X/2)/game.Players.LocalPlayer:GetMouse().X,(cam.ViewportSize.Y/1)/game.Players.LocalPlayer:GetMouse().Y) --Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                    tracer.To = Vector2.new(vect.X,vect.Y)
                    --tracer.Transparency = 0
                    tracer.Visible = true
                    if addcircle == true then 
                        circle.Visible = true
                    end
                    circle.Position = Vector2.new(vect.X,vect.Y)
                    visualizer.Transparency = 0
                    visualizer.CFrame = opposing.Character.HumanoidRootPart.CFrame
                    if visualizer.Parent ~= workspace then 
                        visualizer.Parent = workspace
                    end
                else
                    tracer.Visible = false
                    visualizer.Transparency = 1
                end
                if not opposing or getgenv().loopsUnload == true then 
                    plsstoptracer = true
                    pcall(function()
                        tracer:Remove()
                    end)
                    pcall(function()
                        xkeeptracer:Disconnect()
                    end)
                    pcall(function()
                        visualizer:Destroy()
                    end)
                end
            elseif not opposing or getgenv().loopsUnload == true or plsstoptracer then 
                pcall(function()
                    xkeeptracer:Disconnect()
                end)
                pcall(function()
                    visualizer:Destroy()
                end)
                if tracer then 
                    pcall(function()
                        tracer:Remove()
                    end)
                end
            else
                tracer.Visible = false
            end
        end) 
        table.insert(prep['function'],xkeeptracer)
    end
    task.spawn(function()
        coroutine.wrap(rootesp)()
    end)
    return prep
end

local function setupEspTab(globaltable) -- Espwindow
    local EspTab = window:CreateTab('ESP')
    local playerespsector = EspTab:CreateSector('Player Esp','left')
    local esp_lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/esp-library/main/lib.lua'))()
    esp_lib.Players = false;
    esp_lib.Boxes = false;
    esp_lib.Names = false;
    --esp_lib.AutoRemove = true;
    esp_lib.Settings.usecustomespcolor = true;
    esp_lib:Toggle(true)


    globaltable['setupespsettings'] = {
        playeresp = false;
        traceraim = false;
        maxviewplayerdistance = 100;
        savedtracer = nil;
        savedvis = nil;
        savedfunction = nil;
        savedcirc = nil;
        espcolor = Color3.fromRGB(255, 255,255);
        usenames = false;
        usetracers = false;
        useboxes = false;
    }
    -- playerespsector:AddToggle("Player ESP", false, function(xstate)
    --     globaltable['setupespsettings']['playeresp'] = xstate
    --     if globaltable['setupespsettings']['playeresp'] == true then 
    --         for _,loop_player in next, game.Players:GetChildren() do 
    --             --if not table.find(game.Players:GetPlayers())
    --             if loop_player ~= game.Players.LocalPlayer then 
    --                 local v = loop_player.Character
    --                 local loop_character = loop_player.Character
    --                 task.spawn(function()
    --                     local __assigned = azfake.__esp__call(loop_player,{
    --                         esptext = '..';
    --                         ['removedcallback'] = function()
    --                             --__assigned.object:Remove()
    --                         end; -- ojbecy
    --                         ['inloopfunction'] = function()
    --                             --
    --                         end;
    --                         playersettings = true;
    --                         yoffset = 5;
    --                         maxdistance = globaltable['setupespsettings']['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
    --                     })
    --                     __assigned.inloopfunction = function()-- whati f no max health
    --                         local dist = nil
    --                         if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
    --                             dist = math.floor((loop_player.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
    --                         end
    --                         if loop_player and loop_player.Character and loop_player.Character:FindFirstChildWhichIsA('Humanoid') then 
    --                             __assigned.object.Text = loop_player.Name..' - '..math.floor(loop_player.Character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_player.Character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'\n'..tostring(math.floor(dist))..' studs away'--(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
    --                         else
    --                             __assigned.object:Remove()
    --                         end
    --                         __assigned.maxdistance = globaltable['setupespsettings']['maxviewplayerdistance']
    --                         __assigned.checkingvalue = globaltable['setupespsettings']['playeresp']
    --                         __assigned.object.Color = globaltable['setupespsettings']['espcolor']
    --                     end
    --                     __assigned.removedcallback = function()
    --                         pcall(function()
    --                             __assigned.object:Remove()
    --                         end)
    --                     end
    --                     __assigned.waitingvalue = false;
    --                     __assigned.playersettings = false;
    --                 end)
    --             end
    --         end
    --         local DirectoryAdded = game.Players.ChildAdded:Connect(function(loop_player)

    --             local v = loop_player.Character
    --             local loop_character = loop_player.Character
    --             task.spawn(function()
    --                 local __assigned = azfake.__esp__call(loop_player,{
    --                     esptext = '..';
    --                     ['removedcallback'] = function()
    --                         --__assigned.object:Remove()
    --                     end; -- ojbecy
    --                     ['inloopfunction'] = function()
    --                         --
    --                     end;
    --                     playersettings = true;
    --                     maxdistance = globaltable['setupespsettings']['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
    --                 })
    --                 __assigned.inloopfunction = function()-- whati f no max health
    --                     local dist = nil
    --                     if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
    --                         dist = math.floor((loop_player.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
    --                     end
    --                     if loop_player and loop_player.Character and loop_player.Character:FindFirstChildWhichIsA('Humanoid') then 
    --                         __assigned.object.Text = loop_player.Name..' - '..math.floor(loop_player.Character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_player.Character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'\n'..tostring(math.floor(dist))..' studs away'--(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
    --                     else
    --                         __assigned.object:Remove()
    --                     end
    --                     __assigned.maxdistance = globaltable['setupespsettings']['maxviewplayerdistance']
    --                     __assigned.checkingvalue = globaltable['setupespsettings']['playeresp']
    --                     __assigned.object.Color = globaltable['setupespsettings']['espcolor']
    --                 end
    --                 __assigned.removedcallback = function()
    --                     pcall(function()
    --                         __assigned.object:Remove()
    --                     end)
    --                 end
    --                 __assigned.playersettings = false;
    --             end)
    --             -- if not game.Players:FindFirstChild(v.Name) then 
    --             --     task.spawn(function()
    --             --         local __assigned = azfake.__esp__call(v,{
    --             --             esptext = '..';
    --             --             ['removedcallback'] = function()
    --             --                 __assigned.object:Remove()
    --             --             end; -- ojbecy
    --             --             ['inloopfunction'] = function()
    --             --                 --
    --             --             end;
    --             --             charactersettings = true;
    --             --             maxdistance = getgenv().fightlocalgame['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
    --             --         })
    --             --         __assigned.inloopfunction = function()-- whati f no max health
    --             --             __assigned.object.Text = v.Name..' - '..math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
    --             --             __assigned.maxdistance = getgenv().fightlocalgame['maxviewplayerdistance']
    --             --         end
    --             --         __assigned.removedcallback = function()
    --             --             pcall(function()
    --             --                 __assigned.object:Remove()
    --             --             end)
    --             --         end
    --             --         __assigned.checkingvalue = getgenv().fightlocalgame['playeresp']
    --             --         __assigned.waitingvalue = false;
    --             --     end)
    --             -- end
    --         end)
    --         task.spawn(function()
    --             repeat task.wait(.3) until getgenv().loopsUnload == true ;
    --             DirectoryAdded:Disconnect()
    --         end)
    --     end
    -- end)
    -- playerespsector:AddColorpicker('Player Display Colour',Color3.fromRGB(255, 255,255), function(ztx)
    --     globaltable['setupespsettings']['espcolor'] = ztx
    -- end)
    playerespsector:AddToggle("Use Names", false, function(xstate)
        globaltable['setupespsettings']['usenames'] = xstate
        esp_lib.Names = xstate;
    end)
    playerespsector:AddToggle("Use Tracers", false, function(xstate)
        globaltable['setupespsettings']['usetracers'] = xstate
        esp_lib.Tracers = xstate;
    end)
    playerespsector:AddToggle("Use Boxes", false, function(xstate)
        globaltable['setupespsettings']['useboxes'] = xstate
        esp_lib.Boxes = xstate;
    end)
    playerespsector:AddToggle("Player ESP", false, function(xstate)
        globaltable['setupespsettings']['playeresp'] = xstate
        esp_lib.Players = xstate;
    end)
    playerespsector:AddColorpicker('Player Display Colour',Color3.fromRGB(255, 255,255), function(ztx)
        globaltable['setupespsettings']['espcolor'] = ztx
        esp_lib.Settings.playerespcolor = ztx; -- globaltable['setupespsettings']['espcolor']
    end)

    playerespsector:AddToggle("Tracer ESP", false, function(xstate)
        globaltable['setupespsettings']['traceraim'] = xstate
        if globaltable['setupespsettings']['traceraim'] == true then 
           
        else 
            pcall(function()
                globaltable['setupespsettings']['savedtracer']:Remove()
            end)
            pcall(function()
                globaltable['setupespsettings']['savedvis']:Destroy()
            end)
            pcall(function()
                globaltable['setupespsettings']['savedfunction']:Disconnect()
            end)
        end
    end)
    playerespsector:AddSlider('Player Esp Distance',0,100,10000,1,function(xstate)
        globaltable['setupespsettings']['maxviewplayerdistance'] = xstate -- maxplayermobdistance
    end)
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then break end 
            if globaltable['setupespsettings']['traceraim'] == true then 
                local closestplayer = nil 
                local closestdist = 0
                local closestmouse= 0
                for _,loop_player in next, game.Players:GetChildren() do 
                    if loop_player.Character and loop_player.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and loop_player ~= game.Players.LocalPlayer then 
                        local playerdist = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - loop_player.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                        local mouseidst = (game.Players.LocalPlayer:GetMouse().hit.p - loop_player.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                        if playerdist <= globaltable['setupespsettings']['maxviewplayerdistance'] then 
                            if closestplayer == nil and mouseidst <= 5 then 
                                closestplayer = loop_player
                                closestdist = playerdist
                                closestmouse = mouseidst
                            elseif mouseidst < closestmouse and mouseidst <= 5 then 
                                closestplayer = loop_player
                                closestdist = playerdist
                                closestmouse = mouseidst
                            end
                        end
                    end
                end
                if closestplayer ~= nil then 
                    globaltable['setupespsettings']['traceraim'] = nil
                    local preps = azfake.traceresp(closestplayer, {aimpart = true,tableg = globaltable['aimbotsettings'],circlepoint = true,radius = 5})
                    globaltable['setupespsettings']['savedtracer'] = preps['trac'][1]
                    globaltable['setupespsettings']['savedvis'] = preps['vis'][1]
                    globaltable['setupespsettings']['savedcirc'] = preps['circ'][1]
                    globaltable['setupespsettings']['savedfunction'] = preps['function'][1]
                    warn('tracered '..closestplayer.Name)
                end
                -- task.spawn(function()
                --     repeat task.wait(.3) until getgenv().loopsUnload == true ;
                --     DirectoryAdded:Disconnect()
                -- end)
                task.spawn(function()
                    local endrepeat = false 
                    repeat 
                        task.wait(0.1)
                        if closestplayer and closestplayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local mouseidst = (game.Players.LocalPlayer:GetMouse().hit.p - closestplayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                            if mouseidst > 5 then 
                                pcall(function()
                                    globaltable['setupespsettings']['savedtracer']:Remove()
                                end)
                                pcall(function()
                                    globaltable['setupespsettings']['savedvis']:Destroy()
                                end)
                                pcall(function()
                                    globaltable['setupespsettings']['savedfunction']:Disconnect()
                                    pcall(function()
                                        globaltable['setupespsettings']['savedcirc']:Remove()
                                    end)
                                end)
                                globaltable['setupespsettings']['traceraim'] = true
                            end
                        else
                            pcall(function()
                                globaltable['setupespsettings']['savedtracer']:Remove()
                            end)
                            pcall(function()
                                globaltable['setupespsettings']['savedvis']:Destroy()
                            end)
                            pcall(function()
                                globaltable['setupespsettings']['savedfunction']:Disconnect()
                            end)
                            pcall(function()
                                globaltable['setupespsettings']['savedcirc']:Remove()
                            end)
                            globaltable['setupespsettings']['traceraim'] = true
                        end 
                    until getgenv().loopsUnload == true or globaltable['setupespsettings']['traceraim'] == true
                end)
            end
        end
    end)

end

local function setupAimbotTab(globaltable)
    local pvptab = window:CreateTab('Aimbot')
    local pvpsector = pvptab:CreateSector('Cheats','left')
    local pvpconfigsector = pvptab:CreateSector('Cheats','right')
    
    globaltable['aimbotsettings'] = {
        aimbot = false;
        movementpredictions = false;
        aimbottrigger = nil;
        wallcheck = false;
        currenttarget = nil;
        currenttargetdistance = nil;
        dontswaptarget = false;
        closestmagnitude = nil;
        aimparts = {
            'Chest';
            'Head';
            'LeftLeg';
            'RightLeg'; -- project hit position, small circle on the hit point
        };
        aimingpart = 'Chest';
        lookcframe = false;
        smoothness = 0;
        smoiothaimbot = false;
        randomoffset = false;
        robloxvirtualmouse = false;
        teamcheck = false;
        predictionpower = 0.05;
        distancecheck = 30;
        swapaimingpart = false;
        secondtab = {
            partoffset = false;
        };
        partoffset = 0;
        aimbotlength = 100;
        fov = 70
    }

    local aimbotbutton = pvpsector:AddToggle('Aimbot',false,function(xstate)
        globaltable['aimbotsettings']['aimbot'] = xstate
    end)
    pvpsector:AddSeperator('')
    local aimbotrigger = pvpsector:AddKeybindAttachment('Aimbot Button'):AddKeybind(nil,'aimbotkeybind') -- nil,'aimbotkeybind'
    aimbotbutton:AddKeybind()
    pvpsector:AddToggle('Movement Prediction',false,function(xstate)
        globaltable['aimbotsettings']['movementpredictions'] = xstate
    end)
    pvpsector:AddSlider('Prediction Power',0,0.5,100,100,function(xstate)
        globaltable['aimbotsettings']['predictionpower'] = xstate
    end)
    pvpsector:AddSlider('Distance',0,30,10000,1,function(xstate)
        globaltable['aimbotsettings']['distancecheck'] = xstate
    end)
    pvpsector:AddSeperator('')
    pvpsector:AddToggle('Wall Check',false,function(xstate)
        globaltable['aimbotsettings']['wallcheck'] = xstate
    end)
    pvpsector:AddToggle('Team Check',false,function(xstate)
        globaltable['aimbotsettings']['teamcheck'] = xstate
    end)
    pvpsector:AddToggle('Dont Swap Target',false,function(xstate)
        globaltable['aimbotsettings']['dontswaptarget'] = xstate
    end)
    pvpsector:AddToggle('Set Looking CFrame',false,function(xstate)
        globaltable['aimbotsettings']['lookcframe'] = xstate
    end)
    pvpsector:AddDropdown('Aim Part',globaltable['aimbotsettings']['aimparts'],"Chest",false,function(xstate)
        globaltable['aimbotsettings']['aimingpart'] = xstate
    end)
    pvpsector:AddSeperator('')
    pvpsector:AddToggle('Smooth Aimbot',false,function(xstate)
        globaltable['aimbotsettings']['smoiothaimbot'] = xstate
    end)
    pvpsector:AddSlider('Smoothness',0,0,10,100,function(xstate)
        globaltable['aimbotsettings']['smoothness'] = xstate
    end)
    pvpsector:AddSeperator('')
    pvpsector:AddToggle('Random Offsets',false,function(xstate)
        globaltable['aimbotsettings']['randomoffset'] = xstate
    end)
    pvpsector:AddToggle('Random Aim Parts',false,function(xstate)
        globaltable['aimbotsettings']['swapaimingpart'] = xstate
    end)
    pvpsector:AddToggle('Move Roblox Virtual Mouse',false,function(xstate)
        globaltable['aimbotsettings']['robloxvirtualmouse'] = xstate
    end)
    pvpconfigsector:AddSlider('Part Offset',0,0,10,100,function(xstate)
        globaltable['aimbotsettings']['partoffset'] = xstate
    end)
    game.Workspace.Camera:GetPropertyChangedSignal('FieldOfView'):Connect(function()
        game.Workspace.Camera.FieldOfView = globaltable['aimbotsettings']['fov']
    end)

    pvpconfigsector:AddSlider('FOV Slider',70,0,120,1,function(xstate)
        globaltable['aimbotsettings']['fov'] = xstate
        game.Workspace.Camera.FieldOfView = globaltable['aimbotsettings']['fov']
    end)


    local AimbotLoop = game:GetService('RunService').RenderStepped:Connect(function()
        local pos,IsVisible = nil,nil
        if globaltable['aimbotsettings']['currenttarget'] ~= nil and globaltable['aimbotsettings']['currenttarget'].Character and globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart then 
            local xpos,IsVisibleOld = workspace.Camera:WorldToViewportPoint(globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Position)
            if IsVisibleOld == false then 
                globaltable['aimbotsettings']['currenttarget'] = nil 
                globaltable['aimbotsettings']['currenttargetdistance'] = nil
            else
                IsVisible = true --IsVisibleOld
                pos = xpos
                -- globaltable['aimbotsettings']['currenttarget'] = nil 
                -- globaltable['aimbotsettings']['currenttargetdistance'] = nil
            end
        end
        if aimbotrigger:IsPressed() == true and globaltable['aimbotsettings']['aimbot'] == true then 
            local ClosestPlayer = globaltable['aimbotsettings']['currenttarget'];
            local ClosestDistance = globaltable['aimbotsettings']['currenttargetdistance'];
            local ClosestMagnitude = globaltable['aimbotsettings']['closestmagnitude'];
            local prevaimingscore = 1000000
            if globaltable['aimbotsettings']['currenttarget'] ~= nil and globaltable['aimbotsettings']['currenttarget'].Character and globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart then 
                local xpos,IsVisibleOld = workspace.Camera:WorldToViewportPoint(globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Position)
                if IsVisibleOld == false then 
                    globaltable['aimbotsettings']['currenttarget'] = nil 
                    globaltable['aimbotsettings']['currenttargetdistance'] = nil
                else
                    IsVisible = true --IsVisibleOld
                    pos = xpos
                end
            end
            if not globaltable['aimbotsettings']['currenttarget'] or globaltable['aimbotsettings']['currenttarget'] == nil or globaltable['aimbotsettings']['currenttarget'] and globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild('Humanoid').Health == 0 then 
                globaltable['aimbotsettings']['currenttarget'] = nil
                globaltable['aimbotsettings']['currenttargetdistance'] = nil
            end
            if IsVisible == nil or IsVisible == nil and globaltable['aimbotsettings']['dontswaptarget'] == true and globaltable['aimbotsettings']['currenttarget'] == nil then --if ClosestPlayer == nil or globaltable['aimbotsettings']['dontswaptarget'] == false and ClosestPlayer == nil or globaltable['aimbotsettings']['dontswaptarget'] == true and ClosestPlayer ~= nil then 
                for _,v in next, game.Players:GetPlayers() do 
                    if v ~= game.Players.LocalPlayer and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v.Character and v.Character.PrimaryPart and v.Character:FindFirstChildWhichIsA('Humanoid') and v.Character:FindFirstChildWhichIsA('Humanoid').Health > 0 and v.Character:FindFirstChildWhichIsA('Humanoid'):GetState() ~= Enum.HumanoidStateType.Dead  and (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - v.Character.PrimaryPart.Position).Magnitude <= globaltable['aimbotsettings']['distancecheck'] then 
                        if not  v.Character:FindFirstChild('Head') then 
                            return
                        end
                        local vRoot = v.Character.PrimaryPart;
                        local Distance = (vRoot.Position - game.Players.LocalPlayer:GetMouse().hit.Position)--game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        local DistanceMagnitude = (vRoot.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        local CanCheck = true
                        pos,IsVisible = workspace.Camera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                        if globaltable['aimbotsettings']['wallcheck'] == true then
                            local Parts = workspace.Camera:GetPartsObscuringTarget({game.Players.LocalPlayer.Character.Head.Position, v.Character.Head.Position}, {workspace.Camera, game.Players.LocalPlayer.Character})
                            for i2, v2 in pairs(Parts) do
                                if v2:IsDescendantOf(v.Character) == false and v2.Transparency == 0 then
                                    CanCheck = false
                                end
                            end
                        end
                        if globaltable['aimbotsettings']['teamcheck'] == true then 
                            if v.Team == game.Players.LocalPlayer.Team then CanCheck = false end
                        end
                        local aimingscore = Distance.Magnitude + DistanceMagnitude.Magnitude
                        if IsVisible and CanCheck == true then 
                            if globaltable['aimbotsettings']['dontswaptarget'] == false or globaltable['aimbotsettings']['dontswaptarget'] == true and globaltable['aimbotsettings']['currenttarget'] == nil and DistanceMagnitude.Magnitude <= globaltable['aimbotsettings']['distancecheck'] then 
                                if ClosestPlayer == nil and ClosestDistance == nil and CanCheck == true then 
                                    ClosestPlayer = v;
                                    ClosestDistance = Distance.Magnitude; 
                                    ClosestMagnitude = DistanceMagnitude.Magnitude
                                    prevaimingscore = aimingscore
                                elseif CanCheck == true then -- ClosestMagnitude > DistanceMagnitude.Magnitude and ClosestDistance > Distance.Magnitude 
                                    if  ClosestDistance > Distance.Magnitude then    --       ClosestMagnitude > DistanceMagnitude.Magnitude and                    --  if aimingscore < prevaimingscore then--                 --and DistanceMagnitude.Magnitude < globaltable['aimbotsettings']['closestmagnitude'] then //  or ClosestDistance > Distance.Magnitude and ClosestMagnitude == nil
                                        ClosestPlayer = v;
                                        ClosestDistance = Distance.Magnitude
                                        ClosestMagnitude = DistanceMagnitude.Magnitude
                                    end
                                end
                            end
                        end
                    end
                end
            end
            globaltable['aimbotsettings']['currenttarget'] = ClosestPlayer;
            globaltable['aimbotsettings']['currenttargetdistance'] = ClosestDistance;
            local AimingPart = nil;
            if globaltable['aimbotsettings']['aimingpart'] == 'Chest' then 
                AimingPart = 'HumanoidRootPart'
            elseif globaltable['aimbotsettings']['aimingpart'] == 'Head' then  
                AimingPart = 'Head';
            elseif globaltable['aimbotsettings']['aimingpart'] == 'LeftLeg' then 
                if ClosestPlayer.Character:FindFirstChild('Left Leg') then 
                    AimingPart = 'Left Leg';
                elseif ClosestPlayer.Character:FindFirstChild('LeftUpperLeg') then
                    AimingPart = 'LeftUpperLeg';
                end
            elseif globaltable['aimbotsettings']['aimingpart'] == 'RightLeg' then 
                if ClosestPlayer.Character:FindFirstChild('Right Leg') then 
                    AimingPart = 'Right Leg';
                elseif ClosestPlayer.Character:FindFirstChild('RightUpperLeg') then
                    AimingPart = 'RightUpperLeg';
                end
            end
            local function quad_bezier(t, p0, p1, o0)
                return (1 - t)^2 * p0 + 2 * (1 - t) * t * (p0 + (p1 - p0) * o0) + t^2 * p1;
            end
            local additionalvector = Vector3.new(0,globaltable['aimbotsettings']['partoffset'],0)
            if globaltable['aimbotsettings']['randomoffset'] == true then 
                additionalvector = Vector3.new(0, -(math.random(1,4) / math.random(1,4)) , 0) -- 0.1 - 0.5 math.random(1,5) / math.random(5,8
            end
            if ClosestPlayer ~= nil and AimingPart ~= nil and workspace:FindFirstChild('Camera') and globaltable['aimbotsettings']['currenttarget'] and globaltable['aimbotsettings']['currenttarget'].Character and globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart then 
                if globaltable['aimbotsettings']['swapaimingpart'] == true then 
                    AimingPart = globaltable['aimbotsettings']['aimparts'][math.random(1,#globaltable['aimbotsettings']['aimparts'])]
                    if AimingPart == 'Chest' then 
                        AimingPart = 'HumanoidRootPart'
                    elseif AimingPart == 'Head' then  
                        AimingPart = 'Head';
                    elseif AimingPart == 'LeftLeg' then 
                        if ClosestPlayer.Character:FindFirstChild('Left Leg') then 
                            AimingPart = 'Left Leg';
                        elseif ClosestPlayer.Character:FindFirstChild('LeftUpperLeg') then
                            AimingPart = 'LeftUpperLeg';
                        end
                    elseif AimingPart == 'RightLeg' then 
                        if ClosestPlayer.Character:FindFirstChild('Right Leg') then 
                            AimingPart = 'Right Leg';
                        elseif ClosestPlayer.Character:FindFirstChild('RightUpperLeg') then
                            AimingPart = 'RightUpperLeg';
                        end
                    end
                end
                if string.find(AimingPart,'Leg') and globaltable['aimbotsettings']['randomoffset'] == true then 
                    additionalvector = Vector3.new(0, (math.random(1,2)) , 0) -- 0.1 - 0.5 math.random(1,5) / math.random(5,8
                end
                local R15 = false
                if globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild('RightUpperLeg') then 
                    R15 = true
                end

                -- if R15 == true and AimingPart == 'Torso' then AimingPart = 'UpperTorso' end
                -- if R15 == true and AimingPart == 'RightLeg' then AimingPart = 'RightUpperLeg' end
                -- if R15 == true and AimingPart == 'LeftLeg' then AimingPart = 'LeftUpperLeg' end

                --print(AimingPart)


                if globaltable['aimbotsettings']['movementpredictions'] == true then 
                    --local AimPrediction = globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Velocity * 1.1 + globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild('Humanoid').WalkSpeed/100 -- = globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Velocity * (1 / 10) * (Client.Character.Head.Position - PlayerHead.Position).magnitude / 100
                   -- workspace.Camera.CFrame = 
                    --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position)
                    if globaltable['aimbotsettings']['lookcframe'] == true then 
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position + additionalvector)
                    end
                    
                    local predictionnumber = globaltable['aimbotsettings']['predictionpower'] /100
                    if globaltable['aimbotsettings']['robloxvirtualmouse'] == true then
                        local RedirectPos = Redirect.Position
                        local Tuple, Visible = WorldToViewportPoint(workspace.CurrentCamera, globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart));
                        local CharacterVec2 = Vector2.new(Tuple.X, Tuple.Y);
                        mousemoveabs(CharacterVec2.X, CharacterVec2.Y); -- + globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Velocity * 0.05
                    elseif globaltable['aimbotsettings']['smoiothaimbot'] == false then 
                        workspace.CurrentCamera.CoordinateFrame = CFrame.new(
                            workspace.CurrentCamera.CoordinateFrame.p,--game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position  ,
                            globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position + additionalvector
                        ) + globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Velocity * predictionnumber  --+ workspace.CurrentCamera.CoordinateFrame.lookVector --1.1
                        
                    else
                        game:GetService('TweenService'):Create(workspace.Camera,TweenInfo.new(globaltable['aimbotsettings']['smoothness']/10,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), { CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position + additionalvector) + globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Velocity * predictionnumber} ):Play()
                         
                    
                    end


                    --workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Position)
                    
                    
                    --globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.CFrame * CFrame.new(globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild('Humanoid').WalkSpeed/100,0,0) +  globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Velocity * 1.1--CFrame.new(v.Character:FindFirstChild('Humanoid').MoveDirection.X,0,0)
                else
                    --print('l')
                    local inputManager = game:GetService('VirtualInputManager')
                    --[[
                                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                    inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                    ]]
                    if globaltable['aimbotsettings']['lookcframe'] == true then 
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position)
                    end
                    if globaltable['aimbotsettings']['robloxvirtualmouse'] == true then 
                        local RedirectPos = Redirect.Position
                        local Tuple, Visible = WorldToViewportPoint(workspace.CurrentCamera, globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart));
                        local CharacterVec2 = Vector2.new(Tuple.X, Tuple.Y);
                        mousemoveabs(CharacterVec2.X, CharacterVec2.Y);
                    elseif globaltable['aimbotsettings']['smoiothaimbot'] == false then 
                        local AIMINGAT = globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart)
                        local suc, n = pcall(function()
                            if AIMINGAT.Position == AIMINGAT.Position then 
                                
                            end
                        end)
                        if not suc then 
                            AIMINGAT = AIMINGAT:FindFirstChildWhichIsA('Part') or AIMINGAT:FindFirstChildWhichIsA('MeshPart')
                        end
                        workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,AIMINGAT.Position + additionalvector)--workspace.Camera:WorldToViewportPoint(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position -  globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.Position) --workspace.Camera.CFrame = globaltable['aimbotsettings']['currenttarget'].Character.PrimaryPart.CFrame
                    else
                        game:GetService('TweenService'):Create(workspace.Camera,TweenInfo.new(globaltable['aimbotsettings']['smoothness']/10,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), { CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,globaltable['aimbotsettings']['currenttarget'].Character:FindFirstChild(AimingPart).Position + additionalvector) } ):Play()
                    end
                    
                    
                end
                --mousemoverel((pos.X - game.Players.LocalPlayer:GetMouse().X) * 1, (pos.Y - game.Players.LocalPlayer:GetMouse().Y - game:GetService("GuiService"):GetGuiInset().Y) * 1)
            end
        else
            globaltable['aimbotsettings']['currenttarget'] = nil 
            globaltable['aimbotsettings']['currenttargetdistance'] = nil
        end
    end)
    task.spawn(function()
        repeat task.wait() 
            if getgenv().loopsUnload == true then 
                AimbotLoop:Disconnect()
            end
        until getgenv().loopsUnload == true
    end)
    return pvptab, pvpsector
end


local Maid = loadstring(game:HttpGet('https://raw.githubusercontent.com/Quenty/NevermoreEngine/version2/Modules/Shared/Events/Maid.lua'))();
local maid = Maid.new()
task.spawn(function()
    print('@v;;;')
    repeat task.wait(.1) until getgenv().loopsUnload == true
    print('@ended')
    for i,v in next, maid do 
        pcall(function()
            maid[i] = nil;
        end)
    end
    print('offloaded @maid')
end)

function AddConfigurations()
    local Configiuration= window:CreateTab('Configiuration')
    local system = Configiuration:CreateConfigSystem()

    -- task.spawn(function()
    --     while task.wait(10) do 
    --         pcall(function()
    --             system.savefunc() --Save()
    --         end)
    --     end
    -- end)
end
-- snap spell create value , chime in air .
-- person to snap uses that chime. to snap u have to create a chime then use a snappable spell
-- if another person that didnt create a chime uses a spell and lvl 40 > they can snap

local LocalPlayer = game.Players.LocalPlayer

getgenv().chatloggerhook = getgenv().chatloggerhook or nil

if getgenv().chatloggerhook ~= nil then getgenv().chatloggerhook:Disconnect() end

getgenv().istyping = false
game:GetService('UserInputService').InputBegan:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
    if istyping then getgenv().istyping = true  return end 
    getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
end)
game:GetService('UserInputService').InputEnded:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
    if istyping then getgenv().istyping = true  return end 
    getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
end)

--

-- signals.new()
-- print bad if no good

local Mouse = game.Players.LocalPlayer:GetMouse()

local sharedRequires = {};

sharedRequires['CreateFlySystem'] = function(sector, gnvtable)
    -- flying
    -- flyspeed
    local ToggleBindFlySpeed = sector:AddToggle("Fly", false, function(e)
        gnvtable['flying'] = e
        if gnvtable['flying'] == false  then -- and getgenv().istyping == false
            -- getgenv().CFloop:Disconnect()
            --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
            Head.Anchored = false
            -- getgenv().CFloop = nil
        elseif gnvtable['flying'] == true and getgenv().istyping == false then

            Players = game.Players
            -- getgenv().flying = true
            task.spawn(function()
                repeat task.wait() until azfake:returndata().humanoidrootpart and azfake:returndata().humanoid
                local plr = game.Players.LocalPlayer
                local torso = plr.Character:WaitForChild('HumanoidRootPart')
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = gnvtable['flyspeed'] /2
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and bv ~= nil then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = gnvtable['flyspeed'] --Options.FlySpeedSlide.Value
                            maxspeed = gnvtable['flyspeed']
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector    ))  * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until gnvtable['flying']  == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    plr.Character:WaitForChild('Humanoid').PlatformStand = false
                    print('stop flying')
                end
                Mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                Mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)
    sector:AddSlider("Fly Speed", 0, 0, 250, 1, function(State)
        gnvtable['flyspeed'] = State
    end)
    ToggleBindFlySpeed:AddKeybind()
end
sharedRequires['CreateWalkSpeedSystem'] = function(sector, gnvtable)
    -- flying
    -- flyspeed
    gnvtable['walkspeed'] = false
    gnvtable['walkspeedspeed'] = 16;
    local ctn = nil;
    local ToggleWalkSpeed = sector:AddToggle("WalkSpeed", false, function(e)
        gnvtable['walkspeed'] = e
        if e == false then 
            maid.walkspeedcon = nil;
            return ;
        end;   
        maid.walkspeedcon = game.RunService.RenderStepped:Connect(function() 
            local RootPart = azfake:returndata().humanoidrootpart
            local Humanoid = azfake:returndata().humanoid
            if not RootPart then return end;
            if not Humanoid then return end;
    
            if gnvtable['flying'] then return end;
    
            
            RootPart.Velocity = RootPart.Velocity * Vector3.new(0, 1, 0)
            if Humanoid.MoveDirection.Magnitude > 0 then
                RootPart.Velocity = RootPart.Velocity + Humanoid.MoveDirection.Unit * gnvtable['walkspeedspeed']
            end
        end)

        if e == true and ctn  == nil then 
            -- ctn = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal('WalkSpeed'):Connect(function()
            --     if gnvtable['walkspeed'] == true then 
            --         game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = gnvtable['walkspeedspeed']
            --     end
            -- end)
        end;
    end)
    sector:AddSlider("WalkSpeed Speed", 0, 0, 250, 1, function(State)
        gnvtable['walkspeedspeed'] = State
    end)
    pcall(function()

    end)
    -- ctn = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal('WalkSpeed'):Connect(function()
    --     if gnvtable['walkspeed'] == true then 
    --         game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = gnvtable['walkspeedspeed']
    --     end
    -- end)
    ToggleWalkSpeed:AddKeybind()
end
sharedRequires['CreateNoclip'] = function(sector, gnvtable)
    local ToggleBindNoclip = sector:AddToggle("Noclip", false, function(e)
        gnvtable['noclip'] = e 
        if gnvtable['noclip'] == false then -- and getgenv().istyping == false 
            gnvtable['noclipfunction']:Disconnect()
        elseif gnvtable['noclip']  == true then --   and getgenv().istyping == false
            -- task.wait(0.1)
            -- local function NoclipLoop()
            --     if getgenv()['pilgrammedsettings']['noclip']  == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
            -- end
            gnvtable['noclipfunction'] = game:GetService('RunService').Stepped:Connect(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Part") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
            end)
        end
    end)
    ToggleBindNoclip:AddKeybind()
end
sharedRequires['SetupChatlogger'] = function(sector)
    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        -- for i=0, #game.CoreGui.ChatLogger.Frame.Logs:GetChildren() do 
        --     -- if i > 15 then 
        --     --     for i,v in pairs(game.CoreGui.ChatLogger.Frame.Logs:GetChildren()) do if v:IsA('TextLabel') then v:Destroy() end end
        --     -- end
        --     add -= 0.01
        --     if i > 20 then 
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 6
        --     else
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 23.5
        --     end
    
        -- end
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''--plr.Name --''
        local ourname = game.Players.LocalPlayer.Name--''
        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
        --     if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
        --         name = v.DisplayName.Value
        --     end
        --     if v.RealName.Value == game.Players.LocalPlayer.Name then 
        --         ourname = v.DisplayName.Value
        --     end
        -- end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if splitName[3] then 
            if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        elseif type(msg) == 'string' and (msg:find('clipped') or msg:find(game.Players.LocalPlayer.Name)) then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        elseif type(msg) == 'string' and game.Players.LocalPlayer.Name:sub(1,string.len(msg)) == msg then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        end

        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            Notify('','name was said',2)
            -- if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
            --     task.spawn(function()
            --         local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
            --         Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
            --     end)
            -- end
        end
        if splitName[1] == 'Picked' then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        end
        if splitName[1] == 'AZFAKE-SERVER' then 
            x.TextColor3 = Color3.fromRGB(100, 155, 255)
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end
    local event = game:GetService("ReplicatedStorage"):WaitForChild('DefaultChatSystemChatEvents').OnMessageDoneFiltering
    -- xeventset
    getgenv().chatloggerhook = event.OnClientEvent:Connect(function(object)
       logIt(string.format("%s : %s", object.FromSpeaker, object.Message or ""),game.Players:FindFirstChild(object.FromSpeaker))
    end)
    return logIt
end

sharedRequires['__task'] = function(...)
    for i,v in next, {...} do 
        task.spawn(function()
            v()
        end)
    end
end
sharedRequires['smartlog'] = function(...)
    local newui = Instance.new('ScreenGui');
    local frame = Instance.new('Frame',newui);
    --frame.Size = UDim2.new(0.25,0,0.25,0)
    frame.Size = UDim2.new(0.5,0,0.5,0)
    frame.Position = UDim2.new(0.25,0,0.25,0)
    frame.BackgroundColor3 = Color3.fromRGB(150,150,150)
    Instance.new('UIListLayout',frame)
    newui.Parent = game.CoreGui

    for _, log in next, {...} do 
        local txt = Instance.new('TextLabel',frame)
        txt.Text = tostring(log)
        txt.Size = UDim2.new(1,0,0.1,0)
    end
    task.spawn(function()
        task.wait(5)
        newui:Destroy()
    end)
    return print(...)
end
local localPlayer = {};
local metaforit = {};
localPlayer.destroy = function(wehat, where)

end;
metaforit.teleport = {};
metaforit.teleport.toInstance = function(id, job)
    local teleportId = (id == true and game.PlaceId or id)
    game.TeleportService:TeleportToPlaceInstance(teleportId, job)
end;
metaforit.waitforchildwhichisa = function(obj, classname, name)
    local toObject = nil;
    repeat 
        task.wait()
        toObject = obj:FindFirstChildWhichIsA(classname) and (not name and true or obj:FindFirstChildWhichIsA(classname).Name == name and true) and obj:FindFirstChildWhichIsA(classname) 
    until toObject; --obj:FindFirstChildWhichIsA(classname) and (not name and true or obj:FindFirstChildWhichIsA(classname).Name == name and true)
    print('@waitforchild whichisa',toObject.Name,toObject.ClassName)
    return toObject
end
metaforit.teleport.serverHop = function(id)
    local serverId = (id == true and game.PlaceId or id)
    local Http = game:GetService("HttpService")
    local Api = "https://games.roblox.com/v1/games/"
    local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
    local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
    function ListServers(cursor)
       local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
       return Http:JSONDecode(Raw)
    end
    local listed = 0
    local reg = {}
    for _,server in next, ListServers(nil).data do 
        pcall(function()
            if server.id ~= game.JobId then 
                table.insert(reg,server.id)  
            end
        end)
    end
    game:GetService("TeleportService"):TeleportToPlaceInstance(serverId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
end;
setmetatable(localPlayer,metaforit);
metaforit.__index = function(table, key)
    local quickuses = {
        character = game.Players.LocalPlayer.Character;
        humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') or nil;
        humanoidrootpart = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or nil;
        health = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health or nil;
        cframe =  game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame or nil;
        parts = game.Players.LocalPlayer.Character and parts;
        rootPart = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or nil;
        instance = game.Players.LocalPlayer;
    }
    for i,v in next, quickuses do 
        if tostring(i) == tostring(key) then 
            return v
        end
    end
    return metaforit[key]
    -- if key == 'rootPart' then 
    --     return game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or nil;
    -- end -- rootart
end
metaforit.__call = function(_table,  ...) -- in our case the arguments are going to be a number and a string
    local args = {...} -- ./.
    local whereabouts = {
        character = localPlayer.character;
    }
    if args[1] == 'destroy' then 
        local dest = whereabouts[tostring(args[3])]
        if not dest and typeof(args[3]) ~= 'Instance' then return warn(args[3],'not valid') end;
        if typeof(args[3]) == 'Instance' then dest = args[3] end;
        -- descendant
        local somethingDestroyed = false;
        local function playRemove(obj)
            if obj.Name == args[2] then 
                -- @ remove;
                if args[5] == 'debug' then print('@removing '..obj.Name) end;
                obj:Destroy();
                somethingDestroyed = true;
            end
        end;    
        if not args[4] or args[4] ~= 'descendant' and args[4] ~= 'all' then 
            for i,v in next, dest:GetChildren() do  
                playRemove(v)
            end;
        elseif args[4] and args[4] == 'descendant' then -- another arg for all
            for i,v in next, dest:GetDescendants() do 
                playRemove(v)
            end;
        elseif args[4] and args[4] == 'all' then -- another arg for all
            for i,v in next, dest:GetChildren() do  
                playRemove(v)
            end;
            for i,v in next, dest:GetDescendants() do 
                playRemove(v)
            end;
        else
            warn('@called with no remove')
        end
        if somethingDestroyed == false then 
            warn('@destroyed nothing')
        end
    elseif args[1] == 'cframe' then 
        return localPlayer.rootPart and localPlayer.rootPart.CFrame or nil
    elseif args[1] == 'fire' then 
        local remote = args[2] -- if string then search for it in destination (argument for destination)
        -- or loop in script for a name on this remote
        local function unpacked()
            local otherArgs = args;
            table.remove(otherArgs, 1)
            for i,v in next, otherArgs do 
                if v == remote then 
                    --print('[removing]',i,v)
                    table.remove(otherArgs, i)
                    break ;-- nre
                end
            end
            for i,v in next, otherArgs do 
                --print(i,v)
            end
            --table.remove(otherArgs, 2)
            return otherArgs
        end
        local NewArguments = unpacked()
        if remote.ClassName == 'RemoteEvent' then 
            remote:FireServer(unpack(NewArguments))
        elseif remote.ClassName == 'RemoteFunction' then 
            remote:InvokeServer(unpack(NewArguments))
        elseif remote.ClassName == 'ClickDetector' then 
            fireclickdetector(remote) -- remtoe;
        elseif remote.ClassName == 'ProximityPrompt' then 
            fireproximityprompt(remote) -- remtoe;
        end;    

        return true
    end;
end

-- localPlayer('destroy','head', 'character','all')
-- localPlayer('cframe')
-- localPlayer('fire', game.RemoteEvent, 'nig')
-- localPlayer({nothing})


local services = {
    vis = game:GetService('VirtualInputManager');
    tws = game:GetService('TweenService')
}
function encorporate(f)
    return f()
end -- @ econcorporate(newfunct)

local signals = {
	gamestepped = {};
	heartbeat = {};
    connections = {};
    events = {};
    controlled = {};
    services = {};
    env = {};
    fenv = {};
    senv = {};
    game = {};
}
signals.services.UnloadService = {};
signals.services.UnloadService.WrapFunction = function(x)
    return function()
        x()
    end
end;
signals.services.Delay = {};
signals.services.Delay.DelayRemovement = function(obj, time)
    task.spawn(function()
        task.wait(time);
        if obj then 
            obj:Destroy()
        end;    
    end);
end;    
function signals:getservice(service, isenv)
    local getservice = nil; -- servcice
    -- could rewrite to make 'signals.services' a variable and set it if env
    if not isenv then 
        for i,v in next, signals.services do 
            if v.identifier == service then 
                getservice = v;
            end;
        end
    else
        for i,v in next, signals.env do 
            if v.identifier == service then 
                getservice = v; -- sevrvice
            end;
        end
    end;
    return getservice
end;
signals.fenv.create_service = function(service, env)
    local usage = {};
    usage.identifier = service;
    if env then 
        table.insert(signals.env, usage)
    else
        table.insert(signals.services, usage)
    end
    return usage
end;  -- could create custom service, signals.fenv.create_service('Replicator')
-- signals.env  
function signals.loadprotection(x, key, loadon, env)
    if key ~= '~1~1~1' then return false end;
    local signalget = signals:getservice(x,env) --signals.services[x]()
    if type(signalget) == 'function' then 
        signalget();
        return true
    else
        return signalget
    end;    
end
function using(___, loadon, env)
    key = '~1~1~1' --dec('')
    local getmodule  = ___
    return signals.loadprotection(___, key, loadon, env) -- signals new key
end
-- > using('betausage')  imports mouse into env


signals.services.betausage = function()
    -- do something, unload modules and variables into env
    -- local usage = {};
    -- table.insert(signal.env, usage)
    signals.env.getmouse = game.Players.LocalPlayer:GetMouse()
end;
signals.findinstring = function(x, ...)
    local args = {...}; -- arga
    local b = false
    for i,v in next, args do 
        if x:find(tostring(v)) then 
            b = true
            break
        end
    end
    return b
end;
-- setmetatable(signals.connections, signals.controlled)
-- signals.controlled.__newindex = function(table_, key, value)
--     if value == nil then 

--     end
-- end

function signals.gamestepped:connect(desc,func)
	print('@connecting '..desc);
	local connection = game.RunService.RenderStepped:Connect(function()
		func()
	end)
	return connection
end
function signals.heartbeat:connect(desc,func)
	print('@connecting '..desc);
	local connection = game.RunService.Heartbeat:Connect(function()
		func()
	end)
	return connection
end

function signals.compile(raw)
	local modules = {}
	if raw:find('httpservice') then 
		modules['http'] = game:GetService('HttpService');
	end
	if raw:find('replicatedstorage') then 
		modules['rep'] = game:GetService('ReplicatedStorage');
	end
	if raw:find('exec') then 
		modules['exec'] = identifyexecutor();
	end
	if raw:find('char') then 
		modules['char'] = game.Players.LocalPlayer.Character;
	end
    local stored = {} --0
    for i,v in next, modules do 
        table.insert(stored,i) --+= 1
    end
	if #stored == 1 then modules = modules[stored[1]] end;
	return modules
end
function signals.conceal(f)
    task.spawn(function()
        f()
    end)
end

function signals.new(f,uu)
    local random = Random.new()
    local letters = {'1','2','3','4','5','6','7','8','9','0','a','b','c','d','e','f','g','h','i','j','k4','l','m','n','o','p4','q','r','s','t','u','v4','w','x','y','z','gej0h','hrhw1','ewh2','gew3','ffs4','gh5','w6','f7r','ff8','e9r','h','br'}
    function getRandomLetter()
        return letters[random:NextInteger(1,#letters)]
    end
    function getRandomString(length, includeCapitals)
        local length = length or 10
        local str = ''
        for i=1,length do
            local randomLetter = getRandomLetter()
            if includeCapitals and random:NextNumber() > .5 then
                pcall(function()
                    randomLetter = string.upper(randomLetter)
                end)
            end
            str = str .. randomLetter
        end
        return str
    end
    local RANDOMSTRING = getRandomString(20,true)
    local DATA = {}
    DATA.TIMETAKEN = os.time()
    DATA.func = f;
    DATA.hash = RANDOMSTRING
    if uu then RANDOMSTRING = uu end;
    sharedRequires[RANDOMSTRING] = DATA;
    if vs then print('setup table, '..RANDOMSTRING) end;
    return DATA
end;

function signals.cleanup()
    for _, connection in next, signals.connections do 
        if connection['event'] == nil then 
            --@ cleanup task
            if connection['instance'] then connection['instance']:Destroy() end;
            table.remove(signals.connections, _)
        end
    end
end
function signals.init()
    task.spawn(function()
        while task.wait(1) do 
            if #signals.connections >= 1 then 
                signals.cleanup()
            end
        end
    end)
end

function signals.connections.new(connection, bind, justInstance)
    -- local ctn = {
    --     funct = f
    -- }
    -- local connectionFunction = 'notASSIGN';
    -- task.spawn(function()
    --     repeat task.wait() until connectionFunction ~= 'notASSIGN'

    --     --for i,v in next, 
    -- end)
    local oncallback;
    if signals.events[bind] then 
        oncallback = signals.events[bind].called
    end

    local data = {};
    local InstanceFired = Instance.new('BindableEvent');
    local ctn; ctn = InstanceFired.Event:Connect(function()
        if oncallback then 
            oncallback()
        end
    end);
    if justInstance then 
        if justInstance.ClassName == 'RemoteEvent' then 
            local onEvent = hookfunction(justInstance.FireServer, newcclosure(function(a,...)
                task.spawn(function()
                    InstanceFired:Fire()
                end)
                return onEvent(a,...)
            end))
        end
    end
    data['connection'] = connection
    data['event'] = ctn;
    data['instance'] = InstanceFired;
    local datacontrol = {};
    datacontrol.__index = data;
    datacontrol.__newindex = function(table, key, value)
        if key == 'event' and value == nil then 
            -- @ disconnect ;
            if signals.debugger then print('[setting event to nil; disconnection]') end;
            ctn:Disconnect()
            -- table remove
        end
    end;
    local maintable = setmetatable({}, datacontrol); -- the table that we can set to nil
    table.insert(signals.connections, data)
    return maintable; --data
end
--[[
    maid.test1 = signals.connections.new('Task1','onFire', game.RemoteEvent)['event']
]]
function signals.addalias(func,...)
    for _, alias in next, {...} do 
        signals.events[alias] = func
    end
end
function signals.addevent(event, callback)
    signals.events[event] = signals.events[event] or {}
    signals.events[event].callback = callback
    signals.events[event].called = function()
        signals.events[event].callback(); --callback()
    end
    signals.events[event].bind = function()

    end;
end; -- aliases
-- signals.addevent('onParry', function() end)
function signals.fire(event)
    if signals.events[event] then 
        signals.events[event].called()
    end
end;
-- signals.connections.new() = function()
-- check if function is set to nil
-- local storefunction = signals.new(os.time()); storefunction.funct()
--
local function GetObjectParentsDir(obj,wl)
	local BaseParent = obj.Parent
	local Offsets = {}
	local OffsetOfHomeAdress = 0
	while true do
		task.wait()
		if BaseParent.Parent ~= game then -- and BaseParent.Parent ~= wl
			BaseParent = BaseParent.Parent
		else
			break
		end
	end
	for i,v in next, BaseParent.Parent:GetChildren() do
		if v == BaseParent then
			OffsetOfHomeAdress = i
		end
	end
	return BaseParent, OffsetOfHomeAdress --Offsets
end
local function getOffset(basePoint,obj,BaseAddress)
	local offset = 0
	for i,v in next, basePoint:GetDescendants() do
		if v == obj then
			offset = i
		end
	end
	local digit = tostring(offset+math.random(1,10)):sub(1,1)
	local fivedigit = digit..'00'..digit..'0'
	return '0x'..tostring(offset)..'A'..tostring(BaseAddress)..'E'..fivedigit --..'00000' --..obj.Name:sub(1,2)
end
local function getOffsetProperties(offset)
	local str = offset
	local result = nil
	str = string.gsub(str,'0x','')
	local number = tonumber(string.split(str,'A')[1])
	local lenOfNumber = string.len(tostring(number))
	str = str:sub(lenOfNumber+1,string.len(str))
	str = string.gsub(str,'A','')
	str = string.gsub(str,'E','')

	str = str:sub(1,string.len(str)-5) -- added 5 zeros
	local baseIndex = tonumber(str)
	return {base = baseIndex, index = number}
end

local function getBaseInstance(n)
	local BaseInstance = nil
	for i,v in next, game:GetChildren() do
		if i == n then
			BaseInstance = v
			break
		end
	end
	return BaseInstance
end
local function readMemoryOffset(offset)
	local str = offset
	local result = nil
	str = string.gsub(str,'0x','')
	local number = tonumber(string.split(str,'A')[1])
	local lenOfNumber = string.len(tostring(number))
	str = str:sub(lenOfNumber+1,string.len(str))
	str = string.gsub(str,'A','')
	str = string.gsub(str,'E','')
	str = str:sub(1,string.len(str)-5) -- added 5 zeros
	local baseIndex = tonumber(str)
	local BaseInstance = nil
	for i,v in next, game:GetChildren() do
		if i == baseIndex then
			BaseInstance = v
			break
		end
	end
    if BaseInstance then 
        for i,v in next, BaseInstance:GetDescendants() do
            if i == number then
                result = v
                break
            end
        end
    end
	return result
end
function signals.calculateoffset(instance)
    local BaseParent,baseaddress = GetObjectParentsDir(instance)
    local newoffset = getOffset(BaseParent,instance,baseaddress)
    --newoffset = convertOffsetToCE(newoffset)
    return newoffset
end; -- signals.calculateoffset(workspace.Part) -- > 0x1
function signals.getoffset(offset)
    
end; -- signals.getoffset('0x593924') --> ServerScriptService.Folder9.Part
function signals.offloadoffsets(tablevalue)
    local __calc = {};
    for i,v in next, tablevalue do 
        __calc[tostring(v)] = signals.getoffset(tostring(v))
    end;
    return __calc
end; -- table1 = {'0x5b9322'}; local conversion = signals.offloadoffsets(table1)
function signals.tolist(tablevalue)
    local __calc = {};
    local index = 0
    for i,v in next, tablevalue do 
        index += 1
        __calc[index] = signals.getoffset(tostring(v))
    end;
    return __calc
end; -- local conversion = signals.offloadoffsets(table1); signals.tolist(conversion) 
--> instead of {'0x1' = workspace.Part} it converts to {[1] = workspace.Part}
--> get offset in character conversion
function signals.goic_cnv(character, object)
    local descendantIndex = {};
    descendantIndex.index = 0;
    descendantIndex.object = nil;
    descendantIndex.offset = nil;
    if type(object) == 'string' then 
        -- passed string
    end
    for i,v in next, character:GetDescendants() do 
        if object and (not type(object) == 'string' and v == object or type(object) == 'string' and v.Name == object) then 
            descendantIndex.index = i;
            descendantIndex.object = v
            break
        end
    end;
    if descendantIndex.index >= 1 then 
        descendantIndex.offset = signals.calculateoffset(descendantIndex.object)
    end;
    return descendantIndex
end; 
--> decompile offset in character
function signals.doic_cnv(character, object, so) --> supposed name
    local descendantIndex = 0;
    for i,v in next, character:GetDescendants() do 
        if i == object then 
            descendantIndex = v; --i;
            if so and tostring(so) ~= tostring(v.Name) then 
                warn('@ decompiler warning, name isnt equal to said value')
                warn('@ checking if found in name')
            end
            break
        end
    end;
    return descendantIndex
end; 
function signals.toOffset(offset, descendant)
    -- @ priority (waffle)
end;    
function signals.useDescendant(character, descendant) -- toDesc
    -- @ priority (waffle)
    return signals.doic_cnv(character, descendant)
end;   
function signals.looptojump(text) -- signals.looptojump
    local loopers = {}
    for i,v in next, string.split(text,',') do 
        table.insert(loopers,#loopers+1, tonumber(v))
    end;
    -- 1,2,3,4
    -- loopers = {1,2,3,4}
    local currentUsage = game
    local oldUsage = nil
    -- repeat 
    --     task.wait()
    
    -- until currentUsage == oldUsage
    for _, v in next, loopers do 
        currentUsage = currentUsage:GetDescendants()[v]
    end;
    -- currentUsage = game[1] -- workspace
    -- (workspace) currentUsage = currentUsage[2]
    -- (workspace.Folder)
    return currentUsage
end;    
function signals.loadIDE()

end;  
function signals.VirtualiseKeypress(letter, onoroff)
    local inputManager = game.VirtualInputManager; --UserInputService
    inputManager:SendKeyEvent(onoroff,Enum.KeyCode[letter],false,game)
end;    

signals.ENCODEMENT = {
}
signals.LETTERS = {
    a = '+';
    b = '=';
    c = '~';
    d = '[';
    e = ']';
    f = '1';
    g = '0';
    h = '2';
    i = '6';
    j = '5';
    k = '8';
    l = '9';
    m = '3';

    n = 'j';
    o = ';';
    p = 'G';
    q = 'B';
    r = 'f';
    s = 'Q';
    t = 'x';
    u = 'z';
    v = 'A';

    w = 'u';
    x = 'Y';
    y = 't';
    z = 'C'; -- v
    space = 'K';
    ['('] = '{';
    [')'] = '}';
}
for i,v in next, signals.LETTERS do 
    signals.ENCODEMENT[tostring(i)] = {
        original = i == 'space' and ' ' or i;
        new = v
    };
    -- [tostring(v)] = 
end;
function signals.compilelua(string)

end;
function signals.decompile(string)
    
end;
function signals.encode(string)
    local newstring = '';
    for i=1, string.len(string) do 
        local letter = string:sub(i,i);
        local inTable = letter == ' ' and 'space' or letter;
        local tValue = signals.ENCODEMENT[inTable] and signals.ENCODEMENT[inTable].new or letter;
        newstring = newstring..tValue;
    end
    return newstring
end;
function signals.decode(string)
    local newstring = '';
    for i=1, string.len(string) do 
        local letter = string:sub(i,i);
        local inTable = letter;
        local tValue = letter; --nil; 
        for index, value in next, signals.ENCODEMENT do 
            if value.new == letter then 
                --print(value.original)
                tValue = value; --signals.ENCODEMENT[inTable];
            end;
        end
        if type(tValue) == 'table' and tValue ~= letter then -- true if supported character
            tValue = tValue.original
            --print('swapping',letter,'to',tValue)
        end;
        newstring = newstring..tValue; 
    end
    return newstring
end;
function signals.findpartindir(dir)
    local part = nil;
    for i,v in next, dir:GetDescendants() do 
        if v:IsA('BasePart') then part = v; break end;
    end;   
    return part; 
end;
--[[
    > character : ml_xy
    >> Player Folder
    >>> String Value, ['no']
    ~
    local PlayerFolder = signals.goic_cnv(character, 'Player Folder') --> table
    PlayerFolder
]]
--> signal explorer
--> list of everyone like dex
--> inside it lists offset, classname and name
--[[
    {
        0x1
        0x2
    }
]]
getgenv().__shared = sharedRequires

local IsFriendWith = LocalPlayer.IsFriendsWith;
	
local apiAccount;

task.spawn(function()
    --apiAccount = AltManagerAPI.new(LocalPlayer.Name);
end);

local function isFriendWith(userId)
    local suc, data = pcall(IsFriendWith, LocalPlayer, userId);

    if (suc) then
        return data;
    end;

    return true;
end;
if ESP then for i,v in next, ESP.Objects do 
    v:Remove();
end end

-- sharedRequires.__task(
--     function() -- [[ez keyloader func]]
--         getgenv().previewanimation = function(animid)
--             local animholder = Instance.new('Animation');
--             animholder.AnimationId = 'rbxassetid://'..animid
--             game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(animholder):Play()
--             animholder:Destroy()
--         end;
--     end;
-- );

getgenv().previewanimation = function(animid)
    local animholder = Instance.new('Animation');
    animholder.AnimationId = 'rbxassetid://'..animid
    game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(animholder):Play()
    animholder:Destroy()
end;


local MemStoreService = game:GetService('MemStorageService');
local Players = game:GetService('Players');
local RunService = game:GetService('RunService')
local BlockUtils = {};
function BlockUtils:BlockUser(userId)

    local blockedUserIds = game.StarterGui:GetCore('GetBlockedUserIds');
    local playerToBlock = Instance.new('Player');
    playerToBlock.UserId = tonumber(userId);

    local lastList = #blockedUserIds;
    game:GetService('GuiService'):ClearError();

    repeat
        game.StarterGui:SetCore('PromptBlockPlayer', playerToBlock);

        local confirmButton = game:GetService('CoreGui').RobloxGui.PromptDialog.ContainerFrame:FindFirstChild('ConfirmButton');
        if (not confirmButton) then break end;

        local btnPosition = confirmButton.AbsolutePosition + Vector2.new(40, 40);

        game.VirtualInputManager:SendMouseButtonEvent(btnPosition.X, btnPosition.Y, 0, false, game, 1);
        task.wait();
        game.VirtualInputManager:SendMouseButtonEvent(btnPosition.X, btnPosition.Y, 0, true, game, 1);
        task.wait();
    until #game:GetService('StarterGui'):GetCore('GetBlockedUserIds') ~= lastList;

end;
function BlockUtils:BlockRandomUser()
    for _, v in next, Players:GetPlayers() do
        if (v ~= LocalPlayer and not isFriendWith(v.UserId)) then
            BlockUtils:BlockUser(v.UserId);
            break;
        end;
    end;
end;

local universeid = signals.compile('httpservice'):JSONDecode(game:HttpGet(`https://apis.roblox.com/universes/v1/places/{game.PlaceId}/universe`))['universeId']
-- setclipboard(game.HttpService:JSONDecode(game:HttpGet(`https://apis.roblox.com/universes/v1/places/{game.PlaceId}/universe`))['universeId'])
local azfakebuild = {
    build = 'v3';
    vs = 'a'; -- get github version
    code = '1';
}
if vs == 'debug' then azfakebuild.build = 'v4' end;
if luraphsettings and LRM_UserNote and string.find(LRM_UserNote, 'beta') and vs ~= 'debug' then azfakebuild.build = 'beta v3' end;
local compiledVersion = azfakebuild['build']..'.'..azfakebuild.vs..azfakebuild.code
local myScriptId = debug.info(1, 's');


if game.PlaceId == 0 then 

elseif game.PlaceId == 10266164381 then --// shitlines 
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local xrTT = false 
    -- pcall(function() 
    --     local mt = getrawmetatable(game)
    --     local namecall = mt.__namecall
    --     make_writeable(mt)
    --     local xtra = ''
    --     local oldind = mt.__index; 
    -- end)
    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][Jonathan]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        -- for i=0, #game.CoreGui.ChatLogger.Frame.Logs:GetChildren() do 
        --     -- if i > 15 then 
        --     --     for i,v in pairs(game.CoreGui.ChatLogger.Frame.Logs:GetChildren()) do if v:IsA('TextLabel') then v:Destroy() end end
        --     -- end
        --     add -= 0.01
        --     if i > 20 then 
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 6
        --     else
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 23.5
        --     end
    
        -- end
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''
        local ourname = ''
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
            if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
                name = v.DisplayName.Value
            end
            if v.RealName.Value == game.Players.LocalPlayer.Name then 
                ourname = v.DisplayName.Value
            end
        end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) or game.ReplicatedStorage.Settings:FindFirstChild(plr.Name) and game.ReplicatedStorage.Settings:FindFirstChild(plr.Name):FindFirstChild('Chakra Sense') then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        
        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
                task.spawn(function()
                    local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
                    Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
                end)
            end
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end
    local event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.OnMessageDoneFiltering
    -- xeventset
    local stopbringing = false
    m_GameManager = require(game.ReplicatedStorage.GameManager)
    local animsplayingforced = {

    }
    local stopanimplay = {}
    getgenv().chatloggerhook = event.OnClientEvent:Connect(function(object)
        local msg = string.format("%s : %s", object.FromSpeaker, object.Message or ""),game.Players:FindFirstChild(object.FromSpeaker)
        local splitName = string.split(msg,' ')
        local senderName = splitName[1]
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end


        if game.Players:FindFirstChild(senderName) == game.Players.LocalPlayer then 
            if text:sub(1,7) == '/e play' then 
                Animation6 = m_GameManager:getAnimation(text:sub(9,string.len(text)), game.Players.LocalPlayer.Character.Humanoid);
                Animation6:Play()
                table.insert(stopanimplay,Animation6)
            elseif text == '/e stop' then 
                for i,v in next, stopanimplay do 
                    v:Stop()
                    table.remove(stopanimplay,i)
                end   
            end
        end

        if  table.find(admins,senderName) and game.Players.LocalPlayer.Name ~= senderName then 
            if text == '-bring_azfake' then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(senderName).Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
            elseif text == 'drop' then 
                local ohString1 = "DropItem"
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)  
                task.wait(2)
                local ohString1 = "DropItem"
                local ohNumber2 = 100
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)  
            elseif text == 'dropall' then 
                local ohString1 = "DropItem"
                local ohNumber2 = tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)  
            elseif text == 'drop1k' then
                local ohString1 = "DropItem"
                local ohNumber2 = 1000
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2) 
            elseif text == 'anchor-'..game.Players.LocalPlayer.Name then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = not game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored
            elseif text == '!bring-'..game.Players.LocalPlayer.Name then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(senderName).Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
            elseif text == '!loopbring-'..game.Players.LocalPlayer.Name then 
                stopbringing = false
                task.spawn(function()
                    repeat 
                        task.wait(0)
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(senderName).Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
                        end)
                    until stopbringing == true
                end)
            elseif text == '!cancel_limitations' then 
                stopbringing = true
            elseif text == '!plead' then 
                stopbringing = false
                local pleads = {
                    'pls im sorry';
                    'i will never do it again';
                    'PLEASE IM SORRY';
                    'HELP ME';
                    'AHH THE THOUGHTS IN MY BRAIN';
                    'KILL OR NOT KILL';
                    'HUH WHAT WHEN HOW';
                    'IVE LOST THIS BATTLE';
                    'i stood no chance';
                    'i stood no chance from the start';
                    'my fate was sealed from the beginning';
                    'ill tell my mommy about you'; -- son
                    'deary me';
                    'im in shambles';
                }
                task.spawn(function()
                    local screening = Instance.new('ScreenGui')
                    local screenframe = Instance.new('Frame',screening)
                    screenframe.Size = UDim2.new(1,0,1,0)
                    screenframe.BackgroundColor3 = Color3.fromRGB(255,0,0)
                    screenframe.Transparency = .8 -- play mangekyo sharingan sound
                    screening.Parent = game.CoreGui
                    task.spawn(function()
                        repeat task.wait()
                            game:GetService('TweenService'):Create(screenframe,TweenInfo.new(.3,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{BackgroundColor3 = Color3.fromRGB(0,0,0)}):Play()
                            task.wait(.3)
                            game:GetService('TweenService'):Create(screenframe,TweenInfo.new(.3,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{BackgroundColor3 = Color3.fromRGB(255,0,0)}):Play()
                            task.wait(.3)
                        until stopbringing == true
                    end)
                    repeat 
                        task.wait(5)
                        local args = {
                            [1] = tostring(pleads[math.random(1,#pleads)]),
                            [2] = "All" 
                        };
                        (game:GetService("ReplicatedStorage")).DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args));
                    until stopbringing == true
                end)
            elseif text == 'can you invite me to yo clan' then 
                game.ReplicatedStorage.Events:FindFirstChild('DataEvent'):FireServer("InviteToClan",game.Players:FindFirstChild(senderName).Character.Name)
            elseif text:sub(1,5) == '!play' then 
                Animation6 = m_GameManager:getAnimation(text:sub(6,string.len(text)), game.Players.LocalPlayer.Character.Humanoid);
                Animation6:Play()
                table.insert(animsplayingforced,Animation6)
            elseif text == 'endanims' then 
                for i,v in next, animsplayingforced do 
                    v:Stop()
                    table.remove(animsplayingforced,i)
                end
            end
            
        end

       logIt(string.format("%s : %s", object.FromSpeaker, object.Message or ""),game.Players:FindFirstChild(object.FromSpeaker))
    end)
    local function getexploit()
        local exploit =
            (syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
            (secure_load and "Sentinel") or
            (is_sirhurt_closure and "Sirhurt") or
            (pebc_execute and "ProtoSmasher") or
            (KRNL_LOADED and "Krnl") or
            (WrapGlobal and "WeAreDevs") or
            (isvm and "Proxo") or
            (shadow_env and "Shadow") or
            (jit and "EasyExploits") or
            (getscriptenvs and "Calamari") or
            (unit and not syn and "Unit") or
            (OXYGEN_LOADED and "Oxygen U") or
            (IsElectron and "Electron") or
            ("Unsupported")
      
        return exploit
    end
    local mt = getrawmetatable(game)
    local namecall = mt.__namecall
    if make_writeable then make_writeable(mt) end 
    if getexploit() == 'Krnl' or setreadonly then 
        setreadonly(mt,false)
    end
    getgenv().redirectattacks = false
    local xtra = ''
    local oldind = mt.__index; 
    local function getplayerclose()
        local closeroot = nil
        local closedist = nil
        for _,v in next, game.Players:GetChildren() do 
            if v.Character and v.Character:FindFirstChild('HumanoidRootPart') and v.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                local idst  = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - v.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                if idst < 30 then 
                    if closeroot == nil then 
                        closeroot = v.Character:FindFirstChild('HumanoidRootPart')
                        closedist = idst 
                    else 
                        if closedist > idst then 
                            closeroot = v.Character:FindFirstChild('HumanoidRootPart')
                            closedist = idst 
                        end
                    end
                end
            end
        end
        return closeroot
    end
    local yYes,nNo = pcall(function()
        mt.__namecall = newcclosure(function(self,...)
            local args = {...}
            if  getnamecallmethod() == 'FireServer' and tostring(self) == 'DataEvent' then --// checkcaller -- not checkcaller() and
                if args[1] == 'StopCharging' and getgenv().AzfakeGlobalTables['bloodlines']['keep_charging'] == true then 
                    return
                elseif args[1] == 'TakeDamage' and getgenv().AzfakeGlobalTables['bloodlines']['no_fall'] == true then 
                    return 
                elseif args[1] == 'BanMe' then 
                    return 
                elseif args[1] == 'newArea' and args[2] == 'The Void' and getgenv().AzfakeGlobalTables['bloodlines']['anti_void'] == true then 
                    return
                elseif args[1] == 'SaveSlots' and getgenv().AzfakeGlobalTables['bloodlines']['checkstats'] then 
                    for i,v in pairs(args[2]) do
                        pcall(function()
                            print(v,tostring(i))
                            if tostring(i) == 'Grips' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'Blocks' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'PB' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'Age' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'Knocks' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'SharinganUsage' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'M1s' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i) == 'WaterXP' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                            if tostring(i)== 'UnlockSharinganStage1' then xtra = xtra..'\n'..tostring(i)..' = '..tostring(v) end
                        end)
                    end
                    setclipboard(xtra)
                    print(xtra)
                    return args
                elseif args[1] == 'startSkill' and getgenv().redirectattacks == true and getplayerclose() ~= nil then 
                    args[3] = getplayerclose().Position
                end
                if args[1] == 'InflictFire' and checkcaller and not checkcaller() then 
                    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                    local ohString1 = "RemoveFireAilment"
    
                    game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
                    return
                end
                -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
            end
            if  getnamecallmethod() == 'InvokeServer' and tostring(self) == 'DataFunction' then --// checkcaller -- not checkcaller() and
                -- local args = {...}
                if args[1] == 'CheckCooldown' and getgenv().AzfakeGlobalTables['bloodlines']['no_cooldown'] ~= nil and table.find(admins,game.Players.LocalPlayer.Name) then 
                    if getgenv().AzfakeGlobalTables['bloodlines']['no_cooldown'] == true and table.find(admins,game.Players.LocalPlayer.Name) then 
                        -- args = {'CheckCooldown','Lions Barrage'}
                        -- game.ReplicatedStorage.Events.DataFunction:InvokeServer(unpack(args))
                        return true
                    end
                end
            end
            return namecall(self,unpack(args))
        end)
    end)

    if nNo then 
        print('Unable to register NAMECALL BASIC FUNCTION MEANS U HAVE A BAD EXPLOIT KID')
        task.spawn(function()
            local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()

            Notification.Notify("AZFAKE", "COULDNT MAKE UR SCRIPT COME TO LIFE", "rbxassetid://4914902889");
        
            Notification.Notify("AZFAKE", getexploit().. '-> ?', "rbxassetid://4914902889");

            local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
            local Notify = NotifyLibrary.Notify
        
        
            Notify({
                Title = 'Unable to register NAMECALL BASIC FUNCTION ';
                Description = 'MEANS U HAVE A BAD EXPLOIT KID GET BETTER'
            })
        end)
    end
    --[[
        local ohTable3 = {
            ["1"] = {
                ["Item"] = "Lion's Barrage",
                ["Quantity"] = 1
            },
            ["3"] = {
                ["Item"] = "Dynamic Entry",
                ["Quantity"] = 1
            },
            ["2"] = {
                ["Item"] = "Pain's Rinnegan",
                ["Quantity"] = 12
            },
            ["5"] = {
                ["Item"] = "Chakra Fruit",
                ["Quantity"] = 3
            },
            ["4"] = {
                ["Item"] = "Leaf Whirlwind",
                ["Quantity"] = 15
            },
            ["7"] = {
                ["Item"] = "Sealing Floor",
                ["Quantity"] = 1
            },
            ["6"] = {
                ["Item"] = "Dragonic Flames",
                ["Quantity"] = 1
            },
            ["9"] = {
                ["Item"] = "Earth Golem",
                ["Quantity"] = 1
            },
            ["8"] = {
                ["Item"] = "Water Wave",
                ["Quantity"] = 1
            },
            ["12"] = {
                ["Item"] = "",
                ["Quantity"] = 1
            },
            ["11"] = {
                ["Item"] = "Hashirama Cells",
                ["Quantity"] = 1
            },
            ["10"] = {
                ["Item"] = "Fire Seal",
                ["Quantity"] = 1
            }
        }
        local ohTable3 = {
            ["1"] = {
                ["Item"] = "Lion's Barrage",
                ["Quantity"] = 1
            },
            ["3"] = {
                ["Item"] = "Dynamic Entry",
                ["Quantity"] = 1
            },
            ["2"] = {
                ["Item"] = "Pain's Rinnegan",
                ["Quantity"] = 12
            },
            ["5"] = {
                ["Item"] = "Chakra Fruit",
                ["Quantity"] = 3
            },
            ["4"] = {
                ["Item"] = "Leaf Whirlwind",
                ["Quantity"] = 15
            },
            ["7"] = {
                ["Item"] = "Sealing Floor",
                ["Quantity"] = 1
            },
            ["6"] = {
                ["Item"] = "Dragonic Flames",
                ["Quantity"] = 1
            },
            ["9"] = {
                ["Item"] = "Earth Golem",
                ["Quantity"] = 1
            },
            ["8"] = {
                ["Item"] = "Water Wave",
                ["Quantity"] = 1
            },
            ["12"] = {
                ["Item"] = "",
                ["Quantity"] = 1
            },
            ["11"] = {
                ["Item"] = "Hashirama Cells",
                ["Quantity"] = 1
            },
            ["10"] = {
                ["Item"] = "Fire Seal",
                ["Quantity"] = 1
            }
        }

        local mt = getrawmetatable(game);
        local old = mt.__namecall
        setreadonly(mt,false)
        mt.__namecall = newcclosure(function(remote,...)
        args = {...}
        method = tostring(getnamecallmethod())
        if method == 'FireServer' and tostring(remote) == 'DataEvent' and args[1] == 'UpdateItems' then
        
            return old(remote,args[1],args[2],ohTable3)
        end
        return old(remote,...)
        end)
        setreadonly(mt,true)
    ]]
    local bloodlinesTab = window:CreateTab(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name);  --window:CreateTab("Bloodlines");

    local xeventset = nil
    local function save()

    end
    local function savetoggles()
        for _,v in pairs(getgenv().Toggles) do 
            -- v['Value'] = false
            -- getgenv().Toggles[_]:SetValue(false)
            if configAll[_] then 
                print('found toggle, '.._)
                -- pcall(function()
                --     local rset = configAll[_];
                --     local rsettingv = nil
                --     if tostring(rset) == 'true' then rsettingv = true end 
                --     if tostring(rset) == 'false' then rsettingv = false end
                --     v['Value'] = rsettingv
                -- end)
                pcall(function()
                    local rset = configAll[_];
                    local rsettingv = nil
                    if tostring(rset) == 'true' then rsettingv = true end 
                    if tostring(rset) == 'false' then rsettingv = false end
                    v['Value'] = rsettingv
                    getgenv().Toggles[_]:SetValue(rsettingv)
                end)
                print('tried to set')
            end
        end
    end
    
    

    -- quick function
    tpdel = 0.1

    getgenv().removeAnims = false
    getgenv().DontStop = {
        'Idle';
        'SwordIdle';
        'GunIdle';
        --'rbxassetid://10206891650';
    }
    getgenv().stopAnims = function()
        for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
            if not table.find(getgenv().DontStop,v.Animation.AnimationId) then 
                v:Stop()
            end
        end
    end

    getgenv().BugNpc = function() --// JoinMidBugNpcCrash
        task.wait()
        if game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Danger.Visible == false then 
            local cf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            --game.Players.LocalPlayer.Character.Head:Destroy()
            game.Players.LocalPlayer.Character:BreakJoints()
            task.spawn(function()
                wait(6.3)
                game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                repeat wait(0.5) game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart') game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf
                repeat wait(0.5) game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart') game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf
                repeat wait(0.5) game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart') game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf
                repeat wait(0.5) game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart') game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf
                repeat wait(0.5) game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf
            end)
        end

    end  
    getgenv().Respawn = function() --// JoinMidBugNpcCrash
        task.wait()
        if game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Danger.Visible == false then 
            -- game.Players.LocalPlayer.Character:WaitForChild('Humanoid')
            -- pcall(function()
            --     game.Players.LocalPlayer.Character.Humanoid:ChangeState(11);
            -- end)

            game.Players.LocalPlayer.Character:BreakJoints()
        end
    end  
    getgenv().NoStun = function() --// JoinMidBugNpcCrash
        task.spawn(function()
            while task.wait() do 
                game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).MeleeCooldown.Value = false
                game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).HeavyCooldown.Value = false
                game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).Stunned.Value = false            
                game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).SubCooldown.Value = 0
                game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).ParryStun.Value = false
                -- game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).Blocking.Value = false
                for i,v in pairs(game.ReplicatedStorage.Cooldowns:FindFirstChild(game.Players.LocalPlayer.Name):GetChildren()) do 
                    v:Destroy()
                end		               
            end
        end)
    end
    getgenv().waitforthunder = false 
    getgenv().ThunderCloudNotify = function()
        task.spawn(function()
            repeat wait(); until workspace:FindFirstChild('Thunderstorm')
            if getgenv().waitforthunder == false then return end
            local noti = Instance.new('ScreenGui',game.CoreGui); noti.Name = 'BUSHI'; local actualnotif = Instance.new('Frame',noti);actualnotif.Active = true  actualnotif.Visible = true; local x = Instance.new('UIGridLayout',actualnotif); x.FillDirection = Enum.FillDirection.Vertical; x.CellSize  = UDim2.new(0, 100, 0, 15); Instance.new('UICorner',actualnotif) actualnotif.BorderSizePixel = 0; actualnotif.Size = UDim2.new(0, 100, 0, 100); actualnotif.Position = UDim2.new(0, 1000, 0, 245); actualnotif.BackgroundColor3 = Color3.new(0,0,0) local title = Instance.new('TextLabel',actualnotif); title.Text = 'wow!' title.BackgroundTransparency = 1;title.TextColor3 = Color3.new(255,255,255) local text = Instance.new('TextButton',actualnotif); text.BackgroundTransparency = 1 text.TextColor3 = Color3.new(255,255,255) text.BackgroundColor3 = Color3.fromRGB(34,55,22); text.Text = 'Thundercloud!'; text.MouseButton1Down:Connect(function() noti:Destroy() end)    
        end)
    end

    --[[

        if getgenv().premiumWhitelist then 
        Misc2:AddButton('Rollback', function()
            if not table.find(buasx,game.Players.LocalPlayer.Name) then 
                Notify('','we are fixing you shmuck','untilClick')
            else
                Notify('','Developer Name is inside table','untilClick')

                local Script = Instance.new('Script')
                function get_fn_from_script(ScriptName,parent_name,isShowingInfo)
                    assert(ScriptName,"No script name provided")
                    local found = {}
                    for _,Env in pairs(debug.getregistry()) do
                        if type(Env) == "function" and not is_protosmasher_closure(Env) and islclosure(Env) then
                            pcall(function()
                                if not parent_name then
                                    if getfenv(Env).script.Name == ScriptName then
                                        if isShowingInfo then
                                            table.insert(found,debug.getinfo(Env))
                                        else
                                            table.insert(found,Env)
                                        end
                                    end
                                else
                                    if getfenv(Env).script.Name == ScriptName and getfenv(Env).script.Parent.Name == parent_name then
                                        if isShowingInfo then
                                            table.insert(found,debug.getinfo)
                                        else
                                            table.insert(found,Env)
                                        end
                                    end
                                end
                            end)
                        end
                    end
                    if found == 0 then error("Could not find any script with the name you provided",2) end
                    return found
                end
                
                script = get_fn_from_script("LocalScript","ClientGui")
                -- loop through all the function of this script
                for i,f in next,script do
                    warn("---"..i.."---") -- this is visual marker for the fn
                    for i2,v2 in pairs(debug.getupvalues(f)) do
                        print(i2,v2) -- i2 is the index of the upvalue, v2 is the value of the upvalue
                        if typeof(v2) == 'table' then 
                            v2 = {} 
                        end
                    end
                end
                
                
                local DataStoreService = game:GetService("DataStoreService")
                local metatableDATA = getrawmetatable(DataStoreService)
                
                local r =  {}
                
                
                if metatableDATA then 
                    for d,g in next,metatableDATA do
                        print(tostring(d)) 
                        if tostring(d) == '__metatable'then make_writeable(metatableDATA) 
                            metatableDATA.__metatable = DataStoreService
                            setmetatable(r,metatableDATA)
                            metatableDATA.__index = DataStoreService
                        end
                    end
                end
                
                for _,rx in pairs(r) do print(rx) end
                DataStoreService:GetGlobalDataStore()
                
                --local experienceStore = DataStoreService:GetDataStore("PlayerExperience")
                

            end
            -- Notify({
            --     Title = 'AZFAKE IS REAL';
            --     Description = 'NO PERMISSION NOT RELEASED'
            -- })
        end)
    end
    ]]

    getgenv().resetQuest = function()
        local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()

        local scriptPath = game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.LocalScript
        local closureName = "Unnamed function"
        local upvalueIndex = 4
        local closureConstants = {
            [1] = "Settings",
            [2] = "MeleeCooldown",
            [3] = "Value",
            [4] = "SlotText",
            [5] = "Text",
            [6] = ""
        }

        local closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)
        local value = YOUR_NEW_VALUE_HERE
        local elementIndex = "Quests"
        for _,v in next, debug.getupvalue(closure, upvalueIndex)[elementIndex]  do 
            if type(v) == 'table' and  _ == 'Hostage Retrieval' then 
                rawset(v,'UsesFinished',false)
                rawset(v,'UsesOngoing',false)
                --rawset(v,'Start',{})
                for k,c in next,v do
                    print(k,c)
                end
            end
        end
    end
    -- local ohString1 = "GetQuestProgress"
    -- local ohString2 = "Hostage Retrieval"

    -- x = game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2); print(x)
    -- local ohString1 = "StartQuest"
    -- local ohString2 = "Hostage Retrieval"
    
    -- r = game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2); print(r)
    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

    getgenv().CloneQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Clones Debacle"
        local ohString3 = "DontComplete"
    
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Clones Debacle"
    
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "Clones Debacle"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    -- print(r)
    getgenv().HostageAuto = function()
        local Old = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
        local HostageCFrame = CFrame.new(2224.56909, -240.500031, -833.920227, -0.915702045, -1.53603352e-08, 0.401857942, -1.63921374e-08, 1, 8.71008043e-10, -0.401857942, -5.78972648e-09, -0.915702045)
        local PadCFrame = CFrame.new(2143.3313, -240.500046, -780.24292, -0.999846399, 8.11863927e-08, -0.0175278168, 8.11453518e-08, 1, 3.05240122e-09, 0.0175278168, 1.62963132e-09, -0.999846399)

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "DontComplete"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        
        local ohString1 = "StartQuest"
        local ohString2 = "Hostage Retrieval"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = PadCFrame

        task.wait(.5)


        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = HostageCFrame

        task.wait(1)

        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        task.wait(1)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
    end

    getgenv().CCropsAuto = function()
        local Old = game.Players.LocalPlayer.Character.PrimaryPart.CFrame

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Search For The Chakra Crops"
        local ohString3 = "DontComplete"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        
        local ohString1 = "StartQuest"
        local ohString2 = "Search For The Chakra Crops"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)



        task.wait(0.5)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "Search For The Chakra Crops"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Search For The Chakra Crops"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
    end
    getgenv().spawnLavarossa = function()
        task.spawn(function()
            -- local Lav = CFrame.new(-550.923279, -314.055084, -219.727982, 0.809323013, -5.16854897e-08, -0.58736378, 3.74377969e-08, 1, -3.64105155e-08, 0.58736378, 7.47826157e-09, 0.809323013)
            -- local Old = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    
            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Lav
    
            -- task.wait(.35)
    
            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame *= Lav * CFrame.new(0,-15,0)
            -- game.Players.LocalPlayer.Character.Head:Destroy()


            -- wait(6.1)

            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Lav 
            firetouchinterest(workspace.Floor,workspace.Floor,0)

        end)
    end
    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    getgenv().spawnManda = function()
        -- local Manda = CFrame.new(1503.26465, -536.00061, 734.973633, -0.235978663, -2.37474111e-08, 0.971758246, 5.78141233e-08, 1, 3.84769692e-08, -0.971758246, 6.52610979e-08, -0.235978663)
        -- local Old = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

        -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Manda

        -- task.wait(.2)


        -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
        for _,v in pairs(workspace:GetChildren()) do 
            if v.Name == 'WeirdFloor' then 
                firetouchinterest(v,v,0)
            end
        end
    end
    getgenv().Selling = ''
    getgenv().Sell = function()
        local ohString1 = "Item"
        local ohString2 = "Selected"
        local ohString3 = string.split(getgenv().Selling,'/')[1]
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3)
        ohString1 = "SellTrinket"
        ohString2 = string.split(getgenv().Selling,'/')[1]
        ohNumber3 = tonumber(string.split(getgenv().Selling,'/')[2])
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohNumber3)
    end
    getgenv().SellBulk = function()
        local ohString1 = "Item"
        local ohString2 = "Selected"
        local ohString3 = string.split(Options.Selling.Value,'/')[1]
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3)
        ohString1 = "SellTrinket"
        ohString2 = string.split(Options.Selling.Value,'/')[1]
        ohNumber3 = tonumber(string.split(Options.Selling.Value,'/')[2])
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohNumber3)
    end
    getgenv().KamuiEssence =function()
        local ohString1 = "StartQuest"
        local ohString2 = "Kamui Resistance Training"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Kamui Resistance Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Portal.ObitoKamui.CFrame

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "Kamui Resistance Training"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Kamui Resistance Training"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

    end
    getgenv().InnKeeper = function()
        local pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        local InnKeepers = {}
        local ohString1 = "StartQuest"
        local ohString2 = "InnKeeper's Reunion"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,0,0)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "InnKeeper's Reunion"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "InnKeeper's Reunion"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "InnKeeper's Reunion"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
    end
    getgenv().Lavaroldy = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Humbling Lavarossa"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Humbling Lavarossa"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "Humbling Lavarossa"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().ParkourQuest = function()
        workspace:FindFirstChild('Training Bells')
        local ohString1 = "StartQuest"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().Damsel = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bracelet Retrieval"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bracelet Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Bracelet Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().Slowcoach = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local store = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(364.530212, 44.4999847, -1026.24524, 0.047671169, -1.02416728e-10, -0.998863101, 3.05318686e-08, 1, 1.35461331e-09, 0.998863101, -3.05617327e-08, 0.047671169)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "A Run For Your Life"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "A Run For Your Life"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "A Run For Your Life"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "ActivateButton"
        local ohInstance2 = workspace.RiverGearsActivation

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        task.wait(0.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = store
    end
    getgenv().BoliveQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bolive Retrieval"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bolive Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Bolive Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().SellFruits = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Fruit Cooker"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "SellingBulk"
        local ohNumber2 = 83
        local ohString3 = "Fruit"
        local ohString4 = "Fish"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohString4)
    end
    getgenv().combatQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Combat Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Combat Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Combat Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().Players = {}
    getgenv().npcs = {}
    getgenv().buyable = {}
    for i,v in pairs(workspace:GetChildren()) do 
        if v:FindFirstChild('Humanoid') and v:FindFirstChild('Head') and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('NPC') and v:FindFirstChild('NPC').Value == 'Dialog' and not game.Players:FindFirstChild(v.Name) then 
            table.insert(getgenv().npcs,v.Name)
        end
    end
    -- for i,v in pairs(workspace:GetChildren()) do 
    --     if v:FindFirstChild('Buyable') then 
    --         table.insert(getgenv().buyable,v.Name)
    --     end
    -- end
    local module = require(game.ReplicatedStorage.GameManager)
    for _,v in pairs(module) do 
        if type(v) == 'table' then 
            for index , tent in next, v do 
                if type(tent) == 'table' then 
                    for ni,vi in next, tent do 
                        if tostring(ni) == 'Buyabble' then 
                            table.insert(getgenv().buyable,index)
                        end
                    end
                end
            end
        end
    end
    for i,v in pairs(game.Players:GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(getgenv().Players,v.Name)
        end
    end
    getgenv().stopfarm = function()
        getgenv().NPCLookingAt = ''
        getgenv().farming = false 
        getgenv().farmingnpc = nil 
        getgenv().lookatpos = nil
    end

    getgenv().rollback = function()
        -- Script generated by SimpleSpy - credits to exx#9394
        local data =             {
            QuestSeal = false;
            LeaveTime = 1661208285;
            HairColor_B= 0.36470588235294116;
            KamuiResistance = true;
            HairColor_R= 0.12941176470588237;
            StruckByLightning = true;
            ReleaseRestore = true;
            UnlockSharinganStage1 = true;
            RestoreCount = 0;
            FireXP = 0;
            PrevSharingan = false;
            SkinColor_B = 1;
            Sins = 220;
            GraphicsLevel = "High";
            CanDestroy = true;
            M1s = 2522;
            CP = 0;
            BlockedSkills = {};
            AgeReset = true;
            PositionZ = -78.94847106933594;
            LifeForce = 1200;
            Hair = "Hair9",
            PupilColor_G = 0.8705882352941177;
            Recipes = {};
            MasteredJutsu = "";
            FacePaint = "";
            Pupil = "NormalPupil";
            Footsteps = "On";
            MangekyoUsage = 20;
            WearingAccessory = "";
            UsedSkills = {};
            Health = 1200;
            WaterXP = 2220;
            LastChakraPoint = "Sorythia Town";
            HighQRain = "On";
            Clothing_Color_B = 108;
            XPShark = true;
            LastName = "Bunda";
            PlayerInGame = true;
            Tilt = "On";
            Traits = {};
            EyeProtection = false;
            UnlockedSkills = {};
            CarriedBy = {"thebox0001";"R9O3M";};
            Acumen = 820;
            DestroyedChakraPoints = {};
            PoisonZetsu = false;
            ChakraXP = 2220;
            EarthXP = 2220;
            FirstName = "Nathan";
            CurrentArea = "Sorythia Town";
            Clothing_Color_R = 134;
            InnKeeperLocation = "";
            SwimTime = 3223;
            ArmorBroken = false;
            Eyes = "Eyes12";
            AscendedZetsu = false;
            AwakeningLevel = 1;
            Quests = {};
            PlayedBefore = true;
            FoodCounters = 0;
            Clothing = "Rags";
            GlobalRestore = 4;
            SkinColor_R = 0.7254901960784313;
            KilledLavarossa = true;
            InstantCast = "Off";
            CurrentWeapon = "Fist";
            XPChain = true;
            ItemDisplayType = "Icon";
            PrevByakugan = false;
            TotalEyes2 = 0;
            PositionX = 50.076934814453125;
            PupilColor_R = 0.3803921568627451;
            LastAgeReset = 0;
            ByakuganUsage = 0;
            WearingAccessory2 = "";
            LightningXP = 0;
            ScammedAmount = 0;
            HornsType = 0;
            Inventory = {
                ["53"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["77"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["73"] = {
                    ["Item"] = "Chakra Shard",
                    ["Quantity"] = 66
                },
                ["97"] = {
                    ["Item"] = "Chakra Fragment",
                    ["Quantity"] = 15555
                },
                ["47"] = {
                    ["Item"] = "Chakra Fragments",
                    ["Quantity"] = 13333
                },
                ["37"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["67"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["57"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["27"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["17"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["13"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["33"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["23"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["76"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["52"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["96"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["72"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["36"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["46"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["56"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["66"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["93"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["92"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["35"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["43"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["87"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["25"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["86"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["62"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["63"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["83"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["75"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["100"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["82"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["78"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["16"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["26"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["103"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["12"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["22"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["32"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["71"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["95"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["85"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["41"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["65"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["55"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["45"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["81"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["59"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["49"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["39"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["29"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["99"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["89"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["79"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["69"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["1"] = {
                    ["Item"] = "Arkoromo's Blessing",
                    ["Quantity"] = 1
                },
                ["94"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["3"] = {
                    ["Item"] = "Parkour Scroll",
                    ["Quantity"] = 1
                },
                ["2"] = {
                    ["Item"] = "Chakra Fragments",
                    ["Quantity"] = 2
                },
                ["19"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["4"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["7"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["6"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["9"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["8"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["74"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["61"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["31"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["21"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["11"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["80"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["60"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["70"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["40"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["50"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["54"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["64"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["34"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["90"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["48"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["58"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["28"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["38"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["88"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["98"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["68"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["102"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["44"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["91"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["105"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["51"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["101"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["18"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["84"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["15"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["14"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["24"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["5"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["104"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["20"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["30"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["42"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["10"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                }
            },
            RestoreCooldown = 0,
            Injuries = {
                [1] = "ArmorBreak"
            };
            PupilColor_B = 0.9607843137254902,
            SharinganUsage = 2220,
            Died = false,
            WindXP = 0,
            LastChakraRessurectionAge = 0,
            Blindness = 0,
            Clan = "Juxstin",
            SkinColor_G = 0.9647058823529412,
            ButtonChain = false,
            ReanimatedSoul = false,
            Chakra = 2100,
            BellsDrop = false,
            WeaponBound  = true,
            ThirdZetsu = false,
            Mouth = "Mouth6",
            RecievedChefsKiss = true,
            Banned3 = false,
            Loadout = {
                ["1"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["3"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["2"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["5"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["4"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["7"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["6"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["9"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["8"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["12"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["11"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                },
                ["10"] = {
                    ["Item"] = "",
                    ["Quantity"] = 1
                }
            },
            Bloodline = 'Uchiha',
            GrippedBy = {
                [1] = "thebox0001"
            },
            AngelicAge = 0,
            SecondsPlayed = 1810,
            Title = "",
            SeamlessRun = true,
            Pin = 7891,
            PositionY = -42.000640869140625,
            Reanimated = true,
            Location = "Sorythia Town",
            MasteryAmount1 = 104,
            Key = "player-"..tostring(game.Players.LocalPlayer.UserId), --// player-userid
            SecondZetsu= false,
            SealingXP = 0,
            UnlockByakuganStage1 = true,
            Grips = 1000,
            Gender = "Male",
            HairColor_G = 0.24313725490196078,
            Blocks = 1000,
            Ryo = 4000,
            Knocks = 221,
            ChakraPoints= {
                "Sorythia Town"
            },
            FourthZetsu = false,
            Clothing_Color_G= 113,
            Flaws = {},
            PB = 220,
            Eyebrows = "",
            ClanLeader = "",
            LoadoutKeybinds = {
                ["Slot10"] = {
                    ["Keybind"] = 0
                },
                ["Slot2"] = {
                    ["Keybind"] = 2
                },
                ["Slot7"] = {
                    ["Keybind"] = 7
                },
                ["Slot12"] = {
                    ["Keybind"] = "="
                },
                ["Slot8"] = {
                    ["Keybind"] = 8
                },
                ["Slot9"] = {
                    ["Keybind"] = 9
                },
                ["Slot3"] = {
                    ["Keybind"] = 3
                },
                ["Slot11"] = {
                    ["Keybind"] = "-"
                },
                ["Slot4"] = {
                    ["Keybind"] = 4
                },
                ["Slot1"] = {
                    ["Keybind"] = 1
                },
                ["Slot5"] = {
                    ["Keybind"] = 5
                },
                ["Slot6"] = {
                    ["Keybind"] = 6
                }
            },
            ChakraShardsGiven = 0,
            Name = "Nathan",
            Age = 129,
            CloneXP = 0,
            LastAgeDestroyed = 0,
            FOV = "On",
            Ring = "",
            HairMaterial = "",
            LifetimeRestores = {},
            FirstZetsu = false,
            InDanger = false,
            LastAgeAccessory = 0;
        };

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('SaveSlots',data)

    end
    getgenv().message = function(m)
        task.spawn(function()
            local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
        
            Notification.Notify("AZFAKE", m, "rbxassetid://4914902889");
        end)
    end


    -- Logs.ChildAdded


    getgenv().Injury = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        for i=1,100 do 
            task.wait(0.001)
            local ohString1 = "Pay"
            local ohNumber2 = i
            local ohString3 = "Injuries"
            local ohNumber4 = 1
    
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohNumber4)
            task.wait(0.01)
        end
    end
    getgenv().WaitForFruit = function()
        task.spawn(function()
            repeat
                task.wait();
            until game:GetService("ReplicatedStorage"):FindFirstChild('Chakra Fruit') or game:GetService("Workspace"):FindFirstChild('Chakra Fruit') 
            task.spawn(function()
                -- local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()

                -- Notification.Notify("AZFAKE", "We detect chakra fruit.", "rbxassetid://4914902889");
                Notify('Chakra Fruit','Chakra Fruit Detected','untilClick')
            end)
        end)
    end 
    getgenv().TPFruit = function()
        task.spawn(function()
            if game:GetService("ReplicatedStorage"):FindFirstChild('Chakra Fruit') then 
                task.spawn(function()
                    local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
                    --Notification.Notify("AZFAKE", "We detect chakra fruit.", "rbxassetid://4914902889");
                    Notify('Chakra Fruit','Chakra Fruit Detected','untilClick')
                end)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("ReplicatedStorage"):FindFirstChild('Chakra Fruit').CFrame
            
            elseif game:GetService("Workspace"):FindFirstChild('Chakra Fruit')  then 
                task.spawn(function()
                    local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
                    --Notification.Notify("AZFAKE", "We detect chakra fruit.", "rbxassetid://4914902889");
                    Notify('Chakra Fruit','Chakra Fruit Detected','untilClick')
                end)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild('Chakra Fruit').CFrame
            end
            
        end)
    end 

    getgenv().fruits = {
        'Mango';
        'Apple';
        'Pear';
        'Banana';
        'Life Up Fruit';
        'Orange';
    }
    getgenv().enemy = {
        'Manda';
        'Chakra Knight';
        'The Barbarian';
        'EventBandit';
        'Combat Instructor Clone';
        'Lavarossa';
        'Biyo Bay Guard';
        'Cratos';
        'Bandit';
        'Biyo';
        'Band';
        'Barbarit The Rose';
        'Fort Mello Guard'
    }
    



    getgenv().Pickup = false
    getgenv().CSense = false
    getgenv().pickupCooldowns = {}

    getgenv().function_pick = function(inst)
        task.spawn(function()
            if inst then --and not table.find(getgenv().pickupCooldowns,inst) and isvis == true 
                if inst:FindFirstChildWhichIsA('ClickDetector')  then
                    local cd = inst:FindFirstChildWhichIsA('ClickDetector')
                    fireclickdetector(inst:FindFirstChildWhichIsA('ClickDetector'))
                    if inst:FindFirstChild('ID') then
                        local ohString1 = "PickUp"
                        local ohNumber2 =  inst:FindFirstChild('ID').Value
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)
                    end
                elseif inst:FindFirstChild('ID') then
                    local ohString1 = "PickUp"
                    local ohNumber2 =  inst:FindFirstChild('ID').Value
                    game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)
                end 
            end
        end)
    end 





    -- for i,v in pairs(game:GetService('Workspace'):GetChildren()) do 
    --     local xgetId = nil 
    --     if v:FindFirstChild('ID') then xgetId = v.ID.Value end
    --     if  table.find(getgenv().AzfakeGlobalTables.bloodlines.pickups,v.Name) then  coroutine.wrap(getgenv().createEsp)(v,xgetId) 
    --     elseif table.find(getgenv().enemy,v.Name) or table.find(getgenv().enemy,v.Name:sub(1,4)) then coroutine.wrap(getgenv().createEsp)(v,xgetId) 
    --     elseif table.find(getgenv().waypointfinds,v) then print('waypoint found thats added',v.Name) coroutine.wrap(getgenv().createEsp)(v,xgetId) 
    --     end;
    -- end
    -- local add
    -- add = workspace.ChildAdded:Connect(function(son)
    --     task.wait()
    --     local xgetId = nil 
    --     if son:FindFirstChild('ID') then xgetId = son.ID.Value end
    --     if  table.find(getgenv().AzfakeGlobalTables.bloodlines.pickups,son.Name) then coroutine.wrap(getgenv().createEsp)(son,xgetId) 
    --     elseif table.find(getgenv().enemy,son.Name) or table.find(getgenv().enemy,son.Name:sub(1,4)) then print(son.Name) coroutine.wrap(getgenv().createEsp)(son,xgetId)
    --     end;
    --     for i,v in pairs(getgenv().waypointfinds) do 
    --         if workspace:FindFirstChild(v.Name) == workspace:FindFirstChild(son.Name) then 
    --             print('waypoint found thats added',son.Name) coroutine.wrap(getgenv().createEsp)(son,xgetId)
    --         end
    --     end
    -- end)













    getgenv().upgradeSharingan = function(m)
        task.spawn(function()

        end)
    end
    getgenv().sensers = {}
    getgenv().mods = {}
    getgenv().moderators = {
        'DrYosen-1304214419';
        'thetrickster232-292308909';
        'Tatsuki_Kusumiii-123841027';
        'SheMetBlade-17217582';
        'builderboy100009-72386637';
        'iiXfinite-335757709';
        'SneebJittai-140049014';
        'Santoryui-550931068';
        'Superchristian1005-334047855';
        'ICowGrease-491997130';
        'Silverkyrem-37342066';
        'NinjadeArt-127192791';
        'Cromlechs-100847271';
        'JustDyN-49572273';
        'Narceline-0';
        'nicael-0'
    }
    getgenv().snitching = false
    getgenv().snitchChakraSensers = function()
        task.spawn(function()
            while task.wait(4) do 
                if getgenv().loopsUnload == true or getgenv().CSense == false then print('true break') break end
                for i,human in pairs(game.ReplicatedStorage.Cooldowns:GetChildren()) do 
                    task.wait(1)
                    if human:FindFirstChild('Chakra Sense') and not table.find(getgenv().sensers,human.Name) and game.Players:FindFirstChild(human.Name) then 
                        Notify('Chakra Sense','brudda chakra found > '..human.Name..' <','untilClick')
                        --getgenv().message('brudda chakra found > '..human.Name..' <')
                        table.insert(getgenv().sensers,human.Name)
                    end
                end
                for i,v in pairs(getgenv().sensers) do 
                    if not game.Players:FindFirstChild(v) then 
                        table.remove(getgenv().sensers,i)
                        Notify('Chakra Sense','guy chakra left > '..v..' <','untilClick')
                        --getgenv().message('guy chakra left > '..v..' <')
                    end
                end
            end
        end)
    end





    -- AzfakeGlobalTables = 

    getgenv().modsfound = {}
    getgenv().modalert = function()
        local GroupService = game:GetService("GroupService")
        local Players = game:GetService("Players")
        local GROUP_ID = 7450839
        task.spawn(function()
            local ismod = false;
            for _,player in next,game.Players:GetPlayers() do 
                task.wait(1)
                if player and player:IsInGroup(GROUP_ID) and not table.find(getgenv().modsfound,player.Name) then 
                    ismod = true;
                    table.insert(getgenv().modsfound,player.Name)
                    azfakenotify('mod detected - '..player.Name,'untilClick')
                    pcall(function()
                        moderatorjoined = Instance.new('Sound')
                        moderatorjoined.SoundId = getsynasset('Azfake Hub V3/new layer 2 bell.mp3')
                        moderatorjoined.Parent = game:GetService('Workspace');
                        moderatorjoined:Play()
                        task.spawn(function()
                            repeat task.wait(1) until moderatorjoined.Playing == false; 
                            moderatorjoined:Destroy()
                        end)
                    end)
                end
            end
            game.Players.PlayerAdded:Connect(function(player)
                if player and player:IsInGroup(GROUP_ID) and not table.find(getgenv().modsfound,player.Name) then 
                    ismod = true;
                    table.insert(getgenv().modsfound,player.Name)
                    azfakenotify('mod detected - '..player.Name,'untilClick')
                    pcall(function()
                        moderatorjoined = Instance.new('Sound')
                        moderatorjoined.SoundId = getsynasset('Azfake Hub V3/new layer 2 bell.mp3')
                        moderatorjoined.Parent = game:GetService('Workspace');
                        moderatorjoined:Play()
                        task.spawn(function()
                            repeat task.wait(1) until moderatorjoined.Playing == false; 
                            moderatorjoined:Destroy()
                        end)
                    end)
                end
            end)
            
            if ismod == true and getgenv().AzfakeGlobalTables['bloodlines']['modnotifer'] == true and getgenv().AzfakeGlobalTables['bloodlines']['serverhopwhenmod'] and getgenv().AzfakeGlobalTables['bloodlines']['checkforcombat'] == false then 
                repeat 
                    task.wait()
                    local teleportId = ''
                    for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                        if not server:FindFirstChild('Current') then 
                            local tp = math.random(1,2)
                            if tp == 2 then 
                                teleportId = string.split(server.Value,' ')[1]
                            end
                        end
                    end
                    game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
                until game.JobId ~= game.JobId
            elseif ismod == true and getgenv().AzfakeGlobalTables['bloodlines']['checkforcombat'] == true and getgenv().AzfakeGlobalTables['bloodlines']['serverhopwhenmod'] then 
                repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Danger.Visible == false

                repeat 
                    task.wait()
                    local teleportId = ''
                    for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                        if not server:FindFirstChild('Current') then 
                            local tp = math.random(1,2)
                            if tp == 2 then 
                                teleportId = string.split(server.Value,' ')[1]
                            end
                        end
                    end
                    game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
                until game.JobId ~= game.JobId
            else 
                --ismod = false;
            end
            while task.wait(3) do 
                if getgenv().loopsUnload == true then print('true mod break') break end
                local ismod = false
                -- for _,getmod in pairs(getgenv().moderators) do 
                --     task.wait(0.25)
                --     local split = string.split(getmod,'-')
                --     if game.Players:FindFirstChild(split[1]) then 
                --         getgenv().message('mod found > '..split[1]..' <')
                --         table.insert(getgenv().mods,game.Players:FindFirstChild(split[1]))
                --         ismod = true
                --         --print('mod',game.Players:FindFirstChild(split[1]))
                --     else
                --         for i,player in pairs(game.Players:GetChildren()) do 
                --             if tonumber(split[2]) == player.UserId then 
                --                 getgenv().message('mod found > '..player.Name..' <')
                --                 table.insert(getgenv().mods,player.Name)
                --                 ismod = true
                --                 --print('mod',player.Name)
                --             end
                --         end
                --     end
                -- end

                -- for _,player in next,game.Players:GetPlayers() do 
                --     task.wait(1)
                --     if player and player:IsInGroup(GROUP_ID) and not table.find(getgenv().modsfound,player.Name) then 
                --         ismod = true;
                --         table.insert(getgenv().modsfound,player.Name)
                --         pcall(function()
                --             moderatorjoined = Instance.new('Sound')
                --             moderatorjoined.SoundId = getsynasset('Azfake Hub V3/new layer 2 bell.mp3')
                --             moderatorjoined.Parent = game:GetService('Workspace');
                --             moderatorjoined:Play()
                --             task.spawn(function()
                --                 repeat task.wait(1) until moderatorjoined.Playing == false; 
                --                 moderatorjoined:Destroy()
                --             end)
                --         end)
                --     end
                -- end

                -- if ismod == true and getgenv().AzfakeGlobalTables['bloodlines']['modnotifer'] == true and getgenv().AzfakeGlobalTables['bloodlines']['serverhopwhenmod'] and getgenv().AzfakeGlobalTables['bloodlines']['checkforcombat'] == false then 
                --     repeat 
                --         task.wait()
                --         local teleportId = ''
                --         for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                --             if not server:FindFirstChild('Current') then 
                --                 local tp = math.random(1,2)
                --                 if tp == 2 then 
                --                     teleportId = string.split(server.Value,' ')[1]
                --                 end
                --             end
                --         end
                --         game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
                --     until game.JobId ~= game.JobId
                -- elseif ismod == true and getgenv().AzfakeGlobalTables['bloodlines']['checkforcombat'] == true and getgenv().AzfakeGlobalTables['bloodlines']['serverhopwhenmod'] then 
                --     repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Danger.Visible == false

                --     repeat 
                --         task.wait()
                --         local teleportId = ''
                --         for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                --             if not server:FindFirstChild('Current') then 
                --                 local tp = math.random(1,2)
                --                 if tp == 2 then 
                --                     teleportId = string.split(server.Value,' ')[1]
                --                 end
                --             end
                --         end
                --         game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
                --     until game.JobId ~= game.JobId
                -- end
                for i,v in pairs(getgenv().modsfound) do 
                    if not game.Players:FindFirstChild(v) then 
                        table.remove(getgenv().modsfound,i)
                        --getgenv().message('mod left > '..v..' <')
                        azfakenotify('Mod Left - '..v..' >')
                    end
                end
            end
        end)
    end
    getgenv().modalert()

    getgenv().waypoint = ''
    getgenv().waypointselected = ''
    getgenv().createwaypoint = ''


    getgenv().CreateWayPoint = function()
        if getgenv().waypointselected ~= '' and not workspace:FindFirstChild('waypoint-'..getgenv().waypointselected) then 
            local x =Instance.new('Part');x.CanCollide = false;x.Anchored = true;x.Transparency = 0.7; x.Size = Vector3.new(1,1,1) x.Name = 'waypoint-'..getgenv().waypointselected; x.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame; Instance.new('RayValue',x);local h=  Instance.new('Highlight')
            h.FillColor = Color3.fromRGB(75, 151, 75)
            h.OutlineColor = Color3.fromRGB(0,0,0)
            h.FillTransparency = 0.5
            h.Parent = x
            -- PVPSection2:AddLabel('waypoint: '..getgenv().waypointselected)
            x.Name = 'waypoint-'..getgenv().waypointselected
            table.insert(getgenv().waypointfinds,x)
            x.Parent = workspace
        elseif workspace:FindFirstChild('waypoint-'..getgenv().waypointselected) then 
            azfakenotify('already created waypoint')
        else
            azfakenotify('waypoint cannot be ""')
        end
    end
    getgenv().tpToPoint = function()
        warn(getgenv().waypointselected)
        if workspace:FindFirstChild('waypoint-'..getgenv().waypointselected) then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace:FindFirstChild('waypoint-'..getgenv().waypointselected).CFrame
        else
            Notify('','could not find waypoint',2)
        end
    end

    getgenv().showingHitbox = false 
    getgenv().UseHitbox = false
    getgenv().HitboxSize = Vector3.new(5,5,5)
    getgenv().showHitbox = function()
        if getgenv().showingHitbox == false then 
            getgenv().showingHitbox = true 
            while task.wait(3) do 
                if getgenv().showingHitbox == false or getgenv().loopsUnload == true then print('true break') break end
                for i,v in pairs(workspace:GetChildren()) do 
                    if game.Players:FindFirstChild(v.Name) and v.Name ~= plr.Name or table.find(getgenv().enemy,v.Name) and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0 then 
                        if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart').Transparency ~= 0 then 
                            v:FindFirstChild('HumanoidRootPart').Transparency = 0
                            -- v:FindFirstChild('HumanoidRootPart').CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
                        end
                        if getgenv().UseHitbox == true then 
                            v:FindFirstChild('HumanoidRootPart').Size = getgenv().HitboxSize
                        end
                    end
                end
            end
        end
    end

    getgenv().ServerHopToNonUsedServer = function()
        task.spawn(function()
            local teleportId = ''
            xId = game.PlaceId
            if not isfile('hopperLog.txt') then writefile('hopperLog.txt','return {}') end
            local xlog = readfile('hopperLog.txt'); 
            local xt = loadstring(xlog)()
            local Bunda = ''
            table.insert(xt,game.JobId)
            for _,v in pairs(xt) do if _ == 1 then Bunda = v else Bunda = Bunda..','..v; end end 
            
            -- game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
            --     if State == Enum.TeleportState.Started then
            --         syn.queue_on_teleport("repeat task.wait(); until game:IsLoaded();  writefile('hopperLog.txt',")
            --     end
            -- end)
            writefile('hopperLog.txt','return {')
            for _,u in pairs(xt) do 
                appendfile('hopperLog.txt','"'..u..'",')
            end
            writefile('hopperLog.txt',readfile('hopperLog.txt'):sub(1,string.len(readfile('hopperLog.txt'))-1))
            appendfile('hopperLog.txt','}')
            --writefile('hopperLog.txt','return {'.."'"..Bunda.."'"..'}')
            local DataEvent = nil 
            if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent')
            end
            if game.ReplicatedStorage:FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('DataEvent')
            end
            log = readfile('hopperLog.txt'); 
            xt = loadstring(xlog)()
            repeat 
                task.wait();
                xlog = readfile('hopperLog.txt'); 
                xt = loadstring(xlog)()
                for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                    if not server:FindFirstChild('Current') and not table.find(xt,string.split(server.Value,' ')[1]) then 
                        local tp = math.random(1,2)
                        if tp == 2 then 
                            teleportId = string.split(server.Value,' ')[1]
                        end
                    end
                end
                DataEvent:FireServer('ServerTeleport',teleportId)
            until game.PlaceId ~= xId
        end)
    end
    getgenv().ServerHopGame = function()
        task.spawn(function()
            local teleportId = ''
            xId = game.PlaceId
            repeat 
                task.wait();
                for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                    if not server:FindFirstChild('Current') then 
                        local tp = math.random(1,2)
                        if tp == 2 then 
                            teleportId = string.split(server.Value,' ')[1]
                        end
                    end
                end
                game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
            until game.PlaceId ~= xId
        end)
    end
    getgenv().maxbuild = function()
        local skills = {
            'Dynamic Entry';
            "Lion's Barrage";
            'Sealing Floor';
            'Fire Seal';
            'Leaf Whirlwind';
            'Triple Jump';
            'Chakra Dash';
            'Chakra Feet';
            'Chakra Charge';
            'Chakra Tree Jump';
            'Aerial Heavy Attack';
            'Substitution';
        }
        for i,v in pairs(skills) do 
            task.wait(.8)
            local ohString1 = "UnlockSkill"
            local ohString2 = v
    
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11);
        end

        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        if game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).Clothing.Value == 'Rags' and game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).Clothing.Value ~= 'Ascended Senju Armor' then 
            -- local ohString1 = "Pay"
            -- local ohNumber2 = 110
            -- local ohString3 = "Moon Rags" -- Senju Armor
            -- local ohNumber4 = 1
    
            -- game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohNumber4)
            local ohString1 = "Pay"
            local ohNumber2 = 110
            local ohString3 = "Wanderer's Outfit" -- Senju Armor
            local ohNumber4 = 1
    
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohNumber4)

        end
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        task.wait(1)
        if game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name).Clothing.Value == "Wanderer's Outfit" then 
            local ohString1 = "ArmorUpgrade"

            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1)
        end

    end 
    getgenv().KamuiButton = false
    getgenv().FruitSummoningActive = false
    getgenv().DynamicPicker = false
    getgenv().LionPicker = false
    getgenv().FlySpeedSlide = getgenv().FlySpeedSlide or 0
    getgenv().JHeight = getgenv().JHeight or 0
    getgenv().ServerHopChakra = false
    getgenv().CFspeed = 50
    getgenv().CFloop = nil
    getgenv().Speeding = false
    getgenv().flying = false
    getgenv().NoclipFunction = nil
    getgenv().NoClip = nil
    getgenv().istyping = false 
    getgenv().listfiring = ''
    getgenv().teleportingPoint = ''
    getgenv().buying = ''
    getgenv().sinking =false
    getgenv().sinkingfunc = nil 
    getgenv().attemptkillrange = 30

    RunService = game:GetService('RunService')


    game:GetService('UserInputService').InputBegan:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)
    game:GetService('UserInputService').InputEnded:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)
    if table.find(getgenv().AzfakeGlobalTables['bloodlines']['spec_users'],game.Players.LocalPlayer.Name) or getgenv().premiumWhitelist == true then 



        getgenv().lifefruittp =  function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Life Up Fruit' then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
        
        getgenv().chakrafruittp = function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Chakra Fruit' then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
        
        getgenv().ringforgettp =  function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Ring of Forgetfulness' then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
    
        getgenv().extractspoontp =  function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Extraction Spoon' then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
    
        getgenv().cloaktp =  function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Akatsuki Cloak' then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
    
        getgenv().cellstp =  function()
            local newt = 0
            for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
            if v.Name == 'Hashirama Cells' or v.Name == "Hashirama's Cells" then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            repeat task.wait(0.01);newt+=0.01 until newt >= tpdel
            end
            end
        end
        --local pTab = window:CreateTab('Premium');
        local PremiumSector = bloodlinesTab:CreateSector("Premium Access", "extra") -- can be "left" --  pTab
        local Bots = window:CreateTab('Bots');
        local bsect = Bots:CreateSector('botting','left')

        getgenv().treefruitfarm = false
        bsect:AddToggle('Tree Fruit Farm',false,function(xstate)
            getgenv().treefruitfarm = xstate
            if getgenv().treefruitfarm == true then 
                local cango = false -- function_pick
                local addedfruit  = workspace.ChildAdded:Connect(function(child)
                    if child:FindFirstChild('ID') and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - child.Position).Magnitude <= 100 or child:FindFirstChild('ClickDetector') and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - child.Position).Magnitude <= 100 then 
                        cango = true
                    end
                end)
                task.spawn(function()
                    while getgenv().treefruitfarm == true do 
                        task.wait(1)
                        local treetables = {}
                        for _,v in next, workspace:GetChildren() do 
                            if v.Name:sub(1,4) == 'Tree' and v:FindFirstChild('TreeBush1') then 
                                table.insert(treetables,v)
                            end
                        end
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                        -- task.spawn(function()
                        --     repeat 
                        --         task.wait(0.1)
                        --         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,math.random(2,18)*0.1,0)
                        --     until getgenv().treefruitfarm == false
                        -- end)
                        for _,v in next, treetables do 
                            if getgenv().treefruitfarm == false then 
                                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                                break 
                            end
                            local CompletedIn = false 
                            local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(3,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = v.TreeBush1.CFrame * CFrame.new(0,2,0)})
                            tween:Play()
                            tween.Completed:Connect(function()
                                repeat task.wait() until (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.TreeBush1.Position).Magnitude <= 15
                                task.wait(.5)
                                CompletedIn = true
                            end)
                            repeat task.wait() until CompletedIn == true
                            for index,part in next, v:GetChildren() do 
                                if getgenv().treefruitfarm == false then 
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                                    break 
                                end
                                if string.find(part.Name,'Bush') then 
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                                    local CompletedIn = false 
                                    local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = part.CFrame * CFrame.new(0,2,0)})
                                    tween:Play()
                                    tween.Completed:Connect(function()
                                        repeat task.wait(0.019) until (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - part.Position).Magnitude <= 15
                                        -- task.wait(1)
                                        CompletedIn = true
                                    end)
                                    --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(0,2,0)
                                     --  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(math.random(2,18)*0.1,math.random(2,18)*0.1,math.random(2,18)*0.1) 
                                    --repeat task.wait(.01) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(math.random(2,18)*0.1,math.random(2,18)*0.1,math.random(2,18)*0.1)  until CompletedIn == true and cango == true
                                    cango = false
                                end
                            end

                            task.wait(1)
                            local loopbroke = false
                            task.delay(.1,function()
                                if cango == false then 
                                    cango = true
                                end
                            end)
                        end
                    end
                end)
            end
        end)

        getgenv().itemfarm = false
        getgenv().tweeningf = false
        getgenv().axistween = false;
        getgenv().tpdelay = 0.01;
        getgenv().waittimespawn = 0.01;
        bsect:AddToggle('Tween',false,function(xstate)
            getgenv().tweeningf = xstate
        end)
        bsect:AddToggle('Axis Tween',false,function(xstate)
            getgenv().axistween = xstate
        end)
        bsect:AddSlider("Teleport Delay", 0.01, 0, 5, 10000, function(State)
            getgenv().tpdelay = State
        end)
        bsect:AddSlider("Wait Time", 0.01, 0, 5, 10000, function(State)
            getgenv().waittimespawn = State
        end)
        bsect:AddToggle('Item Farm',false,function(xstate)
            getgenv().itemfarm = xstate
            if getgenv().itemfarm == true then 
                local teleportingwhilst = false
                while true do 
                    if getgenv().itemfarm == false then
                        break
                    end 
                    task.wait(getgenv().tpdelay + 0.0001)
                    if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                    end
                    if teleportingwhilst == false then 
                        teleportingwhilst = true 
                        for _,object in next, game.ReplicatedStorage:GetChildren() do 
                            if getgenv().itemfarm == false then
                                break
                            end 
                            if not object:IsA('Folder') and not object:IsA('Model') and not object:IsA('StringValue') and not object:IsA('ModuleScript') then 
                                local axisx = object.CFrame.X
                                local axisy = object.CFrame.Y
                                local axisz = object.CFrame.Z 
                                
                                local cfx = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X 
                                local cfy = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y 
                                local cyz = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
        
                                if getgenv().axistween == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                    if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                                    end
                                    local tween1 = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = CFrame.new(axisx,game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y ,game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z)})
                                    tween1:Play()
                                    task.wait(1.01)
                                    local tween2 = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(0.5,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = CFrame.new(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X,axisy,game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z)})
                                    tween2:Play()
                                    task.wait(0.5)
                                    local tween3 = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(0.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = CFrame.new(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X,game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y,axisz)})
                                    tween3:Play()
                                    task.wait(getgenv().waittimespawn)
                                
                                elseif getgenv().axistween == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                    if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                                    end
                                    local tween1 = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = CFrame.new(axisx,axisy,axisz)}) -- caxfz
                                    tween1:Play()
                                    task.wait(getgenv().waittimespawn)
                                else
                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(axisx,axisy+3,axisz)
                                    if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
                                    end
                                    task.wait(getgenv().waittimespawn)
                                    if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
                                    end
                                end
                                getgenv().function_pick(object)
                            end
                        end 
                        teleportingwhilst = false
                    end
                end
            else
                if  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
                end
            end
        end)



        PremiumSector:AddSeperator('Teleport Premium Functions')
        PremiumSector:AddTextbox('Waypoint',nil,function(State)
            getgenv().waypointselected = State
        end)
        PremiumSector:AddButton('Create Waypoint',function()
            getgenv().CreateWayPoint()
        end)
        PremiumSector:AddButton('Teleport To Waypoint',function()
            getgenv().tpToPoint()
        end)
        getgenv().moneyfarming = false
        PremiumSector:AddSeperator('Auto Money Wipes you')
        PremiumSector:AddToggle('Auto Money',false,function(xstate)
            getgenv().moneyfarming = xstate
            if getgenv().moneyfarming == true then 
                task.spawn(function()
                    local t_DataEvent = game.ReplicatedStorage.Events.DataEvent;
                    local t_DataFunction = game.ReplicatedStorage.Events.DataFunction;
                    local position = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    local pospickup = position * CFrame.new(0,0,-2)
                    local function findtopickup()
                        local item = workspace:FindFirstChild('Item'..game.Players.LocalPlayer.Name)
                        if item then 
                            item = item.CFrame
                        else
                            item = position
                        end
                        return item
                    end
                    local function checkifitem()
                        local item = workspace:FindFirstChild('Item'..game.Players.LocalPlayer.Name)
                        if item then 
                            item = true
                        else
                            item = false
                        end
                        return item
                    end
                    while task.wait(1) do 
                        if getgenv().moneyfarming == false or getgenv().loopsUnload == true then break end
                        
                        local currentryo = tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                        if currentryo > 0 then 
                            repeat task.wait(2)
        
                                local ohString1 = "DropItem"
                                local ohNumber2 = tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)  
                            
                            until currentryo ~= tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                        end
                        currentryo = tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                        task.wait(1)
        
                        t_DataEvent:FireServer("NewGame");
                        task.wait(.1)
                        t_DataFunction:InvokeServer("RequestReincarnation", "Female");
        
        
                        repeat task.wait() 
        
                        until game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or getgenv().moneyfarming == false or getgenv().loopsUnload == true
                        if checkifitem() then 
                            repeat 
                                task.wait(0.001)
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = findtopickup()
                            until tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text) > currentryo  or getgenv().moneyfarming == false or getgenv().loopsUnload == true
                        else
                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = findtopickup()
                        end
                        
                        currentryo = tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text)
                        task.wait(.3)
                        repeat task.wait(0.1)
                            local inst = workspace:FindFirstChild('Training Bells')
                            if inst then 
                                
                                local cd = inst:FindFirstChildWhichIsA('ClickDetector')
                                fireclickdetector(inst:FindFirstChildWhichIsA('ClickDetector'))
                                if inst:FindFirstChild('ID') then
                                    local ohString1 = "PickUp"
                                    local ohNumber2 =  inst:FindFirstChild('ID').Value
                                    game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)
                                end
                                local ohString1 = "StartQuest"
                                local ohString2 = "Parkour Training"
                                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = workspace.trainingBellsSpawn.CFrame --inst.CFrame* CFrame.new(2,0,-7)
                                local ohString1 = "GetQuestProgress"
                                local ohString2 = "Parkour Training"
                                local ohString3 = "DontComplete"
                                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = workspace.trainingBellsSpawn.CFrame --CFrame.new(0, -169.61, 0)
                                local ohString1 = "GetQuestProgress"
                                local ohString2 = "Parkour Training"
                                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
                            else
                                --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = pospickup
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = workspace.trainingBellsSpawn.CFrame --CFrame.new(0, -169.61, 0)
                            end
                        until tonumber(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.Ryo.Amount.Text) > currentryo or getgenv().moneyfarming == false or getgenv().loopsUnload == true
        
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = findtopickup()
                        task.wait(1)
                    end
                end)
            end
        end)

        local ToggleBind = PremiumSector:AddToggle("Kamui", false, function(e) 
            KamuiButton = e
        end)
        local Sink = PremiumSector:AddToggle("Sink", false, function(e) 
            getgenv().sinking = e
        end)
        PremiumSector:AddButton("closest kill", function() 
            -- local velo = Instance.new('BodyVelocity',game.Players.LocalPlayer.Character.HumanoidRootPart)-- could make our humanoidrootpart velocity infinite
            -- velo.Velocity = Vector3.new(0,-math.huge,0)
            -- velo.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
            -- velo.P = math.huge
            repeat 
                task.wait(.2)
                game.TweenService:Create(game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart',
                TweenInfo.new(1), {CFrame = game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart'.CFrame* CFrame.new(0,-100,0)}
                ):Play()
            until game.Players.LocalPlayer.Character.Humanoid.Health <= 0
            --game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,-math.huge,0)
            -- local bambam = Instance.new("BodyThrust")
            -- bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
            -- bambam.Force = Vector3.new(1000,-10000,10000)
            -- bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        end)
        ToggleBind:AddKeybind()
        game:GetService("ReplicatedStorage"):WaitForChild('Settings'):WaitForChild(game.Players.LocalPlayer.Name)
        getgenv().loadedsumon = false
        getgenv().stop = true
        getgenv().finish = false
        getgenv().delay = 6.3
        getgenv().uchiha = false
        getgenv().canUseAwaken = false
        getgenv().message('use flicker step for greater kamui performance.')
        if game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild('Bloodline').Value == 'Uchiha' or game:GetService("ReplicatedStorage").Settings:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild('Bloodline').Value == 'Hyuga'  then 
            -- AutoFarm3:AddToggle('UchihaAwakening', {
            --     Text = 'Auto Awaken',
            --     Default = true, -- Default value (true / false)
            --     Tooltip = 'Auto Awaken', -- Information shown when you hover over the toggle
            -- })
        end
        getgenv().stop = true

        PremiumSector:AddButton('Fill Food Bar',function()
            local ohString1 = "Consumed"
            local ohString2 = "Orange"
            local ohNumber3 = -math.huge

            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohNumber3)
        end)
        PremiumSector:AddButton('Spam Item Request',function()
            local tickdone = 0
            repeat
                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer('NearbyFruitsPlease')
                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer('NearbyTrinketsPlease')
                tickdone += 0.1
                task.wait(0.01)
            until tickdone >= 5
        end)



        PremiumSector:AddToggle("Fruit Summoning", false, function(e)
            FruitSummoningActive = e
        end)
        --[[
            getgenv().loadedsumon = false
            getgenv().finish = false
            getgenv().delay = 6.3
            if getgenv().canUseAwaken == true then 
                getgenv().uchiha = Toggles.UchihaAwakening.Value
            else
                getgenv().uchiha = false
            end
            getgenv().stop = false
            local cf = CFrame.new(2448.19263, 228.804199, -908.455811, -1, -3.44860211e-08, 1.2416946e-13, -3.44860211e-08, 1, -1.14878915e-08, -1.23773293e-13, -1.14878915e-08, -1)
            if getgenv().loadedsumon == false then
                getgenv().loadedsumon = true 
                task.spawn(function()
                    getgenv().summon = function()
                        repeat task.wait() until getgenv().finish == false
                        task.wait(.2)
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                        repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        
                        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                        task.wait(.5)
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        if game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then game.Players.LocalPlayer.Character:FindFirstChild('ForceField'):Destroy() end 
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                    
                        if getgenv().uchiha == true then 
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 1]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                        end
                    
                        local ohString1 = "startSkill"
                        local ohString2 = "Fruit Summoning"
                        local ohVector33 = Vector3.new(0,0,0)
                        local ohBoolean4 = true
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33, ohBoolean4)
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        wait(2)
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        local ohString1 = "ReleaseSkill"
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        task.wait(1.5)
                        repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                        task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        game.Players.LocalPlayer.Character.Head:Destroy()
                        game.Players.LocalPlayer.Character.Humanoid:Destroy()
                        getgenv().finish = true
                        -- for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetChildren()) do v:Destroy() end
                        -- game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
                        --     game.Players.LocalPlayer.Character.Humanoid:ChangeState(11);
                        --     game.Players.LocalPlayer.Character.Head:Destroy()
                        --     game.Players.LocalPlayer.Character.Humanoid:Destroy()
                        --     for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do v:Destroy() end
                        -- end)
                    
                        -- Swap = nil
                        -- for i,v in pairs(workspace:GetChildren()) do if game.Players:FindFirstChild(v.Name) and v:FindFirstChild('Humanoid') then Swap = v end end 
                        -- game.Players.LocalPlayer.Character = Swap
                        -- task.wait(6)
                    end
                    task.spawn(function()
                        while task.wait(0.2) do if getgenv().stop == true then getgenv().loadedsumon = false  break end if getgenv().finish == true then task.wait(getgenv().delay) getgenv().finish = false end end
                    end)
                    while task.wait() do
                        if getgenv().stop == true then getgenv().loadedsumon = false  break end
                        getgenv().summon()
                    end
                end)
            end 
        
        ]]
        getgenv().loadedsumon = false
        getgenv().finish = false
        getgenv().delay = 6.3
        if getgenv().canUseAwaken == true then 
            getgenv().uchiha = Toggles.UchihaAwakening.Value
        else
            getgenv().uchiha = false
        end
        getgenv().stop = false
        PremiumSector:AddButton(
            "Fruit Summoning",
            function()
                local cf = CFrame.new(2448.19263, 228.804199, -908.455811, -1, -3.44860211e-08, 1.2416946e-13, -3.44860211e-08, 1, -1.14878915e-08, -1.23773293e-13, -1.14878915e-08, -1)
                if getgenv().loadedsumon == false then
                    getgenv().loadedsumon = true 
                    task.spawn(function()
                        getgenv().summon = function()
                            repeat task.wait() until getgenv().finish == false
                            task.wait(.2)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            
                            -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                            task.wait(.5)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            if game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then game.Players.LocalPlayer.Character:FindFirstChild('ForceField'):Destroy() end 
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        
                            --if getgenv().uchiha == true then 
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 1]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 2]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 3]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 1]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 2]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 3]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            --end
                        
                            local ohString1 = "startSkill"
                            local ohString2 = "Fruit Summoning"
                            local ohVector33 = Vector3.new(0,0,0)
                            local ohBoolean4 = true
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33, ohBoolean4)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            wait(2)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            local ohString1 = "ReleaseSkill"
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            task.wait(1.5)
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            -- game.Players.LocalPlayer.Character.Head:Destroy()
                            -- game.Players.LocalPlayer.Character.Humanoid:Destroy()
                            game.Players.LocalPlayer.Character:BreakJoints()
                            getgenv().finish = true
                            -- for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetChildren()) do v:Destroy() end
                            -- game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
                            --     game.Players.LocalPlayer.Character.Humanoid:ChangeState(11);
                            --     game.Players.LocalPlayer.Character.Head:Destroy()
                            --     game.Players.LocalPlayer.Character.Humanoid:Destroy()
                            --     for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do v:Destroy() end
                            -- end)
                        
                            -- Swap = nil
                            -- for i,v in pairs(workspace:GetChildren()) do if game.Players:FindFirstChild(v.Name) and v:FindFirstChild('Humanoid') then Swap = v end end 
                            -- game.Players.LocalPlayer.Character = Swap
                            -- task.wait(6)
                        end
                        task.spawn(function()
                            while task.wait(0.2) do if getgenv().stop == true then getgenv().loadedsumon = false  break end if getgenv().finish == true then task.wait(getgenv().delay) getgenv().finish = false end end
                        end)
                        while task.wait() do
                            if getgenv().stop == true then getgenv().loadedsumon = false  break end
                            getgenv().summon()
                        end
                    end)
                end 
            end
        )
        PremiumSector:AddButton(
            'Stop Fruit Summoning',
            function()
                getgenv().stop = true
                getgenv().loadedsumon = false 
            end
        )


        getgenv().trainersskill = ''
        getgenv().loadedskills = false
        getgenv().finishskill = false
        getgenv().delayreset = 6.3
        -- if getgenv().canUseAwaken == true then 
        --     getgenv().uchiha = Toggles.UchihaAwakening.Value
        -- else
        --     getgenv().uchiha = false
        -- end
        getgenv().stopskills = false
        PremiumSector:AddTextbox('Skill To Train',false,function(State)
            getgenv().trainersskill = State
        end)
        PremiumSector:AddButton(
            "Skill Training",
            function()
                local cf = CFrame.new(2448.19263, 228.804199, -908.455811, -1, -3.44860211e-08, 1.2416946e-13, -3.44860211e-08, 1, -1.14878915e-08, -1.23773293e-13, -1.14878915e-08, -1)
                if getgenv().loadedskills == false then
                    getgenv().loadedskills = true 
                    task.spawn(function()
                        getgenv().summon = function()
                            repeat task.wait() until getgenv().finishskill == false
                            task.wait(.2)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            
                            -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                            task.wait(.5)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            if game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then game.Players.LocalPlayer.Character:FindFirstChild('ForceField'):Destroy() end 
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                        
                            --if getgenv().uchiha == true then 
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 1]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 2]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Sharingan [Stage 3]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 1]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 2]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            local ohString1 = "Awaken"
                            local ohString2 = "Byakugan [Stage 3]"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2)
                            --end
                        
                            local ohString1 = "startSkill"
                            local ohString2 =  getgenv().trainersskill
                            local ohVector33 = Vector3.new(0,0,0)
                            local ohBoolean4 = true
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33, ohBoolean4)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            wait(2)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            local ohString1 = "ReleaseSkill"
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            task.wait(1.5)
                            repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf 
                            game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
                            task.spawn(function() repeat   task.wait()  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cf until     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == cf  end)
                            -- game.Players.LocalPlayer.Character.Head:Destroy()
                            -- game.Players.LocalPlayer.Character.Humanoid:Destroy()
                            game.Players.LocalPlayer.Character:BreakJoints()
                            getgenv().finishskill = true
                            -- for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetChildren()) do v:Destroy() end
                            -- game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
                            --     game.Players.LocalPlayer.Character.Humanoid:ChangeState(11);
                            --     game.Players.LocalPlayer.Character.Head:Destroy()
                            --     game.Players.LocalPlayer.Character.Humanoid:Destroy()
                            --     for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do v:Destroy() end
                            -- end)
                        
                            -- Swap = nil
                            -- for i,v in pairs(workspace:GetChildren()) do if game.Players:FindFirstChild(v.Name) and v:FindFirstChild('Humanoid') then Swap = v end end 
                            -- game.Players.LocalPlayer.Character = Swap
                            -- task.wait(6)
                        end
                        task.spawn(function()
                            while task.wait(0.2) do if getgenv().stopskills == true then getgenv().loadedskills = false  break end if getgenv().finishskill == true then task.wait(getgenv().delayreset) getgenv().finishskill = false end end
                        end)
                        while task.wait() do
                            if getgenv().stopskills == true then getgenv().loadedskills = false  break end
                            getgenv().summon()
                        end
                    end)
                end 
            end
        )
        PremiumSector:AddButton(
            'Stop Skill Training',
            function()
                getgenv().stopskills = true
                getgenv().loadedskills = false 
            end
        )
        PremiumSector:AddButton('TP to Life Up', function()
            getgenv().lifefruittp()
        end)--
        PremiumSector:AddButton('TP to Chakra Fruit', function()
            getgenv().chakrafruittp()
        end)--
        PremiumSector:AddSeperator('^')
        PremiumSector:AddButton('TP to Ring Forget', function()
            getgenv().ringforgettp()
        end)
        PremiumSector:AddButton('TP to Extract Spoon', function()
            getgenv().extractspoontp()
        end)
        PremiumSector:AddButton('TP to Cloak', function()
            getgenv().cloaktp()
        end)
        PremiumSector:AddSeperator('^')
        PremiumSector:AddButton('TP to Cells Hashirama', function()
            getgenv().cellstp()
        end)

        PremiumSector:AddButton('TP to Uzumaki', function()
            getgenv().tpUzu()
        end)
        PremiumSector:AddButton('TP to Rinne', function()
            getgenv().tpRinne()
        end)
        PremiumSector:AddSlider("Teleport Delay Slider", 0, 0, 5, 10, function(State)
            tpdel = State
        end)

        -- PremiumSector:AddToggle('ServerHopChakra', {
        --     Text = 'Serverhop Chakra Fruit',
        --     Default = false, -- Default value (true / false)
        --     Tooltip = 'join a server u never have w/ chakra fruit', -- Information shown when you hover over the toggle
        -- })

        PremiumSector:AddToggle("Server Hop Chakra", false, function(e)
            getgenv().ServerHopChakra = e
        end)

        PremiumSector:AddSeperator('^')
        getgenv().teleportPoint = function()
            for _,v in pairs(workspace:WaitForChild('ChakraPoints'):GetChildren()) do 
                if v.PointName.Value == teleportingPoint then 
                    pcall(function()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Rock.CFrame -- OuterShard
                    end)
                    break
                end
            end
        end
        PremiumSector:AddSeperator()
        getgenv().toList = function(x)
            local DataEvent = nil 
            if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent')
            end
            if game.ReplicatedStorage:FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('DataEvent')
            end
            DataEvent:FireServer('ServerTeleport',x.fire)
        end
        --distance:AddDivider()

        PremiumSector:AddToggle('Auto Kill Mobs',false,function(xstate)
            getgenv().AzfakeGlobalTables['bloodlines']['autokillmobs'] = xstate
        end)

        PremiumSector:AddButton('Attempt Kill Mob',function()
            local dir = game:GetService("Workspace")
            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                for _,v in next, dir:GetChildren() do 
                    if v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then         
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude

                        if isnetworkowner(v.PrimaryPart) and dist < getgenv().attemptkillrange then
                            print('is in range, '..v.Name)
                            pcall(function()
                                v:FindFirstChildWhichIsA('Head'):Destroy()
                            end)
                        end
                    end 
                end 
            end 
        end)
        PremiumSector:AddSlider('Kill Mob Distance',0,30,100,100,function(xstate)
            getgenv().attemptkillrange = xstate
        end)
    end

    local sector = bloodlinesTab:CreateSector("Main Cheats", "left") -- can be "right"
    local tpsect = bloodlinesTab:CreateSector("Teleportation", "left") -- can be "right"
    local purchases = bloodlinesTab:CreateSector("Purchases", "left") -- can be "right"
    local farming = bloodlinesTab:CreateSector("Farming", "right") -- can be "right"
    local waypoints
    local tabesp = window:CreateTab("ESP")
    local espsector = tabesp:CreateSector("ESP", "left") -- can be "right"



    local ToggleBindLion = sector:AddToggle("Lions Barrage Helper", false, function(e)
        getgenv().LionPicker = e
    end)
    local ToggleBindDynamic = sector:AddToggle("Dynamic Entry Helper", false, function(e)
        getgenv().DynamicPicker = e
    end)

    -- local ToggleBindSpeed = sector:AddToggle("WalkSpeed", false, function(e)
    --     getgenv().Speeding = e
    -- end)
    -- local ToggleBindFlySpeed = sector:AddToggle("Fly Speed", false, function(e)
    --     getgenv().flying = e
    --     if getgenv().flying == false and getgenv().istyping == false  then 
    --         getgenv().CFloop:Disconnect()
    --         --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
    --         local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
    --         Head.Anchored = false
    --         getgenv().CFloop = nil
    --     elseif getgenv().flying == true and getgenv().istyping == false then

    --         Players = game.Players
    --         getgenv().flying = true
    --         task.spawn(function()
    --             repeat wait()
    --             until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
    --             local mouse = game.Players.LocalPlayer:GetMouse()
    --             repeat wait() until mouse
    --             local plr = game.Players.LocalPlayer
    --             local torso = plr.Character.HumanoidRootPart
    --             local deb = true
    --             local ctrl = {f = 0, b = 0, l = 0, r = 0}
    --             local lastctrl = {f = 0, b = 0, l = 0, r = 0}
    --             local maxspeed = getgenv().CFspeed
    --             local speed = maxspeed  
    --             function Fly()
    --                 local bv = Instance.new("BodyVelocity", torso);bv.Name ='exploitation'
    --                 bv.velocity = Vector3.new(0,0.1,0)
    --                 bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
    --                 pcall(function()
    --                     repeat task.wait(0.1)
    --                         if not torso:FindFirstChild('exploitation') then 
    --                             bv = Instance.new("BodyVelocity", torso);bv.Name ='exploitation'
    --                             bv.velocity = Vector3.new(0,0.1,0)
    --                             bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
    --                         end
    --                         local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
    --                         speed = getgenv().CFspeed --Options.FlySpeedSlide.Value
    --                         maxspeed = getgenv().CFspeed
    --                         if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
    --                             speed = maxspeed * 10
    --                             -- if speed > maxspeed then
    --                             --     speed = maxspeed
    --                             -- end
    --                             if speed ~= maxspeed * 10 then
    --                                 speed = maxspeed * 10
    --                             end
    --                         elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
    --                             speed = 0
    --                             if speed < 0 then
    --                                 speed = 0
    --                             end
    --                         end
    --                          -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
    --                         --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
    --                         if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
    --                             bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
    --                             -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
    --                             if (ctrl.r) ~= 0  then 
    --                                 --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
    --                                 ctrl.r = ctrl.r - ctrl.l
    --                                 bv.velocity += (( game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) --* speed
    --                             end
    --                             if (ctrl.l) ~= 0 then 
    --                                 --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
    --                                 ctrl.l = ctrl.l - ctrl.r
    --                                 bv.velocity += (( game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector    )) -- * speed
    --                             end
    
    --                         else
    --                             bv.velocity = Vector3.new(0,0.1,0)
    --                         end
    --                          --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
    --                     until getgenv().flying == false
    --                 end)

    --                 ctrl = {f = 0, b = 0, l = 0, r = 0}
    --                 lastctrl = {f = 0, b = 0, l = 0, r = 0}
    --                 speed = 0
    --                 bv:Destroy()
    --                 plr.Character:WaitForChild('Humanoid').PlatformStand = false
    --             end
    --             mouse.KeyDown:connect(function(key)
    --                 if key:lower() == "w" then
    --                     ctrl.f = 1
    --                 elseif key:lower() == "s" then
    --                     ctrl.b = -1
    --                 elseif key:lower() == "a" then
    --                     ctrl.l = -1
    --                 elseif key:lower() == "d" then
    --                     ctrl.r = 1
    --                 end
    --             end)
    --             mouse.KeyUp:connect(function(key)
    --                 if key:lower() == "w" then
    --                     ctrl.f = 0
    --                     speed = 0
    --                 elseif key:lower() == "s" then
    --                     ctrl.b = 0
    --                 elseif key:lower() == "a" then
    --                     ctrl.l = 0
    --                 elseif key:lower() == "d" then
    --                     ctrl.r = 0
    --                 end
    --             end)
    --             Fly()  
    --         end)
    --     end
    -- end)
    -- local ToggleBindNoclip= sector:AddToggle("Noclip", false, function(e)
    --     getgenv().NoClip = e 
    --     if getgenv().NoClip ==false and getgenv().istyping == false then
    --         getgenv().NoclipFunction:Disconnect()
    --     elseif getgenv().NoClip == true and getgenv().istyping == false then --  
    --         task.wait(0.1)
    --         local function NoclipLoop()
    --             pcall(function()
    --                 if getgenv().NoClip == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
    --                     for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
    --                         pcall(function()
    --                             if child:IsA("BasePart") and child.CanCollide == true then
    --                                 child.CanCollide = false
    --                             end
    --                         end)
    --                     end
    --                 else
    --                     getgenv().NoClip = false
    --                     ToggleBindNoclip:Set(false)
    --                 end
    --             end)
    --         end
    --         getgenv().NoclipFunction = RunService.Stepped:Connect(NoclipLoop)
    --     end
    -- end)

    -- sector:AddSlider("Speed", 0, 0, 200, 1, function(State)
    --     getgenv().Speed = State
    -- end)
    -- sector:AddSlider("Fly Speed", 0, 200, 300, 1, function(State)
    --     getgenv().FlySpeedSlide = State
    --     getgenv().CFspeed = State
    -- end)
    -- sector:AddSlider("Jump Height", 0, 0, 100, 1, function(State)
    --     getgenv().JHeight = State
    -- end)
    -- ToggleBindLion:AddKeybind()
    -- ToggleBindDynamic:AddKeybind()
    -- ToggleBindSpeed:AddKeybind()
    -- ToggleBindFlySpeed:AddKeybind()

    sharedRequires['CreateFlySystem'](sector, getgenv().AzfakeGlobalTables)
    sharedRequires['CreateWalkSpeedSystem'](sector, getgenv().AzfakeGlobalTables)
    sharedRequires['CreateNoclip'](sector, getgenv().AzfakeGlobalTables)

    getgenv().selectedPlayer = ''

    local PlayerTP = sector:AddDropdown("Player Teleportation", getgenv().Players, "", false, function(dropdownv)
        getgenv().selectedPlayer = dropdownv
        PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    sector:AddButton('Teleport to Player',function()
        if game.Players:FindFirstChild(selectedPlayer) then 
            pcall(function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(selectedPlayer).Character:FindFirstChild('HumanoidRootPart').CFrame
            end)
        end
    end)
    sector:AddSeperator()

    game.Players.PlayerAdded:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        --Options.PlayerTP.Values = getgenv().Players 
        --PlayerTP:Set(getgenv().Players )
        PlayerTP:Add(xchild.Name)
        --PlayerTP:updateText(getgenv().selectedPlayer)
        --PlayerTP:Set(getgenv().Players)
        --getgenv().CreatePlayerEsp(xchild)
    end)
    game.Players.PlayerRemoving:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        PlayerTP:Remove(xchild.Name)
    end)





    getgenv().Pickup = true
    sector:AddToggle("Auto Pickup", true, function(e)
        getgenv().Pickup = e
    end)
    sector:AddToggle("Chakra Sense", true, function(e)
        getgenv().CSense = e
        if e == true then 
            getgenv().snitchChakraSensers()
        end
    end)

    
    sector:AddToggle('Mod Notifier',function(xstate)
        getgenv().AzfakeGlobalTables['bloodlines']['modnotifer'] = xstate
    end)
    sector:AddToggle('Serverhop when Mod',true,function(xstate)
        getgenv().AzfakeGlobalTables['bloodlines']['serverhopwhenmod'] = xstate
    end)
    sector:AddToggle('Check if Combat',false,function(xstate)
        getgenv().AzfakeGlobalTables['bloodlines']['checkforcombat'] = xstate
    end)



    sector:AddButton('Respawn',function()
        getgenv().Respawn()
    end)

    sector:AddButton('Bug Npc',function()
        getgenv().BugNpc()
    end)
    local tramger = sector:AddButton('Create Tangerina Fruit Bowl',function()

        local ohString1 = "PlaceBowl"
        local ohInstance2 = workspace.BowlHolderHyuga
        
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        
        for i=1,3 do 
            
            local ohString1 = "AddFruit"
            local ohInstance2 = workspace.FruitCookerHyuga.CookingWater
            local ohString3 = "Orange"
            
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2, ohString3)
        end
        
        
        local ohString1 = "BowlFinish"
        local ohInstance2 = workspace.BowlHolderHyuga.BowlFinish
        
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        
    end)
    tramger:ActivateKnowledge()
    tramger:AddKnowledge('you need fruit bowl')

    local tramger2 = sector:AddButton('Create Bowl For Summoning',function()

        local ohString1 = "PlaceBowl"
        local ohInstance2 = workspace.BowlHolderHyuga
        
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        
        for i=1,2 do 
            
            local ohString1 = "AddFruit"
            local ohInstance2 = workspace.FruitCookerHyuga.CookingWater
            local ohString3 = "Mango"
            
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2, ohString3)
        end
        for i=1,2 do 
            
            local ohString1 = "AddFruit"
            local ohInstance2 = workspace.FruitCookerHyuga.CookingWater
            local ohString3 = "Bolive Crops"
            
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2, ohString3)
        end
        local ohString1 = "AddFruit"
        local ohInstance2 = workspace.FruitCookerHyuga.CookingWater
        local ohString3 = "Orange"
        
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2, ohString3)

        local ohString1 = "BowlFinish"
        local ohInstance2 = workspace.BowlHolderHyuga.BowlFinish
        
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        
    end)
    tramger:ActivateKnowledge()
    tramger:AddKnowledge('you need fruit bowl')
    tramger2:ActivateKnowledge()
    tramger2:AddKnowledge('you need requirement')

    sector:AddSeperator('Misc')
    sector:AddButton('Give Forcefield',function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.ChakraPoints.ChakraPoint.OuterShard.CFrame
        task.wait(.2)
        local ohString1 = "ChakraPointSit"
        local ohInstance2 = workspace.ChakraPoints.ChakraPoint
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.ChakraPoints.ChakraPoint.OuterShard.CFrame
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohInstance2)
        task.wait(.5)
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    end)
    getgenv().antiwipemode =false
    sector:AddToggle('Anti Wipe Mode', false, function(xstate)
        getgenv().antiwipemode = xstate--xtstae
    end)
    sector:AddButton('Remove Forcefield',function()

        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        if getgenv().antiwipemode == false then 

            if game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then 
                game.Players.LocalPlayer.Character:FindFirstChild('ForceField'):Destroy()
            end
            pcall(function()  if game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then 
                game.Players.LocalPlayer.Character:FindFirstChild('ForceField'):Destroy()
            end end)
        else

            local AntiCF =CFrame.new(46.1274986, -42.0000076, -77.7578125, 0.79226476, 1.28260407e-08, 0.610177457, -2.96585174e-08, 1, 1.74889419e-08, -0.610177457, -3.19528297e-08, 0.79226476)
        
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = AntiCF
            task.wait(.2)
            local ohString1 = "ChakraPointStand"
            local ohInstance2 = workspace.ChakraPoints.ChakraPoint
    
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohInstance2)
        end

    end)
    sector:AddSeperator('-')
    local t_DataEvent = game.ReplicatedStorage.Events.DataEvent;
    local t_DataFunction = game.ReplicatedStorage.Events.DataFunction;
    local m_GameManager = require(game.ReplicatedStorage.GameManager)
    if true  then -- getgenv().iamamodplsgiveexchangeykwhatimsayingimagoodcivilianinjesusnameamen 
        sector:AddButton('Exchange 1 Fragment',function()
            t_DataFunction:InvokeServer("1FragmentExchange");
        end)
        sector:AddButton('Exchange 5 Fragments',function()
            t_DataFunction:InvokeServer("5FragmentsExchange");
        end)
        sector:AddButton('Hallow Byakugan',function()
            t_DataFunction:InvokeServer("HalloByakuganCheck");
        end)
        sector:AddButton('Pumpkin Check',function()
            t_DataFunction:InvokeServer("PumpkinCheck", 'Quit');
        end)
        sector:AddButton('Cursed Schematic',function()
            t_DataFunction:InvokeServer("CursedSchematicsCheck");
        end)
        sector:AddSeperator('-')
    end
    sector:AddButton('Chakra Point Unlock',function()
        t_DataFunction:InvokeServer("ChakraPointUnlock", workspace.ChakraPoints.ChakraPoint)
    end)
    getgenv().nofire = false
    sector:AddToggle('No Fire',false,function(xstate)
        getgenv().nofire = xstate
        if getgenv().nofire == true then 
            local ohString1 = "RemoveFireAilment"
    
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        end
    end )
    local closehitbox = false
    local addedhitbox = nil
    getgenv().autoblock = false
    getgenv().autoparry = false
    getgenv().blockfunct = function(blox)
        task.spawn(function()
            t_DataFunction:InvokeServer('Block')
            repeat task.wait(0.01) until blox.hb.Parent ~= blox.parent and closehitbox == false
            --task.wait(.41) -- until blox == nil
            if closehitbox == false then 
                t_DataFunction:InvokeServer('EndBlock')
            end
        end)
    end
    getgenv().parryfunct = function()
        task.spawn(function()
            t_DataFunction:InvokeServer('Block')
            task.wait(.2) -- until blox == nil
            t_DataFunction:InvokeServer('EndBlock')
        end)
    end
    getgenv().bloodlinesblock = function()
        t_DataFunction:InvokeServer('Block')
    end
    getgenv().bloodlinesendblock = function()
        t_DataFunction:InvokeServer('EndBlock')
    end
    getgenv().blockdistance = 25
    sector:AddToggle('Auto Block',false,function(xstate)
        getgenv().autoblock = xstate
    end)
    sector:AddToggle('Auto Parry',false,function(xstate)
        getgenv().autoparry = xstate
    end)
    sector:AddSlider('Distance',0,25,100,1,function(xstate)
        getgenv().blockdistance = xstate
    end)
    

    getgenv().ParryResponse = function(v,anim)
        local function detect(v,dect)
            local x = false
            if v:FindFirstChild('Humanoid') then 
                for i,anims in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                    if anims.Animation.AnimationId == dect and anim.Animation.AnimationId == dect then
                        x =  true
                        break
                    end
                end
            end
            return x
        end
        local canparry = true
        local didparry = false 
        local busyact = false 

        if detect(v,'rbxassetid://8042376763') and busyact == false then --lavarossa big stomp
            task.wait(1.25)
            getgenv().parryfunct()
        end
        if detect(v,'rbxassetid://10141181072') and busyact == false then-- chakra knight
            task.wait(.48)
            getgenv().parryfunct()
        end
        if detect(v,'rbxassetid://10141185243') and busyact == false then -- chakra knight
            task.wait(.46)
            getgenv().parryfunct()             
        end
        if detect(v,'rbxassetid://10141233349') and busyact == false then -- chakra knight
            task.wait(.44)
            getgenv().parryfunct()            
        end
        if detect(v,'rbxassetid://6038041916') and busyact == false then  -- left punch
            warn('left')
            task.wait(.65)
            getgenv().parryfunct() 
        end
        if detect(v,'rbxassetid://6038040720') and busyact == false then -- right punch
            warn('right')
            task.wait(.65)
            getgenv().parryfunct()   
        end
        if detect(v,'rbxassetid://6070787172') and busyact == false then -- roar
            warn('raor')
            t_DataFunction:InvokeServer('Block')
            repeat task.wait(.1) until not v or not detect(v,'rbxassetid://6070787172')
            t_DataFunction:InvokeServer('EndBlock')
        end
        if detect(v,'rbxassetid://9950654304') and busyact == false then -- KunaiSpin
            t_DataFunction:InvokeServer('Block')
            repeat task.wait(.1) until not v or not detect(v,'rbxassetid://9950654304')
            t_DataFunction:InvokeServer('EndBlock') 
        end
        if detect(v,'rbxassetid://10493504189') and busyact == false then -- groundsmash
            warn('smash')
            task.wait(.65)
            getgenv().parryfunct()   
        end
        if detect(v,'rbxassetid://6999923160') and busyact == false then -- robot spin
            t_DataFunction:InvokeServer('Block')
            repeat task.wait(.1) until not v or not detect(v,'rbxassetid://6070787172')
            t_DataFunction:InvokeServer('EndBlock')
        end
        if detect(v,'rbxassetid://00000000') and busyact == false then 
            
        end
        
        return didparry

    end

    local addonworkspaceblock = workspace.ChildAdded:Connect(function(c)
        if c.Name ~= 'Hitbox' then task.wait(1) end
        if c.Name == 'Hitbox' and getgenv().autoblock == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            local dist = (c.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
            if dist <= getgenv().blockdistance  then -- and dist > 1
                closehitbox = true
                getgenv().blockfunct({hb = c,parent = c.Parent})
                addedhitbox = c
                task.spawn(function()
                    local addcounter = 0
                    local aintc = false
                    repeat 
                        task.wait(.1)
                        addcounter += 1
                        if addedhitbox ~= c then 
                            aintc = true
                        end
                    until addcounter >= .4 or aintc == true
                    if aintc == true then 
                        closehitbox = true 
                    else
                        closehitbox = false
                    end
                end)
                print('hb')
            else
                task.spawn(function()
                    local tickss = 0
                    local cfinish = false
                    local cbreak = false
                    local last_distance = dist
                    -- last_distance = dist
                    repeat 
                        task.wait(0.01) 
                        tickss += 0.01
                        if c and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            dist = (c.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                            if dist <= getgenv().blockdistance then --  and dist > 1 
                                cfinish = true
                            -- elseif (last_distance - dist) > -10 then
                            --     cfinish = true
                            end
                        else
                            cbreak = true
                        end
                    until ticks == 4 or cfinish == true

                end)
            end
        elseif c:FindFirstChild('Humanoid') and c:FindFirstChild('HumanoidRootPart') then 
            local ParryInstance = c 
            local HumanoidP = ParryInstance:FindFirstChild('Humanoid')
            local HRPP = ParryInstance:FindFirstChild('HumanoidRootPart')
            HumanoidP.AnimationPlayed:Connect(function(anim) -- anim.Animation.AnimationId
                local dist = (HRPP.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                if dist <= getgenv().blockdistance and getgenv().autoparry == true then 
                    getgenv().ParryResponse(ParryInstance,anim)
                elseif dist > getgenv().blockdistance and getgenv().autoparry == true then 
                    task.spawn(function()
                        local parrytimingcounter = 0
                        local endrepeatcycle = false
                        repeat 
                            task.wait(.05)
                            if ParryInstance:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                dist = (HRPP.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                if dist <= getgenv().blockdistance then 
                                    endrepeatcycle = true
                                end
                            else
                                parrytimingcounter = 2
                            end
                        until parrytimingcounter >= 2 or endrepeatcycle == true or not ParryInstance:FindFirstChild('HumanoidRootPart')
                        if endrepeatcycle == true then 
                            getgenv().ParryResponse(ParryInstance,anim)
                        end
                    end)
                end
            end)
        end
    end)

    for i,v in next, workspace:GetChildren() do 
        if v:FindFirstChild('HumanoidRootPart') then 
            local ParryInstance = v 
            local HumanoidP = ParryInstance:FindFirstChild('Humanoid')
            local HRPP = ParryInstance:FindFirstChild('HumanoidRootPart')
            HumanoidP.AnimationPlayed:Connect(function(anim) -- anim.Animation.AnimationId
                if not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then return end
                local dist = (HRPP.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                if dist <= getgenv().blockdistance and getgenv().autoparry == true then 
                    getgenv().ParryResponse(ParryInstance,anim)
                elseif dist > getgenv().blockdistance and getgenv().autoparry == true then
                    task.spawn(function()
                        local parrytimingcounter = 0
                        local endrepeatcycle = false
                        repeat 
                            task.wait(.05)
                            if ParryInstance:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                dist = (HRPP.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                if dist <= getgenv().blockdistance then 
                                    endrepeatcycle = true
                                end
                            else
                                parrytimingcounter = 2
                            end
                        until parrytimingcounter >= 2 or endrepeatcycle == true or not ParryInstance:FindFirstChild('HumanoidRootPart')
                        if endrepeatcycle == true then 
                            getgenv().ParryResponse(ParryInstance,anim)
                        end
                    end)
                end
            end)
        end
    end
    sector:AddButton('Notify All Uchiha',function()
        for i,v in pairs(game.ReplicatedStorage.Settings:GetChildren()) do 
            if v.Name ~= game.Players.LocalPlayer.Name and v:FindFirstChild('Bloodline') and game.Players:FindFirstChild(v.Name) then 
                if v.Bloodline.Value == 'Uchiha' then 
                    getgenv().message(v.Name..' Is an Uchiha')
                end
            end
        end
    end)
    getgenv().safeinfinitechakra = false
    getgenv().justrefilled =false
    getgenv().justrefilledamount =0
    getgenv().chakrarefilltime = 0
    getgenv().chakrafill = 0
    getgenv().connectiontochakra = getgenv().connectiontochakra or nil
    if getgenv().connectiontochakra then getgenv().connectiontochakra:Disconnect() end
    getgenv().chakrasettings = false
    getgenv().UseMaxChakraSet = false
    getgenv().MaxChakraSet = 0
    getgenv().savedchakra = 0
    getgenv().savedmaxchakra = 0
    sector:AddSeperator('Chakra Functions')
    sector:AddToggle('Safe Infinite Chakra',false,function(statex)
        getgenv().safeinfinitechakra = statex
    end)
    sector:AddToggle('Use Settings for Chakra',false,function(statex)
        getgenv().chakrasettings = statex
    end)
    sector:AddSlider("Refill Time", 0, 0, 10, 100, function(State)
        getgenv().chakrarefilltime = State
    end)
    sector:AddSlider("Refill Amount", 0, 0, 10, 10, function(State)
        getgenv().chakrafill = State
    end)
    sector:AddButton('Set Inf Chakra Charge Amount',function()
        task.wait(.5)
        getgenv().MaxChakraSet = game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild('maxChakra').Value
    end)
    sector:AddToggle('Use Inf Chakra Charge Amount',false,function(statex)
        getgenv().UseMaxChakraSet = statex
    end)
    local function findglobal(name) 
        --getgenv().UseMaxChakraSet for _,v in next, getgenv() do 
    end
    getgenv().savechakra = 0
    getgenv().savedmaxchakra = 0
    getgenv().connectiontochakra = nil
    getgenv().chakrasettings = nil
    getgenv().chakrafill = 0
    getgenv().chakrarefilltime = 0
    sector:AddButton('Infinite Chakra',function()
        if getgenv().safeinfinitechakra == true then 
            task.spawn(function()
                -- local AzfakeChakraHudBackground = game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Loadout.HUD.ChakraTop:FindFirstChild('azfake')
                -- if not game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Loadout.HUD.ChakraTop:FindFirstChild('azfake') then 
                --     local ChakraCopy = game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Loadout.HUD.ChakraTop.ChakraAmount:Clone()
                --     ChakraCopy.Name = 'azfake'; ChakraCopy.Parent = game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Loadout.HUD.ChakraTop
                --     --AzfakeHudBackground = 
                --     AzfakeChakraHudBackground = ChakraCopy
                --     AzfakeChakraHudBackground.Visible =true
                -- end
                local function tposchakra()
                    -- AzfakeChakraHudBackground.Visible = true
                    game:GetService("Players").LocalPlayer.PlayerGui.ClientGui.Mainframe.Loadout.HUD.ChakraTop.ChakraAmount.Text = tostring(getgenv().savedchakra)
                end

                
                -- while task.wait() do 
                --     if getgenv().loopsUnload == true then print('safe chakra loop break end ') break end 

                --     if chakra then 
                --         if chakra.Value < maxchakra.Value   then -- and getgenv().justrefilled == false
                --             local needChakra = (chakra.Value - maxchakra.Value)
                --             if getgenv().justrefilledamount~=needChakra.Value then 
                --                 game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', needChakra)
                --                 game:GetService("ReplicatedStorage").Events.DataEvent:FireServer("Dash", "Chakra", Vector3.new(0,0,0))
                --             end

                --             -- task.wait(3) justrefilled = false
                            
                --         end
                --     end
                    
                -- end
                local chakra = game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild('chakra')
                local maxchakra = game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild('maxChakra')

                getgenv().savedchakra = chakra.Value
                getgenv().savedmaxchakra = maxchakra.Value
                --local savedWoken
                local AssumedChakraFromEntry = chakra.Value
                -- local savechakra = AssumedChakraFromEntry
                -- local saveMaxchakra = maxchakra.Value 

                local finallypassedorequaltosavechakra = false
                if chakra.Value > getgenv().savedmaxchakra then 
                    finallypassedorequaltosavechakra = true
                end
                local processstillon = false
                getgenv().connectiontochakra = chakra:GetPropertyChangedSignal('Value'):Connect(function(val)
                    local val = game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild('chakra').Value
                    local function updchakra()
                        -- local ohString1 = "Dash"
                        -- local ohString2 = 'Chakra'
                        -- local ohVector33 = Vector3.new(0,0,0)
                        
                        -- game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33)
                    end
                    if processstillon == true then return end
                    if val < getgenv().savedchakra and finallypassedorequaltosavechakra == true then print('changed') end
                    if val == getgenv().savedchakra and val==getgenv().savedmaxchakra and finallypassedorequaltosavechakra == false then finallypassedorequaltosavechakra = true return end
                    getgenv().savedchakra = val
                    processstillon = true
                    if chakra.Value > maxchakra.Value then
                        local needChakra = (chakra.Value - maxchakra.Value) 
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', needChakra)
                        getgenv().savedchakra = maxchakra.Value
                    end
                    if getgenv().savedchakra < getgenv().savedmaxchakra then  
                        local savechakra = chakra.Value 
                        local saveMaxchakra = maxchakra.Value
                        if getgenv().chakrasettings then 
                            --[[ 
                                -- keep adding the refill till its max
                                -- local forlooprun = 0 
                                -- local endedloop = false
                                -- local renderedaddition= 0
                                -- local function runCheckforLoop()
                                --     if savechakra +getgenv().chakrafill > saveMaxchakra and savechakra < saveMaxchakra then 
                                --         forlooprun = 1
                                --         local addition = savechakra +getgenv().chakrafill
                                --         renderedaddition = saveMaxchakra-addition
                                --     else
                                --         renderedaddition = saveMaxchakra-savechakra
                                --     end
                                -- end
                                -- runCheckforLoop()
                                -- local addingPer = renderedaddition/getgenv().chakrarefilltime

                                -- if getgenv().chakrafill == 0 then 
                                --     for i=1, addingPer do 
                                --         task.wait(getgenv().chakrarefilltime)
                                --         game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', -addingPer)
                                --     end
                                -- end

                                -- for i=1, saveMaxchakra - savechakra do -- 80/5
                                --     task.wait(getgenv().chakrarefilltime)
                                --     if savechakra < saveMaxchakra then  
                                --         if savechakra + getgenv().chakrafill < saveMaxchakra then  
                                --             game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', -getgenv().chakrafill)
                                --             savechakra += getgenv().chakrafill
                                --         else
                                --             game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', (savechakra - saveMaxchakra))
                                --             break
                                --         end 
                                --     end
                                -- end   
                            ]]
                            repeat 
                                if getgenv().chakrarefilltime==0 then 
                                    task.wait(0.0001)
                                else
                                    task.wait(getgenv().chakrarefilltime)
                                end
                                savechakra+=getgenv().chakrafill
                                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', -getgenv().chakrafill)
                            until savechakra >= saveMaxchakra -- timout after 11 seconds using task.delay(1) then add 1
                            getgenv().savedchakra = savechakra
                        else
                            local needChakra = (chakra.Value - maxchakra.Value)
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', needChakra)
                            getgenv().savedchakra = maxchakra.Value
                        end
                    end

                    updchakra()
                    tposchakra()

                end)
                finallypassedorequaltosavechakra = true
                processstillon =false
            end)
        else
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('TakeChakra', -math.huge*math.huge)
        end

        
    end)
    sector:AddSeperator('.')
    --     sector:AddButton('Heal',getgenv().Injury<{txt='areyousureyouwannaheal?',y='yes',n='no'})
    sector:AddToggle('No Void',true,function(statex)
        getgenv().AzfakeGlobalTables['bloodlines']['voidwalk'] = statex
        if getgenv().AzfakeGlobalTables['bloodlines']['voidwalk'] == true then 
            for i,v in pairs(workspace:GetChildren()) do 
                if v.Name:find('Void') and v:IsA('Part') then 
                    v.CanCollide = false;
                    v.CanTouch = false;
                    for k,c in next, v:GetChildren() do 
                        if c.Name:find('Void') and c:IsA('Part') then 
                            c.CanCollide = false;
                            c.CanTouch = false; -- not voidwalk
                        end
                    end
                end
            end
        else
            for i,v in pairs(workspace:GetChildren()) do 
                if v.Name:find('Void') and v:IsA('Part') then 
                    v.CanCollide = true;
                    v.CanTouch = true;
                    for k,c in next, v:GetChildren() do 
                        if c.Name:find('Void') and c:IsA('Part') then 
                            c.CanCollide = true;
                            c.CanTouch = true; -- not voidwalk
                        end
                    end
                end
            end
        end
    end)
    sector:AddButton('Notify All Hyuga',function()
        for i,v in pairs(game.ReplicatedStorage.Settings:GetChildren()) do 
            if v.Name ~= game.Players.LocalPlayer.Name and v:FindFirstChild('Bloodline') and game.Players:FindFirstChild(v.Name) then 
                if v.Bloodline.Value == 'Hyuga' then 
                    getgenv().message(v.Name..' Is a Hyuga')
                end
            end
        end
    end)
    sector:AddButton('Heal',getgenv().Injury)
    sector:AddButton('Kill If Knocked',function()
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer('KillMe')
    end)
    sector:AddSeperator()
    sector:AddButton('Sell Bulk',function()
        for i=1, 5000 do 
            t_DataFunction:InvokeServer('SellingBulk',i,'Trinket')
        end
    end) 
    sector:AddButton('New Game',function()
        t_DataEvent:FireServer("NewGame");
    end,{
        ask = 'Are you sure you want to start a new game?';
        accept = 'Yes';
        reject = 'No';
    })
    sector:AddButton('Instant Wipe',function()
        t_DataEvent:FireServer("NewGame");
        m_GameManager:resetChakraPoints();
        task.wait(.1)
        t_DataFunction:InvokeServer("RequestReincarnation", "Female");
    end,{
        ask = 'Are you sure you want to wipe?';
        accept = 'Yes';
        reject = 'No';
    })
    getgenv().ServerHopToNonUsedServer = function()
        task.spawn(function()
            local teleportId = ''
            xId = game.PlaceId
            if not isfile('hopperLog.txt') then writefile('hopperLog.txt','return {}') end
            local xlog = readfile('hopperLog.txt'); 
            local xt = loadstring(xlog)()
            local Bunda = ''
            table.insert(xt,game.JobId)
            for _,v in pairs(xt) do if _ == 1 then Bunda = v else Bunda = Bunda..','..v; end end 
            
            -- game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
            --     if State == Enum.TeleportState.Started then
            --         syn.queue_on_teleport("repeat task.wait(); until game:IsLoaded();  writefile('hopperLog.txt',")
            --     end
            -- end)
            writefile('hopperLog.txt','return {')
            for _,u in pairs(xt) do 
                appendfile('hopperLog.txt','"'..u..'",')
            end
            writefile('hopperLog.txt',readfile('hopperLog.txt'):sub(1,string.len(readfile('hopperLog.txt'))-1))
            appendfile('hopperLog.txt','}')
            --writefile('hopperLog.txt','return {'.."'"..Bunda.."'"..'}')
            local DataEvent = nil 
            if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent')
            end
            if game.ReplicatedStorage:FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('DataEvent')
            end
            log = readfile('hopperLog.txt'); 
            xt = loadstring(xlog)()
            repeat 
                task.wait();
                xlog = readfile('hopperLog.txt'); 
                xt = loadstring(xlog)()
                for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                    if not server:FindFirstChild('Current') and not table.find(xt,string.split(server.Value,' ')[1]) then 
                        local tp = math.random(1,2)
                        if tp == 2 then 
                            teleportId = string.split(server.Value,' ')[1]
                        end
                    end
                end
                DataEvent:FireServer('ServerTeleport',teleportId)
            until game.PlaceId ~= xId
        end)
    end
    getgenv().ServerHopGame = function()
        task.spawn(function()
            local teleportId = ''
            xId = game.PlaceId
            repeat 
                task.wait();
                for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                    if not server:FindFirstChild('Current') then 
                        local tp = math.random(1,2)
                        if tp == 2 then 
                            teleportId = string.split(server.Value,' ')[1]
                        end
                    end
                end
                game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
            until game.PlaceId ~= xId
        end)
    end
    local chakrapoints = {}
    for _,v in pairs(workspace:WaitForChild('ChakraPoints'):GetChildren()) do 
        table.insert(chakrapoints,v.PointName.Value)
    end
    tpsect:AddButton('ServerHop', function()
        getgenv().ServerHopToNonUsedServer()
    end)
    -- tpsect:AddButton('Rejoin', function()
    --     task.spawn(function()
    --         local teleportId = ''
    --         xId = game.PlaceId
    --         repeat 
    --             task.wait();
    --             for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
    --                 if server:FindFirstChild('Current') then 
    --                     teleportId = string.split(server.Value,' ')[1]
    --                 end
    --             end
    --             game.ReplicatedStorage.Events.DataEvent:FireServer('ServerTeleport',teleportId)
    --         until game.PlaceId ~= xId
    --     end)
    -- end)
    tpsect:AddButton('Redirect Serverhop', function()
        game:GetService('TeleportService'):teleport(9468587524)
    end)
    tpsect:AddButton('To Main Menu', function()
        game:GetService('TeleportService'):teleport(5571328985)
    end)
    tpsect:AddButton('Serverhop Block', function()
        game:GetService("StarterGui"):SetCore("PromptBlockPlayer", game.Players:GetPlayers()[math.random(2,#game.Players:GetPlayers())])
        task.delay(2.5,function()
            game:GetService('TeleportService'):teleport(9468587524)
        end)
    end)
    tpsect:AddDropdown("ChakraPointTP", chakrapoints, "", false, function(dropdownv)
        getgenv().teleportingPoint = dropdownv
    end)
    tpsect:AddButton('TP to Chakra Point', getgenv().teleportPoint)
    tpsect:AddSeperator('Developer and Usage') -- tools
    tpsect:AddTextbox('Job Id Teleport',nil,function(State)
        getgenv().listfiring = State
    end)
    tpsect:AddButton('join server', function()
        getgenv().toList({fire = getgenv().listfiring})
    end)
    tpsect:AddButton('Get JobId', function() setclipboard(game.JobId) end)


    mt.__index = newcclosure(function(a,b)
        -- if tostring(b) == 'WalkSpeed' and getgenv().Speeding == 'eee' then -- true (bool)
        --     return 16
        if tostring(a) == 'TimeOfDay' then
            return 12
        elseif tostring(a) == 'ClockTime' then
            return 12
        end 
        return oldind(a,b)
    end)

    getgenv().purchaseIt = function()

        local ohString1 = "Pay"
        local ohNumber2 = 0
        local ohString3 = getgenv().buying
        local ohNumber4 = 1

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohNumber4)
    
    end


    purchases:AddDropdown("Buy", getgenv().buyable, "", false, function(dropdown)
        getgenv().buying = dropdown
    end)
    purchases:AddTextbox("Buying Item Name", ' ', function(State)
        getgenv().buying = State
    end)
    purchases:AddButton('Buy',getgenv().purchaseIt)
    purchases:AddSeperator()
    purchases:AddButton('Implant',function()
        local ohString1 = "ImplantEyes"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
    end)
    purchases:AddSeperator()
    purchases:AddTextbox("Sell Item", " ", function(State)
        getgenv().Selling = State
    end)
    purchases:AddLabel("Selling Item example:\nRedsmith's Mold/25")

    purchases:AddButton('Sell',getgenv().Sell)



















    -- Farming
    farming:AddDropdown("NPC Teleport", getgenv().npcs, "", false, function(dropdownv)
        getgenv().teleportNPC = dropdownv
    end)

    -- Options.NpcTP:OnChanged(function()
    --     print('Dropdown got changed. New value:', Options.NpcTPs.Value)
    -- end)
    farming:AddButton('Teleport To Npc',function()
        if getgenv().teleportNPC ~= '' then -- make merchant stop going to one merchant; maybe name them differnely like merchant1 merchant2
            -- game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = workspace:FindFirstChild(Options.NpcTP.Value).HumanoidRootPart.CFrame
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = workspace:FindFirstChild(getgenv().teleportNPC).HumanoidRootPart.CFrame
        end
    end)

    getgenv().startedAgeFarm = nil
    farming:AddToggle("Age Farm", false, function(e)
        if e == true then 
            getgenv().startedAgeFarm = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            local cframes = {
                CFrame.new(2302.14941, 205.59671, 480.440674, 0.439134836, -5.06444451e-08, -0.898421168, 2.23042971e-08, 1, -4.54684859e-08, 0.898421168, -7.1856375e-11, 0.439134836);
                CFrame.new(-867.02124, 512.270447, -1445.59094, -0.526252568, 1.77989345e-09, -0.850328326, -2.98945468e-09, 1, 3.94330213e-09, 0.850328326, 4.61719063e-09, -0.526252568);
                CFrame.new(60.834156, 421.269409, -2415.19971, 0.7336694, -3.13824025e-08, 0.6795066, 3.64389443e-08, 1, 6.84065027e-09, -0.6795066, 1.97417265e-08, 0.7336694);
                CFrame.new(2366.22485, -82.5000305, -877.963623, 0.993157148, 1.04164222e-07, 0.116785459, -1.09432555e-07, 1, 3.86991914e-08, -0.116785459, -5.121451e-08, 0.993157148);
                CFrame.new(3127.62183, 125.979691, -718.468628, -0.217260301, 1.92772216e-08, 0.976113677, -7.10449584e-08, 1, -3.55619143e-08, -0.976113677, -7.7074148e-08, -0.217260301);
                CFrame.new(2930.01099, 208.339996, 30.3952866, 0.693224549, -7.51574021e-08, -0.720721662, 1.50509133e-10, 1, -1.04135985e-07, 0.720721662, 7.20811499e-08, 0.693224549);
                CFrame.new(-497.141632, 102.999977, 1106.42175, -0.0488466322, 1.32986342e-08, -0.998806298, 6.248146e-09, 1, 1.30089619e-08, 0.998806298, -5.60524338e-09, -0.0488466322);
                CFrame.new(-2743.19238, -183.278244, 536.467896, -0.534610391, -0.00681035547, -0.845071197, -0.000511899765, 0.999969959, -0.00773483189, 0.845098495, -0.00370252971, -0.534597814);
                
            }
            -- teleport to arkomo and give ff
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cframes[math.random(1,#cframes)]
        else
            if getgenv().startedAgeFarm ~=nil then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().startedAgeFarm 
            else

            end
        end
    end)


    getgenv().selectedskill = ''
    farming:AddDropdown("Skill Giver",getgenv().AzfakeGlobalTables['bloodlines']['skills'], "", false, function(dropdownv)
        getgenv().selectedskill = dropdownv
    end)
    farming:AddButton('Give Skill',function()
        local ohString1 = "UnlockSkill"
        local ohString2 = getgenv().selectedskill
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end)
    getgenv().CloneQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Clones Debacle"
        local ohString3 = "DontComplete"
    
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Clones Debacle"
    
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "Clones Debacle"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().HostageAuto = function()
        local Old = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
        local HostageCFrame = CFrame.new(2224.56909, -240.500031, -833.920227, -0.915702045, -1.53603352e-08, 0.401857942, -1.63921374e-08, 1, 8.71008043e-10, -0.401857942, -5.78972648e-09, -0.915702045)
        local PadCFrame = CFrame.new(2143.3313, -240.500046, -780.24292, -0.999846399, 8.11863927e-08, -0.0175278168, 8.11453518e-08, 1, 3.05240122e-09, 0.0175278168, 1.62963132e-09, -0.999846399)

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "DontComplete"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        
        local ohString1 = "StartQuest"
        local ohString2 = "Hostage Retrieval"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = PadCFrame

        task.wait(.5)


        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = HostageCFrame

        task.wait(1)

        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        local ohString1 = "Carry"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
        task.wait(1)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
    end

    getgenv().CCropsAuto = function()
        local Old = game.Players.LocalPlayer.Character.PrimaryPart.CFrame

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Search For The Chakra Crops"
        local ohString3 = "DontComplete"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        
        local ohString1 = "StartQuest"
        local ohString2 = "Search For The Chakra Crops"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)



        task.wait(0.5)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "Search For The Chakra Crops"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Search For The Chakra Crops"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
    end
    getgenv().spawnLavarossa = function()
        task.spawn(function()
            -- local Lav = CFrame.new(-550.923279, -314.055084, -219.727982, 0.809323013, -5.16854897e-08, -0.58736378, 3.74377969e-08, 1, -3.64105155e-08, 0.58736378, 7.47826157e-09, 0.809323013)
            -- local Old = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    
            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Lav
    
            -- task.wait(.35)
    
            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame *= Lav * CFrame.new(0,-15,0)
            -- game.Players.LocalPlayer.Character.Head:Destroy()


            -- wait(6.1)

            -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Lav 
            firetouchinterest(workspace.Floor,workspace.Floor,0)

        end)
    end
    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    getgenv().spawnManda = function()
        -- local Manda = CFrame.new(1503.26465, -536.00061, 734.973633, -0.235978663, -2.37474111e-08, 0.971758246, 5.78141233e-08, 1, 3.84769692e-08, -0.971758246, 6.52610979e-08, -0.235978663)
        -- local Old = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

        -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Manda

        -- task.wait(.2)


        -- game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Old
        for _,v in pairs(workspace:GetChildren()) do 
            if v.Name == 'WeirdFloor' then 
                firetouchinterest(v,v,0)
            end
        end
    end



    getgenv().KamuiEssence =function()
        local ohString1 = "StartQuest"
        local ohString2 = "Kamui Resistance Training"
        
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Kamui Resistance Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Portal.ObitoKamui.CFrame

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Hostage Retrieval"
        local ohString3 = "Kamui Resistance Training"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)


        local ohString1 = "GetQuestProgress"
        local ohString2 = "Kamui Resistance Training"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

    end
    -- getgenv().InnKeeper = function()
    --     local ohString1 = "StartQuest"
    --     local ohString2 = "InnKeeper's Reunion"
    --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    --     -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    --     local ohString1 = "GetQuestProgress"
    --     local ohString2 = "InnKeeper's Reunion"
    --     local ohString3 = "DontComplete"
    --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
    --     -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    --     local ohString1 = "GetQuestProgress"
    --     local ohString2 = "InnKeeper's Reunion"
    --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    --     local ohString1 = "GetQuestProgress"
    --     local ohString2 = "InnKeeper's Reunion"
    --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    -- end
    getgenv().Lavaroldy = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Humbling Lavarossa"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Humbling Lavarossa"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "Humbling Lavarossa"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().ParkourQuest = function()
        local inst = workspace:FindFirstChild('Training Bells')
        local cd = inst:FindFirstChildWhichIsA('ClickDetector')
        fireclickdetector(inst:FindFirstChildWhichIsA('ClickDetector'))
        if inst:FindFirstChild('ID') then
            local ohString1 = "PickUp"
            local ohNumber2 =  inst:FindFirstChild('ID').Value
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)
        end
        local ohString1 = "StartQuest"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().ParkourQuestSealing = function()
        local inst = workspace:FindFirstChild('Sealing Bells')
        local cd = inst:FindFirstChildWhichIsA('ClickDetector')
        fireclickdetector(inst:FindFirstChildWhichIsA('ClickDetector'))
        if inst:FindFirstChild('ID') then
            local ohString1 = "PickUp"
            local ohNumber2 =  inst:FindFirstChild('ID').Value
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNumber2)
        end
        local ohString1 = "StartQuest"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Parkour Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().Damsel = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bracelet Retrieval"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bracelet Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Bracelet Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().Slowcoach = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local store = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(364.530212, 44.4999847, -1026.24524, 0.047671169, -1.02416728e-10, -0.998863101, 3.05318686e-08, 1, 1.35461331e-09, 0.998863101, -3.05617327e-08, 0.047671169)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "A Run For Your Life"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "A Run For Your Life"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "StartQuest"
        local ohString2 = "A Run For Your Life"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        local ohString1 = "ActivateButton"
        local ohInstance2 = workspace.RiverGearsActivation

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohInstance2)
        task.wait(0.3)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = store
    end
    getgenv().BoliveQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bolive Retrieval"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Bolive Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Bolive Retrieval"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().SellFruits = function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "GetQuestProgress"
        local ohString2 = "Fruit Cooker"
        local ohString3 = "DontComplete"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "SellingBulk"
        local ohNumber2 = 83
        local ohString3 = "Fruit"
        local ohString4 = "Fish"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohString4)
    end
    getgenv().combatQuest = function()
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Combat Training"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Combat Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Combat Training"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
    end
    getgenv().freshwater = function()
        local ohString1 = "Pay"
        local ohNumber2 = 0
        local ohString3 = 'Bowl'
        local ohNumber4 = 1

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohNumber2, ohString3, ohNumber4)
        task.wait(1)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohString1 = "Item"
        local ohString2 = "Selected"
        local ohString3 = "Bowl"

        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3)
        task.wait(1)
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer('FreshwaterBowl')
        task.wait(5)
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Quenching Thirst"
        local ohString3 = "DontComplete"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohString3)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "GetQuestProgress"
        local ohString2 = "Quenching Thirst"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        local ohString1 = "StartQuest"
        local ohString2 = "Quenching Thirst"
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)

    end
    farming:AddButton('Hostage Quest', function()
        getgenv().HostageAuto()
    end)
    farming:AddButton('Chakra Crops Quest', function()
        getgenv().CCropsAuto()
    end)
    farming:AddButton('Spawn Lavarossa', function()
        getgenv().spawnLavarossa()
    end)
    farming:AddSeperator()
    farming:AddSeperator()
    farming:AddButton('Spawn Manda', function()
        getgenv().spawnManda()
    end)
    farming:AddButton('Kamui Essence', function()
        getgenv().KamuiEssence()
    end)
    farming:AddButton('Innkeeper', function()
        getgenv().InnKeeper()
    end)
    farming:AddButton('ParkourQuest', function()
        getgenv().ParkourQuest()
    end)
    farming:AddButton('Parkour Sealing Quest', function()
        getgenv().ParkourQuestSealing()
    end)
    farming:AddButton('Combat Quest', function()
        getgenv().combatQuest()
    end)
    farming:AddButton('Freshwater Quest', function()
        getgenv().freshwater()
    end)
    farming:AddButton('Clones Quest', function()
        getgenv().CloneQuest()
    end)
    getgenv().masterJutsu = function()
        local ohString1 = "MasterJutsu"

        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1)
    end
    farming:AddButton('Master Jutsu', function()
        getgenv().masterJutsu()
    end)
    farming:AddSeperator()
    farming:AddButton('DamselQuest', function()
        getgenv().Damsel()
    end)
    farming:AddButton('Slowcoach Quest', function()
        getgenv().Slowcoach()
    end)
    farming:AddButton('Bolive Quest', function()
        getgenv().BoliveQuest()
    end)
    getgenv().NPCFarming = ''
    getgenv().DeathTick = 6
    getgenv().UsingMove = ''
    farming:AddSeperator('Auto Section')
    farming:AddDropdown("Farming", getgenv().AzfakeGlobalTables['bloodlines']['killnpc'], "", false, function(dropdownv)
        getgenv().NPCFarming = dropdownv
    end)
    farming:AddDropdown("Death Tick", {'1','2','3','4','5','6','7','8','9','10'}, "", false, function(dropdownv)
        getgenv().DeathTick = dropdownv
    end)
    farming:AddTextbox("Auto Move", ' ', function(State)
        getgenv().UsingMove = State
    end)

    getgenv().NPCLookingAt = ''
    getgenv().farming = false
    getgenv().farmingnpc = nil
    getgenv().lookatpos = nil
    getgenv().teleportNPC = ''
    getgenv().farm = function()
        if getgenv().NPCFarming ~= nil then 
            task.spawn(function()
                local npc = nil 
                for i,v in pairs(workspace:GetChildren()) do 
                    if v.Name == getgenv().NPCFarming then 
                        if v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and v.Humanoid.Health > 0 then 
                            npc = v
                            getgenv().farmingnpc = v
                            print('npc set')
                        end
                    end
                    if v.Name:sub(1,4) == getgenv().NPCFarming then 
                        if v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and v.Humanoid.Health > 0 then 
                            npc = v
                            getgenv().farmingnpc = v
                            print('npc set2')
                        end
                    end
                end
                if npc then 
                    getgenv().NPCLookingAt = npc.Name
                    local npcfarm =  workspace:FindFirstChild(npc.Name) or workspace:FindFirstChild(npc.Name)
                    getgenv().farming = true
                    local died = false
                    local moveactive = false
                    local formation = 'back' -- left forward right back rpeat
                    getgenv().lookatpos = 'back'
                    task.spawn(function() repeat task.wait(); until npcfarm == nil end)
                    task.spawn(function()
                        repeat 
                            task.wait(0.2)
                            if formation == 'back' then
                                task.wait();
                                formation = 'left'
                                getgenv().lookatpos = formation
                            elseif formation == 'left' then 
                                task.wait();
                                formation = 'forward';
                                getgenv().lookatpos = formation
                            elseif formation == 'forward' then 
                                task.wait();
                                formation = 'right'
                                getgenv().lookatpos = formation
                            elseif formation == 'right' then 
                                task.wait()
                                formation = 'back'
                                getgenv().lookatpos = formation
                            end
                            task.wait(.2)
                        until not npcfarm or  getgenv().farming == false or npc.Humanoid.Health <= 0
                    end)
                    
                    task.spawn(function()
                        repeat 
                            task.wait(.2)
                            if getgenv().DeathTick and died == false then -- tonumber(Options.DeathTick.Value)
                                task.wait(tonumber(getgenv().DeathTick) or 3)
                                died = true
                                moveactive = 'none'
                                getgenv().BugNpc()
                                task.wait(2)
                                died = false
                                task.wait(tonumber(getgenv().DeathTick) or 7)
                                died = nil
                                moveactive = nil
                                task.spawn(function()
                                    task.wait(4)
                                    died = false
                                end)
                            end
                        until not npcfarm or  getgenv().farming == false or npc.Humanoid.Health <= 0
                    end)

                    task.spawn(function()
                        repeat 
                            task.wait()
                            if died == false and getgenv().UsingMove ~= '' and moveactive == nil  then 
                                moveactive = true 
                                local ohString1 = "startSkill"
                                task.wait()
                                local ohString2 = getgenv().UsingMove
                                local ohVector33 = Vector3.new(0,0,0)
                                local ohBoolean4 = true
                                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33, ohBoolean4)
                                local ohString1 = "ReleaseSkill"
                                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)       
                                moveactive = false
                                task.wait(6)
                            end
                        until not npcfarm or  getgenv().farming == false or npc.Humanoid.Health <= 0
                    end)

                    local CFrameToTeleport = CFrame.new(0,0,4)
                    task.spawn(function()
                        repeat 
                            task.wait(0.3)
                            if workspace:FindFirstChild(getgenv().NPCLookingAt) and getgenv().farming == true  then 
                                game.Players.LocalPlayer.Character:WaitForChild('Head')
                                if getgenv().lookatpos == 'back' then 
                                    workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.Head.Position,workspace:FindFirstChild(getgenv().NPCLookingAt).HumanoidRootPart.Position - Vector3.new(0,7,0))
                                elseif getgenv().lookatpos == 'left' then
                                    workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.Head.Position,workspace:FindFirstChild(getgenv().NPCLookingAt).HumanoidRootPart.Position - Vector3.new(-7,7,0))
                                elseif getgenv().lookatpos == 'right' then
                                    workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.Head.Position,workspace:FindFirstChild(getgenv().NPCLookingAt).HumanoidRootPart.Position - Vector3.new(7,7,0))
                                elseif getgenv().lookatpos == 'forward' then
                                    workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.Head.Position,workspace:FindFirstChild(getgenv().NPCLookingAt).HumanoidRootPart.Position - Vector3.new(0,7,0))
                                end
                            end
                        until not npcfarm or  getgenv().farming == false or npc.Humanoid.Health <= 0
                    end)
                    repeat
                        if formation == 'left' then CFrameToTeleport = CFrame.new(-4,0,0) elseif formation == 'forward' then CFrameToTeleport = CFrame.new(0,0,-4) elseif formation == 'right' then CFrameToTeleport = CFrame.new(4,0,0) else CFrameToTeleport = CFrame.new(0,0,4)  end
                        task.wait()
                        if npc:FindFirstChild('HumanoidRootPart') and died == false  and moveactive == false then 
                            task.wait()
                            local ohString1 = "CheckMeleeHit"
                            local ohNil2 = nil
                            local ohString3 = "NormalAttack"
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohNil2, ohString3)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame * CFrameToTeleport
                        end
                    until not npcfarm or getgenv().farming == false or npc.Humanoid.Health <= 0
                end    
            end)

        end
    end
    getgenv().stopfarm = function()
        getgenv().NPCLookingAt = ''
        getgenv().farming = false 
        getgenv().farmingnpc = nil 
        getgenv().lookatpos = nil
    end
    farming:AddButton('Start Farm', function()
        getgenv().farming = true
        getgenv().farm()
    end)
    farming:AddButton('End Farm', function()
        getgenv().farming = false
        getgenv().stopfarm()
    end)
    farming:AddSeperator('')






































    -- end of farming
































    getgenv().storecf = nil
    getgenv().storepos = nil


    -- task.spawn(function()
    --     while task.wait(30) do 
    --         if game:GetService("Workspace"):FindFirstChild('RainParts') then 
    --             for _,v in pairs(game:GetService("Workspace"):FindFirstChild('RainParts'):GetChildren()) do 
    --                 v:FindFirstChildWhichIsA('ParticleEmitter').Enabled = false
    --                 game:GetService("Players").LocalPlayer.SoundPlaylist.RainSound.Playing = false
    --             end
    --         end
    --         -- for i,v in pairs(workspace:GetChildren()) do 
    --         --     if v:FindFirstChild('Void')  then v:Destroy() end 
    --         --     for _,e in pairs(v:GetChildren()) do 
    --         --         if e:FindFirstChild('Void')  then e:Destroy() end 
    --         --         for __,x in pairs(e:GetChildren()) do 
    --         --             if x:FindFirstChild('Void') then x:Destroy() end 
    --         --         end
    --         --     end
    --         -- end
    --     end
    -- end)

    -- if getgenv().premiumWhitelist == true then 
        
    -- else
    --     tp1:AddLabel('Oops, you need premium!')
    -- end








    local lp = game.Players.LocalPlayer
    local cam = workspace.CurrentCamera
    local worldToViewportPoint = cam.worldToViewportPoint
    
    local head_offset =  Vector3.new(0,1.5,0)
    local leg_offset = Vector3.new(0,10,0)
    getgenv().HealthDisplayColour=Color3.fromRGB(70,255,70)
    getgenv().DistanceColour=Color3.fromRGB(70,255,70)
    getgenv().NameColour =Color3.fromRGB(70,255,70)
    getgenv().NPCESPColour = Color3.fromRGB(0,0,0)
    getgenv().esp = false --// add to global table
    getgenv().playeresp = false
    getgenv().tracers = false
    getgenv().streamermode = false
    getgenv().npcesp = false
    getgenv().waypointfinds = {

    }
    getgenv().waypointsdone = {
        
    }
    getgenv().showDistance = false
    getgenv().showHealth = false

    getgenv().ESPColour = Color3.fromRGB(70,255,70)
    getgenv().createEsp = function(sp,xstayId)
        task.wait()
        local esp = Drawing.new('Text')
        esp.Visible = false
        esp.Center = true 
        esp.Outline = true 
        esp.Font = 2 
        esp.Size = 13
        esp.Color = Color3.new(5,25,0)
        esp.Text = 'SEXY'
        
        local spParent = sp.Parent
        local function upd()
            local c 
            c = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait()
                --if sp and sp:FindFirstChild('ID') then spHasId = true end --//and sp.ID.Value ==xstayId 
                if sp and spParent == sp.Parent then --//and workspace:FindFirstChild(sp.Name)
                    local espv,onscreen = nil,nil
                    pcall(function()
                        if table.find(getgenv().enemy,sp.Name) or sp:FindFirstChild('HumanoidRootPart')  then 
                            espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.HumanoidRootPart.Position)
                        elseif sp:FindFirstChild('Head') then 
                            espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.Head.Position)
                        elseif sp:FindFirstChild('LowerTorso') then 
                            espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.LowerTorso.Position)
                        else
                            espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.Position)
                        end
                    end)
                    if espv and onscreen == nil or espv == nil then 
                        pcall(function()
                            espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp:FindFirstChildWhichIsA('Part').Position)
                        end)
                    end
                    local show = true
                    pcall(function()
                        if not sp then show = false end
                        if sp.Transparency == 1 then show = false end
                    end)
                    if onscreen and show == true then 
                        esp.Position = Vector2.new(espv.X,espv.Y)
                        esp.Text = sp.Name
                        esp.Color = getgenv().ESPColour
                        if getgenv().esp == true then esp.Visible = true end
                        if table.find(getgenv().enemy,sp.Name) and sp:FindFirstChildWhichIsA('Humanoid') then esp.Text =  esp.Text.. math.floor(math.clamp(0,(sp:FindFirstChildWhichIsA('Humanoid').Health/sp:FindFirstChildWhichIsA('Humanoid').MaxHealth),100)*100) ..'%  ['.. sp:FindFirstChildWhichIsA('Humanoid').Health..'/'.. sp:FindFirstChildWhichIsA('Humanoid').MaxHealth..']' end
    
                    else
                        esp.Visible = false
                        if show == false then 
                            pcall(function()
                                esp:Remove()
                            end)
                            c:Disconnect()
                        end
                    end
                else
                    pcall(function()
                        esp:Remove()
                    end)
                    c:Disconnect()
    
                end 
                if not sp or sp.Parent ~= spParent or getgenv().loopsUnload == true or getgenv().esp == false then -- sp.parent == nil - //and table.find(getIds,sp.ID.Value) and sp.ID.Value == xstayId
                    pcall(function()
                        esp:Remove()
                    end)
                    print('removed esp') -- spastic
                    c:Disconnect()
                end
            end)
        end
        coroutine.wrap(upd)()
    end
    getgenv().CreatePlayerEsp = function(v)
        -- print(v.Name)
        task.wait(0.1)
        local esp = Drawing.new('Text')
        esp.Visible = false
        esp.Center = true 
        esp.Outline = true 
        esp.Font = 2 
        esp.Size = 13
        esp.Color = Color3.new(5,0,0)
        esp.Text = 'SEXY'
    
        -- local function upd()
        --     local c 
        --     c = game:GetService('RunService').RenderStepped:Connect(function()
        --         task.wait()
        --         if v.Character and v~= game.Players.LocalPlayer  and v.Character:FindFirstChild('HumanoidRootPart') then 
        --             local espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
        --             if onscreen and getgenv().playeresp == true then 
        --                 esp.Position = Vector2.new(espv.X,espv.Y ) + Vector2.new(0,1)
        --                 if getgenv().streamermode == false then 
        --                     esp.Text = v.Name
        --                 else
        --                     esp.Text = v.Name:sub(1,2)..'cummybuttermilk'
        --                 end

        --                 if getgenv().playeresp == true then esp.Visible = true end
                     
    
        --             else
        --                 esp.Visible = false
        --             end
    
        --         else
        --             if game.Players:FindFirstChild(v.Name) == nil then c:Disconnect() end
        --             esp.Visible = false
        --         end
        --     end)
        -- end


        local tracer = Drawing.new('Line')
        tracer.Visible = false
        tracer.Color = Color3.new(1,0,0)
        tracer.Thickness = 1 
        tracer.Transparency = 1 
        
        
        local box_o = Drawing.new('Square')
        box_o.Visible = false
        box_o.Color = Color3.new(0,0,0)
        box_o.Thickness = 2
        box_o.Transparency =1 
        box_o.Filled = false
        
        local box = Drawing.new('Square')
        box.Visible = false
        box.Color = Color3.new(1,0,0)
        box.Thickness = 1.5
        box.Transparency =1 
        box.Filled = false
        
        local hb_o = Drawing.new('Square')
        hb_o.Visible = false
        hb_o.Color = Color3.new(0,0,0)
        hb_o.Thickness = 1
        hb_o.Transparency =1 
        hb_o.Filled = false
        
        local hb = Drawing.new('Square')
        hb.Visible = false
        hb.Color = Color3.new(1,0,0)
        hb.Thickness = 1
        hb.Transparency =1 
        hb.Filled = true
        local health = Drawing.new('Text')
        health.Visible = false
        local distancex = Drawing.new('Text')
        distancex.Visible = false
        if getgenv().showHealth == true then 
            health.Visible = false
            health.Center = true 
            health.Outline = true 
            health.Font = 2 
            health.Size = 13
            health.Color = Color3.new(5,0,0)
            health.Text = 'SEXY'
        end
        if getgenv().showDistance == true then 
            distancex.Visible = false
            distancex.Center = true 
            distancex.Outline = true 
            distancex.Font = 2 
            distancex.Size = 13
            distancex.Color = Color3.new(5,0,0)
            distancex.Text = 'SEXY'
        end
        local function rootesp()
            local xkeeptracer
            local plsstoptracer = false
            xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if onscreen and getgenv().playeresp and getgenv().tracers and tracer then 
                        tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                        tracer.To = Vector2.new(vect.X,vect.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                    if not v or getgenv().loopsUnload == true then 
                        plsstoptracer = true
                    end
                elseif v and not v.Character then 
                    tracer.Visible = false
                elseif getgenv().loopsUnload == true or getgenv().playeresp == false or not game.Players:FindFirstChild(v.Name) or not v then 
                    
                    pcall(function()
                        tracer:Remove()
                    end)
                    xkeeptracer:Disconnect()
                end
            end) 
        end
        local VNAMESAVE = v.Name
        local function boxroot()
            local xkeeprunning 
            xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    local vroot = v.Character.HumanoidRootPart
                    local head = v.Character.Head
                    
                    local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                    local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                    if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                    elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                    local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                    local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                    
                    if onscreen and getgenv().playeresp and box then 
                        cam = workspace.CurrentCamera
                        --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))

    
                        if box_o and cam.ViewportSize and rootpos and headpos then 
                            box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                            box_o.Visible = true 
                        end
                        if box then 
                            box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                            box.Visible = true
                        end

                        hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                        hb_o.Position = box_o.Position - Vector2.new(6,0)
                        hb_o.Visible = true
                        hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                        hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                        hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                        hb.Visible = true

                        


                        if getgenv().showHealth == true then 
                            health.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,-20)
                            health.Text = math.floor(v.Character.Humanoid.Health)..'/'..v.Character.Humanoid.MaxHealth
                            health.Visible = true
                            health.Color = getgenv().HealthDisplayColour
                        end
                        if getgenv().showDistance == true then 
                            distancex.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,-32) -- -28
                            distancex.Text = math.floor((v.Character.HumanoidRootPart.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)..' studs'
                            distancex.Visible = true
                            distancex.Color = getgenv().DistanceColour
                        end
                        esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,1)
                        esp.Color = getgenv().NameColour
                        if getgenv().streamermode == false then 
                            esp.Text = v.Name
                        else
                            esp.Text = v.Name:sub(1,2)..'cummybuttermilk'..math.random(1,20)
                        end

                        if getgenv().playeresp == true then esp.Visible = true end
                    elseif v and v.Character and onscreen == false then 
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)      
                    elseif v and not v.Character and game.Players:FindFirstChild(v.Name) then
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)
                    elseif not v then -- and not game.Players:FindFirstChild(v.Name) 
                        pcall(function()
                            box:Remove()
                        end)
                        pcall(function()
                            box_o:Remove()
                        end)
                        pcall(function()
                            hb:Remove()
                        end)
                        pcall(function()
                            hb_o:Remove()
                        end)
                        pcall(function()
                            esp:Remove()
                        end)
                        pcall(function()
                            distancex:Remove()
                        end)
                        pcall(function()
                            health:Remove()
                        end)
                        xkeeprunning:Disconnect()
                    end
                end
                if not game.Players:FindFirstChild(VNAMESAVE) or getgenv().loopsUnload == true or getgenv().playeresp == false then 
                    pcall(function()
                        box:Remove()
                    end)
                    pcall(function()
                        box_o:Remove()
                    end)
                    pcall(function()
                        hb:Remove()
                    end)
                    pcall(function()
                        hb_o:Remove()
                    end)
                    pcall(function()
                        esp:Remove()
                    end)
                    pcall(function()
                        distancex:Remove()
                    end)
                    pcall(function()
                        health:Remove()
                    end)
                    xkeeprunning:Disconnect()
                end
            end) 
        end
        task.spawn(function()
            coroutine.wrap(rootesp)()
            coroutine.wrap(boxroot)()
        end)

    end
    -- could make esp so that its a global function so it wouldnt just be in the if statement and that the if statement just rewrites/overwrites the esp
    getgenv().createNPCESP = function(sp,xstayId)
        task.wait()
        local esp = Drawing.new('Text')
        esp.Visible = false
        esp.Center = true 
        esp.Outline = true 
        esp.Font = 2 
        esp.Size = 13
        esp.Color = Color3.new(5,25,0)
        esp.Text = 'SEXY'
        
        local spParent = sp.Parent
        local function upd()
            local c 
            c = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait()
                --if sp and sp:FindFirstChild('ID') then spHasId = true end --//and sp.ID.Value ==xstayId 
                if sp and spParent == sp.Parent then --//and workspace:FindFirstChild(sp.Name)
                    local espv,onscreen = nil,nil
                    -- pcall(function()
                    --     if table.find(getgenv().enemy,sp.Name) or sp:FindFirstChild('HumanoidRootPart')  then 
                    --         espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.HumanoidRootPart.Position)
                    --     elseif sp:FindFirstChild('Head') then 
                    --         espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.Head.Position)
                    --     elseif sp:FindFirstChild('LowerTorso') then 
                    --         espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.LowerTorso.Position)
                    --     else
                    --         espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.Position)
                    --     end
                    -- end)
                    -- if espv and onscreen == nil or espv == nil then 
                    --     pcall(function()
                    --         espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp:FindFirstChildWhichIsA('Part').Position)
                    --     end)
                    -- end
                    local suc = pcall(function()
                        espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp.HumanoidRootPart.Position)
                    end)
                    if not suc then 
                        espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(sp:FindFirstChildWhichIsA('Part').Position)
                    end
                    local show = true
                    pcall(function()
                        if not sp then show = false end
                        if sp.Transparency == 1 then show = false end
                    end)
                    if onscreen and show == true then 
                        esp.Position = Vector2.new(espv.X,espv.Y)
                        esp.Text = sp.Name
                        esp.Color = getgenv().NPCESPColour
                        if getgenv().npcesp == true then esp.Visible = true end
                        --if table.find(getgenv().enemy,sp.Name) and sp:FindFirstChildWhichIsA('Humanoid') then esp.Text =  esp.Text.. math.floor(math.clamp(0,(sp:FindFirstChildWhichIsA('Humanoid').Health/sp:FindFirstChildWhichIsA('Humanoid').MaxHealth),100)*100) ..'%  ['.. sp:FindFirstChildWhichIsA('Humanoid').Health..'/'.. sp:FindFirstChildWhichIsA('Humanoid').MaxHealth..']' end
    
                    else
                        esp.Visible = false
                        if show == false then 
                            pcall(function()
                                esp:Remove()
                            end)
                            c:Disconnect()
                        end
                    end
                else
                    pcall(function()
                        esp:Remove()
                    end)
                    c:Disconnect()
    
                end 
                if not sp or getgenv().loopsUnload == true or getgenv().npcesp == false then -- sp.parent == nil - //and table.find(getIds,sp.ID.Value) and sp.ID.Value == xstayId
                    pcall(function()
                        esp:Remove()
                    end)
                    print('removed esp') -- spastic
                    c:Disconnect()
                end
            end)
        end
        coroutine.wrap(upd)()
    end












    espsector:AddColorpicker('Health Display Colour',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().HealthDisplayColour = ztx
    end)
    espsector:AddColorpicker('Distance Colour',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().DistanceColour = ztx
    end)
    espsector:AddColorpicker('ESP Name Colour',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().NameColour = ztx
    end)
    espsector:AddColorpicker('ESP General Colour',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().ESPColour = ztx
    end)
    espsector:AddColorpicker('NPC ESP Colour',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().NPCESPColour = ztx
    end)
    espsector:AddSeperator('Toggles')
    espsector:AddToggle("ESP", false, function(e)
        getgenv().esp = e
        if getgenv().esp == true then 
            for _,v in next, workspace:GetChildren() do 
                local xgetId = nil 
                if v:FindFirstChild('ID') then 
                    xgetId = v.ID.Value 
                end
                local isenemy = false
                if v:FindFirstChild('HumanoidRootPart') then 
                    if table.find(getgenv().enemy,v.Name) or table.find(getgenv().enemy,v.Name:sub(1,4))  then isenemy = true end 
                    for _,v in next, getgenv().enemy do 
                        if string.find(v.Name,v) then isenemy = true end
                    end
                end
                if table.find(getgenv().AzfakeGlobalTables.bloodlines.pickups,v.Name) then 
                    coroutine.wrap(getgenv().createEsp)(v,xgetId) 
                elseif isenemy == true then -- table.find(getgenv().enemy,v.Name) or table.find(getgenv().enemy,v.Name:sub(1,4)) then
                    coroutine.wrap(getgenv().createEsp)(v,xgetId) 
                elseif table.find(getgenv().waypointfinds,v) then
                    print('waypoint found thats added',v.Name) coroutine.wrap(getgenv().createEsp)(v,xgetId) 
                end;
            end
            local espconnection = workspace.ChildAdded:Connect(function(son)
                task.wait()
                local xgetId = nil 
                if son:FindFirstChild('ID') then xgetId = son.ID.Value end
                if  table.find(getgenv().AzfakeGlobalTables.bloodlines.pickups,son.Name) then coroutine.wrap(getgenv().createEsp)(son,xgetId) 
                elseif table.find(getgenv().enemy,son.Name) or table.find(getgenv().enemy,son.Name:sub(1,4)) then print(son.Name) coroutine.wrap(getgenv().createEsp)(son,xgetId)
                end;
                for i,v in pairs(getgenv().waypointfinds) do 
                    if workspace:FindFirstChild(v.Name) == workspace:FindFirstChild(son.Name) then 
                        print('waypoint found thats added',son.Name) coroutine.wrap(getgenv().createEsp)(son,xgetId)
                    end
                end
            end)
            task.spawn(function()
                repeat task.wait() until getgenv().esp == false or getgenv().loopsUnload == true 
                espconnection:Disconnect()
            end)
        end
    end)
    espsector:AddToggle("NPC ESP", false, function(e)
        getgenv().npcesp = e
        if getgenv().npcesp == true then 
            for _,v in next, game.Workspace:GetChildren() do
                if v:FindFirstChild('NPC') then 
                    getgenv().createNPCESP(v)
                end
            end
        end
    end)
    espsector:AddToggle("Player ESP", false, function(e)
        getgenv().playeresp = e
        if getgenv().playeresp == true then 
            for _,v in next, game.Players:GetPlayers() do
                getgenv().CreatePlayerEsp(v)
            end
            local paddedconnection = game.Players.PlayerAdded:Connect(function(child)
                getgenv().CreatePlayerEsp(child)
            end)-- p[a]
            task.spawn(function()
                repeat task.wait() until getgenv().loopsUnload == true or getgenv().playeresp == false 
                paddedconnection:Disconnect()
            end)
        end
    end)
    espsector:AddSeperator()
    espsector:AddToggle("Streamer Mode", false, function(e)
        getgenv().streamermode = e
    end)
    espsector:AddToggle("Show Distance", false, function(e)
        getgenv().showDistance = e
    end)
    espsector:AddToggle("Show Health", false, function(e)
        getgenv().showHealth = e
    end)
    espsector:AddToggle("Show Tracers", false, function(e)
        getgenv().tracers = e
    end)

    -- getgenv().playeresp = true
    -- getgenv().esp = true;
    
    
    -- local label = sector:AddLabel("Label")



    getgenv().Sell = function()
        local ohString1 = "Item"
        local ohString2 = "Selected"
        local ohString3 = string.split(Options.Selling.Value,'/')[1]
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3)
        ohString1 = "SellTrinket"
        ohString2 = string.split(Options.Selling.Value,'/')[1]
        ohNumber3 = tonumber(string.split(Options.Selling.Value,'/')[2])
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohNumber3)
    end
    getgenv().SellBulk = function()
        local ohString1 = "Item"
        local ohString2 = "Selected"
        local ohString3 = string.split(Options.Selling.Value,'/')[1]
        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3)
        ohString1 = "SellTrinket"
        ohString2 = string.split(Options.Selling.Value,'/')[1]
        ohNumber3 = tonumber(string.split(Options.Selling.Value,'/')[2])
        game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2, ohNumber3)
    end












    -- task.spawn(function()
    --     task.wait()
    --     for i,v in pairs(game.Players:GetChildren()) do 
    --         if v:IsA('Player') then 
    --             getgenv().CreatePlayerEsp(v)
    --         end
    --     end
    -- end)













    task.spawn(function()
        task.wait(6)
        repeat task.wait(1) until getgenv().ServerHopChakra ~= nil and getgenv().premiumWhitelist == true and getgenv().ServerHopChakra == true 
        task.wait(0.5)
        if getgenv().ServerHopChakra == true then 
            if not game.ReplicatedStorage:FindFirstChild('Chakra Fruit') then 
                Notify('','Chakra Fruit NOT Found','untilClick')
                task.wait(1)
                Notify('','Serverhopping.. ','untilClick')
                task.wait(.5)
                Notify('','Grey screen = no servers available.. ','untilClick')
                getgenv().ServerHopToNonUsedServer()
            else
                local ohString1 = "LoadedIn"

                game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1)
                Notify('','Chakra Fruit Found','untilClick')
                game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = game.ReplicatedStorage:FindFirstChild('Chakra Fruit').CFrame
                game.ReplicatedStorage:WaitForChild('Chakra Fruit',10)
                game.Workspace:WaitForChild('Chakra Fruit',10)
                for _,v in pairs(workspace:GetChildren()) do 
                    getgenv().function_pick(v)
                end
                for _,v in pairs(game.ReplicatedStorage:GetChildren()) do 
                    if v.Name == 'Chakra Fruit' then 
                        game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = game.ReplicatedStorage:FindFirstChild('Chakra Fruit').CFrame
                        for _,v in pairs(workspace:GetChildren()) do 
                            getgenv().function_pick(v)
                        end
                        task.wait(10)
                    end
                end
            end
        end
    end)

    print('p1')

    local mobs = {}
    for _,instance in pairs(workspace:GetChildren()) do 
        local foundPart = false
        if table.find(getgenv().AzfakeGlobalTables['bloodlines']['pickups'],instance.Name) then 
            foundPart = true
        elseif table.find(getgenv().fruits,instance.Name) then
            foundPart = true
        elseif string.split(instance.Name,' ')[2] == 'Gem' then 
            foundPart = true
        elseif instance.Name:sub(1,4) == 'Item' then
            foundPart = true
        elseif instance.Name:sub(1,4) == 'Ring' then 
            foundPart = true
        elseif  instance.Name:sub(1,6) == 'Silver'  then -- or string.split(instance.Name,' ')[2] == 'Schematics'
            foundPart = true
        elseif string.split(instance.Name,' ')[2] == 'Schematics' then 
            foundPart = true
        end
        if foundPart  then -- or 
            --print(instance.Name.. ' xloop')
            task.wait()
            getgenv().function_pick(instance)
            if instance.Name:sub(1,4) == 'Item' then 
                firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('Right Leg') ,instance, 0)
            else
                getgenv().function_pick(instance)
            end  
            local transparencyisone = false
            task.spawn(function()
                repeat 
                    task.wait(1)
                    getgenv().function_pick(instance)
                    if instance.Name:sub(1,4) == 'Item' then 
                        firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('Right Leg') ,instance, 0)
                    else
                        getgenv().function_pick(instance)
                    end  
                    pcall(function()
                        if instance.Transparency == 1 then 
                            transparencyisone = true
                        end
                    end)
                until not instance or instance.Parent == nil or transparencyisone == true or instance.Parent == nil
            end)
        elseif instance:FindFirstChild('Humanoid') and instance:FindFirstChild('HumanoidRootPart') and not game.Players:FindFirstChild(instance.Name) then 
            table.insert(mobs,instance)             
        end
    end

    print('p1')

    local workspaceconnection = workspace.ChildAdded:Connect(function(instance)
        task.wait(1)
        local foundPart = false
        if table.find(getgenv().AzfakeGlobalTables['bloodlines']['pickups'],instance.Name) then 
            foundPart = true
        elseif table.find(getgenv().fruits,instance.Name) then
            foundPart = true
        elseif string.split(instance.Name,' ')[2] == 'Gem' then 
            foundPart = true
        elseif instance.Name:sub(1,4) == 'Item' then
            foundPart = true
        elseif instance.Name:sub(1,4) == 'Ring' then 
            foundPart = true
        elseif  instance.Name:sub(1,6) == 'Silver'  then -- or string.split(instance.Name,' ')[2] == 'Schematics'
            foundPart = true
        elseif string.split(instance.Name,' ')[2] == 'Schematics' then 
            foundPart = true
        end
        if foundPart  then -- or 
            task.wait()
            getgenv().function_pick(instance)
            if instance.Name:sub(1,4) == 'Item' then 
                firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Right Leg') ,instance, 0)
                firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Left Leg') ,instance, 0)
                firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') ,instance, 0)
                firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Head') ,instance, 0)
                warn('item pickup, '..instance.Name)
            else
                getgenv().function_pick(instance)
            end  
            local transparencyisone = false
            task.spawn(function()
                repeat 
                    task.wait(1)
                    getgenv().function_pick(instance)
                    if instance.Name:sub(1,4) == 'Item' then 
                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Right Leg') ,instance, 0)
                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Left Leg') ,instance, 0)
                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Head') ,instance, 0)
                    else
                        getgenv().function_pick(instance)
                    end  
                    pcall(function()
                        if instance.Transparency == 1 and instance.Name:sub(1,4) ~= 'Item' then 
                            transparencyisone = true
                        end
                    end)
                until not instance or transparencyisone == true or  instance.Parent == nil --- or previousparent
                warn('picked up item')
            end)
        elseif instance:FindFirstChild('Humanoid') and instance:FindFirstChild('HumanoidRootPart') and not game.Players:FindFirstChild(instance.Name) then 
            table.insert(mobs,instance)              
        end
    end)

    print('p1')
    getgenv().currenttween = nil
    for i,v in pairs(game.Players.LocalPlayer.PlayerGui:WaitForChild('ClientGui'):WaitForChild('Mainframe'):WaitForChild('PlayerList'):WaitForChild('List'):GetChildren()) do 
        v.MouseButton1Down:Connect(function()
            if game.Players:FindFirstChild(v.RealName.Value) and game.Players:FindFirstChild(v.RealName.Value).Character then 
                local playerSave = game.Players:FindFirstChild(v.RealName.Value)
                game.Workspace.Camera.CameraSubject = workspace:FindFirstChild(playerSave.Name)
                --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
            end
        end)
        local donevalue = Instance.new('BoolValue')
        donevalue.Name = 'done'
        donevalue.Parent = game.Players.LocalPlayer.PlayerGui
    end
    local hasdied = false
    task.spawn(function()
        while task.wait() do 
            --game:GetService("Players").LocalPlayer.SoundPlaylist.RainSound.Playing = false
            if getgenv().loopsUnload == true then 
                if getgenv().connectiontochakra then  
                    getgenv().connectiontochakra:Disconnect() 
                end 
                workspaceconnection:Disconnect()
                addonworkspaceblock:Disconnect()
                print('true break') 
                break 
            end
            if getgenv().nofire == true then 
                local ohString1 = "RemoveFireAilment"
        
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1)
            end
            if not game.Players.LocalPlayer.PlayerGui:FindFirstChild('done') then 
                for i,v in pairs(game.Players.LocalPlayer.PlayerGui:WaitForChild('ClientGui'):WaitForChild('Mainframe'):WaitForChild('PlayerList'):WaitForChild('List'):GetChildren()) do 
                    v.MouseButton1Down:Connect(function()
                        if game.Players:FindFirstChild(v.RealName.Value) and game.Players:FindFirstChild(v.RealName.Value).Character then 
                            local playerSave = game.Players:FindFirstChild(v.RealName.Value)
                            game.Workspace.Camera.CameraSubject = workspace:FindFirstChild(playerSave.Name)
                            --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
                        end
                    end) 
                end
                local donevalue = Instance.new('BoolValue')
                donevalue.Name = 'done'
                donevalue.Parent = game.Players.LocalPlayer.PlayerGui
            end
            if getgenv().AzfakeGlobalTables['bloodlines']['autokillmobs'] == true then 
                -- sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                -- sethiddenproperty(game.Players.LocalPlayer, "MaximumSimulationRadius", math.huge)
                for _,v in next, mobs do 
                    if (isnetworkowner) and v.PrimaryPart and isnetworkowner(v.PrimaryPart) then 
                        v:FindFirstChild('Humanoid').Health = 1
                        print(v.Name)
                    end
                end
            end


            if getgenv().AzfakeGlobalTables['bloodlines']['rollback'] == true then 
                getgenv().AzfakeGlobalTables['bloodlines']['rollback'] = nil;
                task.spawn(function()
                    while task.wait(1) do 
                        if getgenv().AzfakeGlobalTables['bloodlines']['rollback'] == false or getgenv().loopsUnload == true then print('rollback break end')
                            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer("UpdateSettings", "On", "On", "On", "On", "Off", "On", "On")
                            azfakenotify('rollback stopped, goto chakra point','untilClick')
                        break end 
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer("UpdateSettings", "On", "\255", "On", "On", "Off", "On", "On")
                    end
                end)
                task.delay(2,function()
                    azfakenotify('Rollback Initiated','untilClick')
                end)
            end
            -- if getgenv().AzfakeGlobalTables['bloodlines']['voidwalk'] == true then 
            --     for i,v in pairs(workspace:GetChildren()) do 
            --         -- if v:FindFirstChild('Void')  then  v:FindFirstChild('Void').CanCollide = true; v:FindFirstChild('Void').CanTouch = true end 
            --         -- for _,e in pairs(v:GetChildren()) do 
            --         --     if e:FindFirstChild('Void')  then e:FindFirstChild('Void').CanCollide = true; e:FindFirstChild('Void').CanTouch = true  end 
            --         --     for __,x in pairs(e:GetChildren()) do 
            --         --         if x:FindFirstChild('Void') then x:FindFirstChild('Void').CanCollide = true; x:FindFirstChild('Void').CanTouch = true end 
            --         --     end
            --         -- end
            --         if v.Name:find('Void') and v:IsA('Part') then 
            --             v.CanCollide = false;
            --             v.CanTouch = false;
            --             for k,c in next, v:GetChildren() do 
            --                 if c.Name:find('Void') and c:IsA('Part') then 
            --                     c.CanCollide = false;
            --                     c.CanTouch = false; -- not voidwalk
            --                 end
            --             end
            --         end
            --     end
            -- else
            --     for i,v in pairs(workspace:GetChildren()) do 
            --         if v.Name:find('Void') and v:IsA('Part') then 
            --             v.CanCollide = true;
            --             v.CanTouch = true;
            --             for k,c in next, v:GetChildren() do 
            --                 if c.Name:find('Void') and c:IsA('Part') then 
            --                     c.CanCollide = true;
            --                     c.CanTouch = true; -- not voidwalk
            --                 end
            --             end
            --         end
            --     end
            -- end
            local state1 = getgenv().DynamicPicker
            local state2 = getgenv().LionPicker
            if getgenv().Speeding == true and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().Speed end
            --getgenv().CFspeed = getgenv().FlySpeedSlide
            getgenv().lockoning = nil
            --getgenv().JumpHeight = getgenv().Height
            if table.find(getgenv().AzfakeGlobalTables['bloodlines']['spec_users'],game.Players.LocalPlayer.Name) or getgenv().AzfakeGlobalTables['bloodlines']['spec_usable'] == true  then 
                local kamuistate = KamuiButton
                if kamuistate and getgenv().istyping == false then
                   
                    if getgenv().inkamui == true then 
                        getgenv().inkamui = false
                        -- for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                        --     if v:IsA('BasePart') or v:IsA('Part') then 
                        --         v.Massless = not v.Massless 
                        --         v.CanCollide = not v.CanCollide
                        --     elseif v:IsA('Model') then
                        --         for _,part in pairs(v:GetChildren()) do 
                        --             if part:IsA('BasePart') or part:IsA('Part') then 
                        --                 part.Massless = not part.Massless
                        --                 part.CanCollide = not part.CanCollide
                        --             end
                        --         end
                        --     end
                        -- end
                        local nowcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        local anim = Instance.new('Animation'); anim.AnimationId = 'rbxassetid://7033073535'
                        game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim):Play()
                        local ohString1 = "Dash"
                        local ohString2 = "Chakra"
                        local ohVector33 = Vector3.new(43.85448455810547, -218.99905395507812, 847.8656005859375)
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                        game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(0.5),{Orientation = Vector3.new(0,0,45)}):Play()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                        task.wait(0.1)
                        -- for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                        --     if v:IsA('BasePart') or v:IsA('Part') then 
                        --         v.Massless = not v.Massless 
                        --         v.CanCollide = not v.CanCollide
                        --     elseif v:IsA('Model') then
                        --         for _,part in pairs(v:GetChildren()) do 
                        --             if part:IsA('BasePart') or part:IsA('Part') then 
                        --                 part.Massless = not part.Massless
                        --                 part.CanCollide = not part.CanCollide
                        --             end
                        --         end
                        --     end
                        -- end
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().storecf-- + Vector3.new(x.X,0,x.Z) --(nowcframe - getgenv().storepos)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Position -= getgenv().storepos - nowcframe
                        
                    else
                        getgenv().inkamui = true
                        -- for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                        --     if v:IsA('BasePart') or v:IsA('Part') then 
                        --         v.Massless = not v.Massless 
                        --         v.CanCollide = not v.CanCollide
                        --     elseif v:IsA('Model') then
                        --         for _,part in pairs(v:GetChildren()) do 
                        --             if part:IsA('BasePart') or part:IsA('Part') then 
                        --                 part.Massless = not part.Massless
                        --                 part.CanCollide = not part.CanCollide
                        --             end
                        --         end
                        --     end
                        -- end
                        getgenv().storecf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        local anim = Instance.new('Animation'); anim.AnimationId = 'rbxassetid://7033073535'
                        game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim):Play()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                        game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(0.5),{Orientation = Vector3.new(0,0,45)}):Play()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                        local ohString1 = "Dash"
                        local ohString2 = "Chakra"
                        local ohVector33 = Vector3.new(43.85448455810547, -218.99905395507812, 847.8656005859375)
                        game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohVector33)
                        task.wait(0.25)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(10148.0166, -335.53418, 11.8725147, -0.629359782, 2.26174066e-08, -0.777114093, -1.99445651e-08, 1, 4.52568223e-08, 0.777114093, 4.39820269e-08, -0.629359782)
                        getgenv().storepos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        -- for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                        --     if v:IsA('BasePart') or v:IsA('Part') then 
                        --         v.Massless = not v.Massless 
                        --         v.CanCollide = not v.CanCollide
                        --     elseif v:IsA('Model') then
                        --         for _,part in pairs(v:GetChildren()) do 
                        --             if part:IsA('BasePart') or part:IsA('Part') then 
                        --                 part.Massless = not part.Massless
                        --                 part.CanCollide = not part.CanCollide
                        --             end
                        --         end
                        --     end
                        -- end
                    end

                end
            end
            if state1 and getgenv().istyping == false then
                local closest_person = nil 
                local closest_rootps = nil 
                for i,v in pairs(workspace:GetChildren()) do 
                    if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Head') and v:FindFirstChild('Humanoid').Health > 0 and v ~= game.Players.LocalPlayer.Character and  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 
                        if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= 60 then 
                            if closest_rootps == nil then 
                                closest_rootps = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                closest_person = v 
                            else
                                if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude < closest_rootps then 
                                    closest_person = v 
                                    closest_rootps = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                end
                            end
                        end
                    end
                end
                if closest_person ~= nil then 
                    task.spawn(function()
                        game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'), TweenInfo.new(0.5), {CFrame = closest_person.HumanoidRootPart.CFrame}):Play()
                    end)
                    getgenv().lockoning = closest_person
                end
            end
            if state2 and getgenv().istyping == false then
                local closest_person = nil 
                local closest_rootps = nil 
                for i,v in pairs(workspace:GetChildren()) do 
                    if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Head') and v:FindFirstChild('Humanoid').Health > 0 and v ~= game.Players.LocalPlayer.Character and  game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 
                        if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= 75 then 
                            if closest_rootps == nil then 
                                closest_rootps = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                closest_person = v 
                            else
                                if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude < closest_rootps then 
                                    closest_person = v 
                                    closest_rootps = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                end
                            end
                        end
                    end
                end
                if closest_person ~= nil then 
                    task.spawn(function()
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = closest_person.HumanoidRootPart.CFrame * CFrame.new(0,0,1.5)
                    end)
                    getgenv().lockoning = closest_person
                end
            end
            if getgenv().lockoning ~= nil then 
                if workspace:FindFirstChild(getgenv().lockoning.Name) then 
                    workspace.Camera.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.Head.Position,workspace:FindFirstChild(getgenv().lockoning.Name).Head.Position)
                end
            end

            if getgenv().sinking == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart' then 
                    if not game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart':FindFirstChild'sinkvelocity' then 
                        local velo = Instance.new('BodyVelocity');
                        velo.Name = 'sinkvelocity';
                        velo.Velocity = Vector3.new(0,-10,0)
                        velo.Parent = game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart'
                        local function sinkloop()
                            pcall(function()
                                if getgenv().sinking == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
                                    for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                        pcall(function()
                                            if child:IsA("Part") and child.CanCollide == true then
                                                child.CanCollide = false
                                            end
                                        end)
                                    end
                                    getgenv().currenttween = game.TweenService:Create(game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart',
                                    TweenInfo.new(1), {CFrame = game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart'.CFrame* CFrame.new(0,-10,0)}
                                    ):Play()
                                end
                            end)
                        end
                        getgenv().sinkingfunc = RunService.Stepped:Connect(sinkloop)
                    end
                end
            else 
                if game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart' and game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart':FindFirstChild'sinkvelocity' then 
                    game.Players.LocalPlayer.Character:FindFirstChild'HumanoidRootPart':FindFirstChild('sinkvelocity'):Destroy()
                end
                if getgenv().sinkingfunc ~= nil then getgenv().sinkingfunc:Disconnect() end
                if getgenv().currenttween then getgenv().currenttween:Stop() end
            end

            -- task.spawn(function()
            --     if isJumping == true then 
            --         task.wait(JumpResetDelay)
            --         isJumping = false
            --     end
            -- end)
            --[[
                if InfiniteJump == true then 

                    local jState = Options.JumpStatus:GetState()
                    if isJumping == false and jState then 
                        isJumping = true
                        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState(3)
                        pcall(function()
                            function Action(Object, Function) if Object ~= nil then Function(Object); end end -- Enum.HumanoidStateType.Jumping
                            Action(game.Players.LocalPlayer.Character.Humanoid, function(self) -- self:GetState() == Enum.HumanoidStateType.Freefall
                                if self:GetState() == Enum.HumanoidStateType.Freefall  then --  or 
                                    Action(self.Parent.HumanoidRootPart, function(self)
                                        self.Velocity = Vector3.new(0, getgenv().JumpHeight, 0);
                                        print(self.Name)
                                        task.spawn(function()
                                            repeat task.wait(); until not jState;
                                            self.Velocity = Vector3.new(0,0,0); -- self.Velocity = Vector3.new(0,0,0)
                                        end)
                                    end)
                                end
                            end)
                        end)
                    end

                end
            ]]
            if table.find(buasx,game.Players.LocalPlayer.Name) and game.ReplicatedStorage:FindFirstChild('Settings') and game.ReplicatedStorage:FindFirstChild('Settings'):FindFirstChild(game.Players.LocalPlayer.Name) then 
               -- game.ReplicatedStorage:FindFirstChild('Settings'):FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild('JumpCounters').Value = 10
            end 
            -- task.spawn(function()
            --     if isJumping == true then 
            --         task.wait(Options.JumpResetDelay.Value)
            --         isJumping = false
            --     end
            -- end)
            -- task.wait(0.2)
            game.Lighting.FogColor = Color3.fromRGB(0, 0, 0)
            game.Lighting.FogEnd = 4000
            game.Lighting.FogStart = 0
            game.Lighting.OutdoorAmbient = Color3.fromRGB(100, 100, 100)
            game.Lighting.GeographicLatitude = 41.73
            game.Lighting.GlobalShadows = false
            task.wait()
            task.wait()
            task.wait(0.1)
        end
    end)
    getgenv().disconnectClicks = false
    local vdown
    local venter
    local vleave
    print('p1')
    -- local function makeClickable()
    --     for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 

    --         vdown = v.MouseButton1Down:Connect(function()
    --             pcall(function()if game.Players:FindFirstChild(v.RealName.Value) then 
    --                 local playerSave = game.Players:FindFirstChild(v.RealName.Value)
    --                 game.Workspace.Camera.CameraSubject = workspace:FindFirstChild(playerSave.Name)
    --                 --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
    --             end end)
    --         end)
    --         venter = v.MouseEnter:Connect(function()
    --             pcall(function() if v.RealName.Value == game.Players.LocalPlayer.Name then 
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(0,255,0)
    --                 v.PlayerName.Text = 'HUH'
    --                 v.PlayerName.Text = 'HUH'
    --                 v.PlayerName.Text = 'HUH'
    --                 -- v.RealName.Value = ''
    --             else
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(255,255,255)
    --             end 
    --             if game.ReplicatedStorage.Settings:FindFirstChild(v.RealName.Value) and game.ReplicatedStorage.Settings:FindFirstChild(v.RealName.Value):FindFirstChild('Chakra Sense') then 
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(120,90,0)
    --             end
    --             end)
    --         end)
    --         vleave = v.MouseLeave:Connect(function()
    --             pcall(function() if v.RealName.Value == game.Players.LocalPlayer.Name then 
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(0,255,0)
    --                 v.PlayerName.Text = 'HUH'
    --                 v.PlayerName.Text = 'HUH'
    --                 v.PlayerName.Text = 'HUH'
    --                 -- v.RealName.Value = ''
    --             else
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(255,255,255)
    --             end end)
    --         end)
    --         task.spawn(function()
    --             repeat task.wait(2) until getgenv().disconnectClicks == true 
    --             vdown:Disconnect()
    --             venter:Disconnect()
    --             vleave:Disconnect()
    --         end)
    --     end 
    -- end
    -- game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
    --     task.wait(12)
    --     getgenv().disconnectClicks = true
    --     task.wait(1)
    --     getgenv().disconnectClicks = false
    --     makeClickable()
    -- end)


        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui:WaitForChild('ClientGui'):WaitForChild('Mainframe'):WaitForChild('PlayerList'):WaitForChild('List'):GetChildren()) do 
        --     v.MouseButton1Down:Connect(function()
        --         if game.Players:FindFirstChild(v.RealName.Value) and game.Players:FindFirstChild(v.RealName.Value).Character then 
        --             local playerSave = game.Players:FindFirstChild(v.RealName.Value)
        --             game.Workspace.Camera.CameraSubject = workspace:FindFirstChild(playerSave.Name)
        --             --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
        --         end
        --     end)
        -- end
    
        -- game.Players.LocalPlayer.PlayerGui:WaitForChild('ClientGui'):WaitForChild('Mainframe'):WaitForChild('PlayerList'):WaitForChild('List').ChildAdded:Connect(function(child)
        --     task.wait(1)
        --     child.MouseButton1Down:Connect(function()
        --         if game.Players:FindFirstChild(child.RealName.Value) and game.Players:FindFirstChild(child.RealName.Value).Character then 
        --             local playerSave = game.Players:FindFirstChild(child.RealName.Value)
        --             game.Workspace.Camera.CameraSubject = game.Players:FindFirstChild(child.RealName.Value).Character
        --             --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
        --         end
        --     end)
        -- end)
        -- game.Players.LocalPlayer.Character:WaitForChild('Humanoid').Died:Connect(function()
        
        -- end)
    



    -- task.spawn(function()
    --     while task.wait(100) do 
    --         getgenv().disconnectClicks = true
    --         task.wait(1)
    --         getgenv().disconnectClicks = false
    --         makeClickable()
    --     end
    -- end)
    -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
    --     getgenv().disconnectClicks = true
    --     task.wait(1)
    --     getgenv().disconnectClicks = false
    --     makeClickable()
    -- end 
    getgenv().WaitForFruit()
    -- game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.ChildAdded:Connect(function()
    --     game.Players.LocalPlayer.PlayerGui:WaitForChild('ClientGui'):WaitForChild('Mainframe'):WaitForChild('PlayerList'):WaitForChild('List')
    --     for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
    --         v.MouseButton1Down:Connect(function()
    --             if game.Players:FindFirstChild(v.RealName.Value) and game.Players:FindFirstChild(v.RealName.Value).Character then 
    --                 local playerSave = game.Players:FindFirstChild(v.RealName.Value)
    --                 game.Workspace.Camera.CameraSubject = workspace:FindFirstChild(playerSave.Name)
    --                 --task.spawn(Notify("..", "Viewing, "..playerSave.Name, 2))
    --             end
    --         end)
        
    --         v.MouseEnter:Connect(function()
    --             pcall(function() if v.RealName.Value == game.Players.LocalPlayer.Name then 
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(0,255,0)
    --                 v.PlayerName.Text = 'HUH'
    --             else
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(255,255,255)
    --             end end)
    --         end)
    --         v.MouseLeave:Connect(function()
    --             pcall(function() if v.RealName.Value == game.Players.LocalPlayer.Name then 
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(0,255,0)
    --                 v.PlayerName.Text = 'HUH'
    --             else
    --                 v.PlayerName.TextColor3 = Color3.fromRGB(255,255,255)
    --             end end)
    --         end)
    --     end
    -- end)


    -- could make kamui toggle make a getgenv() value set as true and then mousekeydown would detect the keybind for kamui


    for _,User in pairs(buasx) do 
        if game.Players:FindFirstChild(User) and game.Players.LocalPlayer.Name ~= User then 
            task.spawn(function()
                playfile('Azfake Hub V3/new layer 2 bell.mp3')
            end)
            Notify('An Admin','An Admin of the script is inside ur game','untilClick')
        end
    end






    -- task.spawn(function()-- pcall(function()
    --     while task.wait(1) do  
    --         -- sector:FixSize()
    --         -- purchases:FixSize()
    --         -- farming:FixSize()
    --         if getgenv().loopsUnload == true then print('true break while loop main') break end
    --         task.wait()
    --         if getgenv().Pickup == true then
    --             for _,instance in pairs(workspace:GetChildren()) do 
    --                 local foundPart = false
    --                 if table.find(getgenv().AzfakeGlobalTables['bloodlines']['pickups'],instance.Name) then 
    --                     foundPart = true
    --                 elseif table.find(getgenv().fruits,instance.Name) then
    --                     foundPart = true
    --                 elseif string.split(instance.Name,' ')[2] == 'Gem' then 
    --                     foundPart = true
    --                 elseif instance.Name:sub(1,4) == 'Item' then
    --                     foundPart = true
    --                 elseif instance.Name:sub(1,4) == 'Ring' then 
    --                     foundPart = true
    --                 elseif  instance.Name:sub(1,6) == 'Silver'  then -- or string.split(instance.Name,' ')[2] == 'Schematics'
    --                     foundPart = true
    --                 elseif string.split(instance.Name,' ')[2] == 'Schematics' then 
    --                     foundPart = true
    --                 end
    --                 if foundPart  then -- or 
    --                     --print(instance.Name.. ' xloop')
    --                     task.wait()
    --                     getgenv().function_pick(instance)
    --                     if instance.Name:sub(1,4) == 'Item' then 
    --                         firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild('Right Leg') ,instance, 0)
    --                     else
    --                         getgenv().function_pick(instance)
    --                     end                 
    --                 end
    --             end
    --             task.wait(.5)
    --         end
    --     end 
    --         -- task.wait(0.3)
    --         --game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation = Vector3.new(0,90,0) 
    --         -- for _,instance in pairs(workspace:GetChildren()) do 
    --         --     if table.find(getgenv().AzfakeGlobalTables.bloodlines.pickups,instance.Name) then 
    --         --         getgenv().function_pick(instance)
    --         --     end
    --         -- end
        
    -- end)-- end)
    task.wait()


    local Configurations = window:CreateTab("Configurations");
    local ConfigSector = Configurations:CreateSector('Themes','right')
    local c = Configurations:CreateConfigSystem()
    ConfigSector:AddColorpicker('Accent Colour',Color3.fromRGB(255, 255,255), function(ztx)
        library['theme']['accentcolor'] = ztx
        library['theme']['accentcolor2'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    ConfigSector:AddColorpicker('Background Colour',Color3.fromRGB(20, 20, 20), function(ztx)
        library['theme']['backgroundcolor'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    for _,v in next, c do
        if _ == 'Load' and type(v) == 'table' then 
            for new, vn in next,v do 
                if type(vn) == 'function' then vn() end
            end
        end
    end
    -- task.spawn(function()
    --     while task.wait(6) do 
    --         for _,v in next, c do
    --             if _ == 'Save' and type(v) == 'table' then 
    --                 for new, vn in next,v do 
    --                     if type(vn) == 'function' then vn() end
    --                 end
    --             end
    --         end
    --     end
    -- end)
    if getgenv().adminCheck == true then 
        local AdminTab = window:CreateTab("Admin");
        local AdminSector = AdminTab:CreateSector('Moves','left')
        local AdminRb = AdminTab:CreateSector('Rollback Features','right')
        AdminRb:AddButton('Quick Rollback',function(xstate)
            game:GetService("ReplicatedStorage").Events.DataEvent:FireServer("UpdateSettings", "On", "\255", "On", "On", "Off", "On", "On") -- = xstategetgenv().AzfakeGlobalTables['bloodlines']['rollback']
            local counttick = tick()
            repeat 
                task.wait()
                game:GetService("ReplicatedStorage").Events.DataEvent:FireServer("UpdateSettings", "On", "\255", "On", "On", "Off", "On", "On")
            until (counttick-tick()) > 1
        end)
        AdminRb:AddToggle('Rollback',false,function(xstate)
            getgenv().AzfakeGlobalTables['bloodlines']['rollback'] = xstate
            -- task.spawn(function()
            --     -- task.delay(3,function()
                    
            --     -- end)
            --     while task.wait() do 
            --         -- local ohString1 = "UpdateSettings"
            --         -- local ohString2 = "On\255"
            --         -- local ohString3 = "On"
            --         -- local ohString4 = "On"
            --         -- local ohString5 = "On"
            --         -- local ohString6 = "Off"
            --         -- local ohString7 = "On"
            --         -- local ohString8 = "On"
                    
            --         -- game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3, ohString4, ohString5, ohString6, ohString7, ohString8)   
            --         -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

            --         local ohString1 = "UpdateSettings"
            --         local ohString2 = "On"
            --         local ohString3 = "\255"
            --         local ohString4 = "On"
            --         local ohString5 = "On"
            --         local ohString6 = "Off"
            --         local ohString7 = "On"
            --         local ohString8 = "On"

            --         game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(ohString1, ohString2, ohString3, ohString4, ohString5, ohString6, ohString7, ohString8)
            --     end
            -- end)
        end)



        -- AdminRb:AddButton('Rollback (Testing)', function()
        --     pcall(function()
        --         settings().Network.IncomingReplicationLag = 10000000
        --         settings().Network.HttpProxyEnabled = false;
        --         settings().Network.HttpProxyURL = ''
        --         -- settings().Network.TrackDataTypes = false;
        --         -- settings().Network.TrackPhysicsDetails = false;
        --         local random = Random.new()
        --         local letters = {'a','b','c','d','e','f','g','h','i','j','k4','l','m','n','o','p4','q','r','s','t','u','v4','w','x','y','z','gej0h','hrhw1','ewh2','gew3','ffs4','gh5','w6','f7r','ff8','e9r','h','br'}
        --         function getRandomLetter()
        --             return letters[random:NextInteger(1,#letters)]
        --         end
        --         function getRandomString(length, includeCapitals)
        --             local length = length or 10
        --             local str = ''
        --             for i=1,length do
        --                 local randomLetter = getRandomLetter()
        --                 if includeCapitals and random:NextNumber() > .5 then
        --                     randomLetter = string.upper(randomLetter)
        --                 end
        --                 str = str .. randomLetter
        --             end
        --             return str
        --         end
        --         mt.__namecall = newcclosure(function(self,...) -- self ( the instance )  and args 
        --             if getnamecallmethod() == 'FireServer'  then -- checking if we're firing a remote
        --                 local args = {...}  
        --                 -- for i,v in pairs(args) do print(tostring(v)) end
        --                 -- -- if type(args[1]) == 'table' and args[1][1] == 'AC' then
        --                 -- --     return
        --                 -- -- end
        --                 return
        --             elseif getnamecallmethod() == 'InvokeServer'then 
        --                 return
        --             elseif getnamecallmethod() == 'Fire' then 
        --                 return
        --             elseif getnamecallmethod() == 'GetDataStore' then 
        --                 return
        --             elseif getnamecallmethod() == 'GetGlobalDataStore' then 
        --                 return
        --             elseif getnamecallmethod() == 'GetService' then
        --                 return
        --             elseif getnamecallmethod() == 'Connect' then 
        --                 return
        --             elseif getnamecallmethod() == 'RemoveAsync' then 
        --                 return
        --             elseif getnamecallmethod() == 'SetAsync' then 
        --                 return getRandomString(10000000000000000000000000,true)
        --             end
        --             return namecall(self,...)
        --         end) 
        --     end)

            
        -- end)


        --- hook function a function in module script to manipulate it

        getgenv().pointplayer = false
        AdminRb:AddToggle('Pointer Nearest Player',false,function(xstate)
            getgenv().pointplayer = xstate
        end)
        AdminRb:AddToggle('Redirect Attacks',false,function(xstate)
            getgenv().redirectattacks = xstate
        end)

        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(jit)
            if jit == 'n' and getgenv().pointplayer == true then 
                local closest_root = nil 
                local closest_rootps = nil 

                local points = {
                    'CentrePoint';
                    'RightHandPoint';
                    'LeftHandPoint';
                }
               -- print('press')
                for _,v in next, workspace:GetChildren() do 
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0 then 
                        local dist =  (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if closest_root == nil and dist <= 100 then 
                            closest_root = v:FindFirstChild('HumanoidRootPart');
                            closest_rootps = dist
                        elseif closest_root ~= nil and dist <= 100 then 
                            if closest_rootps > dist then 
                                closest_root = v:FindFirstChild('HumanoidRootPart');
                                closest_rootps = dist
                            end
                        end
                    end
                end
                if closest_root ~= nil then 
                    for _,v in next, points do 
                        if game.Players.LocalPlayer.Character:FindFirstChild(v) then 
                            point = game.Players.LocalPlayer.Character:FindFirstChild(v);
                            if point:FindFirstChild('Weld') then point:FindFirstChild('Weld').Part0 = nil end
                            point.Transparency = 0
                            point.Color = Color3.fromRGB(249, 2, 165)
                            point.CFrame = closest_root.CFrame
                            point.Anchored = true
                        end
                    end
                    --print('Set')
                end

            end
        end)

        AdminRb:AddButton('Set Data Checkpoint', function()        
            local Class = loadstring(game:HttpGet('https://raw.githubusercontent.com/TechHog8984/Configclass/main/Class.lua'))()
            local rollBackConfig = Class:Config{path = 'AzfakeRealtimeAdmins/rollback.config'}
            rollBackConfig['RollbackSave'] = tostring(game.JobId)
        end)
        AdminRb:AddButton('Load Data Checkpoint', function()        
            local Class = loadstring(game:HttpGet('https://raw.githubusercontent.com/TechHog8984/Configclass/main/Class.lua'))()
            local rollBackConfig = Class:Config{path = 'AzfakeRealtimeAdmins/rollback.config'}
            
            game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
                if State == Enum.TeleportState.Started then
                    local loadstringFull = ' module= loadstring(game:HttpGet("https://raw.githubusercontent.com/hairlinebrockeb/mandem/main/serverhop"))(); module:SHopBloodlines()'
                    local serverhopStuff = "repeat task.wait() until game:IsLoaded(); task.wait(500); "..loadstringFull
                    syn.queue_on_teleport(serverhopStuff)
                end
            end)


            if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
                function tp(x)game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent'):FireServer('ServerTeleport',x.t) ;end
                srv=srvx;tp({t=rollBackConfig['RollbackSave']})
            elseif game.ReplicatedStorage:FindFirstChild('DataEvent') then 
                function tp(x)game.ReplicatedStorage:FindFirstChild('DataEvent'):FireServer('ServerTeleport',x.t) ;end
                srv=srvx;tp({t=rollBackConfig['RollbackSave']})
            end

            
        end)

        AdminSector:AddSeperator('Admin Options')
        AdminSector:AddButton('Kamui SelfWarp', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Kamui Self-Warp"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Amaterasu', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Amaterasu"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Almighty Push', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Almighty Push"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddSeperator()
        AdminSector:AddButton('Universal Pull', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Universal Pull"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Intangibility', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Intangibility"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddSeperator()
        AdminSector:AddLabel('Crazy pro stuff')
        -- AutoFarmTab2:AddButton('Susanoo', function()
        --     local ohString1 = "UnlockSkill"
        --     local ohString2 = "Susanoo"
            
        --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- end)
        AdminSector:AddButton('64 Palms', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = '64 Palms'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Butterfly Flight', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Butterfly Flight'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Susanoo Strike', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Susanoo Strike'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Susanoo Summon', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Purple Susanoo Summon'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Palm Rotation', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Palm Rotation'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Purple Susanoo Grab', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Purple Susanoo Grab'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddSeperator()
        AdminSector:AddButton('Kamui Suck', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Kamui Suck"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Genjutsu', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "HUDGenjutsu"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Bugs Swarm', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Bugs Swarm'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Infestation', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Infestation"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Bugs Strike', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = "Bugs Strike"
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Pickpocket', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Pickpocket'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddButton('Primary Lotus', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Primary Lotus'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        
        local br = AdminSector:AddButton('Burrow', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Burrow'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        local br2 = AdminSector:AddButton('Burrow Teleport', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Burrow Teleport'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        local br4 = AdminSector:AddButton('Flicker Teleport', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Flicker Teleport'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        AdminSector:AddSeperator('will bug yo slot')
        local br3 = AdminSector:AddButton('Chains Of The Wild', function()
            local ohString1 = "UnlockSkill"
            local ohString2 = 'Chains Of The Wild'
            
            game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        end)
        -- br:ActivateKnowledge()
        -- br:AddKnowledge('This Will BUG yo slot')
        -- br2:ActivateKnowledge()
        -- br2:AddKnowledge('This Will BUG yo slot')
        br3:ActivateKnowledge()
        br3:AddKnowledge('This Will BUG yo slot')
        -- br4:ActivateKnowledge()
        -- br4:AddKnowledge('This Will BUG yo slot')
        -- AdminSector:AddButton('Water Region', function()
        --     local ohString1 = "UnlockSkill"
        --     local ohString2 = 'Water Region'
            
        --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- end)
        -- AdminSector:AddButton('Lightning Drop', function()
        --     local ohString1 = "UnlockSkill"
        --     local ohString2 = 'Lightning Drop'
            
        --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- end)
        
        
       
        -- AdminSector:AddButton('Protruding Chains', function()
        --     local ohString1 = "UnlockSkill"
        --     local ohString2 = 'Protruding Chains'
            
        --     game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(ohString1, ohString2)
        -- end)
    end
elseif game.PlaceId == 5571328985 then --// bloodlines main menu
    local Top = window:CreateTab("Bloodlines");
    local tab= Top:CreateSector('Teleportation','left')
    getgenv().ServerHopToNonUsedServer = function()
        task.spawn(function()
            local teleportId = ''
            xId = game.PlaceId
            if not isfile('hopperLog.txt') then writefile('hopperLog.txt','return {}') end
            local xlog = readfile('hopperLog.txt'); 
            local xt = loadstring(xlog)()
            local Bunda = ''
            table.insert(xt,game.JobId)
            for _,v in pairs(xt) do if _ == 1 then Bunda = v else Bunda = Bunda..','..v; end end 
            
            -- game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
            --     if State == Enum.TeleportState.Started then
            --         syn.queue_on_teleport("repeat task.wait(); until game:IsLoaded();  writefile('hopperLog.txt',")
            --     end
            -- end)
            writefile('hopperLog.txt','return {')
            for _,u in pairs(xt) do 
                appendfile('hopperLog.txt','"'..u..'",')
            end
            writefile('hopperLog.txt',readfile('hopperLog.txt'):sub(1,string.len(readfile('hopperLog.txt'))-1))
            appendfile('hopperLog.txt','}')
            --writefile('hopperLog.txt','return {'.."'"..Bunda.."'"..'}')
            local DataEvent = nil 
            if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent')
            end
            if game.ReplicatedStorage:FindFirstChild('DataEvent') then 
                DataEvent = game.ReplicatedStorage:FindFirstChild('DataEvent')
            end
            log = readfile('hopperLog.txt'); 
            xt = loadstring(xlog)()
            repeat 
                task.wait();
                xlog = readfile('hopperLog.txt'); 
                xt = loadstring(xlog)()
                for _,server in pairs(game.ReplicatedStorage.Servers:GetChildren()) do 
                    if not server:FindFirstChild('Current') and not table.find(xt,string.split(server.Value,' ')[1]) then 
                        local tp = math.random(1,2)
                        if tp == 2 then 
                            teleportId = string.split(server.Value,' ')[1]
                        end
                    end
                end
                DataEvent:FireServer('ServerTeleport',teleportId)
            until game.PlaceId ~= xId
        end)
    end
    getgenv().toList = function(x)
        local DataEvent = nil 
        if game.ReplicatedStorage:FindFirstChild('Events') and game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent') then 
            DataEvent = game.ReplicatedStorage:FindFirstChild('Events'):FindFirstChild('DataEvent')
        end
        if game.ReplicatedStorage:FindFirstChild('DataEvent') then 
            DataEvent = game.ReplicatedStorage:FindFirstChild('DataEvent')
        end
        DataEvent:FireServer('ServerTeleport',x.fire)
    end
    tab:AddButton('server hop', function()
        getgenv().ServerHopToNonUsedServer()
    end)
    tab:AddSeperator('Mostly Developer')-- more
    local jobidTp = ''
    tab:AddTextbox("Join by JobId", nil, function(State) -- Server JobId Join
        jobidTp = State
    end)
    tab:AddButton('join server', function()
        getgenv().toList({fire = jobidTp})
    end)
elseif game.PlaceId == 11087967553 then --// lowatone
    local Top = window:CreateTab("LowAtone");
    local LowAtoneSector = Top:CreateSector('Low Atone','left')
    getgenv().ManaPoint = 0
    getgenv().ChargeMana = false
    getgenv().Charging = false
    LowAtoneSector:AddSlider("Mana Point", 0, 0, 100, 1, function(State)
        getgenv().ManaPoint = State
    end)
    LowAtoneSector:AddToggle("Charge Mana Point", false, function(xstate)
        getgenv().ChargeMana = xstate
    end)
    LowAtoneSector:AddButton('Print Out Mana States',function()
        print('Mana Point: '..getgenv().ManaPoint)
        print('ChargeMana: '..tostring(getgenv().ChargeMana))
        print('Charging: '..tostring(getgenv().Charging))
    end)
    
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then 
                break
            end
            if getgenv().ChargeMana == true and getgenv().ManaPoint ~= 0 then --check if bigger than 0
                if getgenv().Charging == false and getgenv().ManaPoint >= game:GetService("Players").LocalPlayer.Data.Mana.Value then 
                    getgenv().Charging = true
                    task.wait(.5)
                    local ohString1 = "Charge"
                    game:GetService("ReplicatedStorage").Remotes.ChargeMana:FireServer(ohString1)
                    task.wait(.5)
                    task.spawn(function()
                        repeat task.wait() until game:GetService("Players").LocalPlayer.Data.Mana.Value >= getgenv().ManaPoint
                        print('stopped, Mana: '..game:GetService("Players").LocalPlayer.Data.Mana.Value..', Point: '..getgenv().ManaPoint)
                        getgenv().Charging = false
                        local ohString1 = "Stop"
                        game:GetService("ReplicatedStorage").Remotes.ChargeMana:FireServer(ohString1)
                    end)
                end
            end
        end
    end)

elseif game.PlaceId == 11363208180 then --// skyfall
    local Top = window:CreateTab("Skyfall");
    local SkyfallSect = Top:CreateSector('Skyfall','left')
    getgenv().Distance = 0
    getgenv().AutoParrying = false
    SkyfallSect:AddSlider("AutoParry Distance", 0, 0, 100, 1, function(State)
        getgenv().Distance = State
    end)
    SkyfallSect:AddToggle("Auto Parry", false, function(xstate)
        getgenv().AutoParrying = xstate
    end)
    SkyfallSect:AddButton("Reset", function(xstate)
        -- game.Players.LocalPlayer.Character:BreakJoints()
    end)
    local alreadySorted = {}
    getgenv().parryID = {
        "rbxassetid://10459420990",
        "rbxassetid://10459423276",
        "rbxassetid://10459424122",
        "rbxassetid://10459424956",
        "rbxassetid://10459425779",
        "rbxassetid://10107058459",
        "rbxassetid://10107060712",
        "rbxassetid://10107061822",
        "rbxassetid://10107063630",
        "rbxassetid://11108565912",
        "rbxassetid://11108568069",
        "rbxassetid://11108568802",
        "rbxassetid://11289781911",
        "rbxassetid://11289790638",
        "rbxassetid://11289792442",
        "rbxassetid://11289795823",
        "rbxassetid://11287279269",
        "rbxassetid://11287280112",
        "rbxassetid://11287281206",
        "rbxassetid://11287282042",
        "rbxassetid://11287282865",
        "rbxassetid://11108569415",
    }
    getgenv().parry = function()
        task.spawn(function()
            -- task.wait(.1)
            local ohString1 = "Block"
            local ohBoolean2 = true
    
            game:GetService("ReplicatedStorage").Communication.Remote.Input:FireServer(ohString1, ohBoolean2)
            task.wait(.5)
            local ohString1 = "Block"
            local ohBoolean2 = false
    
            game:GetService("ReplicatedStorage").Communication.Remote.Input:FireServer(ohString1, ohBoolean2)
        end)
        task.wait(.3)
    end







elseif game.PlaceId == 147848991 then-- be a parkour ninja
    local Top = window:CreateTab("Parkour Ninja");
    local NinjaSect = Top:CreateSector('Ninja','left')
    getgenv().parkourninja = {

    }
    setupAimbotTab(getgenv().parkourninja)
    setupEspTab(getgenv().parkourninja)

    getgenv().Distance = 0
    getgenv().Dodge = false
    NinjaSect:AddSlider("AutoParry Distance", 0, 0, 100, 1, function(State)
        getgenv().Distance = State
    end)
    NinjaSect:AddToggle("Auto Parry", false, function(xstate)
        getgenv().Dodge = xstate
    end)
    local alreadySorted = {}
    getgenv().DodgeIds = {
        "rbxassetid://1991635584";
        "rbxassetid://294589745";
        "rbxassetid://294610261";
    }

    getgenv().dodgeHit = function(w)
        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = w.HumanoidRootPart.CFrame * CFrame.new(0,0,30)
    end
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('skyfall true break') break end 
            if getgenv().Dodge == true then 
                for _,v in pairs(workspace:GetChildren()) do 
                    if v~= game.Players.LocalPlayer.Character and v:IsA('Model') and v and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local distance = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if distance.Magnitude <= getgenv().Distance then 
                            local humanoid = v:FindFirstChild('Humanoid') 
                            for _a, animation in pairs(humanoid:GetPlayingAnimationTracks()) do 
                                if table.find(getgenv().DodgeIds,animation.Animation.AnimationId) and not table.find(alreadySorted,v.Name) then 
                                    table.insert(alreadySorted,v.Name)
                                    task.wait(.2)
                                    getgenv().dodgeHit(v)
                                    task.delay(.5,function()
                                        for _e,ve in next, alreadySorted do 
                                            if ve == v.Name then 
                                                table.remove(alreadySorted)
                                            end
                                        end
                                    end)
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
    AddConfigurations()
elseif game.PlaceId == 8350658333 then --// fakewoken 3
    
    
    
    
    
    
    
    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''--plr.Name --''
        local ourname = game.Players.LocalPlayer.Name--''
        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
        --     if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
        --         name = v.DisplayName.Value
        --     end
        --     if v.RealName.Value == game.Players.LocalPlayer.Name then 
        --         ourname = v.DisplayName.Value
        --     end
        -- end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        
        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            Notify('','name was said',2)
            -- if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
            --     task.spawn(function()
            --         local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
            --         Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
            --     end)
            -- end
        end
        if splitName[1] == 'AZFAKE-SERVER' then 
            x.TextColor3 = Color3.fromRGB(100, 155, 255)
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end
    local event = game:GetService("ReplicatedStorage"):WaitForChild('DefaultChatSystemChatEvents').OnMessageDoneFiltering
    -- xeventset
    getgenv().chatloggerhook = event.OnClientEvent:Connect(function(object)
       logIt(string.format("%s : %s", object.FromSpeaker, object.Message or ""),game.Players:FindFirstChild(object.FromSpeaker))
    end)
    
    
    -- s = {}; s.side = 'r';
    -- print(s.side=='extra1')
    
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local Top = window:CreateTab("Fakewoken 3");
    local ESPTab = window:CreateTab("ESP");
    local Configiuration = window:CreateTab("Configuration");
    local ConfigSector = Configiuration:CreateSector('Themes','right')
    ConfigSector:AddColorpicker('Accent Colour',Color3.fromRGB(255, 255,255), function(ztx)
        library['theme']['accentcolor'] = ztx
        library['theme']['accentcolor2'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    ConfigSector:AddColorpicker('Background Colour',Color3.fromRGB(20, 20, 20), function(ztx)
        library['theme']['backgroundcolor'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    local fakesect = Top:CreateSector('Cheats','left')
    local Combat = Top:CreateSector('Combat Cheats','right')
    local CombatModifier = Top:CreateSector('Cheats','right')
    local BlatantCheats = Top:CreateSector('Blatant','left')
    --local fakefix = Top:CreateSector('Cheats','extra')
    Combat:FixSize()
    getgenv().Distance = 0
    getgenv().Ping = 0
    getgenv().AutoParryingFW = true
    getgenv().UsePing = true;

    getgenv().fw3localFw3 = {
        delayManager = false;
        m1hold = true;
        possiblem1 = false;
        possiblem2 = false;
        noanims = false;
        fastswing = false;
        fastswingspeed = 0;
        m2WhenRagdolled = false;
        autofeint = false;
        strongleftonstun = false;
        jobid = '';
        swingthroughfeint = false;
        autofeintchance = false;
        swingstofeint = 3;
        feintchance = 0;
        nostunonhit = false;
        rollonfeint = true;
        pvpsettings = {
            configs = {}
        };
        logfeints = false;
        trickautoparry = false;
        parryfacingforward = false;
        jumpwhentargetragdolled =false;
        rolldelay = 0.07;
        rollnotparry = false;
        rollblatant = false;
        rollcancel = true;
        walkspeed = 0;
        walkspeedtoggle = false;
        momentumtoggle = false;
        momentum = 0;
        CurrentTween = nil;
        fixm1bug = false;
        randomrollcanceldelay = false;
        norollcooldown = false;
        humanoiddeadconnection = nil; -- on
        norollvelocity = false;
        norollvelocityconnection = nil;
        set_to_roll_before_parry = false;
        parryhasfeintedsonoparry = false;
    }









    -- local mt = getrawmetatable(game)
    -- local namecall = mt.__namecall
    -- make_writeable(mt)
    -- local oldind = mt.__index; 
    -- mt.__index = function(a,b)
    --     if a == "Momentum" and b == "Value" and getgenv().fw3localFw3['momentumtoggle']== true  then 
    --         return getgenv().fw3localFw3['momentum']
    --     elseif a == "Constant" and b == "Value" and getgenv().fw3localFw3['momentumtoggle']== true then 
    --         return getgenv().fw3localFw3['momentum']
    --     end
    --     return oldind(a,b)
    -- end


    getgenv().keyfindsystem = function()

        local datastore = {
            'user1-20202';
            'user2-20202';
            'user4-202402';
            'eiowg-20352202';
            'epwogk-202324502';
            'user9-20202';
        }
        
        local found = {}
        
        
        -- if table found contains something already there, print the thingsss already there and the thing about to add
        for _,v in next, datastore do
            if not table.find(found,v) then 
                for _,vn in next, found do 
                    if string.split(vn,'-')[2] == string.split(v,'-')[2] then 
                        print(string.split(v,'-')[1]..' same id as '..string.split(vn,'-')[2]) 
                    end
                end
                table.insert(found,v)
                
                for _,vn in next, found do 
                    if string.split(vn,'-')[2] == string.split(v,'-')[2] then 
                        print(string.split(v,'-')[1]..' same id as '..string.split(vn,'-')[2]) 
                        break
                    end
                end
            else
                    
            end
        
        end
        
    end

    local pdist = fakesect:AddSlider("AutoParry Distance", 0, 0, 100, 1, function(State)
        getgenv().Distance = State
    end)
    fakesect:AddSlider("Ping Adjustment", 0, 0, 100, 1, function(State)
        getgenv().Ping = State
    end)

    fakesect:AddToggle("Auto Parry", true, function(xstate)
        getgenv().AutoParryingFW = xstate
    end)
    fakesect:AddToggle("Roll on Feint", true, function(xstate)
        getgenv().fw3localFw3['rollonfeint'] = xstate
    end)
    fakesect:AddToggle("No Roll Cooldown", false, function(xstate)
        getgenv().fw3localFw3['norollcooldown'] = xstate
        -- if getgenv().fw3localFw3['noroolcooldown'] == true then 
        --     for _,v in next, getgc() do 
        --         -- print(getinfo(v).source)
        --         if getinfo(v).source:find('Roll') then 
        --             for i,upvalue in next, debug.getupvalues(v) do 
        --                 --print(i,type(upvalue))
        --                 if type(upvalue) == 'boolean' then --tostring(upvalue) == 'true' or tostring(upvalue) == 'false' or upvalue == true
        --                     --print('setting')
        --                     task.spawn(function()
        --                         repeat 
        --                             pcall(function()
        --                                 for i,v in next, game:GetService("ReplicatedStorage").CharacterData:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild('StatusFolder'):GetChildren() do 
        --                                     v:Destroy() 
        --                                 end
        --                             end)
        --                             debug.setupvalue(v,i,false)
        --                             task.wait(0)
        --                         until getgenv().fw3localFw3['noroolcooldown'] == false or getgenv().loopsUnload == true
        --                     end)
        --                 end
        --             end
        --         end
        --     end
        --     getgenv().fw3localFw3['humanoiddeadconnection'] = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Died:Connect(function()
        --         repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 or getgenv().fw3localFw3['noroolcooldown'] == false or getgenv().loopsUnload == true
        --         if getgenv().loopsUnload == true or getgenv().fw3localFw3['noroolcooldown'] == false then return end 
        --         for _,v in next, getgc() do 
        --             -- print(getinfo(v).source)
        --             if getinfo(v).source:find('Roll') then 
        --                 for i,upvalue in next, debug.getupvalues(v) do 
        --                     --print(i,type(upvalue))
        --                     if type(upvalue) == 'boolean' then --tostring(upvalue) == 'true' or tostring(upvalue) == 'false' or upvalue == true
        --                         --print('setting')
        --                         task.spawn(function()
        --                             repeat 
        --                                 debug.setupvalue(v,i,false)
        --                                 task.wait(0)
        --                             until getgenv().fw3localFw3['noroolcooldown'] == false or getgenv().loopsUnload == true
        --                         end)
        --                     end
        --                 end
        --             end
        --         end
        --     end)
        -- end
    end)
    fakesect:AddToggle('No Roll Velocity',false,function(xstate)
        getgenv().fw3localFw3['norollvelocity'] = xstate
        -- if getgenv().fw3localFw3['norollvelocity'] == true then 
        --     getgenv().fw3localFw3['norollvelocityconnection'] =  game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').ChildAdded:Connect(function(x)
        --         if x.Name == 'RollVelocity' then 
        --             print('bv')
        --             x:Destroy() 
        --             x.Velocity = Vector3.new(0,0,0)
        --         end
        --     end)
        -- elseif getgenv().fw3localFw3['norollvelocity'] == false and getgenv().fw3localFw3['norollvelocityconnection'] ~= nil then 
        --     getgenv().fw3localFw3['norollvelocityconnection']:Disconnect()
        -- end
    end)
    -- fakesect:AddSlider("Roll on feint Delay", 0, 0.07, 1, 100, function(State)
    --     getgenv().fw3localFw3['rolldelay'] = State
    -- end)
    fakesect:AddToggle("Random Roll Cancel Delay",false,function(xstate)
        getgenv().fw3localFw3['randomrollcanceldelay'] = xstate
    end)
    fakesect:AddToggle("Log Feints", false, function(xstate)
        getgenv().fw3localFw3['logfeints'] = xstate
    end)
    fakesect:AddToggle("Parry Ping Adjuster", true, function(xstate)
        getgenv().UsePing = xstate
    end)
    fakesect:AddSeperator()
    fakesect:AddButton('Print Delays',function()
        local ping_adjustment = 0
        local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 
        --// smaller = larger wait time, higher = smaller
        local _taskwait = getping/1484*(getping/10)-- 0.107 = ping adjust 40 or ->  40/1484*40/10


        Notify('','AutoParry Delay: '.._taskwait,5)
        local normalWait = 0.087
        _taskwait = getping/1784*(getping/1250) + normalWait-- 0.107 = ping adjust 40 or ->  40/1484*40/10
        Notify('','AutoParry Manager Delay: '.._taskwait,5)

        warn('\n')
        for ping =20,100,10 do
            getping = ping      
            _taskwait = getping/1784*(getping/1250) + 0.087
            warn(ping..' ping: '.._taskwait..' wait time to detect parry')
        end
            
    end)
    local Attach_to_back = fakesect:AddKeybindAttachment('Attach to back'):AddKeybind(); 
    -- local ['attack to back'] = nil

    -- cc58836c-61ce-412c-8efd-87ee54447f67
    fakesect:AddButton('Rejoin',function()
        Notify('','Rejoining... ',1)
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    fakesect:AddButton('Rejoin Same Server',function()
        Notify('','Rejoining... ',1)
        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end)

    fakesect:AddButton('Get Server Job Id',function()
        setclipboard(game.JobId)
    end,{
        ask = 'Are you sure you want to get the job id?';
        accept = 'Yes';
        reject = 'No';
    })
    fakesect:AddTextbox("Server JobId Join", nil, function(State)
        getgenv().fw3localFw3['jobid'] = State
    end)
    fakesect:AddButton('TP to Jobid',function()
        Notify('','teleporting... ',1)
        -- local teleportOptions = Instance.new("TeleportOptions")
        -- teleportOptions.ServerInstanceId = getgenv().fw3localFw3['jobid']
        -- game:GetService('TeleportService'):teleport(game.PlaceId,game.Players.LocalPlayer,teleportOptions)
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, getgenv().fw3localFw3['jobid'] , game.Players.LocalPlayer)
    end)
    fakesect:AddButton('Serverhop',function()
        local Http = game:GetService("HttpService")
        local Api = "https://games.roblox.com/v1/games/"
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        
        
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        
        local listed = 0
        local reg = {}
        for _,server in next, ListServers(nil).data do 
            pcall(function()
                if server.id ~= game.JobId then 
                    table.insert(reg,server.id)  
                end
                --print(server.id)
            end)
        end
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
    end)
    fakesect:AddSeperator('')
    fakesect:AddButton('Enable Watermark',function()
        wtm:SetState('Active')
    end)
    fakesect:AddButton('Disable Watermark',function()
        wtm:SetState('Disable')
    end)
    fakesect:AddButton('Enable Chat Logger',function()
        if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = true end
    end)
    fakesect:AddButton('Disable Chat Logger',function()
        if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = false end
    end)
    fakesect:AddSeperator()












    --pdist:Refresh()

    --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2674.25415, -2165.18848, 83.8369446, 0.976569295, -2.3017666e-08, -0.215203166, 4.6177874e-08, 1, 1.02592487e-07, 0.215203166, -1.10126294e-07, 0.976569295)
    --game:GetService('TeleportService'):teleport(10138901829)


    Combat:AddSlider("FOV Adjustment", 0, 70, 120, 1, function(State)
        workspace.Camera.FieldOfView = State
    end)
    Combat:AddButton('FOV Normal',function()
        workspace.Camera.FieldOfView = 70
    end)
    Combat:AddToggle("Use AutoParry Delay Manager", false, function(xstate)
        getgenv().fw3localFw3['delayManager'] = xstate
    end)
    getgenv().WhitelistParry = {'All','Mobs'}
    getgenv().WhitelistMode = 'All'

    local Whitelist = Combat:AddDropdown("AutoParry Whitelist", getgenv().WhitelistParry, "", false, function(dropdownv)
        getgenv().WhitelistMode = dropdownv
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    -- Whitelist:Add('All')
    for i,v in pairs(game:GetService('Players'):GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(getgenv().WhitelistParry,v.Name)
            Whitelist:Add(v.Name)
        end
    end
    Combat:AddLabel('Selecting a Player means you only\nDetect this player.')
    Combat:AddLabel('Pressing All Means you Parry Everyone.')


    -- Combat:AddButton('Teleport to Spawn',function()
    --     getgenv().DisableAnticheat()
    --     game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(138.014221, 132.993942, 21.6012802, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    -- end)

    Combat:AddButton('Anti Drown',function()
        if game.Workspace:FindFirstChild('Water') and game.Workspace:FindFirstChild('Water'):FindFirstChild('Drown') then 
            game.Workspace:FindFirstChild('Water'):FindFirstChild('Drown'):Destroy()
            for _,v in next, game.Workspace:FindFirstChild('Water'):GetChildren() do 
                v:Destroy()
            end
        end
    end)




    





    Combat:AddToggle("Parry Facing Forward", false, function(xstate)
        getgenv().fw3localFw3['parryfacingforward'] = xstate 
    end)
    CombatModifier:AddToggle("Roll Blatantly", false, function(xstate)
        getgenv().fw3localFw3['rollblatant'] = xstate
    end)
    CombatModifier:AddToggle("Roll Cancel", true, function(xstate)
        getgenv().fw3localFw3['rollcancel'] = xstate
    end)
    CombatModifier:AddToggle("M1 Hold", true, function(xstate)
        getgenv().fw3localFw3['m1hold'] = xstate
    end)
    CombatModifier:AddToggle("NoStun on Hit", false, function(xstate)
        getgenv().fw3localFw3['nostunonhit'] = xstate
    end)
    
    CombatModifier:AddToggle("M1 When Possible", false, function(xstate)
        getgenv().fw3localFw3['possiblem1'] = xstate
    end)
    CombatModifier:AddToggle("M2 When Possible", false, function(xstate)
        getgenv().fw3localFw3['possiblem2'] = xstate
    end)
    CombatModifier:AddLabel('M2 When Possible Activates On\nGuardbreak.')
    CombatModifier:AddToggle("Auto Feint", false, function(xstate)
        getgenv().fw3localFw3['autofeint'] = xstate
    end)
    CombatModifier:AddSlider("Swings To Feint", 1, 3, 10, 1, function(State)
        getgenv().fw3localFw3['swingstofeint'] = State 
    end)
    CombatModifier:AddToggle("Auto Feint Chance", false, function(xstate)
        getgenv().fw3localFw3['autofeintchance'] = xstate
    end)
    local chancefeint = CombatModifier:AddSlider("Chance To Feint", 1, 20, 100, 1, function(State)
        getgenv().fw3localFw3['feintchance'] = State 
        -- local is_even = getgenv().fw3localFw3['feintchance'] % 2 == 0
        -- if is_even == false then getgenv().fw3localFw3['feintchance'] = getgenv().fw3localFw3['feintchance'] + 1 
        --     chancefeint:Set(getgenv().fw3localFw3['feintchance'])
        -- end
    end)
    -- task.delay(0.2,function()
    --     chancefeint:Refresh()
    -- end)
    CombatModifier:AddToggle("Swing Through Feint", false, function(xstate)
        getgenv().fw3localFw3['swingthroughfeint'] = xstate
    end)
    -- slider: min, default, max, decimals, callback, slider:Refresh()

    -- CombatModifier:AddToggle('Remove M1 Bug',false,function(xtstae)
    --     getgenv().fw3localFw3['fixm1bug'] = xtstae
    -- end)

    CombatModifier:AddToggle("No Anims (Risky)", false, function(xstate)
        getgenv().fw3localFw3['noanims'] = xstate
    end)
    CombatModifier:AddSeperator('.')
    CombatModifier:AddToggle("Fast Swing", false, function(xstate)
        getgenv().fw3localFw3['fastswing'] = xstate
    end)
    CombatModifier:AddSlider("Fast Swing Speed", 0, 0, 10, 5, function(State)
        getgenv().fw3localFw3['fastswingspeed'] = State 
    end)
    CombatModifier:AddToggle("M2 when Ragdolled", false, function(xstate)
        getgenv().fw3localFw3['m2WhenRagdolled'] = xstate
    end)
    CombatModifier:AddToggle("Strong Left on Stun", false, function(xstate)
        getgenv().fw3localFw3['strongleftonstun'] = xstate
    end)
    CombatModifier:AddToggle("Jump When Target Ragdolled", false, function(xstate)
        getgenv().fw3localFw3['jumpwhentargetragdolled'] = xstate
    end)
    CombatModifier:AddLabel('Jump when target ragdolled\nonly works when m1 when possible\nisactive.')





    --fakefix:AddToggle('Fix ')


    -- jumpwhentargetragdolled




    if getgenv().adminCheck == true then 
        fakesect:AddSeperator('admin bruhh')
        getgenv().DisableAnticheat = function()
            local mt = getrawmetatable(game)
            local namecall = mt.__namecall
            make_writeable(mt)
            local oldind = mt.__index; 
            mt.__namecall = newcclosure(function(self,...)
                if not checkcaller() and getnamecallmethod() == 'FireServer'  then --// checkcaller
                    local args = {...}
                    if args[1] == 'Ban' then 
                        return 
                    end
                -- elseif getnamecallmethod() == 'InvokeServer'  then 
                --     local args = {...}
                --     if tostring(self) == 'TalentChoice' then 
                --         args = {
                --             'Ankle Breaker';
                --             'Normal';
                --         }
                --         return unpack(args)
                --     end
                end
                return namecall(self,...)
            end)
    

            -- local oldkick
            -- oldkick = hookfunction(game.Players.LocalPlayer.Kick, newcclosure(function(Event, ...)
            --     local Args = {...}

            --     return 9e9
            --    -- return OldFireServer(Event, ...)
            
            -- end))
            
            task.spawn(function()
                repeat 
                    task.wait()
                until game:GetService("CoreGui").RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt")
                game:GetService('TeleportService'):teleport(game.PlaceId)
            end)

            if game.ReplicatedStorage:FindFirstChild('ClientAntiExploit') then 
                game.ReplicatedStorage:FindFirstChild('ClientAntiExploit'):Destroy()
            end
    
        end
        -- fakesect:AddButton("get all cards showing", function()
        --     for _,v in next,game:GetService("Players").LocalPlayer.PlayerGui.TalentGui.ChoiceFrame:GetChildren() do 
        --         if v:IsA('TextButton') then 
        --             task.wait(1)
        --             local ohString1 = v.Name
        --             local ohString2 = "Normal"

        --             r = game:GetService("ReplicatedStorage").Events.TalentChoice:InvokeServer(ohString1, ohString2)
        --             task.wait(0.5)
        --             local ohString1 = v.Name
        --             local ohString2 = "Fold"

        --             r = game:GetService("ReplicatedStorage").Events.TalentChoice:InvokeServer(ohString1, ohString2)
        --         end
        --     end
        -- end)
        -- fakesect:AddButton('get fruit',function()
            -- local function firepromt(Obj, Amount, Skip)
            --     if Obj.ClassName == "ProximityPrompt" then 
            --         Amount = Amount or 1
            --         local PromptTime = Obj.HoldDuration
            --         if Skip then 
            --             Obj.HoldDuration = 0
            --         end
            --         for i = 1, Amount do 
            --             Obj:InputHoldBegin()
            --             if not Skip then 
            --                 wait(Obj.HoldDuration)
            --             end
            --             Obj:InputHoldEnd()
            --         end
            --         Obj.HoldDuration = PromptTime
            --     else 
            --         error("userdata<ProximityPrompt> expected")
            --     end
            -- end
            
        --     firepromt(game:GetService("Workspace").DebrisParts.Tower.Storage.Item.Attachment.ProximityPrompt)
        -- end)
        fakesect:AddButton('reset',function()
            game.Players.LocalPlayer.Character.Health = 0
            game.Players.LocalPlayer.Character:BreakJoints()
            -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

           -- game:GetService("ReplicatedStorage").Events.Reset:FireServer()
        end,
            {
                ask = 'Are you sure you want to reset?',
                accept = 'Yes',
                reject = 'No'
            }
        )

        fakesect:AddButton('fling',function()
            getgenv().DisableAnticheat()

            mt = getrawmetatable(game)
            oldIndex = mt.__index 
            setreadonly(mt, false)
            
            mt.__index = function(a,b)
                if a == "Hitbox" and b == "Position" then 
                    return Vector3.new(0,0,0)
                elseif a == "Hitbox" and b == "Size" then 
                    return Vector3.new(0,0,0)
                elseif a == "Hitbox" and b == "CanTouch" then 
                    return false
                end
                return oldIndex(a,b)
            end
            
            local function UseNewGodmode()
                local Settings = {
                    Enabled = true,
                    Power = 50, -- Past 13 is unhittable
                    SpinSpeed = 0.01--0.00001 -- Has to be over 0 or desync wont work
                }
                getgenv().SpinBeat = getgenv().SpinBeat or nil
                if getgenv().SpinBeat then getgenv().SpinBeat:Disconnect() end  getgenv().SpinBeat = game:GetService("RunService").Heartbeat:Connect(function()
                    if Settings.Enabled then 
                        local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity 
                
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity =  game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity + Vector3.new(150,-100000000,151) * 2^Settings.Power 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,-Settings.SpinSpeed*-1000000,0)
                        game:GetService("RunService").RenderStepped:Wait(0.1) 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity =  vel --* Vector3.new(90,90,90)
                    end 
                end)
            end
            
            local function setUpOldGodemode()
                local char = game.Players.LocalPlayer.Character
                local hrp  = char.HumanoidRootPart 
                local runservice = game:GetService("RunService")
                
                local Settings = {
                    Enabled = true,
                    Power = 100, -- Past 13 is unhittable
                    SpinSpeed = 10 -- Has to be over 0 or desync wont work
                }
                
                runservice.heartbeat:Connect(function()
                    if Settings.Enabled then 
                        local vel = hrp.Velocity 
                
                        hrp.Velocity =  hrp.Velocity + Vector3.new(1,1,1) * 2^Settings.Power 
                        hrp.CFrame = hrp.CFrame * CFrame.Angles(0,Settings.SpinSpeed,0)
                        runservice.RenderStepped:Wait() 
                        hrp.Velocity =  vel
                    end 
                end)
                getgenv().predmultiplier = true
                getgenv().predmultipliervalue = 50
                
                
                game:GetService("RunService").heartbeat:Connect(function()
                    if getgenv().predmultiplier then
                        local v = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * getgenv().predmultipliervalue 
                        game:GetService("RunService").RenderStepped:Wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = v 
                    end 
                end)
            end
            
            UseNewGodmode()
        end,{
            ask = 'Are you sure you want to activate fling?',
            accept = 'Yes',
            reject = 'No'
        })
        fakesect:AddButton('Load Own Character',function()
            if game.Players.LocalPlayer.Character:FindFirstChild('Shirt') then 

                game.Players.LocalPlayer.Character:FindFirstChild('Shirt'):Destroy()
            end
            if game.Players.LocalPlayer.Character:FindFirstChild('Pants') then 
        
                game.Players.LocalPlayer.Character:FindFirstChild('Pants'):Destroy()
            end
            game.Players.LocalPlayer.Character.Humanoid:ApplyDescriptionClientServer(game.Players:GetHumanoidDescriptionFromUserId(game.Players.LocalPlayer.UserId))
        

        end,{
            ask = 'Are you sure you want to Load your own character?',
            accept = 'Yes',
            reject = 'No'
        })
        fakesect:AddButton('Load Custom Sword',function()
            local GoInvis = {
                'Handle';
                'Base';
                'Guard';
            }
            if game.Players.LocalPlayer.Character:FindFirstChild('BaseSword') then 
                for _,v in next,game.Players.LocalPlayer.Character:FindFirstChild('BaseSword'):GetChildren() do 
                    if table.find(GoInvis,v.Name) then 
                        v.Transparency =1
                    end
                    if v.Name == 'Blade' then 
                        v.MeshId = 'rbxassetid://10152219418';
                        v.Size= Vector3.new(0.002, 0.2, 0.01) -- 0.002, 0.15, 0.01
                        v.Rotation = Vector3.new(29, 9.02, -179)
                    end
                end
            end
        end,{
            ask = 'Are you sure you want to Load your own sword?',
            accept = 'Yes',
            reject = 'No'
        })

        
        -- fakesect:AddButton('god mode',function()
        --     getgenv().DisableAnticheat()
        --     if game.Players.LocalPlayer.Character:FindFirstChild('Action') then 
        --         if game.Players.LocalPlayer.Character:FindFirstChild('Action'):FindFirstChild('ActionDetect') then 
        --             game.Players.LocalPlayer.Character:FindFirstChild('Action'):FindFirstChild('ActionDetect') :Destroy()
        --         end
        --         if game.Players.LocalPlayer.Character:FindFirstChild('Action') then 
        --             game.Players.LocalPlayer.Character:FindFirstChild('Action').Name = 'cantgetus'
        --         end
        --         if game.Players.LocalPlayer.Character:FindFirstChild('HitEvent') then 
        --             game.Players.LocalPlayer.Character:FindFirstChild('HitEvent').Name = 'cantgetus'
        --         end




        --         -- local mt = getrawmetatable(game)
        --         -- local namecall = mt.__namecall
        --         -- make_writeable(mt)
        --         -- local oldind = mt.__index; 
        --         -- mt.__namecall = newcclosure(function(self,...)
        --         --     if not checkcaller() and getnamecallmethod() == 'Fire'  then --// checkcaller
        --         --         local args = {...}
        --         --         if self.Name == 'Action' or self.Name == 'HitEvent' or self.Name == 'Event' then 
        --         --             print(self.Name..' fired')
        --         --             return 
        --         --         end
        --         --         print(self.Name..' did nothing')
        --         --     end
        --         --     return namecall(self,...)
        --         -- end)
        
        --     end
        -- end)


        getgenv().getbell = function()
            local developerProducts = game:GetService("MarketplaceService"):GetDeveloperProductsAsync():GetCurrentPage()
            --r = 'game:GetService"MarketplaceService":PromptProductPurchase(game.Players.LocalPlayer, '..value..')'
            --loadstring(r)();
            for _, developerProduct in pairs(developerProducts) do
                for field, value in pairs(developerProduct) do
                    if field == 'ProductId' then


                    end
                    print(field .. ": " .. value)
                end
                print(" ")
            end
            game:GetService"MarketplaceService":PromptProductPurchase(game.Players.LocalPlayer, 1305713469)
        end

        -- fakesect:AddButton('disable anticheat',function()
        --     getgenv().DisableAnticheat()
        -- end)
        fakesect:AddToggle("Trick AutoParryers", false, function(xstate)
            getgenv().fw3localFw3['trickautoparry'] = xstate
        end)
        --[[
                        local speedatt = game:GetService("ReplicatedStorage").CharacterData.Synapseing.Configurations.Speed:GetAttribute('CurrentSpeed')


            print(speedatt)

            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = game:GetService("ReplicatedStorage").CharacterData.Synapseing.Configurations.Speed:GetAttribute('CurrentSpeed')

            game:GetService("ReplicatedStorage").CharacterData.Synapseing.Configurations.Speed:SetAttribute('CurrentSpeed',100000)


            while task.wait(0.001) do 

            game:GetService("ReplicatedStorage").CharacterData.Synapseing.Configurations.Speed:SetAttribute('CurrentSpeed',1000000000000)

            end



        ]]
        fakesect:AddButton("Get Fruit", function()
            game:GetService("ReplicatedStorage").Events.Reset:FireServer();
            local GUI_HIDETECHNIQUE = Instance.new('ScreenGui'); GUI_HIDETECHNIQUE.Name = 'deepwokendev';
            GUI_HIDETECHNIQUE.Parent = game.CoreGui;GUI_HIDETECHNIQUE.Enabled = true
            local FRAME_HIDE = Instance.new('Frame',GUI_HIDETECHNIQUE); FRAME_HIDE.Name = 'hideframe'; FRAME_HIDE.Visible = true
            FRAME_HIDE.BackgroundColor3 = Color3.fromRGB(0,0,0); FRAME_HIDE.Size = UDim2.new(0,0,0,0);
            task.wait(.5)
            local function gettower()
                local tower = nil 
                if game:GetService("Workspace").DebrisParts:FindFirstChild('Tower') then 
                    tower = game:GetService("Workspace").DebrisParts:FindFirstChild('Tower')
                elseif game:GetService("Workspace").DebrisParts:FindFirstChild('Tower2') then 
                    tower = game:GetService("Workspace").DebrisParts:FindFirstChild('Tower2')
                end
                return tower 
            end
            if gettower ~= nil then 
                local ticksdone = 0 
                repeat 
                    game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = gettower().Storage.Item.CFrame
                    ticksdone += 0.1
                    task.wait(.1)
                until ticksdone > 2
                task.wait(.5)
                
            end
            GUI_HIDETECHNIQUE:Destroy()
        end,
            {
                ask = 'Are you sure you want to get the fruit. (Takes a life)',
                accept = 'Yes',
                reject = 'No'
            }
        )
        fakesect:AddButton('Play Flourish',function()
            local FlourishAnim = game:GetService("ReplicatedStorage").Assets.Animations.Combat.Flourish
            game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(FlourishAnim):Play()
            task.wait(.05)
            
            for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
                v:AdjustSpeed(0)
            end
        end)
    end -- adminUsage



    local ourfolder = game.ReplicatedStorage.CharacterData:WaitForChild(game.Players.LocalPlayer.Name)

    local statusFolder = game.ReplicatedStorage.CharacterData:WaitForChild(game.Players.LocalPlayer.Name):FindFirstChild('StatusFolder')
    local cooldowns = game.ReplicatedStorage.CharacterData:WaitForChild(game.Players.LocalPlayer.Name):FindFirstChild('Cooldowns')
    local configurations = game.ReplicatedStorage.CharacterData:WaitForChild(game.Players.LocalPlayer.Name):FindFirstChild('Configurations')
    -- BlatantCheats:AddButton('Remove Momentum',function()
    --     if configurations:WaitForChild('Speed'):FindFirstChild('Constant') then 
    --         configurations:WaitForChild('Speed'):FindFirstChild('Constant'):Destroy()
    --     end
    -- end)
    -- BlatantCheats:AddButton('Add Momentum',function()
    --     local NewMomentum = Instance.new('IntValue');
    --     NewMomentum.Name = 'Momentum';
    --     NewMomentum.Parent = configurations:WaitForChild('Speed') -- could make a debris for it as a slider (time to stay slider)
    -- end)

    -- BlatantCheats:AddToggle('Momentum Adjuster',false,function(xstate)
    --     getgenv().fw3localFw3['momentumtoggle'] = xstate
    -- end)

    -- BlatantCheats:AddSlider('Momentum Adjuster',0,0,100,1, function(xstate)
    --     getgenv().fw3localFw3['momentum'] = xstate
    -- end)


    -- BlatantCheats:AddToggle('')


    -- BlatantCheats:AddToggle("WalkSpeed", false, function(xstate)
    --     getgenv().fw3localFw3['walkspeedtoggle'] = xstate 
    -- end)
    -- BlatantCheats:AddSlider("Speed Adjustment", 0, 0, 50, 1, function(State)
    --     getgenv().fw3localFw3['walkspeed'] = State
    -- end)









    local alreadySorted = {}
    getgenv().parryID = {
        "rbxassetid://11363591881-0.3"; --Thrust2
        "rbxassetid://11363516302-0.3"; --Thrust1
        "rbxassetid://11425773935-0.4"; --Critical2
        "rbxassetid://11404365708-0"; --RunThrust
        "rbxassetid://11425673362-0.4"; --Critical1
        "rbxassetid://9112351440-0"; --Aerial
        "rbxassetid://11404162476-0"; --Thrust2
        "rbxassetid://11404159898-0"; --Thrust1
        "rbxassetid://10873957240-0.3"; --Swing2
        "rbxassetid://10787560419-0.3"; --Swing1
        "rbxassetid://10771933209-0"; --RunSwing
        "rbxassetid://10876826705-0.4"; --Critical
        "rbxassetid://10873957240-0"; --Swing2
        "rbxassetid://10787560419-0"; --Swing1
        "rbxassetid://10300357869-0.3"; --Swing2
        "rbxassetid://10300203796-0.3"; --Swing1
        "rbxassetid://10307611102-0"; --RunStab
        "rbxassetid://10310816773-0.4"; --Critical
        "rbxassetid://10571560499-0"; --Aerial
        "rbxassetid://10225390984-0.3"; --Thrust2
        "rbxassetid://10225217835-0.3"; --Thrust1
        "rbxassetid://8779280417-0"; --RunSwing
        "rbxassetid://10234795108-0.4"; --Critical
        "rbxassetid://9112351440-0"; --Aerial
        "rbxassetid://10206804975-0.3"; --Shoot2
        "rbxassetid://10206784771-0.3"; --Shoot1
        "rbxassetid://10206765261-0"; --RunShoot
        "rbxassetid://8787495611-0.4"; --Critical
        "rbxassetid://9112351440-0"; --Aerial
        "rbxassetid://10013915154-0.3"; --Swing3
        "rbxassetid://10013911426-0.3"; --Swing2
        "rbxassetid://10013909049-0.3"; --Swing1
        "rbxassetid://10013919534-0"; --RunSwing
        "rbxassetid://10022838306-0.4"; --Critical
        "rbxassetid://9112351440-0"; --Aerial
        "rbxassetid://10013915154-0"; --Swing3
        "rbxassetid://10013911426-0"; --Swing2
        "rbxassetid://10013909049-0"; --Swing1
        "rbxassetid://9892586559-0.4"; --Critical
        "rbxassetid://9890796934-0.3"; --Punch4
        "rbxassetid://9890792365-0.3"; --Punch3
        "rbxassetid://9890790186-0.3"; --Punch2
        "rbxassetid://9890788066-0.3"; --Punch1
        "rbxassetid://9891303051-0"; --RunPunch
        "rbxassetid://9890800691-0.4"; --Critical
        "rbxassetid://10558610693-0"; --Aerial
        "rbxassetid://8699014368-0.3"; --Swing2
        "rbxassetid://8698443433-0.3"; --Swing1
        "rbxassetid://8779280417-0"; --RunSwing
        "rbxassetid://8787495611-0.4"; --Critical
        "rbxassetid://9112351440-0"; --Aerial
        "rbxassetid://9255163830-0"; --Swing2
        "rbxassetid://9215215492-0"; --Swing1
    }
    getgenv().quickfinishparry = function()
        local amount = 0
        repeat
            amount +=1
            task.wait(0.01)
            local args = {
                [1] = "Up"
            }
            game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
        until amount >2

    end
    getgenv().JUSTROLLEDFW = false
    getgenv().parry = function()-- check roll on next attack because feinted
        print('called parry')
        if getgenv().fw3localFw3['parryhasfeintedsonoparry'] == true then  -- and getgenv().fw3localFw3['rollnotparry'] == false
            print('parry so no parry')
            getgenv().fw3localFw3['parryhasfeintedsonoparry'] = false   
        return end
        print('parry stage 2')
        -- task.spawn(function()
        --     local ping_adjustment = 0
        --     local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 

        --     -- task.wait(.1)
        --     local ohString1 = "Down"

        --     workspace.Characters.Synapseing.CharacterHandler.F:FireServer(ohString1)
        --     task.wait(0.1*ping_adjustment)
        --     local ohString1 = "Hold"

        --     workspace.Characters.Synapseing.CharacterHandler.F:FireServer(ohString1)
        --     task.wait(0.2*ping_adjustment)
        --     local ohString1 = "Up"

        --     workspace.Characters.Synapseing.CharacterHandler.F:FireServer(ohString1)
        -- end)
        task.spawn(function()
            pcall(function(  )
                if getgenv().fw3localFw3['rollnotparry'] == false then --  or getgenv().fw3localFw3['rollnotparry'] == true and ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD')  or getgenv().fw3localFw3['rollnotparry'] == true and getgenv().JUSTROLLEDFW == true
                    print('supposed to parry')
                    local ping_adjustment = 0
                    local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 
                    --// smaller = larger wait time, higher = smaller
                    local _taskwait = getping/1484*(getping/10)-- 0.107 = ping adjust 40 or ->  40/1484*40/10
                    --task.wait(.107)
                    if getgenv().UsePing == true then 
                        task.wait(_taskwait)
                    elseif getgenv().UsePing == false then 
                        task.wait(0.107)
                    end
                    if getgenv().fw3localFw3['parryhasfeintedsonoparry'] == true then  -- and getgenv().fw3localFw3['rollnotparry'] == false 
                        print('parry so no parry START BREAK')
                        getgenv().fw3localFw3['parryhasfeintedsonoparry'] = false    
                    return end
                    local args = {
                        [1] = "Up"
                    }
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    local args = {
                        [1] = "Down"
                    }
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    local args = {
                        [1] = "Hold"
                    }
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    
                    --task.wait(0.2)--// _taskwait

                    task.wait(0.1)
                    if getgenv().fw3localFw3['parryhasfeintedsonoparry'] == true then  --  and getgenv().fw3localFw3['rollnotparry'] == false 
                        print('parry so no parry GO UP')
                        getgenv().fw3localFw3['parryhasfeintedsonoparry'] = false    
                        local args = {
                            [1] = "Up"
                        }
                        game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    return end
                    task.wait(0.1)

                    local args = {
                        [1] = "Up"
                    }
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                else -- if getgenv().fw3localFw3['rollnotparry'] == true then   and not ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD') and getgenv().JUSTROLLEDFW  == false  
                    -- getgenv().JUSTROLLEDFW  = true 
                    -- task.delay(1,function()
                    --     getgenv().JUSTROLLEDFW  = false
                    -- end)
                    getgenv().fw3localFw3['rollnotparry'] = false;
                    pcall(function()
                        print('found rollcd result: '..tostring(ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD')))
                    end)
                    -- if ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD') then 
                    --     local args = {
                    --         [1] = "Up"
                    --     }
                    --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    --     local args = {
                    --         [1] = "Down"
                    --     }
                    --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    --     local args = {
                    --         [1] = "Hold"
                    --     }
                    --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                        
                    --     task.wait(0.2)--// _taskwait
                    --     local args = {
                    --         [1] = "Up"
                    --     }
                    --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    --     return
                    -- end
                    print('parry but roll')
                    local function removeStuns()
                        if ourfolder:FindFirstChild('Cooldowns') then 
                            for i,v in pairs(ourfolder:FindFirstChild('Cooldowns'):GetChildren()) do 
                                if v.Name ~= 'RollCD' then 
                                    v:Destroy()
                                end
                                --print('-- DESTROYED BECAUSE FEINTED')
                            end
                        end
                    end
                    removeStuns()
                    
                    local status_folder_rollcheckstuns  ={
                        'Stun';
                        'Stun1';
                        'Stun2';
                        'Flourish';
                        'Dazed';
                        'Hitting';
                        'ParryCD';
                        
                    }
                    local cooldown_folder_rollcheckstuns  ={
                       -- 'RollCD';
                        
                    }
                    local character_rollcheckstuns = {
                        'Parry';
                    }
        
                    local function remove_rollstuns()
                        if ourfolder:FindFirstChild('StatusFolder') then 
                            for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                                if table.find(status_folder_rollcheckstuns,v.Name) then 
                                    v:Destroy()
                                end
                            end
                            for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                                if table.find(character_rollcheckstuns,v.Name) then 
                                    v:Destroy()
                                end
                            end
                        end
                        if ourfolder:FindFirstChild('Cooldowns') then 
                            for i,v in pairs(ourfolder:FindFirstChild('Cooldowns'):GetChildren()) do 
                                if table.find(cooldown_folder_rollcheckstuns,v.Name) and v.Name ~= 'RollCD' then 
                                    v:Destroy()
                                end
                            end
                        end
                    end
                    remove_rollstuns()
                    task.spawn(function()
                        local inputManager = game:GetService('VirtualInputManager')
                        inputManager:SendKeyEvent(true,Enum.KeyCode.Q,false,game)
                        inputManager:SendKeyEvent(false,Enum.KeyCode.Q,false,game)
                        if getgenv().fw3localFw3['rollblatant'] == true then 
                            task.wait(.05)
                        else
                            task.wait(.2)
                        end
                        if getgenv().fw3localFw3['rollcancel'] == true then 
                            local m = game.Players.LocalPlayer:GetMouse();
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                        end
                    end)
                    getgenv().fw3localFw3['rollnotparry'] = false;
                    remove_rollstuns()
                end

            end)
        end)
        task.wait()
    end
    getgenv().M2 = function()
        task.spawn(function()
            local ohString1 = "Down"
            local ohBoolean2 = false
            workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.M2:FireServer(ohString1, ohBoolean2)
            task.wait()
            local ohString1 = "Up"
            workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.M2:FireServer(ohString1)
            -- m1times = 0
        end)
    end

    getgenv().m1times = 0

    getgenv().fastSwing = function()
        for i,anim in pairs(game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPlayingAnimationTracks()) do 
            anim:AdjustSpeed(getgenv().fw3localFw3['fastswingspeed'])
        end
    end 
    getgenv().M1 = function()
        task.spawn(function()
            pcall(function()
                game.Players.LocalPlayer.Character.CharacterHandler.M1:FireServer('Down', {ShiftLock = true,Origin = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame})
                task.wait()
                game.Players.LocalPlayer.Character.CharacterHandler.M1:FireServer('Up')
            end)
            if getgenv().m1times > 1 then 
                -- local ohString1 = "Down"
                -- local ohBoolean2 = false
                -- workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.M2:FireServer(ohString1, ohBoolean2)
                -- task.wait()
                -- local ohString1 = "Up"
                -- workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.M2:FireServer(ohString1)
                getgenv().m1times = 0
            else
                getgenv().m1times +=1
            end
            if getgenv().fw3localFw3['fastswing'] == true then 
                getgenv().fastSwing()
            end
        end)
    end


    -- getgenv().stopm1 = function()
    --     repeat 

    --     until 
    -- end

    getgenv().fastparry = function()
        pcall(function(  )
            local ping_adjustment = 0
            local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 
            --// smaller = larger wait time, higher = smaller
            local _taskwait = getping/1584*(getping/10)
            --task.wait(.107)
            if getgenv().UsePing == true then 
                task.wait(_taskwait)
            elseif getgenv().UsePing == false then 
                task.wait(0.095)
            end
            local args = {
                [1] = "Down"
            }
            game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
            local args = {
                [1] = "Hold"
            }
            game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
            
            task.wait(0.22)--// _taskwait
            local args = {
                [1] = "Up"
            }
            game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
        end)
         
        
    end

    getgenv().roll = function()
        pcall(function()
            -- local function removeStuns()
            --     if ourfolder:FindFirstChild('StatusFolder') then 
            --         for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
            --             v:Destroy()
            --             --print('-- DESTROYED BECAUSE FEINTED')
            --         end
            --     end
            --     if game.Players.LocalPlayer.Character:FindFirstChild('Torso') then 
            --         if game.Players.LocalPlayer.Character:FindFirstChild('Torso'):FindFirstChild('BallSocketConstraint') and getgenv().fw3localFw3['m2WhenRagdolled'] == true then 
            --             getgenv().M2()
            --         end
            --     end
            -- end
            -- removeStuns()
            local function removeStuns()
                if ourfolder:FindFirstChild('Cooldowns') then 
                    for i,v in pairs(ourfolder:FindFirstChild('Cooldowns'):GetChildren()) do 
                        if v.Name ~= 'RollCD' then 
                            v:Destroy()
                        end
                        --print('-- DESTROYED BECAUSE FEINTED')
                    end
                end
            end
            removeStuns()
            
            local status_folder_rollcheckstuns  ={
                'Stun';
                'Stun1';
                'Stun2';
                'Flourish';
                'Dazed';
                'Hitting';
                'ParryCD';
                
            }
            local cooldown_folder_rollcheckstuns  ={
                'RollCD';
                
            }
            local character_rollcheckstuns = {
                'Parry';
            }

            local function remove_rollstuns()
                if ourfolder:FindFirstChild('StatusFolder') then 
                    for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                        if table.find(status_folder_rollcheckstuns,v.Name) then 
                            v:Destroy()
                        end
                    end
                    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                        if table.find(character_rollcheckstuns,v.Name) then 
                            v:Destroy()
                        end
                    end
                end
                if ourfolder:FindFirstChild('Cooldowns') then 
                    for i,v in pairs(ourfolder:FindFirstChild('Cooldowns'):GetChildren()) do 
                        if table.find(cooldown_folder_rollcheckstuns,v.Name) and v.Name ~= 'RollCD' then 
                            v:Destroy()
                        end
                    end
                end
            end
            remove_rollstuns()


            task.spawn(function()
                -- if ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD') then 
                --     local args = {
                --         [1] = "Up"
                --     }
                --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                --     local args = {
                --         [1] = "Down"
                --     }
                --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                --     local args = {
                --         [1] = "Hold"
                --     }
                --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                    
                --     task.wait(0.2)--// _taskwait
                --     local args = {
                --         [1] = "Up"
                --     }
                --     game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
                -- else

                -- end

                local inputManager = game:GetService('VirtualInputManager')
                inputManager:SendKeyEvent(true,Enum.KeyCode.Q,false,game)
                inputManager:SendKeyEvent(false,Enum.KeyCode.Q,false,game)
                if getgenv().fw3localFw3['rollblatant'] == true then 
                    task.wait(.05)
                else
                    if getgenv().fw3localFw3['randomrollcanceldelay'] == true then 
                        randomint = Random.new()
                        randomint = randomint:NextNumber(0.05,0.2)
                        task.wait(randomint) -- math.random(1,2)/10
                    else
                        task.wait(.2)
                    end
                end
                if getgenv().fw3localFw3['rollcancel'] == true then 
                    local shouldfeint = false
                    shouldfeint = math.random(1,2)
                    --if getgenv().fw3localFw3['randomrollcanceldelay'] == true and shouldfeint == 2 then return end
                    local m = game.Players.LocalPlayer:GetMouse();
                    inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                    inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                end

            end)

            -- keypress(0x51)
            -- task.wait(.001)
            -- keyrelease(0x51)
            -- task.wait(0.07)
            -- mouse2click()
            -- mouse2release()
            

        end)
    end

    getgenv().useHeavy = function()

        workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.R:FireServer('Down')
        
        workspace.Characters:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.R:FireServer('Up')
    end


    getgenv().usestrongleft = function()
        pcall(function()
            game:GetService("Players").LocalPlayer.Backpack["Strong Left"].RemoteEvent:FireServer('Activate')
        end)
    end

    getgenv().holdparry = function()
        local args = {
            [1] = "Down"
        }
        game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
        local args = {
            [1] = "Hold"
        }
        game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))
        
    end

    getgenv().releaseparry = function()
        local args = {
            [1] = "Up"
        }
        game:GetService("Players").LocalPlayer.Character.CharacterHandler.F:FireServer(unpack(args))   
    end


    getgenv().buttonUp = false
    game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
        getgenv().buttonUp = true
    end)
    game.Players.LocalPlayer:GetMouse().Button1Up:Connect(function()
        getgenv().buttonUp = false
    end)


    local rollMoves = {
        'Strong Left';
    }
    local StunRecognisers = {
        'Stun1';
        'Stun';
        'RollCD';
    }


    local function detect(v,dect)
        local x = false
        if v:FindFirstChild('Humanoid') then 
            for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                if anim.Animation.AnimationId == dect then
                    x =  true
                end
            end
        end

        return x
    end
     
    local function waitUntilLeft(info)
        task.spawn(function()
            -- if info.charType == 'player' then 
            --     repeat task.wait(5); until not game.Players:FindFirstChild(info.user)
            --     info.func:Disconnect()
            -- end
            -- if info.charType == 'npc' then 
            --     repeat task.wait(5); until not game.Workspace.Characters:FindFirstChild(info.user)
            --     info.func:Disconnect()
            -- end
            -- local disconnectedfunction = false
            -- task.spawn(function()
            --     repeat task.wait(.1) until getgenv().loopsUnload == true
            --     disconnectedfunction = true
            --     info.func:Disconnect()
            -- end)
            -- if game.Players:FindFirstChild(info.user) then 
            --     repeat task.wait(5); until not game.Players:FindFirstChild(info.user) or disconnectedfunction == true
            -- else
            --     repeat task.wait(5); until not workspace.Characters:FindFirstChild(info.user) or disconnectedfunction == true
            -- end

            -- info.func:Disconnect()
            -- charType == 'player'
        end)
    end
    local function checkCrit(v)
        if v:FindFirstChild('Right Arm') and v:FindFirstChild('Right Arm'):FindFirstChild('ManaTrail')  or v:FindFirstChild('Torso') and v:FindFirstChild('Torso'):FindFirstChild('Critical') or v:FindFirstChild('Torso') and v:FindFirstChild('Torso'):FindFirstChild('Critical2') or v:FindFirstChild('Torso') and v:FindFirstChild('Torso'):FindFirstChild('Critical1') then 
            return true;
        else
            return false;
        end
    end


    -- could make autoparry wait windup time then parry. its what hog rider does
    -- windup for swing/attack, etc is an animation
    -- or check when the animation is slowed ig
    local function getmobrollwaittime()

    end



    getgenv().ParryObjects = {}

    local function loopobjects(obj)
        local x = false
        for _,v in next, getgenv().ParryObjects do 
            if obj == v then 
                x = true
            end
        end
        return x
    end

    local lastktick = tick()
    local alreadyticked = false
    local MOUSEDOWNCONNECTION = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
        if k == 'k' then 
            if math.abs(tick()-lastktick) < 0.2 then 
                if alreadyticked == true then 
                    getgenv().WhitelistMode = 'Mobs'
                    alreadyticked = false
                else
                    getgenv().WhitelistMode = 'All'
                    alreadyticked = true 
                end
            else
                local hit = game.Players.LocalPlayer:GetMouse().Target 
                if hit and hit.Parent and hit.Parent:FindFirstChild('Humanoid') then 
                    if game.Players:FindFirstChild(hit.Parent.Name) then -- if not could set it to mob
                        getgenv().WhitelistMode = hit.Parent.Name
                    else
                        getgenv().WhitelistMode = 'Mobs'
                    end
                end
            end
            lastktick = tick()
            Whitelist:Set(getgenv().WhitelistMode)
        end
    end)

    local function findanimation(v,dect)
        local x = false
        if v:FindFirstChild('Humanoid') then 
            for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                if anim.Animation.AnimationId == dect then
                    x = true
                end
            end
        end
        return x
    end

    getgenv().ParryAct = function(v)--,hiting value;
        -- aztup detects the maximum range you can get hit in
        -- function to print distance on how far you are from the enemy to check the maximum range that you wont get hit in
        print('using parryct')
        
        if getgenv().WhitelistMode ~= 'All' and getgenv().WhitelistMode~='Mobs' and getgenv().WhitelistMode ~= v.Name then print('whitelist mode return '..v.Name) return end
        if getgenv().WhitelistMode=='Mobs' then 
            if not v:FindFirstChild('Talents') then return end
        end
        local ping_adjustment = 0
        local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 
        --// smaller = larger wait time, higher = smaller
        local normalWait = 0.087
        local _taskwait = getping/1784*(getping/1250) + normalWait-- 0.107 = ping adjust 40 or ->  40/1484*40/10

        local IsBehindPlayer =false;

        local function findparryobject(x)
            local xvalue = false
            for _v,v in next, getgenv().ParryObjects do 
                if v == x then 
                    xvalue = true 
                    break
                end
            end
            return xvalue
        end
        


        if getgenv().fw3localFw3['parryfacingforward'] then

            print('parryfacingforward is true')
            local FromTheirPosition = v.HumanoidRootPart.Position
            local ToOurPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local Direction = ToOurPosition-FromTheirPosition
            local Ray = Ray.new(FromTheirPosition,Direction);



            -- local InTheRay,PositionRay = workspace:FindPartOnRayWithIgnoreList(Ray, {v})
            -- print(PositionRay)
            -- local rPart =Instance.new('Part',workspace.DebrisParts);
            -- task.spawn(function()
            --     task.wait(5);rPart:Destroy()
            -- end)
            -- rPart.Position = Vector3.new(PositionRay);
            -- local nl = Instance.new('Highlight',rPart)
            -- if InTheRay then 
            --     print(InTheRay.Name)
            --     if InTheRay.Parent then 
            --         if InTheRay.Parent.Name == game.Players.LocalPlayer.Character.Name then 
            --             IsBehindPlayer = true
            --         end
            --     end
            -- end




            local raycastResult,Position = workspace:Raycast(FromTheirPosition, v.HumanoidRootPart.CFrame.lookVector * -getgenv().Distance )-- Direction
            if raycastResult then 
                -- print(Position)
                -- print(raycastResult.Instance) -- put a highlight
                if raycastResult.Instance.Parent == game.Players.LocalPlayer.Character then 
                    IsBehindPlayer = true
                end
            end
        end
        if IsBehindPlayer == true then return end

        if getgenv().fw3localFw3['delayManager'] == true then 
            task.wait(_taskwait)
        else
            task.wait(0.087)
        end

        local enemyfolder = game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name)
        local is_mob = v:FindFirstChild('Talents'); print('ismob = '..tostring(is_mob))
        if is_mob and v:FindFirstChild('Spear') then 
            is_mob = nil 
        end
        if is_mob and v:FindFirstChild('HeadReal') then 
            is_mob = 'squibbo' 
        end
        local is_prima = false
        local is_rapier = false
        local just_feinted = false
        local cantParry = false
        local dontparry = false
        local tickwait = 0 
        local cancelAll = false
        print('attacking')
        local strongleft = 0 


        local function detect(v,dect)
            local x = false
            if cancelAll == false and v:FindFirstChild('Humanoid') then 
                for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                    if anim.Animation.AnimationId == dect then
                        x =  true
                    end
                end
            end
            if cancelAll == true then 
                --print('didnt parry '..dect..' because cancel all was already true')
            end
    
            return x
        end

        local stuns = {
            'Stun1';
            'Stun';
            'ParryStun';
        }
        local function checkStun()
            local x = false
            if ourfolder:FindFirstChild('StatusFolder') then 
                for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                    if table.find(stuns,v.Name) then x = true; end
                end
            end
            return x
        end
        local function removeFeintCD()
            if ourfolder:FindFirstChild('Cooldowns') and ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('FeintCD') then 
                ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('FeintCD') :Destroy()
                --print('remove feint called didnt remove cuz new update to prevent feint spam but i could detect if the person that is attacking just fnt')
            end
        end


        local status_folder_rollcheckstuns  ={
            'Stun';
            'Stun1';
            'Stun2';
            'Flourish';
            'Dazed';
            'Hitting';
            'ParryCD';
            
        }
        local cooldown_folder_rollcheckstuns  ={
            'RollCD';
            
        }
        local character_rollcheckstuns = {
            'Parry';
        }

        local function remove_rollstuns()
            if ourfolder:FindFirstChild('StatusFolder') then 
                for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                    if table.find(status_folder_rollcheckstuns,v.Name) then 
                        v:Destroy()
                    end
                end
                for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do 
                    if table.find(character_rollcheckstuns,v.Name) then 
                        v:Destroy()
                    end
                end
            end
            if ourfolder:FindFirstChild('Cooldowns') then 
                for i,v in pairs(ourfolder:FindFirstChild('Cooldowns'):GetChildren()) do 
                    if table.find(cooldown_folder_rollcheckstuns,v.Name) and v.Name ~= 'RollCD' then 
                        v:Destroy()
                    end
                end
            end
        end

        if statusFolder:FindFirstChild('Hitting') then 
            getgenv().M2()
            task.delay(0.05,function()
                removeFeintCD()
                remove_rollstuns()
            end)
        end
        -- if ourfolder:FindFirstChild('Cooldowns') and ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('M1') then 
        --     getgenv().M2()
        --     task.delay(0.05,function()
        --         removeFeintCD()
        --         remove_rollstuns()
        --     end)
        -- end
        -- if ourfolder:FindFirstChild('Cooldowns') and ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('M2') then 
        --     getgenv().M2()
        --     task.delay(0.1,function()
        --         removeFeintCD()
        --         remove_rollstuns()
        --     end)
        -- end

        local AnimationDetectables = {
            ['Sword'] = {
                IDS = {
                    ['rbxassetid://etc'] = {timing = 0.1}
                }
            }
        }



        
        local function removeStuns()
            if ourfolder:FindFirstChild('StatusFolder') then 
                for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                    v:Destroy()
                    --print('-- DESTROYED BECAUSE FEINTED')
                end
            end
            if game.Players.LocalPlayer.Character:FindFirstChild('Torso') then --  BallSocketConstraint
                if game.Players.LocalPlayer.Character:FindFirstChild('Torso'):FindFirstChild('RagdollAttachment') and getgenv().fw3localFw3['m2WhenRagdolled'] == true then 
                    getgenv().M2()
                end
            end
        end
        local ParryCritExlusions = {-- the anims we will parry ourselves
            'rbxassetid://13047366938';
            'rbxassetid://8787495611';
            'rbxassetid://10022838306';
            'rbxassetid://11859752490';
        }
        local Excluded = false
        for i,anims in next, ParryCritExlusions do 
            if detect(v,anims) then 
                Excluded = true 
            end
        end
        if v:FindFirstChild('Torso')  then -- and Excluded == false
            if v:FindFirstChild('Right Arm') and v:FindFirstChild('Right Arm'):FindFirstChild('ManaTrail') or v:FindFirstChild('Torso'):FindFirstChild('Critical') or v:FindFirstChild('Torso'):FindFirstChild('Critical2') or v:FindFirstChild('Torso'):FindFirstChild('Critical1') then 
                removeStuns()
                print('ye')
                task.wait()
                if v:FindFirstChild('Right Arm'):FindFirstChild('ManaTrail') then 
                    task.wait(0.23) -- 0.2
                else
                    task.wait(0.2) -- 0.2
                end
                for i,anims in next, ParryCritExlusions do 
                    if detect(v,anims) then 
                        Excluded = true 
                    end
                end
                dontparry = true
                cancelAll = true
                if Excluded == true then cancelAll = false; dontparry = false; end
                print('trying to parry crit')
                if detect(v,'rbxassetid://8787495611') and Excluded == false then -- i think it depends on the sword so i might do a sword check  -- excluded it
                    task.wait(.2) -- .2
                    getgenv().parry()
                elseif detect(v,'rbxassetid://10022838306') and Excluded == false then  --  or detect(v,'rbxassetid://10876826705') and Excluded == false
                    task.wait(.3)
                    getgenv().parry()
                elseif detect(v,'rbxassetid://10876826705') then --greatsword crit
                    task.wait(.8)
                    getgenv().parry()
                elseif detect(v,'rbxassetid://11859752490   X')  then  -- and Excluded == false COULD MAKE IT SHARE THE SAME FOR ENFORCER ILL TRY IT RYNNNN
                    print('spin crit log')
                    task.wait(.3)
                    getgenv().parry()
                    repeat 
                        task.wait(.2)
                        getgenv().parry()
                    until not findanimation(v,'rbxassetid://11859752490')
                    -- task.wait(.2)
                    -- getgenv().parry()
                    -- task.wait(.2)
                    -- getgenv().parry()
                    -- task.wait(.2)
                    -- getgenv().parry()
                    -- task.wait(.2)
                    -- getgenv().parry()
                elseif detect(v,'rbxassetid://10234795108') and Excluded == false  then 
                    repeat 
                        task.wait(.5)
                        getgenv().fastparry()
                        getgenv().quickfinishparry()
                        -- task.wait(.5)
                        -- getgenv().fastparry()
                        -- getgenv().quickfinishparry()
                        -- task.wait(.5)
                        -- getgenv().fastparry()
                        -- getgenv().quickfinishparry()
                        -- task.wait(.5)
                        -- getgenv().fastparry()
                        -- getgenv().quickfinishparry()
                        -- task.wait(.5)
                        -- getgenv().fastparry()
                        -- getgenv().quickfinishparry()
                    until not findanimation(v,'rbxassetid://10234795108')

                -- elseif detect(v,'rbxassetid://13047366938') then -- jus karita
                --     task.wait(1)
                --     getgenv().parry()
                -- elseif detect(v,'rbxassetid://12457389891') then --sharko crit
                --     task.spawn(function()
                --         repeat 
                --             task.wait(0.1)
                --             getgenv().fastparry()
                --         until not detect(v,'rbxassetid://12457389891')
                --     end)
                else
                    if Excluded == false then 
                        getgenv().parry()
                    end
                end
                if Excluded == false then 
                    getgenv().quickfinishparry()
                end
                task.wait()
            end
        end


        if dontparry == true then cancelAll = true end







        local function getRoll_Time() -- could make this function for all of them
            -- so dagger would just be getWaitTime() instead of detecting anims
            local roll_wait = getgenv().fw3localFw3['rolldelay']
            -- if v:FindFirstChild('Dagger') then 
            --     roll_wait = 0.5
            -- end
            if v:FindFirstChild('Strong Left') then return getgenv().fw3localFw3['rolldelay'] end
            if v:FindFirstChild('Pistol') then 
                roll_wait = 0.05
            end
            if v:FindFirstChild('Fists') then 
                roll_wait = 0.05
            end
            if v:FindFirstChild('Dagger') then 
                roll_wait = 0.05
            end
            if v:FindFirstChild('Spear') then 
                roll_wait = 0.05
            end
            if v:FindFirstChild('Katana') then 
                roll_wait = 0.05
            end
            if v:FindFirstChild('Battleaxe') then 
                roll_wait = 0.06
            end
            print(roll_wait..' rollwait')
            return roll_wait
        end
        local function getnotRollOn()
            local roll_wait = true
            -- if v:FindFirstChild('Dagger') then 
            --     roll_wait = false
            -- end
            return roll_wait
        end
        local function getRoll_Time2() -- could make this function for all of them
            -- so dagger would just be getWaitTime() instead of detecting anims
            local roll_wait = nil
            if v:FindFirstChild('Dagger') then 
                roll_wait = 'daggertiming'
            end
            return roll_wait
        end
        local function getRoll_Complicated() -- could make this function for all of them
            -- so dagger would just be getWaitTime() instead of detecting anims
            local roll_wait = false
            if v:FindFirstChild('Dagger') then 
                roll_wait = true
            end
            return roll_wait
        end
        local roll_timings = {
            ['daggertiming'] = {
                wait_roll = 0.05
            }
        }

        local endautoparry = false
        local feintedattack = false

        --task.spawn(function()
            --cancelAll = true
            
        -- local stopcheckingfeint = false
        -- repeat 
        --     task.wait()
        --     strongleft += 0.5
        --     -- print('yee')
        --     removeStuns()
        --     if enemyfolder:FindFirstChild('Cooldowns') and cooldowns then  
        --         -- print(loopobjects(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD')))  not cooldowns:FindFirstChild('RollCD')  and not cooldowns:FindFirstChild('RollCD') and
        --         if  enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD') and loopobjects(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD')) == false or  enemyfolder:FindFirstChild('Cooldowns'):FindFirstChild('FeintCD') and loopobjects(enemyfolder:FindFirstChild('Cooldowns'):FindFirstChild('FeintCD')) == false then
        --             print('feinted'); cantParry = true; rolling = true; cancelAll = true; removeStuns(); strongleft = 1.5; -- or just stop the script from running further
        --             feintedattack = true
        --             table.insert(getgenv().ParryObjects, enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD'))
        --             --endautoparry = true
        --             if getgenv().fw3localFw3['swingthroughfeint'] == true then 
        --                 getgenv().M1()
        --             else
        --                 getgenv().M2()  
        --                 local finishedtick = 0
        --                 local endloop = false
        --                 repeat  
        --                     task.wait(0.01)
        --                     finishedtick += 0.1
        --                     if finishedtick >= 2.5 then 
        --                         endloop = true
        --                     end
        --                     -- and enemy statusfolder hitting value isnt the hitting value passed with parryact
        --                 until finishedtick >= 1.6 or not enemyfolder:FindFirstChild('StatusFolder') or enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting') and not findparryobject(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting'))

        --                 --[[
        --                     maybe put the hitting instance as a parameter so we can see if a different one is added
        --                 if enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting') and not findparryobject(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting')) and enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD') and not findparryobject(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('enemyfolder:FindFirstChild('Cooldowns'):FindFirstChild('Hitting') and not findparryobject(enemyfolder:FindFirstChild('Cooldowns'):FindFirstChild('Hitting'))')) then 
        --                 --]]

        --                 -- could check if it detects another feint different from the one inside parryobjects along with hitting

        --                 -- cant just unregister hitting and put it inside parry objects because if you attack again it wont create a different value nvm each time you swing it creates hitting
        --                 --[[
        --                     game:GetService("ReplicatedStorage").CharacterData.xiMilxy.StatusFolder.ChildAdded:Connect(function(CHILD)
        --                         print(CHILD.Name)
        --                     end)

        --                 --]]


        --                 -- what if enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting') was nil and it would check objects
        --                 -- since its nil the object in parryobjects might be nil
        --                 -- so it might find another nil object
        --                 -- essenitally doing if nil == nil
        --                 if endloop == true then 
        --                     removeStuns()
        --                     cantParry = false; rolling = false; cancelAll = false;
        --                 else
        --                     -- if getgenv().fw3localFw3['rollonfeint'] and is_mob == nil then 
        --                     --     stopcheckingfeint = true -- if roll cd then block if blockwhencantfeint
        --                     --     task.spawn(function()
        --                     --         print('s1')
        --                     --         remove_rollstuns()
        --                     --         removeStuns()
        --                     --         local ItemAttackTime = getRoll_Time()
        --                     --         -- or just parryact but use a roll
        --                     --         -- getgenv() value called hasfeinted
        --                     --         -- set to true and then parry will read if its true to roll
        --                     --         print('s2')
        --                     --         print('sike '..ItemAttackTime)
        --                     --         task.wait( ItemAttackTime )

        --                     --         print('s3')
        --                     --         -- for _ind,animselection in next, AnimationDetectables do 
        --                     --         --     if detect(v,animselection['id']) then 
        --                     --         --         task.wait( animselection['wait_until_parry'] )
        --                     --         --     end
        --                     --         -- end


        --                     --         -- if getRoll_Time2() ~= nil then 
        --                     --         --     task.wait(roll_timings[getRoll_Time2()]['wait_roll'])
        --                     --         -- end
        --                     --         --task.wait(getgenv().fw3localFw3['rolldelay']) -- if mob then wait like 0.2 more or just dont roll
        --                     --         -- if getRoll_Complicated() == true then  -- true = dagger, nil = sword etc
        --                     --         --     task.wait(0.05)
        --                     --         -- else

        --                     --         --     task.wait(getgenv().fw3localFw3['rolldelay'])
        --                     --         -- end
        --                     --         if getnotRollOn() == true then 
        --                     --             removeStuns()
        --                     --             remove_rollstuns()
        --                     --             getgenv().roll() 
        --                     --             removeStuns()
        --                     --             remove_rollstuns()
        --                     --         else
        --                     --             getgenv().quickfinishparry()
        --                     --         end
        --                     --         if getgenv().fw3localFw3['logfeints'] then 
        --                     --             logIt('AZFAKE-SERVER'..' x Rolled;(due to feint)','AZFAKE-SERVER')
        --                     --         end
        --                     --     end)

        --                     --     -- stopcheckingfeint = true
        --                     -- elseif getgenv().fw3localFw3['rollonfeint'] then
        --                     --     if is_mob == 'squibbo' then 
        --                     --         stopcheckingfeint = true
        --                     --         remove_rollstuns()
        --                     --         removeStuns()
        --                     --         task.wait(0.2)
                                    
        --                     --         remove_rollstuns()
        --                     --         removeStuns()
        --                     --         getgenv().roll() 
        --                     --         removeStuns()
        --                     --         remove_rollstuns()
        --                     --     end
        --                     -- end
        --                     if cooldowns:FindFirstChild('RollCD') then 
        --                         print('on roll cooldown feinted')
        --                     end
        --                     -- if hitting is a number value to wait until parry then we can just wait the value assigned to it instead of doing animations
        --                     if not cooldowns:FindFirstChild('RollCD') and getgenv().fw3localFw3['rollonfeint'] == true and enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting') and not findparryobject(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting')) and not findparryobject(enemyfolder:FindFirstChild('Cooldowns'):FindFirstChild('FeintCD')) then 
        --                         cantParry = false; rolling = false; cancelAll = false;-- endautoparry = true;
        --                         getgenv().fw3localFw3['rollnotparry'] = true
        --                         print('feinted')
        --                         table.insert(getgenv().ParryObjects,enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting'))
        --                         getgenv().quickfinishparry ()
        --                     -- elseif cooldowns:FindFirstChild('RollCD') and getgenv().fw3localFw3['rollonfeint'] == true and not findparryobject(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting')) an then 
        --                     --     getgenv().quickfinishparry ()
        --                     --     cantParry = false; rolling = false; cancelAll = false; --endautoparry = true;
        --                     --     getgenv().fw3localFw3['rollnotparry'] = false
        --                     --     print('feinted but parry')
        --                     --     table.insert(getgenv().ParryObjects,enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('Hitting'))
        --                     end
        --                     if getgenv().fw3localFw3['rollonfeint'] == false then 
        --                         cantParry = true; rolling = true; cancelAll = true; 
        --                         print('feinted roll is false so cancelling further action')
        --                         endautoparry = true
        --                         getgenv().quickfinishparry ()
        --                     end
        --                 end
        --             end
        --         else 
        --             if cooldowns:FindFirstChild('RollCD') then 
        --                 -- cancelAll = false 
        --                 -- cantParry = false; rolling = false; 
        --                 print('cant roll')
        --             end
        --             cancelAll = false 
        --             -- cantParry = false; rolling = false; 
        --             -- print('sta1'..tostring(cooldowns:FindFirstChild('RollCD')))
        --             -- print('sta2'..tostring(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD')))
        --             -- print('sta3'..tostring(loopobjects(enemyfolder:FindFirstChild('StatusFolder'):FindFirstChild('FeintCD'))))
        --         end 
        --     end -- cancelAll = true; -- print('setto false')
        -- until strongleft == 1.5 or stopcheckingfeint == true or endautoparry == true
        -- --end)


        local cooldownconnection = enemyfolder:FindFirstChild('Cooldowns').ChildAdded:Connect(function(coolchild)
            if coolchild.Name == 'FeintCD' then 
                feintedattack = true
                cancelAll = true
                getgenv().fw3localFw3['parryhasfeintedsonoparry'] = true
                print('FeintCD detected')
                getgenv().quickfinishparry ()
                getgenv().M2()
                if getgenv().fw3localFw3['rollonfeint'] == true then
                    getgenv().fw3localFw3['set_to_roll_before_parry'] = true
                end
                pcall(function()
                    cooldownconnection:Disconnect()
                end)
            end
        end)
        local statusconnection = enemyfolder:FindFirstChild('StatusFolder').ChildAdded:Connect(function(coolchild) -- mobs
            if coolchild.Name == 'FeintCD' then 
                feintedattack = true
                cancelAll = true
                getgenv().fw3localFw3['parryhasfeintedsonoparry'] = true
                print('FeintCD detected')
                getgenv().quickfinishparry ()
                getgenv().M2()
                if getgenv().fw3localFw3['rollonfeint'] == true then
                    getgenv().fw3localFw3['set_to_roll_before_parry'] = true
                end
                pcall(function()
                    statusconnection:Disconnect()
                end)
            end
        end)


        removeStuns()

        if endautoparry == true or feintedattack == true then 
            print('end auto 1')
            return
        end
        if endautoparry == true then 
            print('end auto 2')
        end
        -- strong left
        if detect(v,'rbxassetid://9912709174') then 
            print('strong left.')
            -- removeStuns()
            task.wait(.1)
            if not detect(v,'rbxassetid://9912709174') then 
                return
            end
            -- if checkStun() then getgenv().roll()
            -- else
            --     getgenv().parry()
            --     removeStuns()
            --     task.wait()
            --     getgenv().fastparry()
            -- end
            -- removeStuns()
            getgenv().parry()
            cancelAll = true
        end


        if detect(v,'rbxassetid://8688521045') and cancelAll == false then -- sharko kick
            task.wait(.25)
            getgenv().roll()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://8687295215') and cancelAll == false then -- sharko spray
            task.wait(.1)
            getgenv().fastparry()
            cancelAll = true
            repeat 
                getgenv().fastparry()
                removeStuns()
                task.wait(0.01)
            until detect(v,'rbxassetid://8687295215') == false
            
        end 
        if detect(v,'rbxassetid://8690838357') and cancelAll == false then -- sharko roar radius circle move?
            task.wait(.1)
            getgenv().fastparry()
            cancelAll = true
            repeat 
                getgenv().fastparry()
                removeStuns()
                task.wait(0.01)
            until detect(v,'rbxassetid://8690838357') == false
            
        end 

        if detect(v,'rbxassetid://8680523972') and cancelAll == false then -- sharko swing
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://8686839894') and cancelAll == false then -- sharko swing 2
            task.wait(.15)
            getgenv().parry()
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end  
        --rbxassetid://8680523972 -- swing 1 sharko
        --rbxassetid://8686839894 -- swing 2 sharko
        -- 

        if detect(v,'rbxassetid://9137450354') and cancelAll == false then -- triple stomp rbxassetid://9137450354
            task.wait(.4)
            getgenv().parry()
            -- getgenv().quickfinishparry()
            task.wait(.29) -- 25
            getgenv().parry()
            -- getgenv().quickfinishparry()
            task.wait(.2)
            getgenv().parry()
            -- getgenv().quickfinishparry()
            cancelAll = true
            print('tsp')
        end
        if detect(v,'rbxassetid://9145941681') and cancelAll == false then --roll prima
            task.wait(.53)
            getgenv().roll()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://9145238578') and cancelAll == false then -- stomp
            task.wait(.35)
            getgenv().parry()
            cancelAll = true
        end





        if v:FindFirstChild('Body') and v:FindFirstChild('Body'):FindFirstChild('LeftPelvis') then 
            is_prima = true
        end




        if detect(v,'rbxassetid://10096299376') and cancelAll == false then -- squibbo stream
            task.wait(.2)
            getgenv().roll()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://10098630808') and cancelAll == false then -- squibbo flipkick
            task.wait(.2)
            getgenv().roll()
            cancelAll = true
        end   

        -- squibbo stream rbxassetid://10096299376; squibbo flipkick rbxassetid://10098630808



        if detect(v,'rbxassetid://9995036867') and cancelAll == false then -- owl rush
            task.wait(.2)
            getgenv().fastparry()
            cancelAll = true
            repeat 
                getgenv().fastparry()
                removeStuns()
                task.wait(0.01)
            until detect(v,'rbxassetid://9995036867') == false
        end 
        -- owl rush rbxassetid://9995036867

        -- owl swing 1 rbxassetid://9984057511

        if detect(v,'rbxassetid://9984057511') and cancelAll == false then -- owl swing 1
            task.wait(.23)
            getgenv().parry()
            cancelAll = true
        end   


        if detect(v,'rbxassetid://9983925053') and cancelAll == false then -- owl swing 2 
            task.wait(.23)
            getgenv().parry()
            cancelAll = true
        end   

        -- owl swing 2 rbxassetid://9983925053



        if detect(v,'rbxassetid://10369504335') and cancelAll == false then --aelita sing
            getgenv().roll()
            cancelAll = true
        end   


        -- aelita sing rbxassetid://10369504335


        -- angel 3 thrust rbxassetid://11544020777


        if detect(v,'rbxassetid://11544020777') and cancelAll == false then --angel 3 thrust 
            task.wait(.15)
            repeat
                getgenv().parry()
                removeStuns()
                task.wait(.15)
                getgenv().parry()
                removeStuns()
                task.wait(.15)
                getgenv().parry()
                removeStuns()
            until detect(v,'rbxassetid://11544020777') == false
            cancelAll = true
        end  

        if is_prima then cancelAll = true end


        if just_feinted then cancelAll = true end

        if v:FindFirstChild('Rapier') then is_rapier = true end

        if detect(v,'rbxassetid://10225217835') and cancelAll == false then   -- rapier1
            task.wait(.1)
            if checkStun() then getgenv().roll()
            else
                getgenv().parry()
                removeStuns()
                task.wait()
                getgenv().fastparry()
            end
            removeStuns()
            cancelAll = true
            -- task.wait(0.1)
            -- removeStuns()
            -- getgenv().fastparry()
            -- removeStuns()
            -- getgenv().fastparry()
            -- cancelAll = true
            -- removeStuns()
        end
        if detect(v,'rbxassetid://10225390984') and cancelAll == false then --rapier2
            task.wait(.1)
            if checkStun() then getgenv().roll()
            else
                getgenv().parry()
                removeStuns()
                task.wait()
                getgenv().fastparry()
            end
            removeStuns()
            cancelAll = true
            -- task.wait(0.1)
            -- removeStuns()
            -- getgenv().fastparry()
            -- removeStuns()
            -- getgenv().fastparry()
            -- cancelAll = true
            -- removeStuns()
        end

        --[[
            axe anims
            rbxassetid://10013909049 -- swing 1
            rbxassetid://10013911426 -- swing 2
            rbxassetid://10013915154 -- swing 3
            ^ two hand ^


            one hand:
            rbxassetid://10013909049 -- swing 1
            rbxassetid://10013911426 -- swing 2
            rbxassetid://10013915154 -- swing 3
        ]]



        if detect(v,'rbxassetid://10013909049') and cancelAll == false then -- axe swing 1
            task.wait(.17)
            -- if not detect(v,'rbxassetid://10013909049') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://10013911426') and cancelAll == false then -- axe swing 12
            task.wait(.17)
            -- if not detect(v,'rbxassetid://10013911426') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://10013915154') and cancelAll == false then -- axe swing 3
            task.wait(.17)
            -- if not detect(v,'rbxassetid://10013915154') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://10013919534') and cancelAll == false then -- axe run swing
            task.wait(.15)
            -- if not detect(v,'rbxassetid://10013919534') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://10022838306') and cancelAll == false then -- axe crit
            print('DOING AXE CRIT')
            task.wait(.3)
            getgenv().parry()
            cancelAll = true
        end

        -- pistol rbxassetid://8787495611 (not done)





        -- if detect(v,'rbxassetid://10022838306') and cancelAll == false then 
        --     task.spawn(function()
        --         removeStuns()
        --         task.wait(5.4)
        --         getgenv().parry()
        --         cancelAll = true
        --     end)
        -- end   
        -- if detect(v,'rbxassetid://10876826705') and cancelAll == false then 
        --     task.spawn(function()
        --         removeStuns()
        --         task.wait(5.4)
        --         getgenv().parry()
        --         cancelAll = true
        --     end)
        -- end   


        -- rbxassetid://10022838306 axe crit
        -- greatsword crit rbxassetid://10876826705


        -- bell rbxassetid://10974528182 slam 1 big greatswird
        --[[ 
            new 1 : rbxassetid://12684972344
            new 2: rbxassetid://12684978333
            new 3: rbxassetid://12684981181
            rbxassetid://10974684486 2
            rbxassetid://11286554002 3
            rbxassetid://10976188963 4

        --]]

        if detect(v,'rbxassetid://12684972344') and cancelAll == false then 
            task.wait(.32)
            getgenv().roll()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://12684978333') and cancelAll == false then 
            task.wait(.32)
            getgenv().roll()
            cancelAll = true
        end   
        if detect(v,'rbxassetid://12684981181') and cancelAll == false then 
            task.wait(.38)
            getgenv().roll()
            cancelAll = true
        end   
        -- if detect(v,'rbxassetid://10976188963') and cancelAll == false then 
        --     task.wait(.5)
        --     getgenv().roll()
        --     cancelAll = true
        -- end   

        -- geatsword swing 1 rbxassetid://10787560419
        -- greatsword swing 2 rbxassetid://10873957240


        if detect(v,'rbxassetid://10787560419') and cancelAll == false then 
            task.wait(.2)
            -- if not detect(v,'rbxassetid://10787560419') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://10873957240') and cancelAll == false then 
            task.wait(.2)
            -- if not detect(v,'rbxassetid://10873957240') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://10771933209') and cancelAll == false then -- greatsword runswing
            task.wait(.4)
            -- if not detect(v,'rbxassetid://10771933209') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  


        
        -- rbxassetid://10968567648 -- vent out -- could detect  vent in debrisparts to see if its close
        -- vent in rbxassetid://10878360726

        if detect(v,'rbxassetid://10878360726')  then -- and cancelAll == false vent
            task.spawn(function()
                local isJumpingOut = false 
                repeat task.wait()
                    if detect(v,'rbxassetid://12123375791') then isJumpingOut = true end -- DodgeRing
                    if not v:FindFirstChild('HumanoidRootPart') then isJumpingOut = true end
                until v:FindFirstChild('HumanoidRootPart'):FindFirstChild('DodgeRing') or isJumping == true--until v:FindFirstChild('HumanoidRootPart').Visible == true
                
                if isJumpingOut == false then 
                    --rconsoleprint('thresher roll')
                    task.wait(.45)
                    getgenv().roll()
                end

            end)
            task.spawn(function()
                -- repeat 
                --     task.wait(0.1)
                -- until detect(v,'rbxassetid://10968567648') == true 
                -- task.wait(.15)
                -- getgenv().roll()
            end)

            cancelAll = true
        end 

        -- if detect(v,'rbxassetid://10968567648')  then -- and cancelAll == false
        --     task.wait(.5)
        --     repeat 
        --         task.wait(0.1)
        --         removeStuns()
        --         getgenv().roll()
        --         removeStuns()
        --     until detect(v,'rbxassetid://10968567648') == false 
        --     cancelAll = true
        -- end   

        -- regular sword swing 1 rbxassetid://8698443433

        -- reg sword swing 2 rbxassetid://8699014368

        -- reg sword swing 1 two hand rbxassetid://9215215492

        -- reg sword swing 2 two hand rbxassetid://9255163830


        local function getWaitTime() -- could make this function for all of them
            -- so dagger would just be getWaitTime() instead of detecting anims
            local weaponwait = 0.2
            if v:FindFirstChild('Falchion') then 
                weaponwait = 0.1
            end
            if v:FindFirstChild('Scimitar') then 
                weaponwait = 0.05
            end
            if v:FindFirstChild('Katana') then 
                weaponwait = 0.05
            end
            if v:FindFirstChild('VigilLongsword') then 
                weaponwait = 0.1
            end
            if v:FindFirstChild('BaseSword') then 
                weaponwait = 0.1
            end
            if v:FindFirstChild('OfficerSaber') then 
                weaponwait = 0.1
            end
            return weaponwait
        end



        if detect(v,'rbxassetid://8698443433') and cancelAll == false then -- and distance < 15 
            task.wait( getWaitTime() )
            -- if not detect(v,'rbxassetid://8698443433') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://8699014368') and cancelAll == false then 
            task.wait( getWaitTime() )
            -- if not detect(v,'rbxassetid://8699014368') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://9215215492') and cancelAll == false then 
            task.wait( getWaitTime() )
            -- if not detect(v,'rbxassetid://9215215492') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://9255163830') and cancelAll == false then 
            task.wait( getWaitTime() )
            -- if not detect(v,'rbxassetid://9255163830') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://8779280417') and cancelAll == false then -- sword run swing
            task.wait(.15)
            -- if not detect(v,'rbxassetid://8779280417') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://9112351440') and cancelAll == false  then -- sword and spear aerual check what weapon they have though
            task.wait(.05)
            -- if not detect(v,'rbxassetid://9112351440') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end

        -- sword crit

        if detect(v,'rbxassetid://8787495611') and cancelAll == false  then 
            task.wait(.23)
            cancelAll = true 
            getgenv().parry()
            print('sword crit')
        end




        -- spear th 1 rbxassetid://11363516302
        -- spear th 2 rbxassetid://11363591881
        -- spear th oneh 1 rbxassetid://11404159898
        -- spear th oneh 2 rbxassetid://11404162476
        -- spear aerial rbxassetid://9112351440

        if detect(v,'rbxassetid://11363516302') and cancelAll == false then 
            task.wait(.1)
            -- if not detect(v,'rbxassetid://11363516302') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://11363591881') and cancelAll == false then 
            task.wait(.1)
            -- if not detect(v,'rbxassetid://11363591881') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://11404159898') and cancelAll == false then 
            task.wait(.1)
            -- if not detect(v,'rbxassetid://11404159898') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://11404162476') and cancelAll == false then 
            task.wait(.1)
            -- if not detect(v,'rbxassetid://11404162476') then 
            --     return
            -- end
            getgenv().parry()
            cancelAll = true
        end  


        -- enf kick rbxassetid://8924706624

        -- enf vortex rbxassetid://8917904390
        -- enf sw 1 rbxassetid://8916943692
        -- enf sw 2 rbxassetid://8917108290

        if detect(v,'rbxassetid://8924706624') and cancelAll == false then 
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
            --task.wait(.22)
            -- if checkStun() then task.wait(0.1); getgenv().roll()
            -- else
            --     getgenv().parry()
            --     removeStuns()
            --     task.wait()
            --     getgenv().fastparry()
            -- end
            -- removeStuns()

            cancelAll = true
        end  
        if detect(v,'rbxassetid://8916943692') and cancelAll == false then 
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://8917108290') and cancelAll == false then 
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end  
        
        -- rbxassetid://8917108290 swing 2
        if detect(v,'rbxassetid://8917904390') or detect(v,'rbxassetid://11859752490') then --  or detect(v,'rbxassetid://11859752490')
            print('vortex')
            task.wait(.8)
            --getgenv().parry()
            -- if checkStun() then getgenv().roll()
            -- else
            --     getgenv().roll()
            --     removeStuns()
            --     getgenv().parry()
            --     removeStuns()
            -- end
            removeStuns()
            cancelAll = true
            -- task.wait(.28)
            -- getgenv().parry()
            -- cancelAll = true
            repeat 
                -- print(findanimation(v,'rbxassetid://8917904390'))
                -- print(detect(v,'rbxassetid://11859752490'))
                getgenv().parry()
                -- getgenv().quickfinishparry()
                -- removeStuns()
                task.wait(0.01)
            until findanimation(v,'rbxassetid://8917904390') == false and findanimation(v,'rbxassetid://11859752490') == false
        end  


        -- NEW MOBS


        if detect(v,'rbxassetid://11946556384') then -- golem slash
            print('golem slash')
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end  
        
        if detect(v,'rbxassetid://11946771956') then -- golem slash 2
            print('golem slash 2')
            task.wait(.2)
            getgenv().parry()
            getgenv().quickfinishparry()
            task.wait(1)
            getgenv().parry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://11946104038') then -- golem roll
            remove_rollstuns()
            task.wait(.2)
            getgenv().roll()
            cancelAll = true 
        end  
        if detect(v,'rbxassetid://11926504584') then -- golem slam roll
            remove_rollstuns()
            task.wait(.15)
            getgenv().roll()
            cancelAll = true 
        end  


        if detect(v,'rbxassetid://12072370691') then -- thresher bite
           -- rconsoleprint('thresher bite 3 times')
            task.wait(.21)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            task.wait(.21)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            task.wait(.17)
            getgenv().fastparry()
            cancelAll = true
        end  

        if detect(v,'rbxassetid://12072618083') then -- thresher whip
            task.wait(.36)
            getgenv().parry()
            cancelAll = true
        end  

        if detect(v,'rbxassetid://12060686663') then -- thresher claws
            task.wait(.2)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            task.wait(.3)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            cancelAll = true
        end  
        if detect(v,'rbxassetid://12072719081') then -- thresher dig
            -- dig 
            if vs == 'debug' then 
                rconsoleprint('thresher dug')
            end

            task.spawn(function()
                local isJumpingOut = false 
                repeat task.wait()
                    if detect(v,'rbxassetid://12123375791') then isJumpingOut = true end -- DodgeRing
                until v:FindFirstChild('HumanoidRootPart'):FindFirstChild('DangerRing') or isJumping == true--until v:FindFirstChild('HumanoidRootPart').Visible == true
                
                if isJumpingOut == false then 
                    --rconsoleprint('thresher roll')
                    local getpos = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    repeat task.wait(0.001)
                        getpos = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    until getpos < 30--until v:FindFirstChild('HumanoidRootPart').Visible == true
                    
                    task.wait(.2)
                    getgenv().roll()
                end

            end)
            cancelAll = true 
        end  

        -- need to check if person is down and they head towards us with danger ring
        -- custom animation detects
        if detect(v,'rbxassetid://12073900338') then -- thresher stinky breath roll
            remove_rollstuns()
            task.wait(.25)
            getgenv().roll()
            cancelAll = true 
        end  
        if detect(v,'rbxassetid://12382673054') then -- thresher slam
            task.wait(.6)
            getgenv().parry()
            cancelAll = true 
        end  

        
        if detect(v,'rbxassetid://12776704665') then -- lionfish bites
            task.wait(.22)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            task.wait(.24)
            getgenv().fastparry()
            getgenv().quickfinishparry()
            task.wait(.22)
            getgenv().fastparry()
            -- getgenv().quickfinishparry()
            cancelAll = true
        end 
        if detect(v,'rbxassetid://12741306104') then 
            task.spawn(function()
                repeat 
                    task.wait(0.001)
                until not detect(v,'rbxassetid://12741306104')
                -- check if in range
                getgenv().roll()
            end)
            cancelAll = true
        end


        -- duke

        if detect(v,'rbxassetid://13583107119') then -- stomp duke
            task.wait(.5)
            getgenv().roll()
            cancelAll = true
        end

        -- new bell


        -- new fist anims


        -- way of navae

        if detect(v,'rbxassetid://13217644106') then -- punch 1
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13217809061') then -- punch 2
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13218081574') then -- punch 3
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13241762838') then -- punch 4
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://10558610693') then -- way of navae aerial   and legion kata fist 
            task.wait(.1)
            getgenv().parry()
            cancelAll = true 
        end
        if detect(v,'rbxassetid://9891303051') then -- way of navae run punch  and legion kata
            task.wait(.1)
            getgenv().parry()
            cancelAll = true 
        end
        if detect(v,'rbxassetid://13234414776') then -- way of navae stomp
            task.wait(.5)
            getgenv().parry()
            cancelAll = true 
        end
        -- rbxassetid://9891303051


        -- legon kata
        if detect(v,'rbxassetid://13049291895') then -- punch one
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13144191563') then -- punch two
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13144489543') then -- punch three
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13147163529') then -- punch four
            task.wait(.15)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://13047366938') then -- legon kata crit rbxassetid://13047366938
            --print('legion crit')
            if is_mob == false then 
                task.wait(.1)
                print('legion parry')
                getgenv().parry()
                cancelAll = true
            else
                task.wait(.01)
                print('legion roll')
                getgenv().roll()
                cancelAll = true
            end

        end

        if detect(v,'rbxassetid://9890788066') then -- fist anims from 1 to 4 cuz i never actually hardcoded them :skull: (1)
            task.wait(.1)
            getgenv().parry()
            cancelAll = true
        end

        if detect(v,'rbxassetid://9890790186') then -- fist anims from 1 to 4 cuz i never actually hardcoded them :skull: (1)
            task.wait(.1)
            getgenv().parry()
            cancelAll = true
        end
        
        if detect(v,'rbxassetid://9890792365') then -- fist anims from 1 to 4 cuz i never actually hardcoded them :skull: (1)
            task.wait(.1)
            getgenv().parry()
            cancelAll = true
        end
        
        if detect(v,'rbxassetid://9890796934') then -- fist anims from 1 to 4 cuz i never actually hardcoded them :skull: (1)
            task.wait(.1)
            getgenv().parry()
            cancelAll = true
        end

        if detect(v,'rbxassetid://9891303051') then -- fist anims from 1 to 4 cuz i never actually hardcoded them :skull: (1)
            task.wait(.2)
            getgenv().parry()
            cancelAll = true
        end
        if detect(v,'rbxassetid://9890800691') then -- fist anims crit cuz i never actually hardcoded them :skull: (1)
            task.wait(.36)
            getgenv().parry()
            cancelAll = true
        end

        
        -- fist 1 rbxassetid://9890788066
        -- fist 2 rbxassetid://9890790186
        -- fist 3 rbxassetid://9890792365
        -- fist 4 rbxassetid://9890796934
        -- fist run punch rbxassetid://9891303051


        -- HARDCODED GUNS/ NEED TO DO OFFHAND GUNS NEXT CUZ ITS NOT HARDCODED TIMINGS : forgot to do offhand b

        if detect(v,'rbxassetid://10206784771') then -- gun shoot 1 
            task.wait(.05)
            getgenv().parry()
            cancelAll = true
        end

        if detect(v,'rbxassetid://10206804975') then -- gun shoot 2
            task.wait(.05)
            getgenv().parry()
            cancelAll = true
        end
        -- if detect(v,'rbxassetid://9112351440') then -- aerial
        --     task.wait(.1)
        --     getgenv().parry()
        --     cancelAll = true
        -- end
        -- aerial gun rbxassetid://9112351440
        -- critical gun rbxassetid://8787495611 but i can just make it detect the ball



        -- if detect(v,'rbxassetid://10300203796') then -- dagger 1
        --     task.wait(.01)
        --     getgenv().parry()
        --     cancelAll = true
        -- end
        -- if detect(v,'rbxassetid://10300357869') then -- dagger 2
        --     task.wait(.01)
        --     getgenv().parry()
        --     cancelAll = true
        -- end



        if is_rapier then cancelAll = true end
        local rolling = false
        -- for _,item in pairs(enemyfolder:GetChildren()) do 
        --     if table.find(rollMoves,item.Name) then 
        --         rolling = true
        --     end
        -- end
        for _,item in pairs(statusFolder:GetChildren()) do 
            if table.find(StunRecognisers,item.Name) then 
                cantParry = true
            end
        end
        if rolling == false and cantParry == false and cancelAll == false then
            if ourfolder:FindFirstChild('Cooldowns') and ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('M1') then 
                getgenv().M2()
            end


            getgenv().parry()
            -- removeStuns()
            -- task.wait(.04)
            -- getgenv().fastparry()
            -- removeStuns()
        elseif rolling == true and cantParry == true and cancelAll == false then -- cantRoll

            removeStuns()
            task.wait(0.1)
            getgenv().roll()
            removeStuns()
        elseif cantParry == true and cancelAll == false then 

            removeStuns()
            task.wait(0.1)
            getgenv().roll()
            removeStuns()
        elseif rolling == true and cancelAll == true and cantParry == true then 
            removeStuns()
        else
            print('Act couldnt be confirmed. Status: ROLLING - '..tostring(rolling)..' IF WAS ABLE TO PARRY - '..tostring(cantParry)..' but did nothing is cancel value - '..tostring(cancelAll).. '?')
        end

        task.delay(1,function()
            cooldownconnection:Disconnect()
            statusconnection:Disconnect()
        end)

    end




    local function checkGuardbroken(r)
        local brokens = {
            'Guardbreak';
            'Guardbreak2'
        }
        local x = false
        if r:FindFirstChild('Torso') then 
            for _,v in next, r:FindFirstChild('Torso'):GetChildren() do 
                if table.find(brokens,v.Name) then x = true end 
            end
        end
        if r:FindFirstChild('HumanoidRootPart') then 
            for _,v in next, r:FindFirstChild('HumanoidRootPart'):GetChildren() do 
                if table.find(brokens,v.Name) then x = true end 
            end
        end
        return x
    end




    local WarningAnimations = {
        ['Thresher Underground'] = {
            ID = 'rbxassetid://12072719081';
        }
    }


    local function attachAnimationPlayed(info)
        local target_character = info.trg
        -- if target_character then 
        --     target_character.Humanoid.AnimationPlayed:Connect(function(animationGet)
        --         if not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then return end
        --         local DistanceAway = (target_character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                
        --         if DistanceAway > getgenv().Distance and DistanceAway < getgenv().Distance *1.5 then 
        --             return
        --         end
        --         local MatchedMove = nil 
        --         local MatchedMoveID = ''
        --         for _,v in next, WarningAnimations do 
        --             if animationGet.Animation.AnimationId == v['ID'] then 
        --                 MatchedMove = _ 
        --                 MatchedMoveID = v['ID']
        --                 break
        --             end
        --         end
    
        --         getgenv().ParryAct(target_character)
    
    
        --     end)
        -- end

    end



    print('assigning autoparry to characters')

    for _,character in next, game.ReplicatedStorage.CharacterData:GetChildren() do 
        if character.Name ~= ' '  and character:FindFirstChild('StatusFolder') and character.Name ~= game.Players.LocalPlayer.Name then 
            local status = character:WaitForChild('StatusFolder')
            local connectedFunction = nil 
            local workChar = workspace.Characters:WaitForChild(character.Name)
            -- print('workchar = '..workChar.Name)
            connectedFunction = status.ChildAdded:Connect(function(newchild)
                local IsInDistance = false
                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart')  then 
    
                    
                    
                    -- local rayOrigin = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position
                    -- local rayDestination = workChar.HumanoidRootPart.Position
                    
                    -- local rayDirection = rayDestination - rayOrigin
                    
                    -- local raycastResult = workspace:Raycast(rayOrigin, rayDirection)                                    
                    
                    -- if raycastResult then 
                    --     -- print("Instance:", raycastResult.Instance)
                    --     -- print("Position:", raycastResult.Position)
                    --     -- print("Distance:", raycastResult.Distance)
                    --     -- print("Material:", raycastResult.Material)
                    --     -- print("Normal:", raycastResult.Normal)         
                    --     if raycastResult.Distance <= getgenv().Distance then 
                    --         IsInDistance = true
                    --         print(workChar.Name..' was detected - '..raycastResult.Distance)
                    --     end
                    -- else                     
                    --     print('raycast is '..tostring(raycastResult))
                    -- end
                    local ticked = 0 
    
                    if workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance then 
                        IsInDistance = true
                        --print(workChar.Name..' was detected '.. (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
                    elseif workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position.Z - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position.Z) >0  then 
                        if (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance *1.2 then 
                            IsInDistance = true
                            print('parry in air')
                        end   
                    end
                    if IsInDistance == false then 
    
                        repeat 
                            task.wait(0.05) -- 0.05
                            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance then 
                                IsInDistance = true
                                --print(workChar.Name..' was detected '.. (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
                            elseif game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position.Z - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position.Z) >0  then 
                                if (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance *1.2 then 
                                    IsInDistance = true
                                    print('parry in air')
                                end   
                            end
                            ticked += 0.5
                        until IsInDistance == true or ticked >= 2 -- make ticked a slider
    
                    end
                end
                
                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and IsInDistance == true and getgenv().AutoParryingFW == true  then 
                    --print(newchild.Name)
                    if newchild.Name == 'Hitting' or checkCrit(workChar) then 
                        if getgenv().fw3localFw3['set_to_roll_before_parry'] == true then 
                            getgenv().fw3localFw3['rollnotparry'] = true
                            getgenv().fw3localFw3['set_to_roll_before_parry'] = false
                            print('FeintCD Rollnotparry')
                        end
                        getgenv().ParryAct(workChar)
                    end
                end
            end)
            attachAnimationPlayed{trg = workChar}

            local typeFound = nil 
            if game.Players:FindFirstChild(character.Name) then 
                typeFound = 'player'
            else
                typeFound = 'npc'
            end
            waitUntilLeft{
                func = connectedFunction,
                charType = typeFound,
                user = character.Name
            }-- could make it return
        end
    end


    print('assigning autoparry to child added')
    local childAddedConnection = nil
    childAddedConnection = workspace.Characters.ChildAdded:Connect(function(newPlayer)
        if newPlayer.Name == game.Players.LocalPlayer.Name then return end
        local character = game.ReplicatedStorage.CharacterData:WaitForChild(newPlayer.Name) 
        local status = character:WaitForChild('StatusFolder')
        local connectedFunction = nil 
        local workChar = workspace.Characters:WaitForChild(character.Name)

        connectedFunction = status.ChildAdded:Connect(function(newchild)
            local IsInDistance = false
            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart')  then 

                
                
                -- local rayOrigin = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position
                -- local rayDestination = workChar.HumanoidRootPart.Position
                
                -- local rayDirection = rayDestination - rayOrigin
                
                -- local raycastResult = workspace:Raycast(rayOrigin, rayDirection)                                    
                
                -- if raycastResult then 
                --     -- print("Instance:", raycastResult.Instance)
                --     -- print("Position:", raycastResult.Position)
                --     -- print("Distance:", raycastResult.Distance)
                --     -- print("Material:", raycastResult.Material)
                --     -- print("Normal:", raycastResult.Normal)         
                --     if raycastResult.Distance <= getgenv().Distance then 
                --         IsInDistance = true
                --         print(workChar.Name..' was detected - '..raycastResult.Distance)
                --     end
                -- else                     
                --     print('raycast is '..tostring(raycastResult))
                -- end
                local ticked = 0 

                if workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance then 
                    IsInDistance = true
                    --print(workChar.Name..' was detected '.. (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
                elseif workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position.Z - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position.Z) >0  then 
                    if (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance *1.2 then 
                        IsInDistance = true
                        print('parry in air')
                    end   
                end
                if IsInDistance == false then 

                    repeat 
                        task.wait(0.05) -- 0.05
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance then 
                            IsInDistance = true
                            --print(workChar.Name..' was detected '.. (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude)
                        elseif game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and workChar:FindFirstChild('HumanoidRootPart') and (workChar.HumanoidRootPart.Position.Z - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position.Z) >0  then 
                            if (workChar.HumanoidRootPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= getgenv().Distance *1.2 then 
                                IsInDistance = true
                                print('parry in air')
                            end   
                        end
                        ticked += 0.5
                    until IsInDistance == true or ticked >= 2 -- make ticked a slider

                end
            end
            
            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and IsInDistance == true and getgenv().AutoParryingFW == true  then 
                --print(newchild.Name)
                if newchild.Name == 'Hitting' or checkCrit(workChar) then 
                    print('type of parry act')
                    if getgenv().fw3localFw3['set_to_roll_before_parry'] == true then 
                        getgenv().fw3localFw3['rollnotparry'] = true
                        getgenv().fw3localFw3['set_to_roll_before_parry'] = false
                        print('FeintCD Rollnotparry')
                    end
                    getgenv().ParryAct(workChar)
                end
            end
        end)
        attachAnimationPlayed{trg = workChar}
        local typeFound = nil 
        if game.Players:FindFirstChild(character.Name) then 
            typeFound = 'player'
        else
            typeFound = 'npc'
        end
        waitUntilLeft{
            func = connectedFunction,
            charType = typeFound,
            user = character.Name
        }-- could make it return
    end)



    -- game.Players.LocalPlayer.Character:WaitForChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()
    --     if getgenv().fw3localFw3['walkspeedtoggle'] then 
    --         game.Players.LocalPlayer.Character:WaitForChild('Humanoid').WalkSpeed = getgenv().fw3localFw3['walkspeed']
    --     end
    -- end)





    Configiuration:CreateConfigSystem()

    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('m1 break') break end
            if getgenv().buttonUp == true and getgenv().fw3localFw3['m1hold'] == true then 
                getgenv().M1()
                task.wait(.2)
                if getgenv().fw3localFw3['fastswing'] == true then 
                    getgenv().fastSwing()
                end
            end
        end
    end)
    getgenv().DontStop = {
        'Idle';
        'SwordIdle';
        'GunIdle';
        'rbxassetid://10206891650';
        'rbxassetid://8763531138';
        'rbxassetid://9255807166';
        'rbxassetid://9891226026';
        'rbxassetid://10013439342';
        'rbxassetid://10224946200';
        'rbxassetid://8763531138';
    }
    getgenv().stopAnims = function()
        for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
            if not table.find(getgenv().DontStop,v.Animation.AnimationId) or table.find(getgenv().DontStop,v.Animation.Name) then 
                v:Stop()
            end
            for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
                if not table.find(getgenv().DontStop,v.Animation.AnimationId) or table.find(getgenv().DontStop,v.Animation.Name) then 
                    v:Stop()
                end
            end
        end
    end
    getgenv().trickparryez = function()
        for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
            v.Animation.AnimationId = 'bozo'
        end
    end
    local function removeStuns()
        if ourfolder:FindFirstChild('StatusFolder') then 
            for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                v:Destroy()
                --print('-- DESTROYED BECAUSE FEINTED')
            end
        end
    end
    getgenv().parryspears = {}
    getgenv().parrybullet = {}
    getgenv().parryslash = {}
    getgenv().allparryobjects = {}

    local DEBRISADDEDCONNECTION  = game:GetService('Workspace').DebrisParts.ChildAdded:Connect(function(child)
        -- task.wait(.01)
        -- if child:FindFirstChild('Zap') and child:FindFirstChild('Spark') then 
        --     getgenv().holdparry()
        --     task.wait(1)
        --     getgenv().releaseparry()
        -- end
    end)


    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then 
                print('m1 loop anim loop break')
                if getgenv().fw3localFw3['humanoiddeadconnection'] ~= nil then 
                    getgenv().fw3localFw3['humanoiddeadconnection']:Disconnect()
                end
                if getgenv().fw3localFw3['norollvelocityconnection'] ~= nil then 
                    getgenv().fw3localFw3['norollvelocityconnection']:Disconnect()
                end
                childAddedConnection:Disconnect()
                MOUSEDOWNCONNECTION:Disconnect()
                DEBRISADDEDCONNECTION:Disconnect()
                break 
            end 
            
            if getgenv().fw3localFw3['norollcooldown'] == true then 
                getgenv().fw3localFw3['norollcooldown'] = nil 
                for _,v in next, getgc() do 
                    -- print(getinfo(v).source)
                    if getinfo(v).source:find('Roll') then 
                        for i,upvalue in next, debug.getupvalues(v) do 
                            --print(i,type(upvalue))
                            if type(upvalue) == 'boolean' then --tostring(upvalue) == 'true' or tostring(upvalue) == 'false' or upvalue == true
                                --print('setting')
                                task.spawn(function()
                                    repeat 
                                        pcall(function()
                                            for i,v in next, game:GetService("ReplicatedStorage").CharacterData:FindFirstChild(game.Players.LocalPlayer.Name):FindFirstChild('StatusFolder'):GetChildren() do 
                                                v:Destroy() 
                                            end
                                        end)
                                        debug.setupvalue(v,i,false)
                                        task.wait(0)
                                    until getgenv().fw3localFw3['noroolcooldown'] == false or getgenv().loopsUnload == true
                                end)
                            end
                        end
                    end
                end
                task.spawn(function()
                    repeat task.wait() until  game.Players.LocalPlayer.Character == nil or not game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') or game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health == 0
                    task.wait(8)
                    if getgenv().fw3localFw3['norollcooldown'] == nil then 
                        getgenv().fw3localFw3['norollcooldown'] = true
                    end
                end)
            end
            if getgenv().fw3localFw3['norollvelocity'] == true and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'):FindFirstChild('RollVelocity') then 
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'):FindFirstChild('RollVelocity'):Destroy()
            end

            if getgenv().fw3localFw3['fixm1bug'] == true then 
                task.spawn(function()
                    if cooldowns and cooldowns:FindFirstChild('M1') then 
                        cooldowns:FindFirstChild('M1'):Destroy()
                    end
                end)
            end
            if getgenv().fw3localFw3['possiblem1'] == true and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                -- print('@possiblem1')
                for _,v in pairs(workspace.Characters:GetChildren()) do 
                    if v~= game.Players.LocalPlayer.Character and (v:FindFirstChild('HumanoidRootPart')) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if dist.Magnitude <= getgenv().Distance then 
                            if game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name) and v.Name ~= game.Players.LocalPlayer.Name then 
                                if game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder') and not game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder'):FindFirstChild('Hitting') and game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('Cooldowns') then
                                    local ffound = game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder') 
                                    local cdfound = game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('Cooldowns') 
                                    local getstuns = {
                                        --'RagdollStun';
                                        'Stun';
                                        'Stun1';
                                    }
                                    -- and not find hitting
                                    if game.Players.LocalPlayer.Character and not game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('ForceField') and ffound and ffound:FindFirstChild('Stun') or ffound:FindFirstChild('Stun1') or ffound:FindFirstChild('RagdollStun') or cdfound:FindFirstChild('RollCD') then 
                                        --print('@m1stun')
                                        --pcall(function()
                                            -- if ourfolder and cooldowns and statusFolder and
                                            if not cooldowns:FindFirstChild('RollCD') and
                                            not statusFolder:FindFirstChild('ParryCD') then 
                                                --print('@beforem1')
                                                if getgenv().fw3localFw3['jumpwhentargetragdolled'] == true and v:FindFirstChild('Torso') and v:FindFirstChild('Torso'):FindFirstChild('RagdollAttachment') then 
                                                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                                                    task.wait(.2)
                                                end
                                                --print('@codem1')
                                                getgenv().M1()
                                                
                                                -- if ragdolled target then jump for aerial
                                            
                                            else
                                                -- print('ourfolder: '..ourfolder.Name)
                                                -- print('Cooldowns: '..ourfolder:FindFirstChild('Cooldowns') .Name or 'nil')
                                                -- print('rollcd cooldown: '..ourfolder:FindFirstChild('Cooldowns'):FindFirstChild('RollCD').Name or 'nil' )
                                                -- print('statusfolder parrycd: '..statusFolder:FindFirstChild('ParryCD').Name or 'nil')
                                                -- print('statusfolder: '..statusFolder.Name)
                                            end      
                                        --end)


                                    end
                                end
                            end
                        end
                    end
                end            
            end
            if getgenv().fw3localFw3['possiblem2'] == true  then 
                for _,v in pairs(workspace.Characters:GetChildren()) do 
                    if (v:FindFirstChild('HumanoidRootPart')) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if dist.Magnitude <= getgenv().Distance then 
                            if checkGuardbroken(v) then 
                                getgenv().useHeavy()
                            end
                        end
                    end
                end
            end
            if getgenv().fw3localFw3['noanims'] == true then 
                pcall(function()
                    getgenv().stopAnims() 
                    getgenv().stopAnims() 
                    getgenv().stopAnims() 
                end)
            end
            if getgenv().fw3localFw3['strongleftonstun'] == true  then 
                for _,v in pairs(workspace.Characters:GetChildren()) do 
                    if (v:FindFirstChild('HumanoidRootPart')) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if dist.Magnitude <= getgenv().Distance then 
                            if v and game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name) and game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder') and not game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder'):FindFirstChild('Hitting') and  v.Name ~= game.Players.LocalPlayer.Name then 
                                if game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder') then
                                    local ffound = game.ReplicatedStorage.CharacterData:FindFirstChild(v.Name):FindFirstChild('StatusFolder') 
                                    if ffound:FindFirstChild('Stun') or ffound:FindFirstChild('Stun1') and not game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('ForceField') then 
                                        getgenv().usestrongleft()
                                    end
                                end
                            end
                        end
                    end
                end
            end

            if getgenv().fw3localFw3['trickautoparry'] == true then 
                getgenv().trickparryez()
            end




            if Attach_to_back:IsPressed() == true  then -- and getgenv().istyping == false
                print('attadh pressed')
                task.spawn(function()
                    repeat 
                        local Closest = nil 
                        local closestpos = nil
                        task.wait(0.01)
                        for _,v in pairs(workspace.Characters:GetChildren()) do 
                            if (v:FindFirstChild('HumanoidRootPart')) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                if dist.Magnitude <= getgenv().Distance then 
                                    
                                    if Closest == nil then 
                                        Closest = v 
                                        closestpos = dist.Magnitude
                                    else
                                        if closestpos < dist.Magnitude then 
                                            Closest = v 
                                            closestpos = dist.Magnitude
                                        end
                                    end

                                end
                            end
                        end
                        if Closest ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            if closestpos >3 and getgenv().fw3localFw3['CurrentTween'] == nil then 
                                local TweenSpeedProCalculation = tonumber('0.'..math.floor(closestpos)) + math.floor(closestpos/getgenv().Distance) + math.floor(closestpos/(getgenv().Distance*2))
                                print('Tween Speed: '..TweenSpeedProCalculation)
                                getgenv().fw3localFw3['CurrentTween'] = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.9),{
                                    CFrame = Closest:FindFirstChild('HumanoidRootPart').CFrame
                                })
                                getgenv().fw3localFw3['CurrentTween']:Play()
                                --or getgenv().fw3localFw3['CurrentTween'].Completed == true
                                task.spawn(function()
                                    repeat task.wait() until Attach_to_back:IsPressed() == false 
                                    getgenv().fw3localFw3['CurrentTween']:Pause()
                                    getgenv().fw3localFw3['CurrentTween'] = nil
                                end)

                            elseif closestpos <3 then
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Closest:FindFirstChild('HumanoidRootPart').CFrame
                            end

                        end
                    until Attach_to_back:IsPressed() == false      
                end)
            end


            task.spawn(function()




                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('Vent') and workspace:FindFirstChild('DebrisParts'):FindFirstChild('Part') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'Part' then
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                            if dist.Magnitude <= 5 then 
                                getgenv().roll()
                            end
                        end
                    end
                end

                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('Javelin') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'Javelin' then
                            local closestToSlash = false 

                            function checkClosestSlash()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'Javelin' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 30 then 
                                            xreturn = true
                                        end
                                        task.wait(0.1)
                                    end
                                end
                                return xreturn
                            end
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                
                            if checkClosestSlash() and not table.find(getgenv().parryslash,v) and dist.Magnitude <= 30  then -- check if particle,  and v:FindFirstChild('Explosion').Enabled == true
                                table.insert(getgenv().parrybullet,v)
                                task.spawn(function()
                                    -- task.wait(.01)--task.wait(.05)
                                    getgenv().roll()
                                    -- getgenv().quickfinishparry()
                                    print'DEBRIS Javelin'
                                end)
                            end
                        end
                    end
                end

                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('Slash') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'Slash' then
                            local closestToSlash = false 

                            function checkClosestSlash()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'Slash' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 5 then 
                                            xreturn = true
                                        end
                                        task.wait(0.1)
                                    end
                                end
                                return xreturn
                            end
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                
                            if checkClosestSlash() and not table.find(getgenv().parryslash,v) and dist.Magnitude <= 5  then -- check if particle,  and v:FindFirstChild('Explosion').Enabled == true
                                table.insert(getgenv().parrybullet,v)
                                task.spawn(function()
                                    -- task.wait(.01)--task.wait(.05)
                                    getgenv().roll()
                                    -- getgenv().quickfinishparry()
                                    print'DEBRIS Slash'
                                end)
                            end
                        end
                    end
                end




                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('Bullet') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'Bullet' then
                            local closestToTurret = false 

                            local ourTurret = false
                            function checkClosestBullet()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'Bullet' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 5 then 
                                            xreturn = true
                                        end
                                        task.wait(0.1)
                                    end
                                end
                                return xreturn
                            end
                            function turretClosestBullet()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'Bullet' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 20 then 
                                            xreturn = true
                                        end
                                        task.wait(0.1)
                                    end
                                end
                                return xreturn
                            end
                            function closestTurret()
                                local xreturn = false
                                for _,v in pairs(workspace.Characters:GetChildren()) do 
                                    if v.Name:sub(1,6) == 'Turret' and turretClosestBullet() then
                                        local dist = (turretClosestBullet().Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 5 then 
                                            xreturn = true
                                            closestToTurret = true 
                                            if v:FindFirstChild('Owner') and v:FindFirstChild('Owner').Value == game.Players.LocalPlayer.Name then 
                                                ourTurret = true
                                            end
                                        end
                                        task.wait(0.001)
                                    end
                                end
                                return xreturn
                            end
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                            

                                
                            if ourTurret == false and closestToTurret == false and not table.find(getgenv().parrybullet,v) and dist.Magnitude <= 5  then -- check if particle,  and v:FindFirstChild('Explosion').Enabled == true
                                table.insert(getgenv().parrybullet,v)
                                task.spawn(function()
                                    -- task.wait(.01)--task.wait(.05)
                                    getgenv().fastparry()
                                    getgenv().quickfinishparry()
                                    print'DEBRIS Bullet'
                                end)
                            end
                        end
                    end
                end
                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('LightSpear') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'LightSpear' then
                            function checkClosestSpear()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'LightSpear' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 5 then 
                                            xreturn = true
                                        end
                                        task.wait(0.1)
                                    end
                                end
                                return xreturn
                            end
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                            if not table.find(getgenv().parryspears,v) and dist.Magnitude <= 10 and v:FindFirstChild('Spear').Enabled == true  then -- check if particle,  and v:FindFirstChild('Explosion').Enabled == true
                                table.insert(getgenv().parryspears,v)
                                task.spawn(function()
                                    task.wait(.2)--task.wait(.05)
                                    getgenv().parry()
                                    print'DEBRIS Parry Angel'
                                    -- repeat 
                                    --     task.wait(0.1)
                                    --     getgenv().fastparry()
                                    --     print('Parry Angel')
                                    -- until not workspace:FindFirstChild('DebrisParts'):FindFirstChild('LightSpear') -- checkClosestSpear() == false --
                                end)
                            end
                        end
                    end
                end
                if workspace:FindFirstChild('DebrisParts'):FindFirstChild('Arrow') and getgenv().AutoParryingFW == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                        if v.Name == 'Arrow' then
                            function ArrowCheck()
                                local xreturn = false
                                for _,v in pairs(workspace:FindFirstChild('DebrisParts'):GetChildren()) do 
                                    if v.Name == 'Arrow' then
                                        local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                        if dist.Magnitude <= 5 then 
                                            xreturn = true
                                        end
                                        task.wait(0.5)
                                    end
                                end
                                return xreturn
                            end
                            local dist = (v.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                            if dist.Magnitude <= 7 then 
                                print('DEBRIS ARROW')
                                task.spawn(function()
                                    task.wait(.1)
                                    getgenv().fastparry()
                                    -- repeat 
                                    --     task.wait(0.3)
                                    --     getgenv().fastparry()
                                    -- until not workspace:FindFirstChild('DebrisParts'):FindFirstChild('LightSpear') --  ArrowCheck() == false --
                                end)
                            end
                        end
                    end
                end



            end)

            -- if getgenv().fw3localFw3['momentumtoggle'] then 
            --     if configurations:WaitForChild('Speed'):FindFirstChild('Momentum') then 
            --         for _,v in next, configurations:WaitForChild('Speed'):GetChildren() do 
            --             if v.Name == 'Momentum' then 
            --                 v.Value = getgenv().fw3localFw3['momentum']
            --             end
            --         end
            --     end
            -- end
            if getgenv().fw3localFw3['walkspeedtoggle'] == true then 
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().fw3localFw3['walkspeed']
                end
            end
        end
    end)
    task.spawn(function()
        repeat task.wait(); until getgenv().loopsUnload == true;
        print('loop disconnected fw3')
        childAddedConnection:Disconnect()
    end)
    -- task.spawn(function()
    --     while task.wait() do 
    --         if getgenv().loopsUnload == true then print('fakewoken 3 true break') break end 
    --         if getgenv().AutoParryingFW == true then 
    --             for _,v in pairs(workspace.Characters:GetChildren()) do 
    --                 if v~= game.Players.LocalPlayer.Character and v:IsA('Model') and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
    --                     local distance = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
    --                     if distance.Magnitude <= getgenv().Distance and not table.find(alreadySorted,v.Name) then 
    --                         table.insert(alreadySorted,v.Name)
    --                         local humanoid = v:FindFirstChild('Humanoid');
    --                         local getTracks= humanoid:GetPlayingAnimationTracks()

    --                         local waitTime = 0
    --                         for _a, animation in next, getgenv().parryID  do 
    --                             if string.split(animation,'-')[1] then 
    --                                 waitTime = string.split(animation,'-')[2]
    --                                 break
    --                             end
    --                         end
    --                         task.wait(waitTime)
    --                         getgenv().parry()
    --                         task.delay(0.2,function()
    --                             for sort,unsort in pairs(alreadySorted) do 
    --                                 if unsort == v.Name then table.remove(alreadySorted,sort) end
    --                             end
    --                         end)
    --                     end
    --                 end
    --             end
    --         end
    --     end
    -- end)

    getgenv().DetectedHitting = 0
    local function checkStun()
        local stuns = {
            'Stun1';
            'Stun';
            'ParryStun';
        }
        local x = false
        if ourfolder:FindFirstChild('StatusFolder') then 
            for i,v in pairs(ourfolder:FindFirstChild('StatusFolder'):GetChildren()) do 
                if table.find(stuns,v.Name) then x = true; end
            end
        end
        return x
    end


    -- bypass teleport. get a position with X. Divide it by how many tweens, <int> TweenToGet, and use a for i=1, and tween to x

    
    -- getgenv().TweenToGet = 5
    -- getgenv().TPOS = Vector3.new(15.39610767364502, 52.9999885559082, 1.752089500427246)

    -- getgenv().tweensliced= function()
    --     for i=1, getgenv().TweenToGet do 
    --         task.wait(2)
    --         game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
    --                 CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(getgenv().TPOS.X/getgenv().TweenToGet,
    --                 getgenv().TPOS.Y,
    --                 getgenv().TPOS.Z -- use rays to detect if in air and then tweenp to the bottom
    --             )
    --         })
    --     end
    -- end 





    getgenv().stuns_to_remove = {
        'Stun';
        'Stun1';
        'Stun2';
        'ParryCD';
        'NoJump';
    }

    getgenv().ReactHit = function(info)
        if info.W.Name == 'Hitting' and getgenv().fw3localFw3['autofeint'] == true and checkStun() == false then 
            if getgenv().fw3localFw3['autofeintchance'] == true then 

                local total = 100/getgenv().fw3localFw3['feintchance']
                local chance = math.random(1,total) --Random.new(); chance = Random.NextNumber(1,chance)


                local calculatedChance = 0 
                

                if chance == 1 then 
                    getgenv().M2()
                end

                -- if the slider was at 20 what would i do:
                -- oneValue  = 100/20,    --: 5
                --  chance = math.random(1,oneValue)




                -- get chance out of 100, math.random(1,calculatedChance) - calculatedchance would get the chance 
                -- like 20% which is 
                -- 100/5 so if i put the chance at 20% it would do r = math.random(1,5) and check if the random number is equal to the calculated range
                -- so if i put 20% i would want 1 because thats the first. if i put 40% i would want 2 because its second 
            else 

                if getgenv().DetectedHitting <getgenv().fw3localFw3['swingstofeint'] then 
                    getgenv().DetectedHitting+=1
                    --print('add')
                else
                   -- print(getgenv().DetectedHitting..' uh '..getgenv().fw3localFw3['swingstofeint'])
                    getgenv().DetectedHitting = 0
                    getgenv().M2()
                end
            end
        elseif table.find(getgenv().stuns_to_remove,info.W.Name) and getgenv().fw3localFw3['nostunonhit'] == true then 

            pcall(function()
                info.W:Destroy()  
            end)

        end
    end

    local connectionFolder = nil; connectionFolder = statusFolder.ChildAdded:Connect(function(W)
        getgenv().ReactHit({W = W})
    end)
    -- ourfolder.ChildRemoved:Connect(function(W)
    --     if W.Name == 'StatusFolder' then 
    --         connectionFolder:Disconnect()

    --         connectionFolder = ourfolder:WaitForChild('StatusFolder').ChildAdded:Connect(function(W)
    --             getgenv().ReactHit({W = W})
    --         end)
    --     end
    -- end)


        --_G.Parrying = false
    --end


    -- use childadded and detect animation


    local ESPsect = ESPTab:CreateSector('ESP','left')
    getgenv().playeresp = true
    ESPsect:AddSeperator()
    ESPsect:AddToggle("ESP", true, function(xstate)
        getgenv().playeresp = xstate
    end)
    local cam = workspace.CurrentCamera
    local worldToViewportPoint = cam.worldToViewportPoint
    local head_offset =  Vector3.new(0,1.5,0)
    local leg_offset = Vector3.new(0,10,0)
    getgenv().CreatePlayerEsp = function(v)
        -- print(v.Name)
        task.wait(0.1)
        local esp = Drawing.new('Text')
        esp.Visible = false
        esp.Center = true 
        esp.Outline = true 
        esp.Font = 2 
        esp.Size = 13
        esp.Color = Color3.new(5,0,0)
        esp.Text = 'SEXY'
    
        -- local function upd()
        --     local c 
        --     c = game:GetService('RunService').RenderStepped:Connect(function()
        --         task.wait()
        --         if v.Character and v~= game.Players.LocalPlayer  and v.Character:FindFirstChild('HumanoidRootPart') then 
        --             local espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
        --             if onscreen and getgenv().playeresp == true then 
        --                 esp.Position = Vector2.new(espv.X,espv.Y ) + Vector2.new(0,1)
        --                 if getgenv().streamermode == false then 
        --                     esp.Text = v.Name
        --                 else
        --                     esp.Text = v.Name:sub(1,2)..'cummybuttermilk'
        --                 end

        --                 if getgenv().playeresp == true then esp.Visible = true end
                     
    
        --             else
        --                 esp.Visible = false
        --             end
    
        --         else
        --             if game.Players:FindFirstChild(v.Name) == nil then c:Disconnect() end
        --             esp.Visible = false
        --         end
        --     end)
        -- end


        local tracer = Drawing.new('Line')
        tracer.Visible = false
        tracer.Color = Color3.new(1,0,0)
        tracer.Thickness = 1 
        tracer.Transparency = 1 
        
        
        local box_o = Drawing.new('Square')
        box_o.Visible = false
        box_o.Color = Color3.new(0,0,0)
        box_o.Thickness = 2
        box_o.Transparency =1 
        box_o.Filled = false
        
        local box = Drawing.new('Square')
        box.Visible = false
        box.Color = Color3.new(1,0,0)
        box.Thickness = 1.5
        box.Transparency =1 
        box.Filled = false
        
        local hb_o = Drawing.new('Square')
        hb_o.Visible = false
        hb_o.Color = Color3.new(0,0,0)
        hb_o.Thickness = 1
        hb_o.Transparency =1 
        hb_o.Filled = false
        
        local hb = Drawing.new('Square')
        hb.Visible = false
        hb.Color = Color3.new(1,0,0)
        hb.Thickness = 1
        hb.Transparency =1 
        hb.Filled = true
        local health = Drawing.new('Text')
        health.Visible = false
        local distancex = Drawing.new('Text')
        distancex.Visible = false
        local function rootesp()
            local xkeeptracer
            local plsstoptracer = false
            cam = workspace.CurrentCamera
            xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.2)
                if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if onscreen and getgenv().playeresp and getgenv().tracers and tracer then 
                        tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                        tracer.To = Vector2.new(vect.X,vect.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                    if not v or getgenv().loopsUnload == true then 
                        plsstoptracer = true
                    end
                elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                    xkeeptracer:Disconnect()
                    if tracer then 
                        pcall(function()
                            tracer:Remove()
                        end)
                    end
                else
                    tracer.Visible = false
                end
            end) 
        end
        local function boxroot()
            local xkeeprunning 
            xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v.Character and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    local vroot = v.Character.HumanoidRootPart
                    local head = v.Character.Head
                    
                    local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                    local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                    if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                    elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                    local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                    local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                    
                    if onscreen and getgenv().playeresp and box then 
                        cam = workspace.CurrentCamera
                        --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))

    
                        if box_o and cam.ViewportSize and rootpos and headpos then 
                            box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                            box_o.Visible = true 
                        end
                        if box then 
                            box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                            box.Visible = true
                        end

                        hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                        hb_o.Position = box_o.Position - Vector2.new(6,0)
                        hb_o.Visible = true
                        hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                        hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                        hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                        hb.Visible = true

                        local Talents = game:GetService("ReplicatedStorage").Data:FindFirstChild(v.Name):FindFirstChild('Talents')
                        local Power = game:GetService("ReplicatedStorage").Data:FindFirstChild(v.Name):FindFirstChild('Power')
                        local isMob = v.Character:FindFirstChild('Talents')
                        if isMob then 
                            Talents =isMob
                            Power = v.Character:FindFirstChild('Data'):FindFirstChild('Power')
                        end
                        esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,1)
                        if Talents then 
                            esp.Text = '['..v.Character.Humanoid.MaxHealth..'/'..v.Character.Humanoid.Health..'] ['..math.floor(distance)..']\n    '..v.Name..'\nTalents: '..#Talents:GetChildren()..'  Level:'..Power.Value
                        end
                        
                        if getgenv().playeresp == true and Talents then esp.Visible = true else esp.Visible = false end
                     
                    else
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)
                       
                        
                        
                    end
                end
                if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true  then 
                    xkeeprunning:Disconnect()
                    task.wait(1)
                    pcall(function()
                        box:Remove()
                    end)
                    pcall(function()
                        box_o:Remove()
                    end)
                    pcall(function()
                        hb:Remove()
                    end)
                    pcall(function()
                        hb_o:Remove()
                    end)
                    pcall(function()
                        esp:Remove()
                    end)
                    pcall(function()
                        distancex:Remove()
                    end)
                    pcall(function()
                        health:Remove()
                    end)
                end
            end) 
        end
        task.spawn(function()
            coroutine.wrap(rootesp)()
            coroutine.wrap(boxroot)()
        end)

    end


    
    getgenv().Players = {}
    getgenv().selectedPlayer = ''
    for i,v in pairs(game.Players:GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(getgenv().Players,v.Name)
            getgenv().CreatePlayerEsp(v)
        end
    end


    local PlayerTP = fakesect:AddDropdown("Player Teleportation", getgenv().Players, "", false, function(dropdownv)
        getgenv().selectedPlayer = dropdownv
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    fakesect:AddButton('Teleport to Player',function()
        if game.Players:FindFirstChild(getgenv().selectedPlayer) then 
            pcall(function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(selectedPlayer).Character:FindFirstChild('HumanoidRootPart').CFrame
            end)
        end
    end)


    game.Players.PlayerAdded:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        --Options.PlayerTP.Values = getgenv().Players 
        --PlayerTP:Set(getgenv().Players )
        PlayerTP:Add(xchild.Name)
        --PlayerTP:updateText(getgenv().selectedPlayer)
        --PlayerTP:Set(getgenv().Players)
        getgenv().CreatePlayerEsp(xchild)
    end)
    game.Players.PlayerRemoving:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        PlayerTP:Remove(xchild.Name)

    end)


    --local PlayerList = Top:CreatePlayerlist('Players',fakesect)

elseif game.PlaceId == 6168898345 then -- BULWARK


    local mt = getrawmetatable(game)
    local namecall = mt.__namecall
    if make_writeable then make_writeable(mt) end 

    mt.__namecall = newcclosure(function(self,...)
        if  getnamecallmethod() == 'FireServer' and tostring(self) == 'Stamina' then --// checkcaller -- not checkcaller() and
            local args = {...}
            -- if args[1] == getgenv().remotestop  then 
            --     return 0
            -- end
            return 0
        end
        return namecall(self,...)
    end)


    local Top = window:CreateTab(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name);
    local sector = Top:CreateSector('Cheats','left')
    getgenv().Distance = 0
    getgenv().Ping = 0
    getgenv().AutoParrying = false
    sector:AddSlider("AutoParry Distance", 0, 0, 100, 1, function(State)
        getgenv().Distance = State
    end)
    sector:AddSlider("Ping Adjustment", 0, 0, 100, 1, function(State)
        getgenv().Ping = State
    end)
    sector:AddToggle("Auto Parry", false, function(xstate)
        getgenv().AutoParrying = xstate
    end)

    sector:AddButton('Print Timings',function()
        local ping_adjustment = 0
        local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 

        windupWait = 0.09*ping_adjustment
        delayWait = 0.035*ping_adjustment
        print('Windup Wait, '..windupWait)
        print('Delay Wait, '..delayWait)
    end)

    local alreadySorted = {}

    getgenv().parryID = {
        "rbxassetid://8494343630",
        "rbxassetid://8494340508",
    }
    getgenv().parry = function()
        task.spawn(function()
            local ping_adjustment = 0
            local getping = getgenv().Ping; if getping == 0 then ping_adjustment = 1 else ping_adjustment = getping end; 

            -- task.wait(.1)
            print('parrying')
            task.wait(0.09*ping_adjustment)
            local ohString1 = "Riposte"
            game:GetService("ReplicatedStorage").RemoteEvents.ToServer.ChangeStance:FireServer(ohString1)

            task.wait(0.035*ping_adjustment)
            

            -- task.wait(0.2*ping_adjustment)
            local ohString1 = "RiposteDelay"
            game:GetService("ReplicatedStorage").RemoteEvents.ToServer.ChangeStance:FireServer(ohString1)
        end)
        task.wait()
    end
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('game true break') break end 
            if getgenv().AutoParrying == true then 
                for _,v in pairs(workspace:GetChildren()) do 
                    if v~= game.Players.LocalPlayer.Character and v:IsA('Model') and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local distance = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if distance.Magnitude <= getgenv().Distance then 
                            local humanoid = v:FindFirstChild('Humanoid') 
                            for _a, animation in pairs(humanoid:GetPlayingAnimationTracks()) do 
                                if table.find(getgenv().parryID,animation.Animation.AnimationId) and not table.find(alreadySorted,v.Name) then 
                                    --table.insert(alreadySorted,v.Name)
                                    --task.wait(.05)
                                    getgenv().parry()
                                    -- task.delay(.2,function()
                                    --     for _e,ve in next, alreadySorted do 
                                    --         if ve == v.Name then 
                                    --             table.remove(alreadySorted,_e)
                                    --         end
                                    --     end
                                    -- end)
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
elseif game.PlaceId == 10371908957 or game.PlaceId == 10495850838 then  --- deep dev, 10495850838 = depths; 10371908957 etrean
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        -- for i=0, #game.CoreGui.ChatLogger.Frame.Logs:GetChildren() do 
        --     -- if i > 15 then 
        --     --     for i,v in pairs(game.CoreGui.ChatLogger.Frame.Logs:GetChildren()) do if v:IsA('TextLabel') then v:Destroy() end end
        --     -- end
        --     add -= 0.01
        --     if i > 20 then 
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 6
        --     else
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 23.5
        --     end
    
        -- end
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''--plr.Name --''
        local ourname = game.Players.LocalPlayer.Name--''
        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
        --     if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
        --         name = v.DisplayName.Value
        --     end
        --     if v.RealName.Value == game.Players.LocalPlayer.Name then 
        --         ourname = v.DisplayName.Value
        --     end
        -- end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        
        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            Notify('','name was said',2)
            -- if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
            --     task.spawn(function()
            --         local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
            --         Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
            --     end)
            -- end
        end
        if splitName[1] == 'Picked' then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        end
        if splitName[1] == 'AZFAKE-SERVER' then 
            x.TextColor3 = Color3.fromRGB(100, 155, 255)
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end
    local event = game:GetService("ReplicatedStorage"):WaitForChild('DefaultChatSystemChatEvents').OnMessageDoneFiltering
    -- xeventset
    getgenv().chatloggerhook = event.OnClientEvent:Connect(function(object)
       logIt(string.format("%s : %s", object.FromSpeaker, object.Message or ""),game.Players:FindFirstChild(object.FromSpeaker))
    end)
    getgenv().dwdtable = getgenv().AzfakeGlobalTables['dwd']



    local ddevtab= window:CreateTab(gameName)
    local esptab= window:CreateTab('Esp')
    local Configiuration= window:CreateTab('Configiuration')
    local ConfigSector = Configiuration:CreateSector('Themes','right')
    ConfigSector:AddColorpicker('Accent Colour',Color3.fromRGB(255, 255,255), function(ztx)
        library['theme']['accentcolor'] = ztx
        library['theme']['accentcolor2'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    ConfigSector:AddColorpicker('Background Colour',Color3.fromRGB(20, 20, 20), function(ztx)
        library['theme']['backgroundcolor'] = ztx
        wtm:UpdateTheme()
        window:UpdateTheme(library['theme'])
    end)
    local espsector = esptab:CreateSector('Cheats','left')
    local sector = ddevtab:CreateSector('Cheats','left')
    local tpsect = ddevtab:CreateSector('Cheats','left')
    local othersect = ddevtab:CreateSector('Cheats','right')
    local guisector = ddevtab:CreateSector('Cheats','right')
    getgenv().FlySpeedSlide = getgenv().FlySpeedSlide or 0
    getgenv().CFspeed = 50
    getgenv().CFloop = nil
    getgenv().Speeding = false
    getgenv().flying = false
    getgenv().NoclipFunction = nil
    getgenv().NoClip = nil
    getgenv().istyping = false
    game:GetService('UserInputService').InputBegan:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)
    game:GetService('UserInputService').InputEnded:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)

    getgenv().dwdsettings = {
        autoparry = true;
        distance = 0;
        rollnotparry = false;
        rollcancel = true;
        rollblatant = false;
        CurrentTween = nil;
        tptochests = false;
        safelocationaftertp = true;
        logchatlogger = false;
        safelocationcframe = CFrame.new(-9910.36914, 0.278607219, -6760.33105, 0.894830167, -1.18394041e-08, -0.446406752, 7.36884154e-09, 1, -1.17505898e-08, 0.446406752, 7.22528171e-09, 0.894830167);
        loopprima =false;
        quickdepths = true;
        safeunwipe = false;
        attributes = {
            'WeaponHeavy';
            'WeaponMedium';
            "WeaponLight";
            'Fortitude';
            'Strength';
            'ElementWind';
            'ElementFire';
            'ElementLight';
            'ElementShadow';
        };
        selectedatrribute = '';
        rollevent = false;
        autoassignstat = false; -- autoputstat
        autoopenchest = false;
        objects = {};
        parrywhitelist = {'All','Mobs'};
        selectedwhitelist = 'All';
        canswapchest = true;
        safedelay = 0.5;
        espsettings = {
            esp = false;
            displaytalents = false;
            estimatedlevel = false;
            espframework = '{name}    {distance}   {health}';--
        };
        mantras = {
            'Ash Slam';
            'Fire Blade';
            'Fire Palm';
            'Astral Wind';
            'Gale Lunge';
            'Wind Blade';
            'Crystal Impale';
            'Ice Blade';
            'Ice Lance';
            'Lightning Blade';
            'Thunder Kick';
            'Grand Javelin';
            'Shadow Gun';
            'Shadow Eruption';
            'Eclipse Kick';
            'Strong Left';
            'Shoulder Bash';
            'Rapid Punches';
        };
        selectedmantra = nil;
        alreadyparrying =false;
        noanims = false;
        nomantracd = false;
    
    } -- if they are asian and ur chatting to them online, you cant take that risk they might have small b
    -- getgenv()['dwdsettings']['objects'] could put getsynasset() stuff in here

    if game.PlaceId == 10495850838 then 
        sector:AddToggle("Safe Unwipe", false, function(e)
            getgenv().dwdsettings['safeunwipe'] = e
        end)
        sector:AddButton('UnWipe',function()
            local GUI_HIDETECHNIQUE = Instance.new('ScreenGui'); GUI_HIDETECHNIQUE.Name = 'deepwokendev';
            GUI_HIDETECHNIQUE.Parent = game.CoreGui;
            local FRAME_HIDE = Instance.new('Frame',GUI_HIDETECHNIQUE); FRAME_HIDE.Name = 'hideframe';
            FRAME_HIDE.BackgroundColor3 = Color3.fromRGB(0,0,0); FRAME_HIDE.Size = UDim2.new(0,0,0,0);
            if getgenv().dwdsettings['safeunwipe']  == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler') then game.Players.LocalPlayer.Character.CharacterHandler:Destroy() end
                local previous = tick()
                task.spawn(function()
                    repeat 
                        task.wait()
                        if game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler') then game.Players.LocalPlayer.Character.CharacterHandler:Destroy() end
                    until tick() - previous  > 3
                end)
            end
            task.wait(0.3)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2982.47021, -2264.27026, 1577.85266, 0.992967784, 3.1591243e-09, -0.118385077, -2.68579803e-09, 1, 4.15773105e-09, 0.118385077, -3.81053455e-09, 0.992967784)-- game:GetService("Workspace").Live.Synapseing.HumanoidRootPart.CFrame -- CFrame.new()
            task.wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2982.47021, -2264.27026, 1577.85266, 0.992967784, 3.1591243e-09, -0.118385077, -2.68579803e-09, 1, 4.15773105e-09, 0.118385077, -3.81053455e-09, 0.992967784)
            task.wait(0.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2982.47021, -2264.27026, 1577.85266, 0.992967784, 3.1591243e-09, -0.118385077, -2.68579803e-09, 1, 4.15773105e-09, 0.118385077, -3.81053455e-09, 0.992967784)
            task.wait(1)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2982.47021, -2264.27026, 1577.85266, 0.992967784, 3.1591243e-09, -0.118385077, -2.68579803e-09, 1, 4.15773105e-09, 0.118385077, -3.81053455e-09, 0.992967784)
            game.Debris:AddItem(GUI_HIDETECHNIQUE,0.5)
        end)
        sector:AddSeperator('Depths Teleports')
        sector:AddButton('To YunShul',function()
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(2202.72217, -2398.06323, 309.111298, 0.996405721, -7.00626899e-08, -0.0847091004, 6.78643488e-08, 1, -2.8831165e-08, 0.0847091004, 2.297881e-08, 0.996405721)
        end)
        sector:AddButton('To Campfire',function()
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(2895.71606, 1132.78711, 1425.57703, 0.409853607, 4.33053167e-08, 0.912151337, -3.21711653e-08, 1, -3.30206724e-08, -0.912151337, -1.58113291e-08, 0.409853607)
        end)
        sector:AddLabel('Unwipe is not safe.')
        sector:AddSeperator('Main Game')
    end

            --[[
                Zenoman   -   50s
                       50/100
                Talents: 5    Power: 5
            ]]


    sector:AddToggle("Auto Parry", true, function(e)
        getgenv().dwdsettings['autoparry'] = e
    end)
    sector:AddSlider("Distance", 0, 0, 100, 1, function(xstate)
        getgenv().dwdsettings['distance'] = xstate
    end)

    local ParryWhitelist = sector:AddDropdown("Auto Parry Whitelist", getgenv()['dwdsettings']['parrywhitelist'], "", false, function(dropdownv)
        getgenv()['dwdsettings']['selectedwhitelist'] = dropdownv -- selectedatrribute
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)

    for i,v in pairs(game.Players:GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(getgenv()['dwdsettings']['parrywhitelist'],v.Name)
            ParryWhitelist:Add(v.Name)
        end
    end
    game.Players.PlayerAdded:Connect(function(player)
        ParryWhitelist:Add(player.Name)
    end)
    game.Players.PlayerRemoving:Connect(function(player)
        ParryWhitelist:Remove(player.Name)
    end)
    sector:AddToggle("Roll Cancel", true, function(e)
        getgenv().dwdsettings['rollcancel'] = e
    end)
    sector:AddToggle("Roll Blatantly", false, function(e)
        getgenv().dwdsettings['rollblatant'] = e
    end)
    sector:AddSeperator('Adjust')
    sector:AddToggle("Roll Event", false, function(e)
        getgenv().dwdsettings['rollevent'] = e
    end)
    sector:AddToggle("Auto Loot", false, function(xstate)
        getgenv().AzfakeGlobalTables['dwd']['autoloot'] = xstate
    end)
    sector:AddToggle("No Mantra CD", false, function(xstate)
        getgenv().dwdsettings['nomantracd'] = xstate
    end)
    local nomantracdattachment = sector:AddKeybindAttachment('Reset Mantra Cooldowns'):AddKeybind();

    




    local speedbindtoggle = othersect:AddToggle("Speed", false, function(e)
        getgenv().Speeding = e
    end)
    local ToggleBindFlySpeed = othersect:AddToggle("Fly", false, function(e)
        getgenv().flying = e
        if getgenv().flying == false  then -- and getgenv().istyping == false
            -- getgenv().CFloop:Disconnect()
            --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
            Head.Anchored = false
            -- getgenv().CFloop = nil
        elseif getgenv().flying == true and getgenv().istyping == false then

            Players = game.Players
            -- getgenv().flying = true
            task.spawn(function()
                repeat wait()
                until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
                local mouse = game.Players.LocalPlayer:GetMouse()
                repeat wait() until mouse
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
                local plr = game.Players.LocalPlayer
                local torso = plr.Character.HumanoidRootPart
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = getgenv().CFspeed
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:findFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = getgenv().CFspeed --Options.FlySpeedSlide.Value
                            maxspeed = getgenv().CFspeed
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until getgenv().flying == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    plr.Character:WaitForChild('Humanoid').PlatformStand = false
                    print('stop flying')
                end
                mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)
    local ToggleBindNoclip= othersect:AddToggle("Noclip", false, function(e)
        getgenv().NoClip = e 
        if getgenv().NoClip ==false and getgenv().istyping == false then
            getgenv().NoclipFunction:Disconnect()
        elseif getgenv().NoClip == true and getgenv().istyping == false then --  
            task.wait(0.1)
            local function NoclipLoop()
                pcall(function()
                    if getgenv().NoClip == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
                        for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            pcall(function()
                                if child:IsA("BasePart") and child.CanCollide == true then
                                    child.CanCollide = false
                                end
                            end)
                        end
                    else
                        getgenv().NoClip = false
                        ToggleBindNoclip:Set(false)
                    end
                end)
            end
            getgenv().NoclipFunction = game:GetService('RunService').Stepped:Connect(NoclipLoop)
        end
    end)
    local speedbind = speedbindtoggle:AddKeybind()
    local flybind = ToggleBindFlySpeed:AddKeybind()
    local noclipbind = ToggleBindNoclip:AddKeybind()
    othersect:AddButton('Remove Keybind',function()
        speedbind:Unbind()
        flybind:Unbind()
        noclipbind:Unbind()
    end)
    othersect:AddSlider("Speed", 0, 0, 200, 1, function(State)
        getgenv().Speed = State
    end)
    othersect:AddSlider("Fly Speed", 0, 200, 300, 1, function(State)
        getgenv().FlySpeedSlide = State
        getgenv().CFspeed = State
    end)
    othersect:AddToggle("Quick Depths", true, function(e)
        getgenv()['dwdsettings']['quickdepths'] = e
    end)
    othersect:AddButton('TO Depths',function()
        local GUI_HIDETECHNIQUE = Instance.new('ScreenGui'); GUI_HIDETECHNIQUE.Name = 'deepwokendev';
        GUI_HIDETECHNIQUE.Parent = game.CoreGui;GUI_HIDETECHNIQUE.Enabled = true
        local FRAME_HIDE = Instance.new('Frame',GUI_HIDETECHNIQUE); FRAME_HIDE.Name = 'hideframe'; FRAME_HIDE.Visible = true
        FRAME_HIDE.BackgroundColor3 = Color3.fromRGB(0,0,0); FRAME_HIDE.Size = UDim2.new(0,0,0,0);
        task.wait(.1)
        -- game:GetService('TeleportService'):teleport(10495850838)
        if getgenv()['dwdsettings']['quickdepths'] == true then 
            game:GetService('TeleportService'):teleport(10495850838)
        else
            if game.Players.LocalPlayer.Character:FindFirstChild('Left Leg') then 
                firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Left Leg'),game:GetService("Workspace").DepthsWhirlpool.Part,0)
            end
        end 
    end)
    othersect:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    
    othersect:AddButton('Safe Cheat',function()
        if game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler') then  game.Players.LocalPlayer.Character.CharacterHandler.Disabled = true end
        local previous = tick()
        task.spawn(function()
            while true do 
                task.wait()
                if game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler') then game.Players.LocalPlayer.Character.CharacterHandler:Destroy() end
            end
        end)
    end)



    -- sector:AddSeperator()

    tpsect:AddToggle("Teleport to Chests", false, function(xstate)
        getgenv()['dwdsettings']['tptochests'] = xstate
    end)
    tpsect:AddToggle("Safe Location", true, function(xstate)
        getgenv()['dwdsettings']['safelocationaftertp'] = xstate
    end)
    tpsect:AddToggle("Log Picks in Chatlogger", false, function(xstate)
        getgenv()['dwdsettings']['logchatlogger'] = xstate
    end)
    tpsect:AddToggle("Loop goto primadon", false, function(xstate)
        getgenv()['dwdsettings']['loopprima'] = xstate
    end)
    tpsect:AddSlider("Teleport Delay", 0, getgenv()['dwdsettings']['safedelay'], 1, 1000, function(xstate)
        getgenv()['dwdsettings']['safedelay'] = xstate
    end)
    tpsect:AddButton('Teleport to Safe Location',function()
        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame  =  getgenv()['dwdsettings']['safelocationcframe']
    end)
    tpsect:AddSeperator('Cheats')
    tpsect:AddButton('Set safe location',function()
        getgenv()['dwdsettings']['safelocationcframe'] = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
    end)

    tpsect:AddSeperator('Teleports')
    tpsect:AddButton('Set safe location',function()
        getgenv()['dwdsettings']['safelocationcframe'] = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
    end)
    tpsect:AddButton('To Primadon Campfire',function()
        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = game:GetService("Workspace").NPCs.MonkyCampfire.HumanoidRootPart.CFrame
    end)
    tpsect:AddButton('To Primadon',function()
        for _,v in next, workspace.Live:GetChildren() do 
            if v:FindFirstChild('MonkyController') then 
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v.HumanoidRootPart.CFrame
            end
        end
        -- game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = game:GetService("Workspace").NPCs.MonkyCampfire.HumanoidRootPart.CFrame
    end)
    tpsect:AddLabel('Safe Location After TP To the chest')
    -- game:GetService("Workspace").Live[".24monky"].MonkyController
    -- game:GetService("Workspace").NPCs.MonkyCampfire.HumanoidRootPart
    
    local Attach_to_back = sector:AddKeybindAttachment('Attach to back'):AddKeybind();

    local AttributeDropdown = sector:AddDropdown("Attributes", getgenv()['dwdsettings']['attributes'], "", false, function(dropdownv)
        getgenv()['dwdsettings']['selectedatrribute'] = dropdownv -- selectedatrribute
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    
    sector:AddToggle("Auto Assign Stat", false, function(xstate)
        getgenv()['dwdsettings']['autoassignstat'] = xstate
    end)
    sector:AddButton('Increase Attribute',function()

        local ohString1 = getgenv()['dwdsettings']['selectedatrribute']
        local ohBoolean2 = true
        local ohBoolean3 = true

        game:GetService("ReplicatedStorage").Requests.IncreaseAttribute:InvokeServer(ohString1, ohBoolean2, ohBoolean3)
    end)




    sector:AddToggle("Auto Open Chest", false, function(xstate)
        getgenv().dwdsettings['autoopenchest'] = xstate
    end)
    




    sector:AddButton('Load Own Character',function()
        if game.Players.LocalPlayer.Character:FindFirstChild('Shirt') then 

            game.Players.LocalPlayer.Character:FindFirstChild('Shirt'):Destroy()
        end
        if game.Players.LocalPlayer.Character:FindFirstChild('Pants') then 
    
            game.Players.LocalPlayer.Character:FindFirstChild('Pants'):Destroy()
        end
        game.Players.LocalPlayer.Character.Humanoid:ApplyDescriptionClientServer(game.Players:GetHumanoidDescriptionFromUserId(game.Players.LocalPlayer.UserId))
    

    end,{
        ask = 'Are you sure you want to Load your own character?',
        accept = 'Yes',
        reject = 'No'
    })


    sector:AddToggle('No Anims',false,function(xstate)
        getgenv().dwdsettings['noanims'] = xstate
    end)

    if getgenv().adminCheck == true and table.find(brokenfeaturewhitelist,game.Players.LocalPlayer.Name) then 
        sector:AddSeperator('Admin')
        sector:AddLabel('Dont abuse these features or it will become\nprivate.')
        sector:AddDropdown("Mantras", getgenv()['dwdsettings']['mantras'], "", false, function(dropdownv)
            getgenv()['dwdsettings']['selectedmantra'] = dropdownv -- selectedatrribute
            --PlayerTP:updateText(getgenv().selectedPlayer)
        end)
    
        sector:AddButton("Give Mantra", function()          
            game:GetService("ReplicatedStorage").Requests.TalentChoice:InvokeServer(getgenv()['dwdsettings']['selectedmantra'], false)
        end)    
    end



    guisector:AddButton('Enable Watermark',function()
        wtm:SetState('Active')
    end)
    guisector:AddButton('Disable Watermark',function()
        wtm:SetState('Disable')
    end)
    guisector:AddSeperator('Chat Logger')

    guisector:AddButton('Enable Chat Logger',function()
        if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = true end
    end)
    guisector:AddButton('Disable Chat Logger',function()
        if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = false end
    end)
    local function indexfire(info)
        if game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler') then 
            for i,v in next, game.Players.LocalPlayer.Character:WaitForChild('CharacterHandler').Requests:GetChildren() do 
                if info._ == i then        
                    v:FireServer(info.a)
                    break
                end
            end
        end
    end
     
    local function findvalue(info) -- findattribute
        local effects = require(game:GetService("ReplicatedStorage").EffectReplicator)
        local values = effects:GetEffects()
        local endvalue = false
        for _,v in next, values do 
            -- print(v.Class)
            if not v.Disabled then 
                if v.Class == info.value then 
                    --print(v.Class)
                    print('found')
                    endvalue = true
                    break
                end
            end
        end
        return endvalue
    end
    -- getgenv().OpenedParry = false
    getgenv().roll = function()
        task.spawn(function()
            pcall(function()
                print('roll')
                if getgenv().dwdsettings['rollevent'] == true then 
                    print('using the roll event')
                    for _,v in next, game:GetService("Workspace").Live:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.Requests:GetChildren() do 
                        if _ == 9 then
                            local ohString1 = "roll"
                            local ohNil2 = nil
                            local ohNil3 = nil
                            local ohBoolean4 = false
						    v:FireServer(ohString1, ohNil2, ohNil3, ohBoolean4)
                            break
                        end
                    end
                else
                    print('key press')
                    local inputManager = game:GetService('VirtualInputManager')
                    inputManager:SendKeyEvent(true,Enum.KeyCode.Q,false,game)
                    inputManager:SendKeyEvent(false,Enum.KeyCode.Q,false,game)
                    if getgenv().dwdsettings['rollblatant'] == true then 
                        task.wait(.05)
                    else
                        task.wait(.2)
                    end
                    if getgenv().dwdsettings['rollcancel'] == true then 
                        local m = game.Players.LocalPlayer:GetMouse();
                        inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                        inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                    end
                end

            end)
        end)
    end
    getgenv().alreadyparrying = false
    getgenv().parry = function()
        task.spawn(function()
            pcall(function()
                
                if getgenv().dwdsettings['rollnotparry'] == false then 
                    -- local inputManager = game:GetService('VirtualInputManager')
                    -- local m = game.Players.LocalPlayer:GetMouse();
                    -- inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                    -- inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                    -- local inputManager = game:GetService('VirtualInputManager')
                    -- inputManager:SendKeyEvent(true,Enum.KeyCode.F,false,game)
                    -- task.wait(.4)
                    -- inputManager:SendKeyEvent(false,Enum.KeyCode.F,false,game)
                    -- for _,v in next, game:GetService("Workspace").Live:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.Requests:GetChildren() do 
                    --     if _ == 3 then
                    --         v:FireServer()
                    --     end
                    -- end
                    -- logIt('waiting parry cooldown','x')
                    -- if findvalue{value = 'ParryCool'} then  -- findvalue(value == 'TrueStun')
                    --     getgenv().roll()
                    --     return
                    -- end
                    repeat task.wait(0.001) until findvalue{value = 'ParryCool'} == false and findvalue{value = 'Blocking'} == false -- and findvalue{value = 'Stun'} == false
                    -- logIt('no parry cd','x')
                    task.spawn(function()
                        indexfire{_=4;a=nil}
                        -- indexfire{_=3;a=nil}
                    end)
                    
                    -- if getgenv().dwdsettings['alreadyparrying'] == true then 
                    --     getgenv().dwdsettings['alreadyparrying'] = false
                    --     indexfire{_=3;a=nil}
                    --     indexfire{_=2;a=nil}
                    --     task.wait(.1)
                    --     indexfire{_=3;a=nil}
                    -- else
                    --     getgenv().dwdsettings['alreadyparrying'] = true
                    --     indexfire{_=2;a=nil}
                    --     task.wait(.1)
                    --     indexfire{_=3;a=nil}
                    --     getgenv().dwdsettings['alreadyparrying'] = false
                    -- end
                    
                    print('parry attack')
                    indexfire{_=3;a=nil}        
                    indexfire{_=3;a=nil}   
                    indexfire{_=3;a=nil}   
                    indexfire{_=3;a=nil}  
                    -- if find hit then return end (if the player was hit)
                    repeat task.wait(0.01) indexfire{_=2;a=nil} until findvalue{value = 'ParryCool'} or findvalue{value = 'Blocking'}
                    task.wait(.4)
                    indexfire{_=3;a=nil}        
                    indexfire{_=3;a=nil}   
                    indexfire{_=3;a=nil}   
                    indexfire{_=3;a=nil}               
                    -- indexfire{_=2;a=nil}
                    -- indexfire{_=2;a=nil}
                    -- indexfire{_=2;a=nil}
                    -- task.delay(.1,function()
                    --     indexfire{_=3;a=nil}
                    --     indexfire{_=3;a=nil}
                    --     indexfire{_=3;a=nil}

                    --     indexfire{_=3;a=nil}
                    --     indexfire{_=3;a=nil}

                    --     indexfire{_=3;a=nil}
                    --     indexfire{_=3;a=nil}

                    -- end)
                    -- task.wait(.4)

                    
                else
                    if getgenv().dwdsettings['rollevent'] == true then 
                        print('using the roll event')
                        for _,v in next, game:GetService("Workspace").Live:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.Requests:GetChildren() do 
                            if _ == 9 then
                                local ohString1 = "roll"
                                local ohNil2 = nil
                                local ohNil3 = nil
                                local ohBoolean4 = false
                                v:FireServer(ohString1, ohNil2, ohNil3, ohBoolean4)
                                break
                            end
                        end
                    else
                        print('key press')
                        local inputManager = game:GetService('VirtualInputManager')
                        inputManager:SendKeyEvent(true,Enum.KeyCode.Q,false,game)
                        inputManager:SendKeyEvent(false,Enum.KeyCode.Q,false,game)
                        if getgenv().dwdsettings['rollblatant'] == true then 
                            task.wait(.05)
                        else
                            task.wait(.2)
                        end
                        if getgenv().dwdsettings['rollcancel'] == true then 
                            local m = game.Players.LocalPlayer:GetMouse();
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                        end
                    end
    
                    getgenv().dwdsettings['rollnotparry'] = false
                end

            end)
        end)
    end
    getgenv().quickparry = function()
        task.spawn(function()
            pcall(function()
                
                if getgenv().dwdsettings['rollnotparry'] == false then 
                    -- local inputManager = game:GetService('VirtualInputManager')
                    -- local m = game.Players.LocalPlayer:GetMouse();
                    -- inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                    -- inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                    -- local inputManager = game:GetService('VirtualInputManager')
                    -- inputManager:SendKeyEvent(true,Enum.KeyCode.F,false,game)
                    -- task.wait(.4)
                    -- inputManager:SendKeyEvent(false,Enum.KeyCode.F,false,game)
                    -- for _,v in next, game:GetService("Workspace").Live:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.Requests:GetChildren() do 
                    --     if _ == 3 then
                    --         v:FireServer()
                    --     end
                    -- end
                    -- logIt('waiting parry cooldown','x')
                    -- if findvalue{value = 'TrueStun'} or findvalue{value = 'Stun'} then  -- findvalue(value == 'TrueStun')
                    --     getgenv().roll()
                    --     return
                    -- end
                    repeat task.wait(0.001) until findvalue{value = 'ParryCool'} == false and findvalue{value = 'Blocking'} == false -- and findvalue{value = 'Stun'} == false
                    -- logIt('no parry cd','x')
                    task.spawn(function()
                        indexfire{_=4;a=nil}
                        indexfire{_=3;a=nil}
                    end)
                    indexfire{_=4;a=nil}
                    print('quick parry attack')
                    indexfire{_=2;a=nil}
                    indexfire{_=2;a=nil}
                    indexfire{_=2;a=nil}
                    indexfire{_=2;a=nil}
                    indexfire{_=2;a=nil}
                    task.delay(.105,function()
                        indexfire{_=3;a=nil}
                    end)
                    -- task.wait(.4)

                    
                else
                    if getgenv().dwdsettings['rollevent'] == true then 
                        print('using the roll event')
                        for _,v in next, game:GetService("Workspace").Live:FindFirstChild(game.Players.LocalPlayer.Name).CharacterHandler.Requests:GetChildren() do 
                            if _ == 9 then
                                local ohString1 = "roll"
                                local ohNil2 = nil
                                local ohNil3 = nil
                                local ohBoolean4 = false
                                v:FireServer(ohString1, ohNil2, ohNil3, ohBoolean4)
                                break
                            end
                        end
                    else
                        print('key press')
                        local inputManager = game:GetService('VirtualInputManager')
                        inputManager:SendKeyEvent(true,Enum.KeyCode.Q,false,game)
                        inputManager:SendKeyEvent(false,Enum.KeyCode.Q,false,game)
                        if getgenv().dwdsettings['rollblatant'] == true then 
                            task.wait(.05)
                        else
                            task.wait(.2)
                        end
                        if getgenv().dwdsettings['rollcancel'] == true then 
                            local m = game.Players.LocalPlayer:GetMouse();
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                            inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
                        end
                    end
    
                    getgenv().dwdsettings['rollnotparry'] = false
                end

            end)
        end)
    end

    getgenv().ParryObjects = {}
    getgenv().ParryAct = function(v,animx)
        if not findvalue{value = 'HasWeapon'} then return end
        if getgenv()['dwdsettings']['selectedwhitelist'] ~= 'All' and 
        getgenv()['dwdsettings']['selectedwhitelist'] ~= 'Mobs' and 
        getgenv()['dwdsettings']['selectedwhitelist'] ~= v.Name then print('isnt all and isnt mobs so return end \nMode = '..getgenv()['dwdsettings']['selectedwhitelist'])return end
        
        if getgenv()['dwdsettings']['selectedwhitelist'] == 'Mobs' and game.Players:FindFirstChild(v.Name) then print('player when mob '..v.Name) return end
        -- local AlreadyRegistered = false 
        -- for _,v in next, getgenv().ParryObjects do 
        --     if v == anim then AlreadyRegistered = true end
        -- end
        -- if AlreadyRegistered then return end 
        -- repeat task.wait(0.001) until not findvalue{value = 'ParryCooldown'}
        local function detect(v,dect)
            local x = false
            if v:FindFirstChild('Humanoid') then 
                for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                    if anim.Animation.AnimationId == dect and animx.Animation.AnimationId == dect then
                        -- rconsoleprint('\ndetected '..anim.Animation.AnimationId)
                        x = true
                        break
                    elseif anim.Animation.AnimationId == dect then 
                        x = true
                    end
                end
            end
            return x
        end
        --[[
            we detect the animation
            another animation could run while the animation is still playing
            causing the parry to run TWICE or more

            to fix this
            i need to 
            check if the animation given is detected with parryact
            change the players animation id for the attack so we dont detect it
        ]]

        local cancelAll = false 

        local AnimationLength = animx.Length
        local CurrentLength = animx.TimePosition
        -- print('Animation Length = '..AnimationLength)
        local LengthReached = false
        local Feinted = false

        -- task.spawn(function()
        --     task.wait(AnimationLength)
        --     LengthReached = true
        -- end)

        -- local function 
        --     task.spawn(function()
        --         -- task.wait(.1)
        --         -- for i,animx in pairs(v:FindFirstChild('Humanoid'):GetPlayingAnimationTracks()) do 
        --         --     if anim.Animation.AnimationId == animx.Animation.AnimationId then 
        --         --         animx.Animation.AnimationId = ''
        --         --     end
        --         -- end
        --         table.insert(getgenv().ParryObjects,{
        --             holder = v 
        --             animation = anim
        --         })
        --     end)
        -- end

        task.spawn(function()
            task.wait(.1)
            local BreakThis = false

            repeat 
                task.wait(0.01)
                CurrentLength = animx.TimePosition
                -- if not detect(v,anim.Animation.AnimationId) and LengthReached == false then 
                --     Feinted = true;
                --     getgenv().dwdsettings['rollnotparry'] = true
                -- end
                if Feinted == false and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart'):FindFirstChild('Feint') and v:FindFirstChild('HumanoidRootPart'):FindFirstChild('Feint') .Playing == true then 
                    print('FEINTED')
                    Feinted = true;
                    getgenv().dwdsettings['rollnotparry'] = true
                    BreakThis = true;
                end
                if not detect(v,animx.Animation.AnimationId) and BreakThis == false then 
                    BreakThis = true      
                end
            until BreakThis == true
            -- for _,obj in next, getgenv().ParryObjects do 
            --     if obj['holder'] == v and obj['animation'] == animx then 
            --         table.remove(getgenv().ParryObjects,_)
            --     end
            -- end
        end)

        -- if v:FindFirstChild('Torso') and v:FindFirstChild('Torso'):FindFirstChild('CriticalCharge') and 
        --     v:FindFirstChild('Torso'):FindFirstChild('CriticalCharge').Playing == true or
        --     v:FindFirstChild('CharacterHandler') and v:FindFirstChild('CharacterHandler'):FindFirstChild('CriticalCharge') and 
        --     v:FindFirstChild('CharacterHandler'):FindFirstChild('CriticalCharge').Playing == true
        -- then 
        --     local Crit = v:FindFirstChild('Torso'):FindFirstChild('CriticalCharge') or v:FindFirstChild('CharacterHandler'):FindFirstChild('CriticalCharge')
        --     local foundCritical = false 
        --     for _,v in next, getgenv().ParryObjects do 
        --         if v == Crit then 
        --             foundCritical = true
        --             break
        --         end
        --     end
        --     if foundCritical == false then 
        --         -- task.wait(.26)
        --         print('CRITICAL DETECTED')
        --         table.insert(getgenv().ParryObjects,Crit)
        --         task.wait(Crit.TimeLength-1)
        --         print('PARRY CRITICAL')
        --         getgenv().parry()

        --         -- task.wait(.1)
        --         task.delay(.5,function()
        --             for _,v in next, getgenv().ParryObjects do 
        --                 if v == Crit then 
        --                     table.remove(getgenv().ParryObjects,_)
        --                     break
        --                 end
        --             end
        --         end)


        --         return
        --     else
        --         return
        --     end
        -- end





        if detect(v,'rbxassetid://10495930879') then -- Sword slash 1
            
            task.wait(.16)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495930927') then -- Sword slash 2
            
            task.wait(.16)
            getgenv().parry()
            
        end


        if detect(v,'rbxassetid://10495931227') then -- Sword Running attack
            
            task.wait(.2)
            getgenv().parry()
            
        end



        if detect(v,'rbxassetid://10495932450') then -- 2 HAND Sword slash 1
            print('sword 2')
            task.wait(.16)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495932503') then -- 2 HAND Sword slash 2
            print('sword 2')
            task.wait(.16)
            getgenv().parry()
            
        end




        if detect(v,'rbxassetid://10495933846') then -- Dagger-Slash1
            
            task.wait(.1)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495933923') then -- Dagger-Slash2
            
            task.wait(.1)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495933537') then -- Dagger-RunningAttack
            
            task.wait(.2)
            getgenv().parry()
            
        end












        if detect(v,'rbxassetid://10495934354') then -- Greataxe-Slash1
            
            task.wait(.25)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495934515') then -- Greataxe-Slash2
            
            task.wait(.25)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495934626') then -- Greataxe-Slash3
            
            task.wait(.25)
            getgenv().parry()
            
        end








        if detect(v,'rbxassetid://10495936565') then -- Spear-Slash1
            
            task.wait(.18)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495936682') then -- Spear-Slash2
            
            task.wait(.18)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495936961') then -- Spear-RunningAttack
            
            task.wait(.18)
            getgenv().parry()
            
        end





        if detect(v,'rbxassetid://10495937166') then -- 2 hand Spear-Slash1
            
            task.wait(.18)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495937257') then -- 2 hand Spear-Slash2
            
            task.wait(.18)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495937087') then -- 2 hand Spear-RunningAttack
            
            task.wait(.18)
            getgenv().parry()
            
        end





        if detect(v,'rbxassetid://10495939094') then -- Karate-Slash1
            
            
            task.wait(.15)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495938893') then -- Karate-Slash2
            
            task.wait(.15)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495938967') then -- Karate-Slash3
            
            task.wait(.15)
            getgenv().parry()
            
        end

        


        if detect(v,'rbxassetid://10495941011') then -- Greatsword-Slash1
            
            task.wait(.42)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495941091') then -- Greatsword-Slash2
            
            task.wait(.42)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495940225') then -- Greatsword-RunningAttack
            
            task.wait(.42)
            getgenv().parry()
            
        end



        if detect(v,'rbxassetid://10495940500') then -- 2 hand Greatsword-Slash1
            
            task.wait(.42)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495940398') then -- 2 hand Greatsword-Slash2
            
            task.wait(.42)
            getgenv().parry()
            
        end



        if detect(v,'rbxassetid://10495941409') then -- Club-Slash1
            
            task.wait(.13)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495941460') then -- Club-Slash2
            
            task.wait(.13)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495941515') then -- Club-Slash3
            
            task.wait(.13)
            getgenv().parry()
            
        end





        if detect(v,'rbxassetid://10495931657') then -- 2 hand Club-Slash1
            
            task.wait(.13)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495931803') then -- 2 hand Club-Slash2
            
            task.wait(.13)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495931908') then -- 2 hand Club-Slash3
            
            task.wait(.13)
            getgenv().parry()
            
        end







        if detect(v,'rbxassetid://10495943055') then -- Legion Kata-Slash1
            
            task.wait(.12)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495942809') then -- Legion Kata-Slash2
            
            task.wait(.12)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495942893') then -- Legion Kata-Slash3
            
            task.wait(.12)
            getgenv().quickparry()
            
        end

        if detect(v,'rbxassetid://10495943484') then -- Jus Karita-Slash3
            
            task.wait(.12)
            getgenv().quickparry()
            
        end




        if detect(v,'rbxassetid://10495943843') then -- Jus Karita-Slash1
            
            task.wait(.12)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495943734') then -- Jus Karita-Slash2
            
            task.wait(.12)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495943649') then -- Jus Karita-Slash3
            
            task.wait(.12)
            getgenv().quickparry()
            
        end



        if detect(v,'rbxassetid://10495943900') then -- Rapier-Slash1
            
            task.wait(.15)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495943948') then -- Rapier-Slash2
            
            task.wait(.15)
            getgenv().quickparry()
            
        end



        if detect(v,'rbxassetid://10495945813') then -- 2 hand FirstLight-Slash1
            task.wait(.15)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495945662') then -- 2 hand FirstLight-Slash2
            task.wait(.15)
            getgenv().parry()
            
        end





        if detect(v,'rbxassetid://10495947775') then -- SorenStyle-Slash2
            task.wait(.15)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495947838') then -- SorenStyle-Slash3
            task.wait(.15)
            getgenv().parry()
            
        end




        if detect(v,'rbxassetid://10495948728') then -- Railblade-Slash1
            task.wait(.3)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495948813') then -- Railblade-Slash2
            task.wait(.3)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495949033') then -- Railblade-Slash3
            task.wait(.3)
            getgenv().parry()
            
        end






        if detect(v,'rbxassetid://10495949493') then -- Rifle-Slash1
            task.wait(.2)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495949583') then -- Rifle-Slash2
            task.wait(.2)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495949661') then -- Rifle-Slash3
            task.wait(.2)
            getgenv().parry()
            
        end



        if detect(v,'rbxassetid://10495951019') then -- DualSword-Slash1
            print('duals 2')
            task.wait(.12)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495951118') then -- DualSword-Slash2
            task.wait(.12)
            getgenv().parry()
            
        end





        -- EXTRAS
        if detect(v,'rbxassetid://10495932256') then -- Sword-FollowupStrike2
            task.wait(.18)
            getgenv().parry()
            
        end

        if detect(v,'rbxassetid://10495932382') then -- Sword-AerialStab
            task.wait(.18)
            getgenv().parry()
            
        end


        if detect(v,'rbxassetid://10495934238') then -- Dagger-AerialStab
            task.wait(.13)
            getgenv().parry()
            
        end

        if detect(v,'rbxassetid://10495935670') then -- Greataxe-AerialStab
            task.wait(.23)
            getgenv().parry()
            
        end

        if detect(v,'rbxassetid://10495937661') then -- Spear-FollowupStrike1
            task.wait(.16) -- lowest swing speed *animation speed / 2
            getgenv().parry() -- lowest swing speed out of all the spears is the base spear swing speed
            
        end

        if detect(v,'rbxassetid://10495938570') then -- Karate-FollowupStrike1
            task.wait(.13)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495938664') then -- Karate-FollowupStrike2
            task.wait(.13)
            getgenv().parry()
            
        end

        if detect(v,'rbxassetid://10495941211') then -- Greatsword-FollowupStrike1
            task.wait(.23)
            getgenv().parry()
            
        end


        -- PARRY DAGGER

        
        if detect(v,'rbxassetid://10495935826') then -- Parry Dagger-SW1    
            task.wait(.02)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495935882') then -- Parry Dagger-SW2
            task.wait(.02)
            getgenv().parry()
            
        end



        -- TWO HAND MAIN SWORD STUFF

        if detect(v,'rbxassetid://10495935952') then -- DualSword-SW1    
            task.wait(.16)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10495936014') then -- Parry Dagger-SW2
            task.wait(.16)
            getgenv().parry()
            
        end


        -- prima

        -- rbxassetid://10495958133 -- triple stomp
        -- rbxassetid://10495958630 
        -- rbxassetid://10495958518 kick

        
        -- rbxassetid://10543211063 stomp

        -- rbxassetid://10543245128 kick

        -- rbxassetid://10543222215 -- triple stomp


        if detect(v,'rbxassetid://10543222215') then -- triple stomp
            print('prima stomp')   
            task.wait(.2)
            getgenv().parry()
            task.wait(.2)
            getgenv().parry()
            task.wait(.2)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10543211063') then -- stomp
            task.wait(.2)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://10543222215') then -- kick
            task.wait(.2)
            getgenv().roll()
            
        end

        --  Critical

        if detect(v,'rbxassetid://10495917979') then -- sword crit like fakewoken 3 base sword
            task.wait(.65)
            getgenv().parry()
            
        end
        if detect(v,'rbxassetid://11822301156') then -- spear
            task.wait(.45)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10495921213') then -- axe
            task.wait(.75)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10495921369') then -- shattered katana
            task.wait(.37)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10495921107') then -- Krulian knife
            task.wait(.37)
            getgenv().quickparry()
            task.wait(.37)
            getgenv().quickparry()
            task.wait(.37)
            getgenv().quickparry()
            
        end
        if detect(v,'rbxassetid://10495921302') then --greatsword
            task.wait(.8)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10495921432') then --Rapier
            task.wait(.4)
            getgenv().quickparry()
            task.wait(.2)
            getgenv().quickparry()
            task.wait(.15)
            getgenv().quickparry() -- paquickparryrry
        end
        if detect(v,'rbxassetid://11827357861') then --club
            task.wait(.5)
            getgenv().parry()
        end


        -- MANTRAS

        -- local mantraTiming = {
        --     ['rbxassetid://12480375718'] = .65
        -- }
        if detect(v,'rbxassetid://12480375718') then --fire blade
            task.wait(.6) -- 65
            getgenv().parry()
        end

        if detect(v,'rbxassetid://12474502093') then -- grand javelin .28
            task.wait(.28)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12484027120') then -- ash slam
            task.wait(.38)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12477380180') then -- gale lunge
            task.wait(.45)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12486582512') then -- ice lance
            task.wait(.45)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12485973064') then -- eclipse kick
            task.wait(.85)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12499110173') then -- fire palm
            task.wait(.75) -- 85
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12499110173') then -- shadow gun
            task.wait(.4)
            getgenv().parry()
        end

        if detect(v,'rbxassetid://12478259578') then -- astral wind
            task.wait(.4)
            getgenv().parry()
            task.wait(.1)
            getgenv().parry()
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12489065130') then -- crystal impale
            task.wait(.4)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12487832744') then -- ice blade
            task.wait(.4)
            getgenv().parry()
            task.wait(.25)
            getgenv().parry()
            task.wait(.25)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12494311563') then -- thunder kick
            task.wait(.4)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12484405342') then -- Shadow eruption
            task.wait(.4)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://12494468003') then -- lightning blade
            task.wait(.4)
            getgenv().parry()
            task.wait(.25)
            getgenv().parry()

            task.wait(.4)
            getgenv().parry()
            task.wait(.25)
            getgenv().parry()
        end
        
    end



    local function keepAlive(c)
        task.spawn(function()
            task.wait(1)
            repeat task.wait(.1) until getgenv().loopsUnload == true 
            c:Disconnect()
        end)
    end



    local cam = workspace.CurrentCamera
    local worldToViewportPoint = cam.worldToViewportPoint
    local head_offset =  Vector3.new(0,1.5,0)
    local leg_offset = Vector3.new(0,10,0)
    getgenv().CreatePlayerEsp = function(v)
        -- print(v.Name)
        task.wait(0.1)
        -- 
            local esp = Drawing.new('Text')
            esp.Visible = false
            esp.Center = true 
            esp.Outline = true 
            esp.Font = 2 
            esp.Size = 13
            esp.Color = Color3.new(5,0,0)
            esp.Text = 'SEXY'

            local tracer = Drawing.new('Line')
            tracer.Visible = false
            tracer.Color = Color3.new(1,0,0)
            tracer.Thickness = 1 
            tracer.Transparency = 1 
            
            
            local box_o = Drawing.new('Square')
            box_o.Visible = false
            box_o.Color = Color3.new(0,0,0)
            box_o.Thickness = 2
            box_o.Transparency =1 
            box_o.Filled = false
            
            local box = Drawing.new('Square')
            box.Visible = false
            box.Color = Color3.new(1,0,0)
            box.Thickness = 1.5
            box.Transparency =1 
            box.Filled = false
        
            local hb_o = Drawing.new('Square')
            hb_o.Visible = false
            hb_o.Color = Color3.new(0,0,0)
            hb_o.Thickness = 1
            hb_o.Transparency =1 
            hb_o.Filled = false
            
            local hb = Drawing.new('Square')
            hb.Visible = false
            hb.Color = Color3.new(1,0,0)
            hb.Thickness = 1
            hb.Transparency =1 
            hb.Filled = true
            local health = Drawing.new('Text')
            health.Visible = false
            local distancex = Drawing.new('Text')
            distancex.Visible = false
        local function rootesp()
            local xkeeptracer
            local plsstoptracer = false
            cam = workspace.CurrentCamera
            xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.2)
                if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if onscreen and getgenv()['dwdsettings']['espsettings']['esp'] and getgenv().tracers and tracer then 
                        tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                        tracer.To = Vector2.new(vect.X,vect.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                    if not v or getgenv().loopsUnload == true then 
                        plsstoptracer = true
                    end
                elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                    xkeeptracer:Disconnect()
                    if tracer then 
                        pcall(function()
                            tracer:Remove()
                        end)
                    end
                else
                    tracer.Visible = false
                end
            end) 
        end
        local function boxroot()
            local xkeeprunning 
            xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v.Character and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    local vroot = v.Character.HumanoidRootPart
                    local head = v.Character.Head
                    
                    local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                    local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                    if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                    elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                    local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                    local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                    
                    if onscreen and getgenv()['dwdsettings']['espsettings']['esp'] and box then 
                        cam = workspace.CurrentCamera
                        --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))

    
                        if box_o and cam.ViewportSize and rootpos and headpos then 
                            box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                            box_o.Visible = true 
                        end
                        if box then 
                            box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                            box.Visible = true
                        end

                        hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                        hb_o.Position = box_o.Position - Vector2.new(6,0)
                        hb_o.Visible = true
                        hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                        hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                        hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                        hb.Visible = true

                        local Talents = #v.Backpack:GetChildren()-1
                        local Power = Talents--#Talents-1
                        esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,-15)
                        local preframework = getgenv()['dwdsettings']['espsettings']['espframework']
                        
                        preframework = string.gsub(
                            preframework,
                            '{health}',
                            '['..math.floor(v.Character.Humanoid.Health)..'/'..math.floor(v.Character.Humanoid.MaxHealth)..']'
                        )

                        if getgenv()['dwdsettings']['espsettings']['displaytalents'] == true then 
                            preframework = string.gsub(
                                preframework,
                                '{Talents}',
                                'Talents = '..Talents
                            )
                        else
                            preframework = string.gsub(
                                preframework,
                                '{Talents}',
                                ''
                            )
                        end
                        -- if getgenv()['dwdsettings']['espsettings']['estimatedlevel'] == true then 
                        --     preframework = string.gsub(
                        --         preframework,
                        --         '{Power}',
                        --         Talents
                        --     )
                        -- else
                        --     preframework = string.gsub(
                        --         preframework,
                        --         '{Power}',
                        --         ''
                        --     )
                        -- end
                        preframework =string.gsub(
                            preframework,
                            '{name}',
                            v.Name
                        )
                        preframework = string.gsub(
                            preframework,
                            '{distance}',
                            tostring(math.floor(distance))..'s'
                        )
                        esp.Text = preframework
                        if getgenv()['dwdsettings']['espsettings']['esp'] == true then esp.Visible = true end
                     
                    else
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)
                       
                        
                        
                    end
                end
                if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true or getgenv()['dwdsettings']['espsettings']['esp'] == false then 
                    xkeeprunning:Disconnect()
                    pcall(function()
                        box:Remove()
                    end)
                    pcall(function()
                        box_o:Remove()
                    end)
                    pcall(function()
                        hb:Remove()
                    end)
                    pcall(function()
                        hb_o:Remove()
                    end)
                    pcall(function()
                        esp:Remove()
                    end)
                    pcall(function()
                        distancex:Remove()
                    end)
                    pcall(function()
                        health:Remove()
                    end)
                end
            end) 
        end
        task.spawn(function()
            coroutine.wrap(rootesp)()
            coroutine.wrap(boxroot)()
        end)

    end




    espsector:AddToggle('Esp', false, function(xstate)
        getgenv()['dwdsettings']['espsettings']['esp'] = xstate
        for _,v in next, game:GetService('Players'):GetPlayers() do 
            if getgenv()['dwdsettings']['espsettings']['esp'] == true then 
                getgenv().CreatePlayerEsp(v)
            end 
        end    
    end)
    espsector:AddToggle('Display Talents', false, function(xstate)
        getgenv()['dwdsettings']['espsettings']['displaytalents'] = xstate    
    end)
    espsector:AddToggle('Estimate Level', false, function(xstate)
        getgenv()['dwdsettings']['espsettings']['estimatedlevel'] = xstate
    end)



    

    local function waitforchildwhichisa(v,x)
        repeat task.wait() until v:FindFirstChild(x)
        return v:FindFirstChild(x)
    end


    local quickfilteranim = {
        'idle';
        'walk';
        'run';
    }
    local quickremoveanim = {
        'http'
    }--[|]


    for _,v in next, workspace.Live:GetChildren() do 
        print('on '..v.Name)
        if v.Name ~= game.Players.LocalPlayer.Name then 
            local workChar = v -- and not table.find(quickfilteranim,anim.Animation.Name)
            task.spawn(function()
                --workChar:WaitForChild('Humanoid')
                local connection; connection = v:FindFirstChildWhichIsA('Humanoid').AnimationPlayed:Connect(function(anim)
                    -- print('played '..v.Name)
                    task.spawn(function()
                        if getgenv()['dwdsettings']['autoparry'] == true and workChar:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            -- print('a playing')
                            local dist = (workChar:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                            if dist <= getgenv().dwdsettings['distance'] and not table.find(quickfilteranim,anim.Animation.Name) and not table.find(quickremoveanim,anim.Animation.AnimationId:sub(1,4)) and anim.Animation.AnimationId:sub(1,3) == 'rbx'then  -- 
        
                                getgenv().ParryAct(workChar,anim)
                                -- print('act '..v.Name)
                            else
                                -- if dist <= getgenv().dwdsettings['distance'] then print('ew') 
                                --     --print(anim.Animation.AnimationId:sub(1,3))
                                -- end
                                -- if getgenv().dwdsettings['distance'] > 0 then 
                                --     task.spawn(function()
                                --         local repeating = 0
                                --         repeat 
                                --             task.wait(0.1)
                                --             repeating +=.1
                                --             if repeating < 0.2 and workChar and workChar:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                --                 dist = (workChar:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                --                 if dist <= getgenv().dwdsettings['distance'] then 
                                --                     -- getgenv().ParryAct(workChar,anim)
                                --                     repeating = 0.2
                                --                 end
                                --             else
                                --                 repeating = 0.2
                                --             end
        
                                --         until repeating >= 0.2
                                --     end)
                                -- end
                            end
                        end
                    end)
    
                end)
    
                v:FindFirstChildWhichIsA('Humanoid').Died:Connect(function()
                    connection:Disconnect()
                    print'died'
                end)
    
                keepAlive(connection)
            end)
        end
    end





    local connectionAdded;connectionAdded = workspace.Live.ChildAdded:Connect(function(xchild)
        if xchild.Name ~= game.Players.LocalPlayer.Character.Name then
            local workChar = xchild
            -- print(xchild.Name..' added')
            task.spawn(function()
                --workChar:WaitForChild('Humanoid')
                local connection; connection = workChar:FindFirstChildWhichIsA('Humanoid').AnimationPlayed:Connect(function(anim)
                    task.spawn(function()
                        if getgenv()['dwdsettings']['autoparry'] == true and workChar:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            -- print('anim')
                            local dist = (workChar:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                            if dist <= getgenv().dwdsettings['distance'] and not table.find(quickfilteranim,anim.Animation.Name) and not table.find(quickremoveanim,anim.Animation.AnimationId:sub(1,4)) and anim.Animation.AnimationId:sub(1,3) == 'rbx' then 
                                -- print('in distance')
                                getgenv().ParryAct(workChar,anim)
                            else
                                --if dist <= getgenv().dwdsettings['distance'] then print('ew') end
                                -- if getgenv().dwdsettings['distance'] > 0 then 
                                --     task.spawn(function()
                                --         local repeating = 0
                                --         repeat 
                                --             task.wait(0.1)
                                --             repeating +=1 
                                --             if repeating < 0.2 and workChar and workChar:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                --                 dist = (workChar:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                --                 if dist <= getgenv().dwdsettings['distance'] then 
                                --                     getgenv().ParryAct(workChar,anim)
                                --                     repeating = 0.2
                                --                 end
                                --             else
                                --                 repeating = 0.2
                                --             end
                                --         until repeating >= 0.2
                                --     end)
                                -- end
                            end
                        end
                    end)
    
                end)
    
                keepAlive(connection)
    
                if getgenv()['dwdsettings']['espsettings']['esp'] == true and game:GetService('Players'):FindFirstChild(xchild.Name) then 
                    getgenv().CreatePlayerEsp(game:GetService('Players'):FindFirstChild(xchild.Name))
                end 
            end)
        end
    end)








    task.spawn(function()
        task.wait(1)
        repeat task.wait(.5) until getgenv().loopsUnload == true 
        print('workspace added loop break'); connectionAdded:Disconnect()
    end)
    

































    getgenv().DontStop = {

    }
    getgenv().stopAnims = function()
        for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
            if not table.find(getgenv().DontStop,v.Animation.AnimationId) or table.find(getgenv().DontStop,v.Animation.Name) then 
                v:Stop()
            end
            for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do 
                if not table.find(getgenv().DontStop,v.Animation.AnimationId) or table.find(getgenv().DontStop,v.Animation.Name) then 
                    v:Stop()
                end
            end
        end
    end




    Configiuration:CreateConfigSystem()

    task.spawn(function()
        while task.wait() do -- getgenv().est
            if getgenv().loopsUnload == true then print('dwd loop break') break end
            if nomantracdattachment:IsPressed() == true then 
                for _,v in next, game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):WaitForChild('BackpackGui'):WaitForChild('MainFrame'):GetChildren() do 
                    if v:FindFirstChild('Cooldown') and v:FindFirstChild('Cooldown').Visible == true and v:FindFirstChild('Cooldown').AbsoluteSize ~= Vector2.new(60,0) then  -- 
                        v:FindFirstChild('Cooldown').Visible = false
                        if v:FindFirstChild('Cooldown') and v:FindFirstChild('Cooldown').AbsoluteSize == Vector2.new(60,0) then return end
                        --v:FindFirstChild('Cooldown').AbsoluteSize = Vector2.new(60,0)
                        local tool = nil       --and v:FindFirstChild('Cooldown').Visible == true                   
                        local function settool(x)
                            for _,v in next, game.Players.LocalPlayer.Backpack:GetChildren() do if v.Name:find(x) then tool = v break end  end
                            pcall(function() tool.Parent = game.Players.LocalPlayer.Character end)
                            for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do if v.Name:find(x) then tool = v break end  end
                        end
                        local toolname = ''
                        local firstbracketreached = false;
                        for i=1, string.len(v.Name) do 
                            if v.Name:sub(i,i) == '{' and firstbracketreached == false then 
                                firstbracketreached = true 
                            elseif v.Name:sub(i,i) == '{' and firstbracketreached == true then 
                                firstbracketreached = 'registername'
                            elseif v.Name:sub(i,i) == '}' then 
                                firstbracketreached = false
                            elseif firstbracketreached == 'registername' then 
                                toolname = toolname..v.Name:sub(i,i)
                            end
                        end
                        if toolname ~= '' then 
                            pcall(function()
                                settool(toolname)
                                tool:Activate()
                                tool:Deactivate()
                                repeat task.wait(); tool.Parent = game.Players.LocalPlayer.Backpack 
                                until tool.Parent == game.Players.LocalPlayer.Backpack 
                                
                                
                            end)
                        end
                    end
                    --game:GetService("Players").LocalPlayer.PlayerGui.BackpackGui.MainFrame["003Mantra:StrongPunchFire{{Ash Slam}}"].Cooldown
                end
            end
            if getgenv().dwdsettings['nomantracd'] == true then 
                getgenv().dwdsettings['nomantracd']  = nil 
                task.spawn(function()
                    repeat 
                        task.wait(.5)
                        for _,v in next, game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):WaitForChild('BackpackGui'):WaitForChild('MainFrame'):GetChildren() do 
                            if v:FindFirstChild('Cooldown') and v:FindFirstChild('Cooldown').Visible == true and v:FindFirstChild('Cooldown').AbsoluteSize ~= Vector2.new(60,0) then  -- 
                                v:FindFirstChild('Cooldown').Visible = false
                                if v:FindFirstChild('Cooldown') and v:FindFirstChild('Cooldown').AbsoluteSize == Vector2.new(60,0) then return end
                                --v:FindFirstChild('Cooldown').AbsoluteSize = Vector2.new(60,0)
                                local tool = nil       --and v:FindFirstChild('Cooldown').Visible == true                   
                                local function settool(x)
                                    for _,v in next, game.Players.LocalPlayer.Backpack:GetChildren() do if v.Name:find(x) then tool = v break end  end
                                    pcall(function() tool.Parent = game.Players.LocalPlayer.Character end)
                                    for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do if v.Name:find(x) then tool = v break end  end
                                end
                                local toolname = ''
                                local firstbracketreached = false;
                                for i=1, string.len(v.Name) do 
                                    if v.Name:sub(i,i) == '{' and firstbracketreached == false then 
                                        firstbracketreached = true 
                                    elseif v.Name:sub(i,i) == '{' and firstbracketreached == true then 
                                        firstbracketreached = 'registername'
                                    elseif v.Name:sub(i,i) == '}' then 
                                        firstbracketreached = false
                                    elseif firstbracketreached == 'registername' then 
                                        toolname = toolname..v.Name:sub(i,i)
                                    end
                                end
                                local foundtool = false
                                for _,v in next, getgenv().dwdsettings['objects'] do 
                                    if v == tool then 
                                        foundtool = true
                                    end
                                end
                                if toolname ~= '' and foundtool == false then 
                                    table.insert(getgenv().dwdsettings['objects'],tool)
                                    task.delay(2,function()
                                        for _,v in next, getgenv().dwdsettings['objects'] do 
                                            if v == tool then 
                                                table.remove(getgenv().dwdsettings['objects'],_)
                                                -- foundtool = false
                                            end
                                        end
                                    end)
                                    pcall(function()
                                        settool(toolname)
                                        tool:Activate()
                                        tool:Deactivate()
                                        repeat task.wait(); tool.Parent = game.Players.LocalPlayer.Backpack 
                                        until tool.Parent == game.Players.LocalPlayer.Backpack 
                                        
                                        -- task.wait(2)
                                    end)
                                end
                            end
                            --game:GetService("Players").LocalPlayer.PlayerGui.BackpackGui.MainFrame["003Mantra:StrongPunchFire{{Ash Slam}}"].Cooldown
                        end
                    until getgenv().dwdsettings['nomantracd'] == false or getgenv().loopsUnload == true
                end)


            end
            if getgenv().dwdsettings['noanims'] == true then 
                getgenv().stopAnims()
            end
            if getgenv().AzfakeGlobalTables['dwd']['autoloot'] == true and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt') then 
               for _,inst in pairs(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt').ChoiceFrame.Options:GetChildren()) do 
                    if inst:IsA('TextButton') then
                        --print('text buttone')
                        -- print('@'..tostring(inst.BackgroundColor3))
                        game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt').Choice:FireServer(inst.Name)
                        if getgenv()['dwdsettings']['logchatlogger'] == true then 
                            logIt('Picked Item: '..inst.Name..' Enchanted = ','')
                        end
                    end
                    --print(inst.ClassName)
                end
            end
            if getgenv().Speeding == true and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                --accidentally put health
                -- print('supposed to speed')
                getgenv().Speeding = nil

                local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()-- getpropertychangedsignal could be used here 
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().Speed
                end) 
                task.spawn(function()
                    repeat task.wait() until getgenv().Speeding == false or getgenv().loopsUnload == true 
                    connection:Disconnect()
                end)

            end
            --autoassign
            if getgenv()['dwdsettings']['autoassignstat'] == true then 
                getgenv()['dwdsettings']['autoassignstat'] = nil 
                task.spawn(function()
                    repeat 
                        task.wait(.5)
                        local ohString1 = getgenv()['dwdsettings']['selectedatrribute']
                        local ohBoolean2 = true
                        local ohBoolean3 = true
                
                        game:GetService("ReplicatedStorage").Requests.IncreaseAttribute:InvokeServer(ohString1, ohBoolean2, ohBoolean3)
                    until getgenv()['dwdsettings']['autoassignstat'] == false
                end)
            end

            if getgenv().dwdsettings['autoopenchest'] == true then 
                getgenv().dwdsettings['autoopenchest'] = nil 
                task.spawn(function()
                    repeat  
                        task.wait(1) 
                        for _,v in next,workspace:FindFirstChild('Thrown'):GetChildren() do 
                            local alreadyinserted = false
                            for _i,xf in next, getgenv()['dwdsettings']['objects'] do 
                                if xf == v then 
                                    alreadyinserted = true
                                end
                            end
                            pcall(function()
                                if v:FindFirstChild('Pick') and v.Name == 'Model' and alreadyinserted == false and not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt') then 
                                    -- print('Found chest')
                                    if v:FindFirstChildWhichIsA('MeshPart') then 
                                        local dist = (v:FindFirstChildWhichIsA('MeshPart').Position -game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position )
                                        if dist.Magnitude <= 4 then 
                                            local inputManager = game:GetService('VirtualInputManager')
                                            inputManager:SendKeyEvent(true,Enum.KeyCode.E,false,game)
                                            inputManager:SendKeyEvent(false,Enum.KeyCode.E,false,game)
                                            task.delay(1,function()
                                                task.spawn(function()
                                                    repeat task.wait(0.01) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt') -- until it finds ??
                                                    table.insert(getgenv()['dwdsettings']['objects'],v)
                                                end)
                                                
                                            end)
                                        end
                                    else
                                        return
                                    end
                                end
                            end)

                        end
                    until getgenv().dwdsettings['autoopenchest'] == false
                end)
            end
            if Attach_to_back:IsPressed() == true  then -- and getgenv().istyping == false
                print('attadh pressed')
                task.spawn(function()
                    repeat 
                        local Closest = nil 
                        local closestpos = nil
                        task.wait(0.01)
                        for _,v in pairs(workspace.Live:GetChildren()) do 
                            if (v:FindFirstChild('HumanoidRootPart')) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                if dist.Magnitude <= getgenv().dwdsettings['distance'] then 
                                    
                                    if Closest == nil then 
                                        Closest = v 
                                        closestpos = dist.Magnitude
                                    else
                                        if closestpos < dist.Magnitude then 
                                            Closest = v 
                                            closestpos = dist.Magnitude
                                        end
                                    end

                                end
                            end
                        end
                        if Closest ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            if closestpos >3 and getgenv().dwdsettings['CurrentTween'] == nil then 
                                -- local TweenSpeedProCalculation = tonumber('0.'..math.floor(closestpos)) + math.floor(closestpos/getgenv().Distance) + math.floor(closestpos/(getgenv().dwdsettings['distance']*2))
                                -- print('Tween Speed: '..TweenSpeedProCalculation)
                                -- getgenv().dwdsettings['CurrentTween'] = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.5),{
                                --     CFrame = Closest:FindFirstChild('HumanoidRootPart').CFrame
                                -- })
                                -- getgenv().dwdsettings['CurrentTween']:Play()
                                -- --or getgenv().fw3localFw3['CurrentTween'].Completed == true
                                -- task.spawn(function()
                                --     repeat task.wait() until Attach_to_back:IsPressed() == false 
                                --     getgenv().dwdsettings['CurrentTween']:Pause()
                                --     getgenv().dwdsettings['CurrentTween'] = nil
                                -- end)
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Closest:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,3)
                            elseif closestpos <5 then
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Closest:FindFirstChild('HumanoidRootPart').CFrame
                            end
                            
                        end
                    until Attach_to_back:IsPressed() == false      
                end)
            end






            if getgenv().dwdsettings['tptochests'] == true and getgenv()['dwdsettings']['canswapchest'] == true then 
                if workspace:FindFirstChild('Thrown') then 
                    if workspace:FindFirstChild('Thrown'):FindFirstChild('Model') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        for _,v in next,workspace:FindFirstChild('Thrown'):GetChildren() do 
                            if v:FindFirstChild('Pick') and v.Name == 'Model' then 
                                getgenv()['dwdsettings']['canswapchest'] = false
                                -- print('Found chest')
                                pcall(function()
                                    
                                end)
                                if v:FindFirstChildWhichIsA('MeshPart') then 
                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChildWhichIsA('MeshPart').CFrame 
                                end
                                -- if v:FindFirstChild('Part') then 
                                --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('Part').CFrame 
                                -- end
                                task.spawn(function()
                                    pcall(function()
                                        repeat task.wait(0.0001) until game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame == v:FindFirstChildWhichIsA('MeshPart').CFrame 
                                        task.wait(.01)
                                        local inputManager = game:GetService('VirtualInputManager')
                                        inputManager:SendKeyEvent(true,Enum.KeyCode.E,false,game)
                                        inputManager:SendKeyEvent(false,Enum.KeyCode.E,false,game)
                                        task.wait(.011)
                                        inputManager:SendKeyEvent(true,Enum.KeyCode.E,false,game)
                                        inputManager:SendKeyEvent(false,Enum.KeyCode.E,false,game)
                                    end)

                                end)
                                task.delay(getgenv()['dwdsettings']['safedelay'],function()
                                    if getgenv()['dwdsettings']['safelocationaftertp'] == true then 
                                        local inputManager = game:GetService('VirtualInputManager')
                                        inputManager:SendKeyEvent(true,Enum.KeyCode.E,false,game)
                                        inputManager:SendKeyEvent(false,Enum.KeyCode.E,false,game)
                                        task.wait(.01)
                                        inputManager:SendKeyEvent(true,Enum.KeyCode.E,false,game)
                                        inputManager:SendKeyEvent(false,Enum.KeyCode.E,false,game)
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv()['dwdsettings']['safelocationcframe']
                                    end
                                end)
                                task.spawn(function()
                                    repeat task.wait(0.01) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt')
                                    getgenv()['dwdsettings']['canswapchest'] = true
                                end)

                            end
                        end
                    end
                end
            end
            if getgenv().dwdsettings['loopprima'] == true then 
                for _,v in next, workspace.Live:GetChildren() do 
                    if v:FindFirstChild('MonkyController') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:WaitForChild('LFeet').CFrame * CFrame.new(-1,-1,9)
                    end
                end
            end
        end
    end)

    -- Notify('','Fastest AutoLoot','untilClick')
    -- fakewoken 3 next


elseif game.PlaceId == 4282985734 then 
    getgenv().parrys = { 

        "rbxassetid://6851070581"; --Slash1
        "rbxassetid://6856107396"; --Slash2
        "rbxassetid://6856274327"; --Slash3
        "rbxassetid://7047913825"; --Slash1
        "rbxassetid://7048081494"; --Slash2
        "rbxassetid://7076137002"; --Slash3
        "rbxassetid://9130608399"; --Flourish
        "rbxassetid://9130724565"; --Flourish
        "rbxassetid://6133492098"; --Slash1
        "rbxassetid://6133492666"; --Slash2
        "rbxassetid://6133494118"; --Slash3
        "rbxassetid://9130407288"; --Flourish
        "rbxassetid://9130659525"; --Slash2
        "rbxassetid://9130656296"; --Slash1
        "rbxassetid://9130665273"; --Slash4
        "rbxassetid://9006661896"; --Flourish
        "rbxassetid://9130662282"; --Slash3
        "rbxassetid://6243326071"; --Slash3
        "rbxassetid://6243325311"; --Slash2
        "rbxassetid://6243323055"; --Slash1
        "rbxassetid://6145119463"; --Slash3
        "rbxassetid://6145118595"; --Slash2
        "rbxassetid://6145117792"; --Slash1
        "rbxassetid://6145038858"; --Slash1
        "rbxassetid://6145039913"; --Slash2
        "rbxassetid://6145041133"; --Slash3
        "rbxassetid://6423003415"; --Stomp
        "rbxassetid://7250159015"; --SideKick
        "rbxassetid://10027131143"; --Flourish
        "rbxassetid://10583004808"; --Slash1
        "rbxassetid://8999185608"; --Flourish
        "rbxassetid://10650976875"; --Flourish
        "rbxassetid://9131147793"; --Flourish
        "rbxassetid://9130923210"; --Flourish
        "rbxassetid://10080111463"; --Flourish
        "rbxassetid://10079924391"; --Flourish
        "rbxassetid://8927510348"; --Flourish
        "rbxassetid://9130864613"; --Flourish
        "rbxassetid://7533335921"; --Slash3
        "rbxassetid://7533334962"; --Slash2
        "rbxassetid://7533333743"; --Slash1
        "rbxassetid://8799311055"; --Flourish
        "rbxassetid://8799319983"; --Slash3
        "rbxassetid://8799318064"; --Slash2
        "rbxassetid://8799315678"; --Slash1
        "rbxassetid://8918766046"; --Flourish
        "rbxassetid://8928653136"; --Flourish
        "rbxassetid://9130475107"; --Flourish
        "rbxassetid://10027205747"; --Slash3
        "rbxassetid://10027210160"; --Slash2
        "rbxassetid://10024441313"; --Slash1
        "rbxassetid://10080879138"; --Flourish
        "rbxassetid://9130798160"; --Flourish
        "rbxassetid://9602879381"; --Flourish
        "rbxassetid://10079937798"; --Flourish
        "rbxassetid://9615256593"; --Flourish
        "rbxassetid://10650976875"; --Flourish
        "rbxassetid://8876287739"; --Flourish
        "rbxassetid://9692247305"; --Flourish
        "rbxassetid://10080182165"; --Flourish
    }
    local Top = window:CreateTab(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name);
    local sector = Top:CreateSector('Cheats','left')
    getgenv().Distance = 0
    getgenv().AutoParrying = false
    sector:AddSlider("AutoParry Distance", 0, 0, 100, 1, function(State)
        getgenv().Distance = State
    end)

    sector:AddToggle("Auto Parry", false, function(xstate)
        getgenv().AutoParrying = xstate
    end)

    getgenv().parry = function()
        keypress(0x46)
        keyrelease(0x46)
    end


elseif game.PlaceId == 011 then --//ro beat, fnf
    local Top = window:CreateTab(gameName);
    getgenv().AutoPlay = false
    sector:AddToggle("Auto Play", false, function(xstate)
        getgenv().AutoPlay = xstate
    end)


    -- detect distance by minusing y from moving circle to the base circle.
    -- if it has a line then hold until the line isnt there.
elseif game.PlaceId == 6379910076 then 
    local Top = window:CreateTab(gameName);
    sector = Top:CreateSector('Cheats','left')
    getgenv().headclose = false
    getgenv().infgas = false

    local mouse= game.Players.LocalPlayer:GetMouse();
    local function getexploit()
        local exploit =
            (syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
            (secure_load and "Sentinel") or
            (is_sirhurt_closure and "Sirhurt") or
            (pebc_execute and "ProtoSmasher") or
            (KRNL_LOADED and "Krnl") or
            (WrapGlobal and "WeAreDevs") or
            (isvm and "Proxo") or
            (shadow_env and "Shadow") or
            (jit and "EasyExploits") or
            (getscriptenvs and "Calamari") or
            (unit and not syn and "Unit") or
            (OXYGEN_LOADED and "Oxygen U") or
            (IsElectron and "Electron") or
            ("Unsupported")
      
        return exploit
    end
    local mt = getrawmetatable(game)
    local namecall = mt.__namecall
    if make_writeable then make_writeable(mt) end 
    if getexploit() == 'Krnl' or setreadonly then 
        setreadonly(mt,false)
    end
    local xtra = ''
    local oldind = mt.__index; 
    local yYes,nNo = pcall(function()
        mt.__namecall = newcclosure(function(self,...)
            if  getnamecallmethod() == 'FireServer' and tostring(self) == 'GasDepleteEvent' and getgenv().infgas then --// checkcaller -- not checkcaller() and
                local args = {...}
                return
            end
            return namecall(self,...)
        end)
    end)
    
    local tgl = sector:AddToggle("To Nearest Head", false, function(xstate)
        getgenv().headclose = xstate
    end); tgl:AddKeybind()

    sector:AddToggle("Inf Gas", false, function(xstate)
        getgenv().infgas = xstate
    end);
    while task.wait() do 
        if getgenv().headclose then 
            local closest_root = nil 
            local closest_rootps = nil 
            for _,v in next, workspace:GetChildren() do 
                if v.Name == 'Titan' then 
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0 then 
                        local dist =  (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if closest_root == nil and dist <= 100 then 
                            closest_root = v:FindFirstChild('HumanoidRootPart');
                            closest_rootps = dist
                        elseif closest_root ~= nil and dist <= 100 then 
                            if closest_rootps > dist then 
                                closest_root = v:FindFirstChild('HumanoidRootPart');
                                closest_rootps = dist
                            end
                        end
                    end
                end
            end
    
            if closest_root ~= nil then 
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-8,5)}
                ):Play()
                task.wait(.1)
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-8,-5)}
                ):Play()
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-4,3)}
                ):Play()
                task.wait(.1)
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-8,3)}
                ):Play()
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-8,-1)}
                ):Play()
                game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.01),
                    {CFrame = closest_root.Parent.Head.CFrame * CFrame.new(0,-6,1)}
                ):Play()
                tickwait = 0
                repeat 
                    task.wait(0.1)
                    tickwait += 0.1
                    local ohNil1 = nil
                    local ohInstance2 = closest_root.Parent.Humanoid --[[ PARENTED TO NIL OR DESTROYED ]]
                    local ohString3 = "&@&*&@&"
                    local ohInstance4 = closest_root.Parent --[[ PARENTED TO NIL OR DESTROYED ]]
        
                    game:GetService("ReplicatedStorage").DamageEvent:FireServer(ohNil1, ohInstance2, ohString3, ohInstance4)
                until tickwait > 1
            end
        end
    end


elseif game.PlaceId == 318978013 then -- // kick off
    local Top = window:CreateTab(gameName);
    sector = Top:CreateSector('Cheats','left')
    getgenv().setcframe = false
    getgenv().Speed = 0
    getgenv().SpeedOn = false
    getgenv().KickOnTarget = true
    local l__Name__2 = game.Players.LocalPlayer.Team.Name;

    local v8 = nil;
    -- if require(game.ReplicatedStorage:WaitForChild("DeviceModule")).Device() == "console" then
    --     script.Parent.BackScroll.Space.Visible = true;
    -- end;
    
    if l__Name__2 == "USA" then
        v8 = workspace.MapHolder:GetChildren()[1]:WaitForChild("RedGoal").Position;
    elseif l__Name__2 == "Brazil" then
        v8 = workspace.MapHolder:GetChildren()[1]:WaitForChild("BlueGoal").Position;
    end;

    -- local mt = getrawmetatable(game)
    -- local namecall = mt.__namecall
    -- if make_writeable then make_writeable(mt) end 
    -- mt.__namecall = newcclosure(function(self,...)
    --     if  getnamecallmethod() == 'FireServer' and tostring(self) == 'MasterKey' then --// checkcaller -- not checkcaller() and
    --         local args = {...}
    --         --for _,v in next, args do print('\n'.._..' '..v) end
    --         local distance = (v8 - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    --         if args[1] == "Kick" and getgenv().KickOnTarget == true and distance <= 40 then
    --             local ohVector35 = v8--Vector3.new(-24.45448112487793, 37.95000076293945, -8.682209014892578)
    --             local ohVector36 = v8--Vector3.new(-103.99867248535156, -96.29850006103516, -376.18243408203125)
    --             local ohVector37 = v8--Vector3.new(-128.35227966308594, -119.29850006103516, -384.8288269042969)
    --             --args[4] = 100
    --             args[5] = ohVector35
    --             args[6] = ohVector36
    --             args[7] = ohVector37 -- namecall(self,unpack(args))
    --             return namecall(self,args[1],args[2],args[3],args[4],args[5],args[6],args[7]) -- instead of it firing invoke(args <args = table> ) it will invoke(arg[1],arg[2]) etc
    --             -- namecall(self,...) would do invoke(arg[1],arg[2]) etc
    --         end
            
             
    --     end
    --     return namecall(self,...)
    -- end)
    sector:AddButton('Give Ball',function()
        if workspace:FindFirstChild('SoccerBall') then 
            if workspace:FindFirstChild('SoccerBall').Owner.Value ~= game.Players.LocalPlayer.Name and workspace:FindFirstChild('SoccerBall'):FindFirstChild('Weld') then 
                workspace:FindFirstChild('SoccerBall').Weld.Part0 = nil
            end
            workspace:FindFirstChild('SoccerBall').CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
        end
    end)
    sector:AddButton('Reset',function()
        game.Players.LocalPlayer.Character:BreakJoints()
    end)
    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    sector:AddSeperator()
    local tgl = sector:AddToggle("Ball Set CFrame", false, function(xstate)
        getgenv().setcframe = xstate
    end); 
    -- sector:AddToggle("Auto Target", true, function(xstate)
    --     getgenv().KickOnTarget = xstate
    -- end);
    sector:AddSlider("Speed", 0, 0, 200, 1, function(State)
        getgenv().Speed = State
    end)
    local speedtgl = sector:AddToggle("Speed Toggle", false, function(xstate)
        getgenv().SpeedOn = xstate
    end); speedtgl:AddKeybind()
    getgenv().animsplayed = {}
    getgenv().anims = {}
    for _,v in next, game:GetService("ReplicatedStorage").Animations:GetChildren() do 
        local animTable = {}

        table.insert(getgenv().anims,v.Name)
    end
    sector:AddSeperator()
    getgenv().getanimplay = nil
    sector:AddDropdown("Animation", getgenv().anims, "", false, function(dropdownv)
        local anim = Instance.new'Animation'; anim.AnimationId = game:GetService("ReplicatedStorage").Animations[dropdownv].Value --'http://www.roblox.com/HandStandKick-item?id=318972469'
        print(game:GetService("ReplicatedStorage").Animations[dropdownv].Value)
        getgenv().getanimplay = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):LoadAnimation(anim)
        table.insert(getgenv().animsplayed,anim)
    end)
    sector:AddButton('Play',function()
        --pcall(function()
            getgenv().getanimplay:Play()
        --end)
    end)
    sector:AddButton('stop anims',function()
        for _,v in next,getgenv().animsplayed do 
            v:Stop() 
        end
    end)
    -- http://www.roblox.com/HandStandKick-item?id=318972469
    -- https://www.roblox.com/Breakdance-item?id=472691731
    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(jit)
        if jit == 'g' and getgenv().setcframe == true then 
            if workspace:FindFirstChild('SoccerBall') then 
                if workspace:FindFirstChild('SoccerBall').Owner.Value ~= game.Players.LocalPlayer.Name and workspace:FindFirstChild('SoccerBall'):FindFirstChild('Weld') then 
                    workspace:FindFirstChild('SoccerBall').Weld.Part0 = nil
                end
                workspace:FindFirstChild('SoccerBall').CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
            end
        end
    end)

    task.spawn(function()
        while task.wait() do 
            if getgenv().SpeedOn == true and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().Speed
            end
        end
    end)

elseif game.PlaceId == 5941294866 then --// cameo game 2

    local tab = window:CreateTab('Cameo Game 2')
    local cameo = tab:CreateSector('Cheats','left')
    local cameoetc = tab:CreateSector('Cheats','right')
    getgenv().AddPlayerList(cameo)

    getgenv().cameogame2={
        nocd = false;
        nofd = true;
        manapoint = 0;
        chargemana = false;
        charging = false;
        attachtoback = false;
        attachkeybind = ''
    }

    local function getexploit()
        local exploit =
            (syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
            (secure_load and "Sentinel") or
            (is_sirhurt_closure and "Sirhurt") or
            (pebc_execute and "ProtoSmasher") or
            (KRNL_LOADED and "Krnl") or
            (WrapGlobal and "WeAreDevs") or
            (isvm and "Proxo") or
            (shadow_env and "Shadow") or
            (jit and "EasyExploits") or
            (getscriptenvs and "Calamari") or
            (unit and not syn and "Unit") or
            (OXYGEN_LOADED and "Oxygen U") or
            (IsElectron and "Electron") or
            ("Unsupported")
      
        return exploit
    end
    local mt = getrawmetatable(game)
    local namecall = mt.__namecall
    if make_writeable then make_writeable(mt) end 
    if getexploit() == 'Krnl' or setreadonly then 
        setreadonly(mt,false)
    end
    local xtra = ''
    local oldind = mt.__index; 
    local yYes,nNo = pcall(function()
        mt.__namecall = newcclosure(function(self,...)
            if  not checkcaller() and getnamecallmethod() == 'FireServer' and tostring(self) == 'ManaChargeEnd' and getgenv().chargemana == true then --// checkcaller -- not checkcaller() and
                local args = {...}
                return
            end
            return namecall(self,...)
        end)
    end)

    getgenv().npcs = {}
    for _,v in next, game.Workspace['NPCs']:GetChildren() do 
        table.insert(getgenv().npcs,v.Name)
    end

    --cameo:AddSeperator()

    local nocdtoggle = cameo:AddToggle('No Cooldown',false, function(xstate)
        getgenv().cameogame2['nocd'] = xstate--nocd value changed makes the toggle value change?
    end)
    cameo:AddToggle('No Fall Damage',true, function(xstate)
        getgenv().cameogame2['nofd'] = xstate
    end)
    cameo:AddSlider("Mana Point", 0, 0, 100, 1, function(State)
        getgenv().cameogame2['manapoint'] = State
    end)
    cameo:AddSlider("Climb Multiplier", 0, 0, 100, 1, function(State)
        game.Players.LocalPlayer.Character.Stats.ClimbMult.Value = State
    end)
    cameo:AddToggle("Charge Mana Point", false, function(xstate)
        getgenv().cameogame2['chargemana'] = xstate
    end)
    local attach = cameo:AddToggle("Attach to Back", false, function(xstate)
        getgenv().cameogame2['attachtoback'] = xstate
    end)
    getgenv().cameogame2['attachkeybind'] = attach:AddKeybind()
    getgenv().npctpto = nil
    getgenv().npcnametp = ''
    getgenv().npcnametpto = nil
    local npclist = cameo:AddDropdown("NPC Teleportation", getgenv().npcs, "", false, function(dropdownv)
        getgenv().npctpto = game.Workspace['NPCs'][dropdownv]

        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)

    cameo:AddTextbox('npc name tp',nil,function(State)
        getgenv().npcnametp = State
        for _,v in next, game.Workspace['NPCs']:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().npcnametp))== getgenv().npcnametp then
                getgenv().npcnametpto = v 
                break
            end
        end
    end)
    
    cameo:AddButton('Teleport', function()
        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().npctpto.HumanoidRootPart.CFrame
        end
    end)
    cameo:AddButton('Teleport To Name', function()
        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().npcnametpto.HumanoidRootPart.CFrame
        end
    end)
    cameo:AddSeperator()
    cameo:AddButton('Un/Anchor', function()
        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored
    end)
    cameo:AddButton('Loop Through Trinkets', function()
        -- for _,v in next, game:GetService("Workspace").MouseIgnore:GetChildren() do 
        --     if v:FindFirstChild('ClickDetector') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            
        --         game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v.CFrame
        --     end
        -- end
        for _,v in next, game:GetService("Workspace").MouseIgnore:GetChildren() do 
            if v:FindFirstChild('ClickDetector') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                task.wait(.02)
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v.CFrame
                task.wait(.1)
                fireclickdetector(v.ClickDetector,1)
                fireclickdetector(v.ClickDetector,1)
                task.wait(.05)
            end
        end
    end)
    getgenv().spammingpunches = false
    local puncheestoggle = cameoetc:AddToggle('Spam Punches',false,function(xstate)
        getgenv().spammingpunches = xstate 
        if getgenv().spammingpunches == true then 
            task.spawn(function()
                r = 0
                repeat
                -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                task.wait(0.001)
                r+=0.1
                game.Players.LocalPlayer.Character.M1:FireServer()
                until getgenv().spammingpunches == false
            end)
        end
    end)

    getgenv().enemy = {}
    getgenv().enemyfarming = nil
    getgenv().farming = false
    local enemylist = cameoetc:AddDropdown("NPC Farm", getgenv().enemy, "", false, function(dropdownv)
        getgenv().enemyfarming = game.Workspace[dropdownv]
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)
    for _,v in next, game.Workspace:GetChildren() do 
        local enemynames = {
            'Valentine';
            'fat santa';
            
        }
        
        for _n,name in next, enemynames do 
            if v.Name:sub(1,string.len(name)) == name then 
                enemylist:Add(v.Name)
                table.insert(getgenv().enemy,v.Name)
            end
        end
        -- for index,en_name in next, getgenv().enemy do 
        --     enemylist:Add(en_name)
        -- end
    end
    game.Workspace.ChildAdded:Connect(function(child)
        local enemynames = {
            'Valentine';
            'fatsanta';
            
        }
        getgenv().enemy = {}
        for _,name in next, enemynames do 
            if child.Name:sub(1,string.len(name)) == name then 
                table.insert(getgenv().enemy,child.Name)
                enemy:Add(child.Name)
            end
        end
        -- for index,en_name in next,  getgenv().enemy do 
        --     enemylist:Add(en_name)
        -- end

    end)
    game.Workspace.ChildRemoved:Connect(function(child)
        local enemynames = {
            'Valentine';
            'fatsanta';
            
        }
        getgenv().enemy = {}
        for _,name in next, enemynames do 
            if child.Name:sub(1,string.len(name)) == name then 
                --table.insert(getgenv().enemy,child.Name)
                enemylist:Remove(child.Name)
            end
        end

        

    end)



    local farmnpctoggle = cameoetc:AddToggle('Farm NPC',false, function(xstate)
        getgenv().cameogame2['farming'] = xstate
        if getgenv().cameogame2['farming'] == true then 
            if getgenv().enemyfarming ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().enemyfarming.HumanoidRootPart.CFrame
                waspreviouslyfalse = false
                if getgenv().cameogame2['nocd'] == false then 
                    waspreviouslyfalse = true 
                    nocdtoggle:Set(true)
                end
                nocdtoggle:Set(true)
                task.spawn(function()
                    r = 0
                    repeat
                    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                    task.wait(0.001)
                    r+=0.1
                    game.Players.LocalPlayer.Character.M1:FireServer()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().enemyfarming.HumanoidRootPart.CFrame
                    until getgenv().enemyfarming.Humanoid.Health <= 0
                    if waspreviouslyfalse == true then  
                        nocdtoggle:Set(false)
                    end
                end)
            else
                farmnpctoggle:Set(false)
            end
        end
    end)
    -- cameo:AddButton('Slow Down Mana', function()
    --     local slow = Instance.new('Folder'); slow.Name = 'SpellHold'; slow.Parent = game.Players.LocalPlayer.Character
    -- end)
    -- game:GetService("Workspace").MouseIgnore


    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('cameo loop break end') break end
            task.spawn(function()
                if getgenv().cameogame2['chargemana'] == true and getgenv().cameogame2['manapoint'] ~= 0 then --check if bigger than 0
                    if not game.Players.LocalPlayer.Character:FindFirstChild('Poison') and game.Players.LocalPlayer.Character:FindFirstChild('ManaChargeStart') and not game.Players.LocalPlayer.Character:FindFirstChild('Running') and getgenv().cameogame2['charging'] == false and getgenv().cameogame2['manapoint'] >= game:GetService("Players").LocalPlayer.Character.Stats.Mana.Value then 
                        getgenv().cameogame2['charging'] = true
                        task.wait(.0001)
                        game:GetService("Players").LocalPlayer.Character.ManaChargeStart:FireServer(nil)
                        task.wait(.0001)
                        --game:GetService("Players").LocalPlayer.Character.ManaChargeStart:FireServer(nil)
                        task.spawn(function()
                            repeat task.wait()  until game.Players.LocalPlayer.Character:FindFirstChild('manashield') or game.Players.LocalPlayer.Character:FindFirstChild('Blocking') or game.Players.LocalPlayer.Character:FindFirstChild('Poison') or not game.Players.LocalPlayer.Character:FindFirstChild('Stats') or game.Players.LocalPlayer.Character:FindFirstChild('Climbing') or game.Players.LocalPlayer.Character:FindFirstChild('Running') or game:GetService("Players").LocalPlayer.Character.Stats.Mana.Value >= getgenv().cameogame2['manapoint']
                            --print('stopped, Mana: '..game:GetService("Players").LocalPlayer.Character.Stats.Mana.Value..', Point: '..getgenv().cameogame2['manapoint'])
                            getgenv().cameogame2['charging'] = false
                            game:GetService("Players").LocalPlayer.Character.ManaChargeEnd:FireServer(nil)
                        end)
                    end
                end
            end)
            if getgenv().cameogame2['nofd']== true and not game.Players.LocalPlayer.Character:FindFirstChild('FallDamageImmune') then 
                local r=Instance.new('Folder'); r.Name = 'FallDamageImmune'; r.Parent = game.Players.LocalPlayer.Character
            end
            if getgenv().cameogame2['nocd'] == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild('Comboing') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Comboing'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('PunchCooldown') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('PunchCooldown'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Busy') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Busy'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('manashield') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('manashield'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Blocking') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Blocking'):Destroy()
                end
                -- if game.Players.LocalPlayer.Character:FindFirstChild('Running') then 
                --     game.Players.LocalPlayer.Character:FindFirstChild('Running').Name = 'Destroy()'
                -- end
                if game.Players.LocalPlayer.Character:FindFirstChild('SnapCooldown') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('SnapCooldown'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Staggered') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Staggered'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('IgnisCooldown') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('IgnisCooldown'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Flames') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Flames'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Helpless') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Helpless'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('IgnisCasting') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('IgnisCasting'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('DruidCooldown') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('DruidCooldown'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('IgnisStaggered') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('IgnisStaggered'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('PUNCHM2COOLDOWN') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('PUNCHM2COOLDOWN'):Destroy()
                end
                if game.Players.LocalPlayer.Character:FindFirstChild('Poison') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Poison'):Destroy()
                end
                -- PUNCHM2COOLDOWN
                if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool') then 
                    if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Cooldown') then 
                        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Cooldown'):Destroy()
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('MainCooldown') then 
                        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('MainCooldown'):Destroy()
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('DaCooldown') then 
                        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('DaCooldown').Value = false
                    end
                end
            end

        end
    end)
elseif game.PlaceId == 10889408214 then --// deflect
    local tab = window:CreateTab(gameName)
    local deflect = tab:CreateSector('Cheats','left')

    getgenv().deflecttbl = {
        autodeflect = true;
        distance = 5;
    }

    deflect:AddToggle('Auto Deflect',true,function(xstate)
        getgenv().deflecttbl['autodeflect'] = xstate
    end)

    deflect:AddButton('Rejoin',function()
        -- rejoin
        local valid = isfile("placem1xlog.txt")
        if  valid then   
            appendfile("placem1xlog.txt", game.PlaceId..' joined/rejoin '..game.JobId)
        else
            writefile("placem1xlog.txt", game.PlaceId..' joined/rejoin '..game.JobId)
        end
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    deflect:AddButton('Reset',function()
        game.Players.LocalPlayer.Character:BreakJoints()
    end)

    deflect:AddSlider("Distance", -10, 5, 10, 10, function(State)
        getgenv().deflecttbl['distance'] = State
    end)
    -- game:GetService('RunService').RenderStepped:Connect(function()
    
    -- end)
    task.spawn(function()
        while task.wait(0.01) do 
            if getgenv().loopsUnload == true then break end
            if getgenv().deflecttbl['autodeflect'] == true and workspace:FindFirstChild('Ball') and workspace:FindFirstChild('Ball'):FindFirstChild('Tracking') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                local ball = workspace:FindFirstChild('Ball')
                local pos = ball:FindFirstChild('Main').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position
                -- pos.Magnitude >= dist-pos.Magnitude: 30 10
                -- check for red highlight
                if ball.Tracking.Value == game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Highlight')  then 
                    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                    if vs == 'debug' then 
                        print('Tracking')
                    end
                    if pos.Magnitude <= getgenv().deflecttbl['distance'] *1 then 
                        print('Deflecting')
                        game.Players.LocalPlayer.Character.Deflection.Remote:FireServer('Deflect', workspace.CurrentCamera.CFrame.lookVector)
                    else
                        if pos.Magnitude <=getgenv().deflecttbl['distance'] * 1.2 then 
                            local loopongoingfortoolong = false
                            local stoploop = false;
                            local looponfor = 0
                            task.spawn(function()
                                repeat 
                                    task.wait(0.1)
                                    looponfor += 0.1
                                    if looponfor >= 1 then 
                                        stoploop = true ;
                                        loopongoingfortoolong = true;
                                    end
                                    if pos.Magnitude <=getgenv().deflecttbl['distance'] and stoploop == false then 
                                        stoploop = true ;
                                        game.Players.LocalPlayer.Character.Deflection.Remote:FireServer('Deflect', workspace.CurrentCamera.CFrame.lookVector)
                                    end
                                    if not workspace:FindFirstChild('Ball') then stoploop = true end
                                until loopongoingfortoolong == true or stoploop == true
                            end)
                        end
                    end
                end

            end
        end
    end)

elseif game.PlaceId == 8246874626 then -- dbz
    local tab = window:CreateTab(gameName)
    local dbzgame = tab:CreateSector('Cheats','left')
    getgenv().dbzgametbl = {
        killaura = false;
        distance = 50;
    }

    dbzgame:AddToggle('Kill Aura',false,function(xstate)
        getgenv().dbzgametbl['killaura'] = xstate
    end)

    dbzgame:AddSlider("Distance", 0, 50, 100, 5, function(State)
        getgenv().dbzgametbl['distance'] = State
    end)

    getgenv().EnemyTpInstance = nil
    getgenv().enemynametp = ''
    getgenv().enemy = {}
    getgenv().enemyfarming = nil
    dbzgame:AddTextbox('Enemy TP',nil,function(State)
        getgenv().enemynametp = State
        for _,v in next, game.Workspace.Main.Live:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().enemynametp))== getgenv().enemynametp then
                getgenv().EnemyTpInstance = v 
                break
            end
        end
    end)


    local enemylist = dbzgame:AddDropdown("NPC Farm", getgenv().enemy, "", false, function(dropdownv)
        getgenv().enemyfarming = game.Workspace.Main.Live[dropdownv]
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)

    dbzgame:AddButton('Teleport',function()
        if getgenv().enemyfarming ~= nil then 
            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().enemyfarming.HumanoidRootPart.CFrame
            end
        end
    end)
    for _,v in next, game.Workspace.Main.Live:GetChildren() do  
        -- for _n,name in next, enemynames do 
        --     if v.Name:sub(1,string.len(name)) == name then 
        --         enemylist:Add(v.Name)
        --         table.insert(getgenv().enemy,v.Name)
        --     end
        -- end
        if not game.Players:FindFirstChild(v.Name) and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') then 
            table.insert(getgenv().enemy,v.Name)
            enemylist:Add(v.Name)
        end
    end
    game.Workspace.Main.Live.ChildAdded:Connect(function(child)
        -- for _,name in next, enemynames do 
        --     if child.Name:sub(1,string.len(name)) == name then 
        --         table.insert(getgenv().enemy,child.Name)
        --         enemy:Add(child.Name)
        --     end
        -- end
        if not game.Players:FindFirstChild(child.Name) and child:FindFirstChild('Humanoid') and child:FindFirstChild('HumanoidRootPart') then 
            table.insert(getgenv().enemy,child.Name)
            enemy:Add(child.Name)
        end

    end)

    game.Workspace.Main.Live.ChildRemoved:Connect(function(child)

        getgenv().enemy = {}
        for _,v in next, game.Workspace.Main.Live:GetChildren() do  
            -- for _n,name in next, enemynames do 
            --     if v.Name:sub(1,string.len(name)) == name then 
            --         enemylist:Add(v.Name)
            --         table.insert(getgenv().enemy,v.Name)
            --     end
            -- end
            if not game.Players:FindFirstChild(v.Name) and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') then 
                table.insert(getgenv().enemy,v.Name)
            end
        end
        if not game.Players:FindFirstChild(child.Name) and child:FindFirstChild('Humanoid') and child:FindFirstChild('HumanoidRootPart') then 

            enemylist:Remove(child.Name)
        end


    end)



    -- HumanoidRootPart Players LocalPlayer Character Humanoid
    
    local l__ReplicatedStorage__2 = game:GetService("ReplicatedStorage");
    v5 = require(l__ReplicatedStorage__2.Modules:WaitForChild("Helper"));
    local u32 = {
        Type = 'Light', 
        AnimSet = '', 
        CurrentHeavy = 5, 
        CurrentLight = 5, 
        CurrentLightCombo = 1
    };
    
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('loop break') break end 
            
            if getgenv().dbzgametbl['killaura'] then 
                for _,v in next,workspace:FindFirstChild('Main'):FindFirstChild('Live'):GetChildren() do 
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0 then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude 
                        
                        if dist <= getgenv().dbzgametbl['distance'] then 
                            v5.TryAttack(game.Players.LocalPlayer.Character, u32);
                            --task.wait(.0005)
                            -- local ohTable1 = {
                            -- 	["Victim"] = v,
                            -- 	["Type"] = "Light",
                            -- 	["VictimPosition"] = v:FindFirstChild('HumanoidRootPart').Position,
                            -- 	["LocalInfo"] = {
                            -- 		["Flying"] = false
                            -- 	},
                            -- 	["CurrentLight"] = 6,
                            -- 	["CurrentLightCombo"] = 1,
                            -- 	["CurrentHeavy"] = 6,
                            -- 	["AnimSet"] = "Android17"
                            -- }
                            -- game:GetService("ReplicatedStorage").Events.TryAttack:FireServer(ohTable1)
                            
                        end
                    end
                end
            end

        end
    end)

elseif game.PlaceId == 6812437958 then 


    local tab = window:CreateTab(gameName)
    local beyblade = tab:CreateSector('Cheats','left')

    getgenv().copybey = false
    local function getexploit()
        local exploit =
            (syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
            (secure_load and "Sentinel") or
            (is_sirhurt_closure and "Sirhurt") or
            (pebc_execute and "ProtoSmasher") or
            (KRNL_LOADED and "Krnl") or
            (WrapGlobal and "WeAreDevs") or
            (isvm and "Proxo") or
            (shadow_env and "Shadow") or
            (jit and "EasyExploits") or
            (getscriptenvs and "Calamari") or
            (unit and not syn and "Unit") or
            (OXYGEN_LOADED and "Oxygen U") or
            (IsElectron and "Electron") or
            ("Unsupported")
      
        return exploit
    end
    local mt = getrawmetatable(game)
    local namecall = mt.__namecall
    if make_writeable then make_writeable(mt) end 
    if getexploit() == 'Krnl' or setreadonly then 
        setreadonly(mt,false)
    end
    local xtra = ''
    local oldind = mt.__index; 
    local yYes,nNo = pcall(function()
        mt.__namecall = newcclosure(function(self,...)
            if  checkcaller() and getnamecallmethod() == 'FireServer' and tostring(self) == 'spawnEvent' and getgenv().copybey == true then --// checkcaller -- not checkcaller() and
                local args = {...}
                return
            end
            return namecall(self,...)
        end)
    end)
    getgenv().Players = {}
    for _,v in next, game.Players:GetChildren() do 
        if v:IsA('Player') then table.insert(getgenv().Players,v.Name) end
    end
    getgenv().selectedPlayer = ''
    local beycopy = beyblade:AddDropdown("Player Bey Copy", getgenv().Players, "", false, function(dropdownv)
        getgenv().selectedPlayer = dropdownv -- could put selectedplayer inside Players Table
        --PlayerTP:updateText(getgenv().selectedPlayer)
    end)

    beyblade:AddButton('Spawn',function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

        local ohInstance1 = game.Players.LocalPlayer.Character
        local ohInstance2 = workspace[getgenv().selectedPlayer].beyPreview.Base
        local ohInstance3 = workspace[getgenv().selectedPlayer].beyPreview.Weight
        local ohInstance4 = workspace[getgenv().selectedPlayer].beyPreview.Tip

        game:GetService("ReplicatedStorage").Events.spawnEvent:FireServer(ohInstance1, ohInstance2, ohInstance3, ohInstance4)
    end)
    beyblade:AddButton('crash server',function()
        -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
        repeat 
            task.wait()
            local ohInstance1 = game.Players.LocalPlayer.Character
            local ohInstance2 = game.Players.LocalPlayer.Character.beyPreview.Base
            local ohInstance3 = game.Players.LocalPlayer.Character.beyPreview.Weight
            local ohInstance4 = game.Players.LocalPlayer.Character.beyPreview.Tip
    
            game:GetService("ReplicatedStorage").Events.spawnEvent:FireServer(ohInstance1, ohInstance2, ohInstance3, ohInstance4)
        until (1 == 2)

    end)
    game.Players.PlayerAdded:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        beycopy:Add(xchild.Name)
    end)
    game.Players.PlayerRemoving:Connect(function(xchild)
        getgenv().Players = {}
        for _,dChild in pairs(game.Players:GetChildren()) do 
            if dChild:IsA('Player') then 
                table.insert(getgenv().Players,dChild.Name)
            end
        end
        beycopy:Remove(xchild.Name)
    end)


elseif game.PlaceId == 9380307595 then 
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')



elseif game.PlaceId == 7162704734 then -- fighting game 
    local tab = window:CreateTab('Fighting Game')
    local esptab = window:CreateTab('Esp')
    local sector = tab:CreateSector('Cheats','left')
    local gamechangers = tab:CreateSector('Cheats','right')
    local espsector = esptab:CreateSector('Esp','right')
    local botssector = tab:CreateSector('Cheats','right')

    getgenv().fightlocalgame = {
        nocooldown = false;
        nocooldownsettings = {
            rollcooldown = true;
            runcooldown = true;
            blockcooldown = true;
            nojump = true;
            dashcooldown = true;
            freezecooldown = true;
        };
        trinketesp = false;
        showinvisibletrinkets = false;
        mobesp = false;
        fullbright = false;
        nopackets = false;
        maxviewtrinketdistance = 100;
        autopickuptrinkets = false;
        maxviewmobdistance = 100;
        playeresp = false;
        maxviewplayerdistance = 100;
        npcesp = false;
        maxviewnpcdistance = 100;
        trinketbot = false;
        action  = 'idle';
        trinketbotserverhop = false;
        teleportatingnpc = nil;--''; -- teleortatingnpc-- teleportingnpc
    }
    getgenv().CreateTrinketEsp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                local vect,onscreen = cam:worldToViewportPoint(v.Position)
                local distance = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                
                if onscreen and getgenv().fightlocalgame['trinketesp'] == true then 
                    sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,1)
                    if getgenv().fightlocalgame['showinvisibletrinkets'] == false then 
                        if v.Transparency == 0 then 
                            sectionesp.Visible = true
                        elseif v.Transparency == 1 then
                            sectionesp.Visible = false
                        end
                    else
                        sectionesp.Visible = true
                    end


                    sectionesp.Text = 'Trinket\nDistance: '..math.floor(distance)
                elseif getgenv().fightlocalgame['trinketesp'] == false then 
                    sectionesp:Remove()
                else

                    sectionesp.Visible = false
                end
                if getgenv().destroy == true then 
                    sectionesp:Remove()
                end
            end)
        end
        coroutine.wrap(updPosition)()
    end 


    local no_coolsector = sector:AddToggle('No Cooldowns',false,function(xstate)
        getgenv().fightlocalgame['nocooldown'] = xstate
    end)
    -- local RollCooldown = sector:AddToggle('Roll Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['rollcooldown'] = xtstae
    -- end)
    -- local RunCooldown = sector:AddToggle('Run Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['runcooldown'] = xtstae
    -- end)
    -- local BlockCooldown = sector:AddToggle('Block Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['blockcooldown'] = xtstae
    -- end)
    -- local DashCooldown = sector:AddToggle('Dash Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['dashcooldown'] = xtstae
    -- end)
    -- local JumpCooldown = sector:AddToggle('Jump Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['nojump'] = xtstae
    -- end)
    -- local FreezeCooldown = sector:AddToggle('Freeze Cooldown',false,function(xtstae)
    --     getgenv().fightlocalgame['nocooldownsettings']['freezecooldown'] = xtstae
    -- end)
    -- no_coolsector:MakeVisibleIfActive(RollCooldown)
    -- no_coolsector:MakeVisibleIfActive(RunCooldown)
    -- no_coolsector:MakeVisibleIfActive(BlockCooldown)
    -- no_coolsector:MakeVisibleIfActive(DashCooldown)
    -- no_coolsector:MakeVisibleIfActive(JumpCooldown)
    -- no_coolsector:MakeVisibleIfActive(FreezeCooldown)


    sector:AddButton('Reset Character',function()
        game.Players.LocalPlayer.Character:BreakJoints()
    end)
    sector:AddButton('Attempt to Crash Client',function()
        game.RunService.RenderStepped:Connect(function()
            local ohNumber1 = 42.92091715335846
            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
            game.RunService.RenderStepped:Connect(function()
                local ohNumber1 = 42.92091715335846
                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                game.RunService.RenderStepped:Connect(function()
                    local ohNumber1 = 42.92091715335846
                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                    game.RunService.RenderStepped:Connect(function()
                        local ohNumber1 = 42.92091715335846
                        game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                        game.RunService.RenderStepped:Connect(function()
                            local ohNumber1 = 42.92091715335846
                            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                            game.RunService.RenderStepped:Connect(function()
                                local ohNumber1 = 42.92091715335846
                                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                game.RunService.RenderStepped:Connect(function()
                                    local ohNumber1 = 42.92091715335846
                                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                    game.RunService.RenderStepped:Connect(function()
                                        local ohNumber1 = 42.92091715335846
                                        game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                        game.RunService.RenderStepped:Connect(function()
                                            local ohNumber1 = 42.92091715335846
                                            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                            game.RunService.RenderStepped:Connect(function()
                                                local ohNumber1 = 42.92091715335846
                                                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)
                                                game.RunService.RenderStepped:Connect(function()
                                                    local ohNumber1 = 42.92091715335846
                                                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                    game.RunService.RenderStepped:Connect(function()
                                                        local ohNumber1 = 42.92091715335846
                                                        game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                        game.RunService.RenderStepped:Connect(function()
                                                            local ohNumber1 = 42.92091715335846
                                                            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                            game.RunService.RenderStepped:Connect(function()
                                                                local ohNumber1 = 42.92091715335846
                                                                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                game.RunService.RenderStepped:Connect(function()
                                                                    local ohNumber1 = 42.92091715335846
                                                                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                    game.RunService.RenderStepped:Connect(function()
                                                                        local ohNumber1 = 42.92091715335846
                                                                        game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                        game.RunService.RenderStepped:Connect(function()
                                                                            local ohNumber1 = 42.92091715335846
                                                                            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                            game.RunService.RenderStepped:Connect(function()
                                                                                local ohNumber1 = 42.92091715335846
                                                                                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                                game.RunService.RenderStepped:Connect(function()
                                                                                    local ohNumber1 = 42.92091715335846
                                                                                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                                    game.RunService.RenderStepped:Connect(function()
                                                                                        local ohNumber1 = 42.92091715335846
                                                                                        game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                                        game.RunService.RenderStepped:Connect(function()
                                                                                            local ohNumber1 = 42.92091715335846
                                                                                            game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)
                                                                                            game.RunService.RenderStepped:Connect(function()
                                                                                                local ohNumber1 = 42.92091715335846
                                                                                                game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                                                game.RunService.RenderStepped:Connect(function()
                                                                                                    local ohNumber1 = 42.92091715335846
                                                                                                    game:GetService("ReplicatedStorage").FallDamage:FireServer(ohNumber1)  
                                                                                                end)
                                                                                            end)  
                                                                                        end)
                                                                                    end)
                                                                                end)
                                                                            end)
                                                                        end)
                                                                    end)
                                                                end)
                                                            end)
                                                        end)
                                                    end)
                                                end)  
                                            end)
                                        end)
                                    end)
                                end)
                            end)
                        end)
                    end)
                end)
            end)
        end)
    end)

    sector:AddButton('Serverhop',function()
        local Http = game:GetService("HttpService")
        local Api = "https://games.roblox.com/v1/games/"
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        
        
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        
        local listed = 0
        local reg = {}
        for _,server in next, ListServers(nil).data do 
            pcall(function()
                if server.id ~= game.JobId then 
                    table.insert(reg,server.id)  
                end
                --print(server.id)
            end)
        end
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
    end)


    local disableanticheatubutton = sector:AddButton('Attempt to Disable Anticheat',function()
        local bypassanticheat = nil ;
        local __bypassed = {}
        local function __find(r,finding)
            local found = {}
            local __result = false
            for _,v in next, debug.getconstants(r) do 
                for k,c in next, finding do 
                    if string.lower(tostring(v)) ==  c or v == c then 
                        table.insert(found,{j = true}) 
                    end
                end
            end
            if #found == #finding then 
                __result = true;
            end
            return __result
        end
        for _,nilinstance in next, getgc() do 
            if type(nilinstance) == 'function' and islclosure(nilinstance) and not is_synapse_function(nilinstance) then 
                local constants = debug.getconstants(nilinstance)
                if getinfo(nilinstance).source:find('_CharacterClient') then 
                    local statement = [[ SOURCE = {source} FNAME = {FNAME} ]]
                    statement = string.gsub(statement,'{source}','C-Client') -- getinfo(nilinstance).source
                    statement = string.gsub(statement,'{FNAME}',getinfo(nilinstance).name)
                    --print(statement)
                    if __find(nilinstance,{'ReplicatedStorage','GetService','getmetatable'}) then 
                        bypassanticheat = nilinstance
                        table.insert(__bypassed,bypassanticheat)
                        local Saved = bypassanticheat; Saved = hookfunction(bypassanticheat,function(self,...)
                            if table.find({'Taunt','DropItem','Grip','Carry','Seat','OpenDoor','Dash','Block','Attack'},self) then 
                                print('found')
                                return Saved(self,...)
                            end
                            return task.wait(math.huge)
                        end)
                    end
                end
            end
        end
    end)
    disableanticheatubutton:ActivateKnowledge()
    disableanticheatubutton:AddKnowledge('Press Once')





    sector:AddToggle('Stop Sending Packets',false,function(xstate)
        getgenv().fightlocalgame['nopackets'] = xstate
    end)


    sector:AddToggle('Auto Pickup Trinkets',false,function(xstate)
        getgenv().fightlocalgame['autopickuptrinkets'] = xstate
    end)


    sector:AddTextbox('NPC Teleportation','',function(xstate)

        for _,v in next, workspace.NPCs:GetChildren() do 
            if v.Name:sub(1,string.len(xstate)) == xstate then 
                getgenv().fightlocalgame['teleportatingnpc'] = v
            end
        end
        -- getgenv().fightlocalgame['teleportatingnpc'] = xstate
    end)
    sector:AddButton('Teleport',function()
        if getgenv().fightlocalgame['teleportatingnpc'] ~= nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            local CoverScreen = Instance.new('ScreenGui');
        
            local AZFAKEFRAME   = Instance.new('Frame',CoverScreen);
            AZFAKEFRAME.ZIndex = 50;
            AZFAKEFRAME.Size = UDim2.new(1,0,1,0)
            AZFAKEFRAME.BackgroundColor3 = Color3.fromRGB(0,0,0)
            CoverScreen.IgnoreGuiInset = true; 
            CoverScreen.Parent = game.CoreGui;

            game:GetService('TweenService'):Create(AZFAKEFRAME,TweenInfo.new(1),{BackgroundColor3 = Color3.new(0,255,0)}):Play()
            task.wait(1)

            local Root = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart');
            Root.Parent = nil;
            Root.CFrame = getgenv().fightlocalgame['teleportatingnpc']:FindFirstChild('HumanoidRootPart').CFrame;
            Root.Parent = game.Players.LocalPlayer.Character

            game:GetService('TweenService'):Create(AZFAKEFRAME,TweenInfo.new(1),{BackgroundTransparency = 1}):Play()
            task.wait(1)
            AZFAKEFRAME:Destroy();
            CoverScreen:Destroy()

        end
    end)



    botssector:AddToggle('Trinket Bot',false,function(xtstae)
        getgenv().fightlocalgame['trinketbot'] = xtstae
        getgenv().fightlocalgame['action'] = 'idle'
        if getgenv().fightlocalgame['trinketbot'] == true then 
            getgenv().fightlocalgame['action'] = 'idle'
        end
    end)

    botssector:AddToggle('Server Hop Bot',false,function(xtstae)
        getgenv().fightlocalgame['trinketbotserverhop'] = xtstae
    end)


    getgenv().serverhop = function()
        local Http = game:GetService("HttpService")
        local Api = "https://games.roblox.com/v1/games/"
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        
        
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        
        local listed = 0
        local reg = {}
        for _,server in next, ListServers(nil).data do 
            pcall(function()
                if server.id ~= game.JobId then 
                    table.insert(reg,server.id)  
                end
                --print(server.id)
            end)
        end
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
        
    end


    gamechangers:AddToggle('Full Bright',false,function(xstate)
        getgenv().fightlocalgame['fullbright'] = xstate
    end)

    espsector:AddSlider('Trinket Distance',0,100,10000,1,function(xstate)
        getgenv().fightlocalgame['maxviewtrinketdistance'] = xstate
    end)

    local trinketsector = esptab:CreateSector('Trinkets','left')
    trinketsector:AddToggle("Trinket ESP", false, function(xstate)
        getgenv().fightlocalgame['trinketesp'] = xstate
        if getgenv().fightlocalgame['trinketesp'] == true then 
            local TrinketDirectory = nil;

            for _,v in next, workspace:GetChildren() do 
                if v:IsA('Folder') and v:FindFirstChildWhichIsA('Part') and v:FindFirstChildWhichIsA('Part'):FindFirstChild('ClickDetector') then 
                    TrinketDirectory =v;
                end
            end
            print(TrinketDirectory)
            for _,v in next, TrinketDirectory:GetChildren() do
                --print(v.Name)
                if v:IsA('Part') or v:IsA('MeshPart') then 
                    task.spawn(function()
                        local __assigned = azfake.__esp__call(v,{
                            esptext = 'Trinket';
                            ['removedcallback'] = function()
                                __assigned.object:Remove()
                            end; -- ojbecy
                            ['inloopfunction'] = function()
                                
                                -- __assigned.object.Text = 'Trinket'
                                -- __assigned.maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance']
                            end;
                            maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance'];
                        })
                        __assigned.inloopfunction = function()
                            __assigned.object.Text = 'Trinket'
                            __assigned.maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance']
                        end
                        __assigned.removedcallback = function()
                            pcall(function()
                                __assigned.object:Remove()
                            end)
                        end
                        __assigned.checkingvalue = getgenv().fightlocalgame['trinketesp']
                        __assigned.waitingvalue = false;
                        --[[ waits for assigned to become false before it toggles remove  ]]
                    end)
                end
            end
        end
        -- for _,v in next, DIR:GetChildren() do 
        --     if xstate == true then 
        --         getgenv().CreateTrinketEsp(v)
        --     end
        -- end
    end)
    trinketsector:AddToggle("Show Invisible Trinkets", false, function(xstate)
        getgenv().fightlocalgame['showinvisibletrinkets'] = xstate
    end) -- show if showing function something else showing for a sector or toggle etc
    local mobespsector = esptab:CreateSector('Mob Esp','right')
    mobespsector:AddToggle("Mob ESP", false, function(xstate)
        getgenv().fightlocalgame['mobesp'] = xstate
        if getgenv().fightlocalgame['mobesp'] == true then 
            local Directory = workspace.Live 
            for _,v in next, Directory:GetChildren() do 
                --if not table.find(game.Players:GetPlayers())
                if not game.Players:FindFirstChild(v.Name) then 
                    task.spawn(function()
                        local __assigned = azfake.__esp__call(v,{
                            esptext = '..';
                            ['removedcallback'] = function()
                                __assigned.object:Remove()
                            end; -- ojbecy
                            ['inloopfunction'] = function()
                                --
                            end;

                            maxdistance = getgenv().fightlocalgame['maxviewmobdistance'];
                            charactersettings = true;
                        })
                        __assigned.inloopfunction = function()
                            __assigned.object.Text = v.Name
                            __assigned.maxdistance = getgenv().fightlocalgame['maxviewmobdistance']
                        end
                        __assigned.removedcallback = function()
                            pcall(function()
                                __assigned.object:Remove()
                            end)
                        end
                        __assigned.checkingvalue = getgenv().fightlocalgame['mobesp']
                        __assigned.waitingvalue = false;
                    end)
                end
            end
            local DirectoryAdded = Directory.ChildAdded:Connect(function(v)
                if not game.Players:FindFirstChild(v.Name) then 
                    task.spawn(function()
                        local __assigned = azfake.__esp__call(v,{
                            esptext = '..';
                            ['removedcallback'] = function()
                                __assigned.object:Remove()
                            end; -- ojbecy
                            ['inloopfunction'] = function()
                                --
                            end;

                            maxdistance = getgenv().fightlocalgame['maxviewmobdistance'];
                        })
                        __assigned.inloopfunction = function()
                            __assigned.object.Text = v.Name
                            __assigned.maxdistance = getgenv().fightlocalgame['maxviewmobdistance']
                        end
                        __assigned.removedcallback = function()
                            pcall(function()
                                __assigned.object:Remove()
                            end)
                        end
                        __assigned.checkingvalue = getgenv().fightlocalgame['mobesp']
                        __assigned.waitingvalue = false;
                    end)
                end
            end)
            task.spawn(function()
                repeat task.wait(.3) until getgenv().loopsUnload == true ;
                DirectoryAdded:Disconnect()
            end)
        end
    end)
    mobespsector:AddSlider('Mob Esp Distance',0,100,10000,1,function(xstate)
        getgenv().fightlocalgame['maxviewmobdistance'] = xstate
    end)
    local playerespsector = esptab:CreateSector('Player Esp','left')
    playerespsector:AddToggle("Player ESP", false, function(xstate)
        getgenv().fightlocalgame['playeresp'] = xstate
        if getgenv().fightlocalgame['playeresp'] == true then 
            local Directory = workspace.Live 
            for _,loop_player in next, game.Players:GetChildren() do 
                --if not table.find(game.Players:GetPlayers())
                local v = loop_player.Character
                local loop_character = loop_player.Character
                task.spawn(function()
                    local __assigned = azfake.__esp__call(loop_player,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            --__assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;
                        playersettings = true;
                        maxdistance = getgenv().fightlocalgame['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
                            __assigned.object.Text = loop_character.Name..' - '..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                        end
                        __assigned.maxdistance = getgenv().fightlocalgame['maxviewplayerdistance']
                        __assigned.checkingvalue = getgenv().fightlocalgame['playeresp']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.waitingvalue = false;
                end)
            end
            local DirectoryAdded = game.Players.ChildAdded:Connect(function(loop_player)

                local v = loop_player.Character
                local loop_character = loop_player.Character
                task.spawn(function()
                    local __assigned = azfake.__esp__call(loop_player,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            --__assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;
                        playersettings = true;
                        maxdistance = getgenv().fightlocalgame['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
                            __assigned.object.Text = loop_character.Name..' - '..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                        end
                        __assigned.maxdistance = getgenv().fightlocalgame['maxviewplayerdistance']
                        __assigned.checkingvalue = getgenv().fightlocalgame['playeresp']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.waitingvalue = false;
                end)
                -- if not game.Players:FindFirstChild(v.Name) then 
                --     task.spawn(function()
                --         local __assigned = azfake.__esp__call(v,{
                --             esptext = '..';
                --             ['removedcallback'] = function()
                --                 __assigned.object:Remove()
                --             end; -- ojbecy
                --             ['inloopfunction'] = function()
                --                 --
                --             end;
                --             charactersettings = true;
                --             maxdistance = getgenv().fightlocalgame['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                --         })
                --         __assigned.inloopfunction = function()-- whati f no max health
                --             __assigned.object.Text = v.Name..' - '..math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                --             __assigned.maxdistance = getgenv().fightlocalgame['maxviewplayerdistance']
                --         end
                --         __assigned.removedcallback = function()
                --             pcall(function()
                --                 __assigned.object:Remove()
                --             end)
                --         end
                --         __assigned.checkingvalue = getgenv().fightlocalgame['playeresp']
                --         __assigned.waitingvalue = false;
                --     end)
                -- end
            end)
            task.spawn(function()
                repeat task.wait(.3) until getgenv().loopsUnload == true ;
                DirectoryAdded:Disconnect()
            end)
        end
    end)
    playerespsector:AddSlider('Player Esp Distance',0,100,10000,1,function(xstate)
        getgenv().fightlocalgame['maxviewplayerdistance'] = xstate -- maxplayermobdistance
    end)
    local npcespsector = esptab:CreateSector('Npcs','right')
    npcespsector:AddToggle("Npc ESP", false, function(xstate)
        getgenv().fightlocalgame['npcesp'] = xstate
        if getgenv().fightlocalgame['npcesp'] == true then -- only allow certain esp name
            local Directory = workspace.NPCs 
            for _,v in next, Directory:GetChildren() do 
                --if not table.find(game.Players:GetPlayers())
                task.spawn(function()
                    local __assigned = azfake.__esp__call(v,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            __assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;

                        maxdistance = getgenv().fightlocalgame['maxviewnpcdistance'];
                        charactersettings = true;
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        __assigned.object.Text = v.Name
                        __assigned.maxdistance = getgenv().fightlocalgame['maxviewnpcdistance']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.checkingvalue = getgenv().fightlocalgame['npcesp']
                    __assigned.waitingvalue = false;
                end)
            end
            local DirectoryAdded = Directory.ChildAdded:Connect(function(v)
                task.spawn(function()
                    local __assigned = azfake.__esp__call(v,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            __assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;

                        maxdistance = getgenv().fightlocalgame['maxviewnpcdistance'];
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        __assigned.object.Text = v.Name
                        __assigned.maxdistance = getgenv().fightlocalgame['maxviewnpcdistance']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.checkingvalue = getgenv().fightlocalgame['npcesp']
                    __assigned.waitingvalue = false;
                end)
            end)
            task.spawn(function()
                repeat task.wait(.3) until getgenv().loopsUnload == true ;
                DirectoryAdded:Disconnect()
            end)
        end
    end)
    npcespsector:AddSlider('Npc Esp Distance',0,100,10000,1,function(xstate)
        getgenv().fightlocalgame['maxviewnpcdistance'] = xstate
    end)

    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if call_type == 'FireServer'  and tostring(self) == 'Communicate' and getgenv().fightlocalgame['nopackets'] == true then 
            return metahook(self,'__azfake__')
        elseif call_type == 'Kick' then 
            warn('Attempted to kick')
            return task.wait(math.huge)
        else
            return metahook(self,...)
        end
        return metahook(self,...)
    end)
    local metaindex;
    metaindex = hookmetamethod(game,'__index',function(self,reading)
        -- if tostring(self) == 'Blocking' and tostring(reading) == 'Value' and getgenv().fightlocalgame['nocooldown'] == true then 
        --     return false
        -- end
        return metaindex(self,reading)
    end)

    -- assign esp 
        
        local DIR = game:GetService("Workspace").Folder
        for _,v in next, DIR:GetChildren() do 
            if getgenv().fightlocalgame['trinketesp'] == true then 
                getgenv().CreateTrinketEsp(v)
            end
        end
        

        workspace.Folder.ChildAdded:Connect(function(xchild)
            getgenv().CreateTrinketEsp(xchild)
        end)


        local lp = game.Players.LocalPlayer
        local cam = workspace.CurrentCamera
        local worldToViewportPoint = cam.worldToViewportPoint
        
        local head_offset =  Vector3.new(0,1.5,0)
        local leg_offset = Vector3.new(0,10,0)
        getgenv().DefaultEsp = function(v)
            -- print(v.Name)
            task.wait(0.1)
            local esp = Drawing.new('Text')
            esp.Visible = false
            esp.Center = true 
            esp.Outline = true 
            esp.Font = 2 
            esp.Size = 13
            esp.Color = Color3.new(5,0,0)
            esp.Text = 'SEXY'
        
            -- local function upd()
            --     local c 
            --     c = game:GetService('RunService').RenderStepped:Connect(function()
            --         task.wait()
            --         if v.Character and v~= game.Players.LocalPlayer  and v.Character:FindFirstChild('HumanoidRootPart') then 
            --             local espv,onscreen = workspace.CurrentCamera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
        
            --             if onscreen and getgenv().playeresp == true then 
            --                 esp.Position = Vector2.new(espv.X,espv.Y ) + Vector2.new(0,1)
            --                 if getgenv().streamermode == false then 
            --                     esp.Text = v.Name
            --                 else
            --                     esp.Text = v.Name:sub(1,2)..'cummybuttermilk'
            --                 end
        
            --                 if getgenv().playeresp == true then esp.Visible = true end
                        
        
            --             else
            --                 esp.Visible = false
            --             end
        
            --         else
            --             if game.Players:FindFirstChild(v.Name) == nil then c:Disconnect() end
            --             esp.Visible = false
            --         end
            --     end)
            -- end
        
        
            local tracer = Drawing.new('Line')
            tracer.Visible = false
            tracer.Color = Color3.new(1,0,0)
            tracer.Thickness = 1 
            tracer.Transparency = 1 
            
            
            local box_o = Drawing.new('Square')
            box_o.Visible = false
            box_o.Color = Color3.new(0,0,0)
            box_o.Thickness = 2
            box_o.Transparency =1 
            box_o.Filled = false
            
            local box = Drawing.new('Square')
            box.Visible = false
            box.Color = Color3.new(1,0,0)
            box.Thickness = 1.5
            box.Transparency =1 
            box.Filled = false
            
            local hb_o = Drawing.new('Square')
            hb_o.Visible = false
            hb_o.Color = Color3.new(0,0,0)
            hb_o.Thickness = 1
            hb_o.Transparency =1 
            hb_o.Filled = false
            
            local hb = Drawing.new('Square')
            hb.Visible = false
            hb.Color = Color3.new(1,0,0)
            hb.Thickness = 1
            hb.Transparency =1 
            hb.Filled = true
            local health = Drawing.new('Text')
            health.Visible = false
            local distancex = Drawing.new('Text')
            distancex.Visible = false
            local function rootesp()
                local xkeeptracer
                local plsstoptracer = false
                cam = workspace.CurrentCamera
                xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                    task.wait(0.2)
                    if v and v and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer.Character and v.Character.Humanoid.Health >0 then 
                        local vect,onscreen = cam:worldToViewportPoint(v.HumanoidRootPart.Position)
                        
                        if onscreen and getgenv().playeresp and getgenv().tracers and tracer then 
                            tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                            tracer.To = Vector2.new(vect.X,vect.Y)
                            tracer.Visible = true
                        else
                            tracer.Visible = false
                        end
                        if not v or getgenv().loopsUnload == true then 
                            plsstoptracer = true
                        end
                    elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                        xkeeptracer:Disconnect()
                        if tracer then 
                            pcall(function()
                                tracer:Remove()
                            end)
                        end
                    else
                        tracer.Visible = false
                    end
                end) 
            end
            local function boxroot()
                local xkeeprunning 
                xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                    task.wait(0.1)
                    if v and v:FindFirstChild('Head') and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer.Character  then  -- and v.Character.Humanoid.Health >0
                        local vect,onscreen = cam:worldToViewportPoint(v.HumanoidRootPart.Position)
                        
                        local vroot = v.HumanoidRootPart
                        local head = v.Head
                        
                        local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                        local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                        if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                        elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                        local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                        local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                        
                        if onscreen and getgenv().playeresp and box then 
                            cam = workspace.CurrentCamera
                            --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))
        
        
                            if box_o and cam.ViewportSize and rootpos and headpos then 
                                box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                                box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                                box_o.Visible = true 
                            end
                            if box then 
                                box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                                box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                                box.Visible = true
                            end
        
                            hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                            hb_o.Position = box_o.Position - Vector2.new(6,0)
                            hb_o.Visible = true
                            hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                            hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                            hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                            hb.Visible = true
        
                            esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,1)
                            esp.Text = '['..v.Character.Humanoid.Health..'/'..v.Character.Humanoid.MaxHealth..']'..v.Name
                            if getgenv().playeresp == true then esp.Visible = true end
                        
                        else
                            pcall(function()
                                box.Visible = false
                            end)
                            pcall(function()
                                box_o.Visible = false
                            end)
                            pcall(function()
                                hb.Visible = false
                            end)
                            pcall(function()
                                hb_o.Visible = false
                            end)
                            pcall(function()
                                esp.Visible = false
                            end)
                            pcall(function()
                                distancex.Visible = false 
                            end)
                            pcall(function()
                                health.Visible = false
                            end)
                        
                            
                            
                        end
                    end
                    if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true  then 
                        xkeeprunning:Disconnect()
                        task.wait(1)
                        pcall(function()
                            box:Remove()
                        end)
                        pcall(function()
                            box_o:Remove()
                        end)
                        pcall(function()
                            hb:Remove()
                        end)
                        pcall(function()
                            hb_o:Remove()
                        end)
                        pcall(function()
                            esp:Remove()
                        end)
                        pcall(function()
                            distancex:Remove()
                        end)
                        pcall(function()
                            health:Remove()
                        end)
                    end
                end) 
            end
            task.spawn(function()
                coroutine.wrap(rootesp)()
                coroutine.wrap(boxroot)()
            end)
        
        end
        -- for _,v in next, workspace.Live:GetChildren() do 
        --     if not game.Players:FindFirstChild(v.Name) then 
        --         getgenv().DefaultEsp(v)
        --     end
        -- end
        -- workspace.Live.ChildAdded:Connect(function(xchild)
        --     if not game.Players:FindFirstChild(xchild.Name) then 
        --         getgenv().DefaultEsp(xchild)
        --     end
        -- end)



    --


    
    local function getstatus()
        return getgenv().fightlocalgame['action']
    end

    local function setstatus(x)
        getgenv().fightlocalgame['action'] = x
    end
    local function oteleporto(x)
        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            game.Players.LocalPlayer.Character:FindFirstChild('Movement').Disabled = true;
            game.Players.LocalPlayer.Character:FindFirstChild('_CharacterClient').Disabled = true;
            local Root = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
            
            Root.Parent = nil;
            Root.CFrame = x;
            Root.Parent = game.Players.LocalPlayer.Character
            game.Players.LocalPlayer.Character:FindFirstChild('Movement').Disabled = false;
            game.Players.LocalPlayer.Character:FindFirstChild('_CharacterClient').Disabled = false;
        end
    end
    local TrinketDirectory = nil;

    for _,v in next, workspace:GetChildren() do 
        if v:IsA('Folder') and v:FindFirstChildWhichIsA('Part') and v:FindFirstChildWhichIsA('Part'):FindFirstChild('ClickDetector') then 
            TrinketDirectory =v;
        end
    end
    task.spawn(function()
        while task.wait(0.1) do 
            if getgenv().fightlocalgame['nocooldown'] == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored == true then 
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') .Anchored = false;
                end
                game.Players.LocalPlayer.Character.WalkSpeed = 26
                for _,child in next, game.Players.LocalPlayer.Character:GetChildren() do 
                    if child and child.Name == 'StoppedBlocking' then --and getgenv().fightlocalgame['nocooldownsettings']['rollcooldown'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('rollcooldown') then --and getgenv().fightlocalgame['nocooldownsettings']['rollcooldown'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('RunCooldown') then --and getgenv().fightlocalgame['nocooldownsettings']['runcooldown'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('BlockCooldown') then -- and getgenv().fightlocalgame['nocooldownsettings']['blockcooldown'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('DashCooldown') then -- and getgenv().fightlocalgame['nocooldownsettings']['dashcooldown'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('NoJump') then --and getgenv().fightlocalgame['nocooldownsettings']['nojump'] == true then 
                        child:Destroy()
                    end
                    if child and child.Name:find('Freeze') then -- and getgenv().fightlocalgame['nocooldownsettings']['freezecooldown'] == true then  -- freezejump
                        child:Destroy()
                    end
                end
                for _,child in next, game.Players.LocalPlayer:GetChildren() do 
                    if child and child.Name:find('dagm1') then 
                        child:Destroy()
                    end
                    if child and child.Name:find('M1')then 
                        child:Destroy()
                    end
                    if child and child.Name:find('ComboStun')then 
                        child:Destroy()
                    end
                end

                -- if getgenv().fightlocalgame['nocooldownsettings']['rollcooldown']  == true then --the N

                -- end 
            end
            if getgenv().fightlocalgame['fullbright'] == true then 
                getgenv().fightlocalgame['fullbright'] = nil;
                local __gameconnections = {}
                local clocktimeconnection = game:GetService('Lighting'):GetPropertyChangedSignal('ClockTime'):Connect(function()
                    game:GetService('Lighting').ClockTime = 12;
                end)
                local globalshadowsconnection = game:GetService('Lighting'):GetPropertyChangedSignal('GlobalShadows'):Connect(function()
                    game:GetService('Lighting').GlobalShadows = false;
                end)
                local brightnessconnection = game:GetService('Lighting'):GetPropertyChangedSignal('Brightness'):Connect(function()
                    game:GetService('Lighting').Brightness = 6
                end)
                local ambientconnection = game:GetService('Lighting'):GetPropertyChangedSignal('Ambient'):Connect(function()
                    game:GetService('Lighting').Ambient = Color3.fromRGB(100,100,100)
                end)
                local outdoorambientconnection = game:GetService('Lighting'):GetPropertyChangedSignal('OutdoorAmbient'):Connect(function()
                    game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(175,175,175)
                end)
                game:GetService('Lighting').ClockTime = 12;
                game:GetService('Lighting').GlobalShadows = false;
                game:GetService('Lighting').Ambient = Color3.fromRGB(100,100,100)
                game:GetService('Lighting').OutdoorAmbient = Color3.fromRGB(175,175,175)
                task.spawn(function()
                    repeat task.wait(0.1) until getgenv().fightlocalgame['fullbright'] == false or getgenv().loopsUnload == true 
                    print('Disconnecting Fullbright')
                    clocktimeconnection:Disconnect()
                    globalshadowsconnection:Disconnect()
                    brightnessconnection:Disconnect()
                    ambientconnection:Disconnect()
                    outdoorambientconnection:Disconnect()
                end)
            end
            if getgenv().fightlocalgame['autopickuptrinkets'] == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                getgenv().fightlocalgame['autopickuptrinkets'] = nil;
                task.spawn(function()
                    for i, v in pairs(TrinketDirectory:GetChildren()) do
                        if v then 
                            if not v:FindFirstChild('Blacklist'):FindFirstChild(game.Players.LocalPlayer.Name) and (v.Position-game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude <= 9 then
                                pcall(function()
                                    local stackfuncs = {}
                                    local Mouse = game.Players.LocalPlayer:GetMouse()
                                    for i,v in pairs(getconnections(Mouse.Button1Down)) do
                                        if tostring(rawget(getfenv(v.Function), "script")) == "mainclient "  then -- funny cheser
                                            for i2,v2 in pairs(debug.getupvalues(v.Function)) do
                                                if type(v2) == "function" and islclosure(v2) then
                                                elseif type(v2) == "table" and getrawmetatable(v2) and getrawmetatable(v2).__index then
                                                    local mt = getrawmetatable(v2)
                                                    for i,v in pairs(mt) do
                                                        if type(v) == "function" then
                                                            for i2,v2 in pairs(getupvalues(v)) do
                                                                 if type(v2) == "table" then
                                                                    if v2[1][1][0] == game.Players.LocalPlayer then
                                                                        stackfuncs = v2[1][1]
                                                                        break
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    local TrinketRemote
                                    
                                    if stackfuncs[13]["ClickTrinket"] then
                                        TrinketRemote = stackfuncs[13]["ClickTrinket"]
                                    else
                                        TrinketRemote = game:GetService("ReplicatedStorage"):FindFirstChild("ClickTrinket")
                                    end
                                    local RemoteArgs = stackfuncs[26]
                                    local function shuffle(tabl)
                                        local tbl = {table.unpack(tabl)}
                                        
                                        local args = {}
                                        repeat -- shuffle the arguments everytime remote is fired because thats exactly what the main scirpt does presumably?
                                            if #tbl ~= 0 then
                                                local completed = false
                                                local index = math.random(1, #tbl)
                                                local val = tbl[index]
                                                table.remove(tbl, index)
                                                table.insert(args, val)
                                            end
                                        until #tbl == 0
                                        return args
                                    end
                                    local lasttbl  
                                    local tbl = {table.unpack(RemoteArgs)}
                                    local args = {}
                                    args = shuffle(tbl)
                                    if lasttbl and lasttbl[1] == args[1] and lasttbl[#lasttbl] == args[#args] then
                                        repeat
                                            task.wait(0.1)
                                            args = shuffle(tbl)
                                        until not lasttbl[1] == args[1] and not lasttbl[#lasttbl] == args[#args]
                                    end
                                    lasttbl = args
                                    if args then
                                        TrinketRemote:FireServer(v, table.unpack(args))
                                    end
                                end)
                            end
                        end
                    end
                end)
                if getgenv().fightlocalgame['autopickuptrinkets'] == nil then 
                    getgenv().fightlocalgame['autopickuptrinkets'] = true;
                end
            end
            task.spawn(function()
                if getgenv().fightlocalgame['trinketbot']  == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 and getstatus() == 'idle' then 
                    setstatus('trinketbotting')
                    for _n ,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
                        if v:IsA('ForceField') then 
                            v:Destroy() 
                        end
                    end
                    local CFrames = {
                        CFrame.new(-6054.18066, 2.27398372, -135.101578, -0.999047399, -5.06135329e-08, 0.0436385907, -5.07546574e-08, 1, -2.12598406e-09, -0.0436385907, -4.33882041e-09, -0.999047399);
                        CFrame.new(-6053.74658, 2.27398372, -92.8063126, -0.99996382, -1.26687176e-08, 0.00850769039, -1.26689343e-08, 1, 2.83358944e-11, -0.00850769039, -7.94485033e-11, -0.99996382);
                        CFrame.new(-6054.14258, 2.27398276, -50.3356857, -0.999971807, 8.19603274e-11, 0.00750595424, -6.51893331e-11, 1, -1.96041459e-08, -0.00750595424, -1.96040819e-08, -0.999971807);
                        CFrame.new(-6054.48926, 2.27398276, -12.8302641, -0.999961555, -4.42722259e-09, 0.00877184607, -3.53818153e-09, 1, 1.01367149e-07, -0.00877184607, 1.01332212e-07, -0.999961555);
                        CFrame.new(-6093.29297, 2.27398372, 11.1860628, -0.988999426, 1.07544565e-07, 0.147919282, 1.13998503e-07, 1, 3.51535547e-08, -0.147919282, 5.16294243e-08, -0.988999426);
                        CFrame.new(-6099.86328, 2.27398372, 36.3683968, -0.971956968, 3.78150631e-08, 0.235158786, 3.92646307e-08, 1, 1.48183332e-09, -0.235158786, 1.0673701e-08, -0.971956968);
                        CFrame.new(-6112.18994, -3.8968823, 44.3294754, -0.547811091, 1.50652149e-08, 0.836602032, 3.44883944e-08, 1, 4.57554661e-09, -0.836602032, 3.13595976e-08, -0.547811091);
                        CFrame.new(-6104.69629, -9.36521053, 60.019207, -0.902641952, 8.77953852e-08, -0.430392265, 6.83005155e-08, 1, 6.07456982e-08, 0.430392265, 2.54356038e-08, -0.902641952);
                        CFrame.new(-6103.31396, -9.36521053, 82.7222366, -0.998140991, -9.07304383e-08, -0.0609470457, -9.06495643e-08, 1, -4.09192324e-09, 0.0609470457, 1.44050694e-09, -0.998140991);
                        CFrame.new(-6102.55371, 1.79798853, 100.86116, -0.999830306, -1.17441814e-07, -0.018422313, -1.17275782e-07, 1, -1.00929158e-08, 0.018422313, -7.9307112e-09, -0.999830306);
                        CFrame.new(-6092.79688, 1.79798901, 140.395828, -0.694900811, 2.03418935e-08, 0.719105601, 1.80458848e-08, 1, -1.08493028e-08, -0.719105601, 5.43770762e-09, -0.694900811);
                        CFrame.new(-6101.38428, 10.797986, 167.502304, -0.902532816, -2.6619194e-08, 0.430621088, -2.47076439e-08, 1, 1.00314042e-08, -0.430621088, -1.58596125e-09, -0.902532816);
                        CFrame.new(-6115.03662, 18.7979832, 199.506332, -0.696431756, -2.62565738e-08, 0.717623055, -2.44123921e-08, 1, 1.28967548e-08, -0.717623055, -8.53718518e-09, -0.696431756);
                        CFrame.new(-6164.00146, 28.7979832, 199.812546, 0.18001394, -4.04100717e-08, 0.983664036, 3.99775359e-08, 1, 3.37651436e-08, -0.983664036, 3.32462697e-08, 0.18001394);
                        CFrame.new(-6131.51562, 38.1031075, 139.88652, 0.741211951, -2.1904393e-08, 0.671271086, 4.9716693e-08, 1, -2.22655405e-08, -0.671271086, 4.98768635e-08, 0.741211951);
                        CFrame.new(-6148.63184, 51.978447, 92.9895859, 0.997371018, 7.67961694e-08, 0.0724639148, -7.57767893e-08, 1, -1.68166103e-08, -0.0724639148, 1.12813181e-08, 0.997371018);
                        CFrame.new(-6167.56738, 65.6422195, 91.0595398, 0.0918649212, -1.48568553e-08, 0.995771468, -2.70665925e-08, 1, 1.74169745e-08, -0.995771468, -2.85521509e-08, 0.0918649212);
                        CFrame.new(-6207.42725, 65.6422195, 84.5167236, 0.190014973, -2.08618598e-08, 0.981781185, -1.02893189e-07, 1, 4.11630481e-08, -0.981781185, -1.08840197e-07, 0.190014973);
                        CFrame.new(-6246.62109, 66.1355515, 65.0832214, 0.596370697, 1.52681268e-09, 0.802709162, -6.15787954e-09, 1, 2.67290612e-09, -0.802709162, -6.53702914e-09, 0.596370697);
                        CFrame.new(-6267.49609, 65.6422195, 26.6577625, 0.912987888, -7.30340588e-08, 0.407986611, 9.77074635e-08, 1, -3.96377544e-08, -0.407986611, 7.60521317e-08, 0.912987888);
                        CFrame.new(-6284.90283, 65.6422195, -14.1689129, 0.920590818, -7.27329876e-08, 0.3905285, 9.67028129e-08, 1, -4.17145856e-08, -0.3905285, 7.6167268e-08, 0.920590818);
                        CFrame.new(-6299.66797, 65.6422195, -49.0981712, 0.920590818, 5.74923611e-08, 0.3905285, -7.64392212e-08, 1, 3.29729737e-08, -0.3905285, -6.0206311e-08, 0.920590818);
                        CFrame.new(-6296.07959, 65.6422195, -66.7753448, 0.968938112, 9.93521994e-08, -0.247303307, -9.3468806e-08, 1, 3.55301033e-08, 0.247303307, -1.13113252e-08, 0.968938112);
                        CFrame.new(-6293.3252, 74.410141, -80.6203918, 0.984896243, 9.20966414e-08, -0.173145428, -9.34849282e-08, 1, 1.36763975e-10, 0.173145428, 1.6051791e-08, 0.984896243);
                        CFrame.new(-6304.65039, 82.1980591, -83.600174, 0.25522542, 1.08795071e-08, 0.966881573, 5.55018573e-08, 1, -2.59028532e-08, -0.966881573, 6.02747932e-08, 0.25522542);
                        CFrame.new(-6307.0376, 89.5133667, -94.103775, 0.987457871, -5.67066252e-08, 0.157882735, 6.03982855e-08, 1, -1.85842541e-08, -0.157882735, 2.78870154e-08, 0.987457871);
                        CFrame.new(-6315.94873, 91.8544006, -127.421631, 0.999992669, -6.15121536e-08, -0.00383405806, 6.13787705e-08, 1, -3.49065274e-08, 0.00383405806, 3.46709434e-08, 0.999992669);
                        CFrame.new(-6311.69434, 93.5072479, -132.083099, 0.729058027, -2.32382664e-08, -0.684451878, 2.31170176e-08, 1, -9.3280752e-09, 0.684451878, -9.0217771e-09, 0.729058027);
                        CFrame.new(-6311.81299, 93.4673615, -146.382721, 0.975219846, 2.44874565e-09, 0.221238077, 6.28207975e-09, 1, -3.87598504e-08, -0.221238077, 3.91892101e-08, 0.975219846);
                        CFrame.new(-6311.86279, 90.8623962, -153.318375, 0.999981463, -8.80382919e-11, -0.00608728081, 7.85831608e-11, 1, -1.55350022e-09, 0.00608728081, 1.55299307e-09, 0.999981463);
                        CFrame.new(-6311.7666, 96.4725952, -155.699112, 0.999767721, -0.000161597636, 0.021552261, 9.06262372e-08, 0.999971926, 0.007493529, -0.0215528682, -0.0074917865, 0.999739647);
                        CFrame.new(-6311.8291, 90.9849854, -154.279999, 0.988791466, -0.00621914957, 0.149173707, 0.00554395188, 0.999972403, 0.00494166045, -0.149200335, -0.00405925978, 0.988798678);
                        CFrame.new(-6328.34717, 93.4673615, -145.894501, -0.188755974, -5.56819701e-09, 0.982024014, -1.07429141e-08, 1, 3.60521524e-09, -0.982024014, -9.86929383e-09, -0.188755974);
                        CFrame.new(-6328.31934, 93.4673615, -130.121902, -0.860186279, 1.12990861e-07, 0.509979963, 1.03589642e-07, 1, -4.68341419e-08, -0.509979963, 1.25425528e-08, -0.860186279);
                        CFrame.new(-6325.4458, 93.4673615, -131.65097, 0.567680597, -1.67656395e-08, -0.823248863, -1.19379777e-08, 1, -2.85971815e-08, 0.823248863, 2.60619917e-08, 0.567680597);
                        CFrame.new(-6332.49756, 93.4673615, -131.354691, 0.14413999, -1.32536915e-08, 0.989557326, 5.0619775e-09, 1, 1.26562227e-08, -0.989557326, 3.18484883e-09, 0.14413999);
                        CFrame.new(-6327.62305, 93.4673615, -129.930145, -0.30945152, -4.69060808e-08, -0.950915217, -1.11183125e-08, 1, -4.57091254e-08, 0.950915217, -3.57218588e-09, -0.30945152);
                        CFrame.new(-6341.83203, 93.7573624, -130.444183, 0.074581176, 5.59410687e-08, 0.997214973, -6.77144101e-08, 1, -5.1032977e-08, -0.997214973, -6.37197175e-08, 0.074581176);
                        CFrame.new(-6347.41309, 93.4673615, -131.346985, 0.0287679676, 3.13221404e-09, 0.999586105, 1.16793268e-08, 1, -3.46964057e-09, -0.999586105, 1.17743078e-08, 0.0287679676);
                        CFrame.new(-6345.02783, 93.5673599, -131.655655, 0.772909284, 1.16574936e-08, -0.634516537, 1.45251059e-11, 1, 1.83899385e-08, 0.634516537, -1.42229712e-08, 0.772909284);
                        CFrame.new(-6353.46191, 99.1743851, -127.998947, -0.988634169, -7.69489645e-08, -0.150341198, -6.87360497e-08, 1, -5.98249841e-08, 0.150341198, -4.88111667e-08, -0.988634169);
                        CFrame.new(-6344.6543, 94.0473633, -145.729095, 0.867998362, 3.37320571e-08, -0.496567041, -3.23845626e-08, 1, 1.13223591e-08, 0.496567041, 6.25331742e-09, 0.867998362);
                        CFrame.new(-6328.97852, 93.4673615, -146.879166, -0.209434196, 1.43750989e-09, -0.977822721, -2.57441677e-08, 1, 6.98410707e-09, 0.977822721, 2.66359432e-08, -0.209434196);
                        CFrame.new(-6325.521, 93.4673615, -146.969193, -0.025233699, -1.60038311e-08, -0.999681592, -7.65335173e-08, 1, -1.40770888e-08, 0.999681592, 7.61539312e-08, -0.025233699);
                        CFrame.new(-6301.08691, 93.4175415, -137.41629, 0.983188629, 7.91682311e-08, -0.18259272, -6.959187e-08, 1, 5.88539173e-08, 0.18259272, -4.51575346e-08, 0.983188629);
                        CFrame.new(-6301.37402, 93.7609177, -132.189957, -0.998491168, -8.59383817e-08, -0.0549120679, -8.49626005e-08, 1, -2.01044141e-08, 0.0549120679, -1.54086095e-08, -0.998491168);
                        CFrame.new(-6300.64697, 93.4175415, -128.449097, -0.995558619, -7.42244808e-08, -0.0941439047, -7.36159436e-08, 1, -9.93687088e-09, 0.0941439047, -2.96224534e-09, -0.995558619);
                        CFrame.new(-6298.64404, 93.5275497, -127.955734, -0.57298243, 5.52730697e-08, -0.81956768, 1.18408963e-08, 1, 5.91634439e-08, 0.81956768, 2.4195197e-08, -0.57298243);
                        CFrame.new(-6292.31104, 92.9353485, -125.83136, 0.376125574, -0.617892563, -0.690462351, -0.230882138, 0.659176826, -0.715667069, 0.897342205, 0.428596109, 0.105272904);
                        CFrame.new(-6292.36719, 91.00177, -136.70755, 0.0931198001, -0.000810413563, -0.995654583, 3.60772378e-06, 0.999999642, -0.000813612831, 0.995654941, 7.21714241e-05, 0.0931197777);
                        CFrame.new(-6291.55908, 93.9975433, -128.38945, 0.493966132, 3.77605218e-08, -0.869481146, -1.14549927e-07, 1, -2.16488445e-08, 0.869481146, 1.10292795e-07, 0.493966132);
                        CFrame.new(-6291.73682, 90.9674835, -136.805237, 0.0292471126, 0.00405625906, -0.999563992, 0.00334338401, 0.999985754, 0.00415579788, 0.999566615, -0.00346347131, 0.0292331353);
                        CFrame.new(-6292.20166, 90.9689102, -140.0625, 0.937014461, 0.000827495998, -0.349289566, 9.86225423e-05, 0.999996543, 0.00263364264, 0.34929052, -0.00250220904, 0.937011123);
                        CFrame.new(-6292.24268, 90.996048, -132.293091, -0.0534723438, 0.0138838869, -0.99847281, 0.00677608652, 0.99988538, 0.0135406405, 0.998546362, -0.00604168838, -0.0535602905);
                        CFrame.new(-6291.61328, 96.4621506, -133.859543, 0.00935303792, 1.54163336e-05, -0.99995625, 8.84482517e-07, 1, 1.54252812e-05, 0.99995625, -1.02871707e-06, 0.00935303792);

                    }
                    local QuickTP = {
                        CFrame.new(-6319.50586, 90.46241, -130.516724, -0.635000944, -1.81895121e-08, -0.772511363, -2.94831737e-09, 1, -2.11224425e-08, 0.772511363, -1.11351621e-08, -0.635000944);
                        CFrame.new(-6310.63916, 93.4673615, -131.236557, 0.0569403842, 7.71808928e-08, -0.998377562, 6.74416114e-08, 1, 8.1152713e-08, 0.998377562, -7.19530604e-08, 0.0569403842);
                        CFrame.new(-6327.63037, 93.4673615, -131.118912, 0.0661676154, -5.23584331e-09, 0.997808516, -7.49460725e-08, 1, 1.02172368e-08, -0.997808516, -7.54578835e-08, 0.0661676154);
                        CFrame.new(-6344.47559, 93.7573624, -130.886795, -0.996796608, 1.08348971e-07, -0.0799780637, 1.07111831e-07, 1, 1.97586143e-08, 0.0799780637, 1.11287228e-08, -0.996796608);
                        CFrame.new(-6354.28564, 99.1743851, -127.957794, -0.360755682, 7.26729432e-09, 0.932660341, -5.85977666e-09, 1, -1.00585833e-08, -0.932660341, -9.09387232e-09, -0.360755682);
                        CFrame.new(-6352.81689, 90.4623947, -133.244537, -0.589750588, 1.33894273e-08, 0.807585418, 2.17423199e-08, 1, -7.01945668e-10, -0.807585418, 1.71448082e-08, -0.589750588);
                        CFrame.new(-6354.02344, 90.4623947, -147.439316, 0.551747561, 9.17955347e-08, 0.834011197, -6.55688694e-08, 1, -6.66874413e-08, -0.834011197, -1.78905371e-08, 0.551747561);
                        CFrame.new(-6353.57227, 99.3743896, -153.164291, 0.995718598, 9.80770309e-09, -0.0924365819, -6.46977671e-09, 1, 3.64101069e-08, 0.0924365819, -3.56561749e-08, 0.995718598);
                        CFrame.new(-6342.30566, 93.4673615, -147.682434, -0.780204356, 1.1772692e-07, -0.6255247, 1.08812046e-07, 1, 5.24860049e-08, 0.6255247, -2.71148117e-08, -0.780204356);
                        CFrame.new(-6312.19092, 93.4673615, -145.853699, -0.601001382, 3.04623704e-08, -0.79924798, -1.99775724e-10, 1, 3.8264016e-08, 0.79924798, 2.31563959e-08, -0.601001382);
                        CFrame.new(-6311.8584, 90.8623962, -153.281021, 0.999899566, -7.21012317e-09, -0.0141722849, 6.85823132e-09, 1, -2.48781813e-08, 0.0141722849, 2.47784868e-08, 0.999899566);
                        CFrame.new(-6311.89062, 96.4621506, -155.459488, 0.999999702, -4.52967555e-07, -0.000767040357, 4.68462389e-07, 1, 2.02006067e-05, 0.000767040299, -2.02009596e-05, 0.999999702);
                        CFrame.new(-6301.33154, 93.4175415, -136.632187, -0.741271555, -6.65022597e-08, -0.671205223, -5.38789351e-08, 1, -3.95755819e-08, 0.671205223, 6.82757184e-09, -0.741271555);
                        CFrame.new(-6299.61572, 93.4175491, -128.422241, 0.304461747, -7.6568325e-09, 0.952524543, -9.15597553e-09, 1, 1.09650466e-08, -0.952524543, -1.20597283e-08, 0.304461747);
                        CFrame.new(-6292.33643, 93.4175415, -127.225334, 0.178886741, 1.40286305e-09, -0.983869672, 2.40745823e-08, 1, 5.80309267e-09, 0.983869672, -2.47243488e-08, 0.178886741);
                        CFrame.new(-6292.39941, 90.9861603, -136.810349, 0.213206366, -0.00861396827, -0.976969242, 0.00169154699, 0.999962866, -0.00844755396, 0.97700572, 0.000148482941, 0.213213027);
                        CFrame.new(-6292.41602, 90.9742966, -131.708191, -0.903273582, 0.000874987047, -0.429064155, 0.000255656516, 0.999998868, 0.00150107685, 0.429064959, 0.00124619005, -0.903272748);
                        CFrame.new(-6292.40625, 96.4888611, -132.677063, 0.159756497, -0.0238406435, -0.986868501, -0.000105997606, 0.999707878, -0.0241679754, 0.987156451, 0.00396559667, 0.159707308);
                        CFrame.new(-6725.05762, 0.0668363422, 139.633987, -0.877031803, -4.6078581e-09, 0.480432302, -3.9080037e-09, 1, 2.45698417e-09, -0.480432302, 2.77321943e-10, -0.877031803);
                        CFrame.new(-6737.82227, -0.132863611, 139.544235, -0.0882133245, 3.50930129e-08, 0.996101618, -6.82354369e-08, 1, -4.12731858e-08, -0.996101618, -7.16102733e-08, -0.0882133245);
                        CFrame.new(-6738.54053, -0.132863849, 145.967087, -0.999464095, -1.69953296e-08, -0.0327340104, -1.38310732e-08, 1, -9.68921512e-08, 0.0327340104, -9.63874811e-08, -0.999464095);
                        CFrame.new(-6761.68652, 0.447135836, 134.262924, -0.701203287, 4.29007372e-08, 0.712961376, -1.59527449e-08, 1, -7.58622463e-08, -0.712961376, -6.45685532e-08, -0.701203287);
                        CFrame.new(-6769.6167, 0.339587569, 127.32103, 0.475053281, 4.13696704e-08, 0.87995702, -1.39750878e-08, 1, -3.94686985e-08, -0.87995702, 6.45225784e-09, 0.475053281);
                        CFrame.new(-6764.61865, -3.15335202, 126.933456, -0.905283153, 5.82361821e-08, -0.424808651, 3.28858611e-08, 1, 6.70070293e-08, 0.424808651, 4.66901326e-08, -0.905283153);
                        CFrame.new(-6791.96094, -0.132863611, 123.814888, -0.768690288, -5.29037827e-08, 0.639621139, -2.25600374e-08, 1, 5.55986936e-08, -0.639621139, 2.83082997e-08, -0.768690288);
                        CFrame.new(-6782.24561, -0.132863611, 131.896652, -0.817673802, 8.3388958e-09, -0.575681806, 1.19164829e-08, 1, -2.44041032e-09, 0.575681806, -8.85556162e-09, -0.817673802);
                        CFrame.new(-6803.12939, 0.508317947, 118.098625, -0.694109976, -5.91359672e-09, 0.719868958, 2.05326067e-08, 1, 2.80127157e-08, -0.719868958, 3.42246906e-08, -0.694109976);
                        CFrame.new(-6799.63916, -0.132863849, 123.596588, -0.827931702, -2.50492516e-08, -0.560828984, -6.11083237e-08, 1, 4.55473312e-08, 0.560828984, 7.19813968e-08, -0.827931702);
                        CFrame.new(-6813.4873, 0.592135668, 120.091415, -0.773970485, -5.65725422e-08, 0.633221686, -4.61325342e-08, 1, 3.29542118e-08, -0.633221686, -3.70653574e-09, -0.773970485);
                        CFrame.new(-6836.56396, 1.02713537, 113.3433, 0.793661594, -6.62170905e-08, 0.608359516, 8.24870483e-08, 1, 1.23330191e-09, -0.608359516, 4.92029564e-08, 0.793661594);
                        CFrame.new(-6850.2666, 0.737135708, 111.229347, -0.761852682, 3.78004872e-09, 0.647750318, 1.43613454e-09, 1, -4.14654489e-09, -0.647750318, -2.22879959e-09, -0.761852682);
                        CFrame.new(-6650.57764, -2.5999825, -85.9234238, 0.99252671, 6.02518497e-08, 0.122027792, -5.13665732e-08, 1, -7.59593703e-08, -0.122027792, 6.91235513e-08, 0.99252671);
                        CFrame.new(-6653.58691, -2.59998274, -72.5496368, -0.415639222, -2.90183149e-08, 0.909529567, 7.91147414e-08, 1, 6.80588172e-08, -0.909529567, 1.0024511e-07, -0.415639222);
                        CFrame.new(-6656.60254, -2.73477888, -54.0077324, -0.914466083, 5.82768394e-08, 0.404662579, 8.67270131e-08, 1, 5.19743502e-08, -0.404662579, 8.26239557e-08, -0.914466083);
                        CFrame.new(-6661.21094, -2.73477864, -42.456459, -0.953854978, -4.18788826e-09, 0.300267667, 2.10478408e-08, 1, 8.08094853e-08, -0.300267667, 8.3400522e-08, -0.953854978);
                        CFrame.new(-6682.30029, -2.73477864, -46.9657631, -0.945861101, 2.27927388e-09, 0.324571699, -1.40712038e-08, 1, -4.80284577e-08, -0.324571699, -4.99953643e-08, -0.945861101);
                        CFrame.new(-6679.73828, -2.14085889, -58.2100906, 0.956680954, 1.3854331e-09, -0.291138351, -3.16457616e-08, 1, -9.92293394e-08, 0.291138351, 1.04144114e-07, 0.956680954);
                        CFrame.new(-6678.5166, -2.14085937, -63.033123, 0.969644845, -8.48560555e-10, -0.244517699, 7.01088254e-09, 1, 2.43315963e-08, 0.244517699, -2.53072905e-08, 0.969644845);
                        CFrame.new(-6673.16943, -2.57086158, -83.2965622, 0.961379349, 4.94441044e-10, -0.275226712, -8.1012228e-09, 1, -2.65014535e-08, 0.275226712, 2.77076229e-08, 0.961379349);
                        CFrame.new(-6674.25439, -1.87390494, -79.5018234, -0.868305504, -1.98005567e-09, 0.496029794, -5.38990408e-09, 1, -5.44327694e-09, -0.496029794, -7.39998018e-09, -0.868305504);
                        CFrame.new(-6670.66895, -2.68478274, -91.9223557, 0.961531103, 6.17722817e-10, -0.274696052, -1.57646678e-08, 1, -5.29330357e-08, 0.274696052, 5.52272503e-08, 0.961531103);
                        CFrame.new(-6669.46436, -2.68478274, -96.088028, 0.961364031, -3.21317889e-10, -0.275280207, 8.52147775e-09, 1, 2.85924084e-08, 0.275280207, -2.98335081e-08, 0.961364031);
                        CFrame.new(-6699.68066, -0.762369037, -87.9490509, -0.86286813, 5.82769601e-08, 0.505429089, 6.15520932e-08, 1, -1.02202682e-08, -0.505429089, 2.22914753e-08, -0.86286813);
                        CFrame.new(-6699.11768, -0.762307763, -94.8599777, 0.997695744, 2.33297452e-08, -0.0678466186, -2.8204056e-08, 1, -7.08851928e-08, 0.0678466186, 7.26354088e-08, 0.997695744);
                        CFrame.new(-6703.36963, -0.762368917, -71.8531189, -0.978277087, -2.16822258e-08, 0.207301497, -5.78413095e-09, 1, 7.72967965e-08, -0.207301497, 7.44186295e-08, -0.978277087);
                        CFrame.new(-6705.18115, -0.182347149, -65.5093994, -0.955388367, -2.43241516e-08, 0.295352459, -6.19338048e-09, 1, 6.23223784e-08, -0.295352459, 5.77128425e-08, -0.955388367);

                    }
                    local function getTrinketInPosition(x)
                        local getpart = nil
                        for _,v in next, workspace.Thrown:GetChildren() do
                            if v.Name == 'Part' and v:FindFirstChild('Mesh') and v:IsA('Part') and v.CFrame == x.CFrame then 
                                getpart = v
                                break
                            end
                        end
                        return getpart
                    end
                    -- for _,v in next, TrinketDirectory:GetChildren() do 
                    --     if getTrinketInPosition(v) then 
                    --         --if v:FindFirstChild('Blacklist'):FindFirstChild(game.Players.LocalPlayer.Name) then return end
                    --         local Root = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                    --        -- Root.Anchored = true
                    --         Root.Parent = nil
                    --         Root.CFrame = v.CFrame;
                    --         Root.Parent = game.Players.LocalPlayer.Character
                    --         __Waiting = 0;
                    --         repeat 
                    --             __Waiting +=1
                    --             task.wait(.1)
                    --             Root.CFrame = v.CFrame;
                    --             local stackfuncs = {}
                    --             local Mouse = game.Players.LocalPlayer:GetMouse()
                    --             for i,v in pairs(getconnections(Mouse.Button1Down)) do
                    --                 if tostring(rawget(getfenv(v.Function), "script")) == "mainclient "  then -- funny cheser
                    --                     for i2,v2 in pairs(debug.getupvalues(v.Function)) do
                    --                         if type(v2) == "function" and islclosure(v2) then
                    --                         elseif type(v2) == "table" and getrawmetatable(v2) and getrawmetatable(v2).__index then
                    --                             local mt = getrawmetatable(v2)
                    --                             for i,v in pairs(mt) do
                    --                                 if type(v) == "function" then
                    --                                     for i2,v2 in pairs(getupvalues(v)) do
                    --                                             if type(v2) == "table" then
                    --                                             if v2[1][1][0] == game.Players.LocalPlayer then
                    --                                                 stackfuncs = v2[1][1]
                    --                                                 break
                    --                                             end
                    --                                         end
                    --                                     end
                    --                                 end
                    --                             end
                    --                         end
                    --                     end
                    --                 end
                    --             end
                    --             local TrinketRemote
                                
                    --             if stackfuncs[13]["ClickTrinket"] then
                    --                 TrinketRemote = stackfuncs[13]["ClickTrinket"]
                    --             else
                    --                 TrinketRemote = game:GetService("ReplicatedStorage"):FindFirstChild("ClickTrinket")
                    --             end
                    --             local RemoteArgs = stackfuncs[26]
                    --             local function shuffle(tabl)
                    --                 local tbl = {table.unpack(tabl)}
                                    
                    --                 local args = {}
                    --                 repeat -- shuffle the arguments everytime remote is fired because thats exactly what the main scirpt does presumably?
                    --                     if #tbl ~= 0 then
                    --                         local completed = false
                    --                         local index = math.random(1, #tbl)
                    --                         local val = tbl[index]
                    --                         table.remove(tbl, index)
                    --                         table.insert(args, val)
                    --                     end
                    --                 until #tbl == 0
                    --                 return args
                    --             end
                    --             local lasttbl  
                    --             local tbl = {table.unpack(RemoteArgs)}
                    --             local args = {}
                    --             args = shuffle(tbl)
                    --             if lasttbl and lasttbl[1] == args[1] and lasttbl[#lasttbl] == args[#args] then
                    --                 repeat
                    --                     task.wait(0.1)
                    --                     args = shuffle(tbl)
                    --                 until not lasttbl[1] == args[1] and not lasttbl[#lasttbl] == args[#args]
                    --             end
                    --             lasttbl = args
                    --             if args then
                    --                 -- print('Fire '..v.Name)
                    --                 TrinketRemote:FireServer(v, table.unpack(args))
                    --             end
                    --         until __Waiting >= 3

                            
                    --         task.wait(.5)
                    --         task.wait(.1)
                    --     end
                    -- end

                    for _,v in next, CFrames do 
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            game.Players.LocalPlayer.Character:FindFirstChild('Movement').Disabled = true;
                            game.Players.LocalPlayer.Character:FindFirstChild('_CharacterClient').Disabled = true;
                            local Root = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                            --Root.Parent = nil
                            Root.CFrame = v;
                            Root.Parent = game.Players.LocalPlayer.Character 
                            game.Players.LocalPlayer.Character:FindFirstChild('Movement').Disabled = false;
                            game.Players.LocalPlayer.Character:FindFirstChild('_CharacterClient').Disabled = false;
                            task.wait(0.3)
                        end
                    end

                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false;
                    if getgenv().fightlocalgame['trinketbotserverhop'] == true then 
                        getgenv().serverhop()
                    else
                        game.Players.LocalPlayer.Character:FindFirstChild('Head'):Destroy()
                        repeat task.wait(); until game.Players.LocalPlayer.Character:FindFirstChild('Head')-- and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0
                    end
                    getgenv().fightlocalgame['action'] = 'idle'
                end
            end)
        end
    end)







elseif game.PlaceId == 6678877691 then -- zo
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')


    getgenv().zo1zo = {
        autoparry = true;
        distance = 0;
        connections = {}
    }

    getgenv().autoparryconnections = getgenv().autoparryconnections or {}

    for _,v in next,getgenv().autoparryconnections do 
        v:Disconnect()
        print('Disconnected function index, '.._)
    end

    sector:AddToggle('AutoParry',true,function(xstate)
        getgenv().zo1zo['autoparry'] = xstate 
    end)

    sector:AddSlider("Distance", 0, 0, 100, 1, function(State)
        getgenv().zo1zo['distance'] = State
    end)


    getgenv().parry = function()
        task.spawn(function()
            pcall(function()
                print('parry')
                local inputManager = game:GetService('VirtualInputManager')
                local m = game.Players.LocalPlayer:GetMouse();
                inputManager:SendMouseButtonEvent(m.X,m.Y,1,true,game,0)
                task.wait(.2)
                inputManager:SendMouseButtonEvent(m.X,m.Y,1,false,game,0)
            end)
        end)
    end

    getgenv().ParryAct = function(v,animx)

        if not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then print('no humanoidrootpart') return end
        -- if (v:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude > getgenv().zo1zo['distance'] then return end

        local cancelAll = false 

        local function detect(v,dect)
            local x = false
            if v:FindFirstChild('Humanoid') then 
                for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                    if anim.Animation.AnimationId == dect and animx.Animation.AnimationId == dect then
                        -- rconsoleprint('\ndetected '..anim.Animation.AnimationId)
                        x =  true
                        break
                    end
                end
            end
            return x
        end
        if detect(v,'rbxassetid://6678919174') then -- sword swing 1
            print('swung')
            task.wait(.35)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6678919949') then -- sword swing 1
            task.wait(.35)
            getgenv().parry()
        end
        


        -- rbxassetid://10894792030
        -- rbxassetid://6708118912
        -- SPEARS

        if detect(v,'rbxassetid://6708118912') then --  1
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6835409260') then --  2
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6708121991') then --  3
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6708121121') then --  4
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10894792030') then -- 1 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10894797599') then -- 2 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10894802358') then -- 3 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10894812313') then -- 4 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end


        --TANTO
        if detect(v,'rbxassetid://10895051471') then -- 1 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10895055618') then -- 2 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10895060290') then -- 3 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10895066920') then -- 4 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        

        -- 2 = "rbxassetid://7845695236" -- one hand
        -- 3 = "rbxassetid://7845696985" -- one hand
        -- 4 = "rbxassetid://7845696360" -- one hand
        -- 1 = "rbxassetid://7845695759" -- one hand


        if detect(v,'rbxassetid://7845695759') then --  1
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://7845695236') then --  2
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://7845696985') then --  3
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://7845696360') then --  4
            task.wait(.1)
            getgenv().parry()
        end


        -- SWORD

        if detect(v,'rbxassetid://6678908798') then --  1
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6678909967') then --  2
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6678913068') then --  3
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://6678914641') then --  4
            task.wait(.1)
            getgenv().parry()
        end


        if detect(v,'rbxassetid://10845243083') then -- 1 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10845245059') then -- 2 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10845246818') then -- 3 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        if detect(v,'rbxassetid://10845248893') then -- 4 - 2 hand
            task.wait(.1)
            getgenv().parry()
        end
        


    end

    local function read(x)
        return getgenv().zo1zo[x]
    end
    for _,v in next, game:GetService('Players'):GetChildren() do 
        if v ~= game.Players.LocalPlayer then 
            workspace:WaitForChild(v.Name) 
            local workChar = workspace:WaitForChild(v.Name) 
            local connection; connection = v.Character:WaitForChild('Humanoid').AnimationPlayed:Connect(function(anim)
                local dist = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                if getgenv().zo1zo['autoparry'] == true and dist.Magnitude <= getgenv().zo1zo['distance'] then 
                    --:DistanceFromCharacter()
                    getgenv().ParryAct(workChar,anim)
                end
            end)
            task.spawn(function()
                repeat task.wait(0.2) until getgenv().loopsUnload == true 
                connection:Disconnect()
            end)
            -- table.insert(getgenv().autoparryconnections,connection)
        end
    end
    game:GetService('Players').ChildAdded:Connect(function(xchild)
        if v ~= game.Players.LocalPlayer then
            workspace:WaitForChild(xchild.Name) 
            local workChar = workspace:WaitForChild(xchild.Name) 
            local connection; connection = xchild.Character:WaitForChild('Humanoid').AnimationPlayed:Connect(function(anim)
                local dist = (xchild.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                if getgenv().zo1zo['autoparry'] == true and dist.Magnitude <= getgenv().zo1zo['distance'] then 
                    --:DistanceFromCharacter()
                    getgenv().ParryAct(workChar,anim)
                end
            end)
            task.spawn(function()
                repeat task.wait(0.2) until getgenv().loopsUnload == true 
                connection:Disconnect()
            end)
            -- table.insert(getgenv().autoparryconnections,connection)
        end
    end)


elseif game.PlaceId == 6679968919 then -- fly race
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')
    getgenv().fly1race = {
        autofarm = false;
        loops = 0;
    }
    sector:AddToggle('Auto Farm',false,function(xstate)
        getgenv().fly1race['autofarm'] = xstate
    end)
    sector:AddSlider("Amount of times to loop", 0, 0, 1000, 1, function(State)
        getgenv().fly1race['loops'] = State
    end)


    while task.wait() do 
        if getgenv().loopsUnload == true then print('simulator break') break end
        if getgenv().fly1race['autofarm']  == true then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =game:GetService("Workspace").Worlds['4']['Launch'].CFrame
            task.wait(2)   
            local ticks = 0
            repeat
                task.wait(0.0001)
                -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
                ticks+=1
            firetouchinterest(
                game.Players.LocalPlayer.Character['HumanoidRootPart'],
                game:GetService("Workspace").Worlds['4']['Launch'],
            0)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").LandSpots4.End.CFrame
            until ticks > getgenv().fly1race['loops']
        end
    end
elseif game.PlaceId == 914010731 then --  ro ghoul
    --game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local tab = window:CreateTab('Ro Ghoul')
    local Configuration = window:CreateTab('Configuration')
    -- local pvptab = window:CreateTab('PVP')
    -- local pvpsector = window:CreateSector('Cheats','left')
    local sector = tab:CreateSector('Cheats','left')
    local othercheats = tab:CreateSector('Cheats','right')
    local webhookcheats = tab:CreateSector('Cheats','right')
    -- game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart')
    getgenv().roghoulsettings = {
        farmables = {
            'Humans';
            'Investigators';
            'Aogiri';
        };
        farmingtarget = '';
        farming = false;
        etofarm = false ;
        nishkifarm = false ;
        amonfarm = false ;
        gykatfarm = false ;
        distance = 7;
        tweenspeed = 0.5;
        autoabsorb = true;
        playerx = 0;
        playery = 0 ;
        playerz = 0;
        hasntstarted = true;
        FinalChoice = nil;
        autotrainer = false;
        intervalteleport = false;
        division = 0;
        delay = 0;
        usee = false;
        user = false;
        usef = false;
        usec = false;
        action = 'canquest';
        stages = {
            'One';
            'Two';
            'Three';
            'Four';
            'Five';
            'Six';
        };
        activestage = '';
        autoquest = false;
        isquesting = false;
        tscode = '';
        calledagain =false;
        callednotice =false;
        anotherexecutedwhentweening = false;
        cancelcurrenttween = false;
        tweens = {};
        click = true;
        dontidle = false;
        autoinstakill = false;
        nokajirivelocity = false;
        serverhopgykatsu = false;
        gykustatsumobskill = false;
        equiparata = false;
        reletime = 0; 
        relrtime = 0; 
        relftime = 0;
        rele = false ;
        relr = false ;
        relf = false ;
        erelease = false; -- ereleasing
        rrelease = false; -- rreleasing
        frelease = false; -- freleasing
        relctime = 0;
        cpresswait = false;
        cfarm = false;
        safegykatsu = false;
        highgykatsu = false;
        safedistance = false;
        serverhopifnotfound = false;
        serverhopifnotfoundmobs = {
            ['Eto'] = false;
            ['Amon'] = false;
            ['Nishiki'] = false;
        };
        serverhopmobs = {
            'Eto';
            'Amon';
            'Nishiki';
        };
        serverhopifnotfoundstr = '';
        serverhopformobs = false;
        safemovement = false;
        ontopofcells = false;
        shifttotheleft = false;
        notontopdistance = 5;
        classicfarm = false;
        useetarget = false;
        usertarget = false;
        useftarget = false;
        useetargetdistance = 0;
        usertargetdistance = 0;
        useftargetdistance = 0;
        ereleasekeysbeforeusee = false;
        rreleasekeysbeforeuser = false; 
        freleasekeysbeforeusef = false;
        primaryspincolour = ''; -- primaryspin
        secondaryspincolour = '';
        rollmode = {'Standard','Choice','Choice x4','Choice x8'};
        chosenroll = '';
        rollbackafterspin = false;
        stopamount = 50;
        rollingbackdata = false;
        spindelay = 0.5;
        autorollbackonspin = false;
        acceptifprimaryis = false;
        acceptprimarycolour = '';
        acceptifsecondaryis = false;
        acceptsecondarycolour = '';
        loadto = {
            'CCG';
            'Ghoul';
        };
        loadingto = '';
        autoallyall = false;
        targetting = false;
        targettingvictim = nil;
        targettingdistance = 0;
        aimatcoilers = false;
        coilersdistance = 0;
        closestcoiler = nil;
        mobsusage = { -- mobusage
            'All';
            'Coiler';
            'Rapid';
            'Jug';
            'Rumble';
        };
        useeoncertainmobs = 'All';
        useroncertainmobs = 'All';
        usefoncertainmobs = 'All';
        eactivatewhenclose = false;
        ractivatewhenclose = false;
        factivatewhenclose = false;
        eclosedistance = 0;
        rclosedistance = 0;
        fclosedistance = 0;
        goaboveofclosepeople = false;
        goontopofcoilers = false;
        mobstogohighon = {
            ['All'] = false;
            ['Coiler'] = false;
            ['Rapid'] = false;
            ['Jug'] = false;
            ['Rumble'] = false;
        };
        mobstogohighonstr = ''; -- ,pb
        gohightargetdistance = 0;
        hightargety = 0;
        highplayertargety = 0;
        highercoilery = 0;
        webhook = '';
        postwebhook = false;
        gyaktsuwebhook = '';
        postgykatsu = false;
        serverhopformobwebhook = '';
        postserverhopwebhook = false;
        cashoutrepbeforegykatsufarm = false;
        ourallied = {};
        isup = false;
        dontaimatcoilerwhenup = false;
        rejoinafterrollback = false;
        avoidjugwhenup = false;
        avoidjug = false;
        jugheight = 0;
        jugtargetdistance = 0;
        serverhopforgyakusatsuafter = 300;
        serverhopafterseconds = false;
        serverhopifweaponbugged = false; -- serverhopifquinquebuggedtable to put in a sector with its name and value 
        serverhopweaponchecktime = 50;
        serverhopifnopointsafter = 100; -- contribution
        serverhopifnopoint = false;
        serverhopifnopointminimum = 5;
        abovecontribution = true;  --below contribution so the toggle can handle two values at once
        streamermode = false;
        antireport = false;
        teleporttosafewhenmobinrange = false;
        waitingtoteleportfromsafe = false;
        delayfromsafebacktoclassic = 0;
        safespot = false;
        safespotdistance = 0;
        killselfwhenlow = false;
        killselflowesthealth = 100; -- killselfrange
    }
    getgenv().divious_teleport = function(info)

        pcall(function()
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
            local position = info.distance
    
            local division = info.division 
        
            local tweening = info.tween 
            local ToDivideX = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X - position.X) / division
            local ToDivideY = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y - position.Y) / division
            local ToDivideZ = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z - position.Z) / division
            -- print('To Divide = '..ToDivide)
            -- print('Player X = '..game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X)
            -- print('Distance Space = '..tostring(Distance_In_Space))
            -- print('Minused Distance = '..(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X - position.X))
            for i=1, division do -- Our distance - X / i (X)
        

        
                if tweening == false and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    local PlayerX = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X
                    local PlayerY = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
                    local PlayerZ = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(PlayerX-ToDivideX,PlayerY-ToDivideY,PlayerZ-ToDivideZ) 
                elseif tweening == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then -- i forgot to add tweening cuz i never used a divious teleport with tween
                    local PlayerX = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.X
                    local PlayerY = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
                    local PlayerZ = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
                    game:GetService('TweenService'):Create(ame.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(delay,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame =CFrame.new(PlayerX-ToDivideX,PlayerY-ToDivideY,PlayerZ-ToDivideZ)}):Play()
                    --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(PlayerX-ToDivideX,PlayerY-ToDivideY,PlayerZ-ToDivideZ) 
                    -- customizable enums and tweeninfo parameters
                    -- table.unpack
                end
                task.wait(info.delay)
            end
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
        end)


    end
    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    local get = setmetatable({}, {
        __index = function(a, b)
            return game:GetService(b) or game[b]
        end
    })
    local findobj, findobjofclass, waitforobj, fire, invoke = get.FindFirstChild, get.FindFirstChildOfClass, get.WaitForChild, Instance.new("RemoteEvent").FireServer, Instance.new("RemoteFunction").InvokeServer    
    sector:AddDropdown("Targets", getgenv().roghoulsettings['farmables'], "", false, function(dropdownv)
        getgenv().roghoulsettings['farmingtarget'] = dropdownv
    end)
    sector:AddToggle('Auto Farm',false,function(xstate)
        getgenv()['roghoulsettings']['farming'] = xstate
    end)
    sector:AddToggle('Auto Quest',false,function(xstate)
        getgenv()['roghoulsettings']['autoquest'] = xstate
    end)
    sector:AddToggle('Auto Insta Kill',false,function(xstate)
        getgenv()['roghoulsettings']['autoinstakill'] = xstate
    end)
    -- sector:AddSlider("Distance", 0, 5, 10, 5, function(State)
    --     getgenv().roghoulsettings['distance'] = State
    -- end)
    sector:AddToggle('Teleport Intervals',false,function(xstate)
        getgenv()['roghoulsettings']['intervalteleport'] = xstate
    end)
    sector:AddSlider("Intervals", 0, 0, 20, 1, function(State)
        getgenv().roghoulsettings['division'] = State
    end)
    sector:AddSlider("Delay", 0, 0, 15, 5, function(State) -- Delau
        getgenv().roghoulsettings['delay'] = State
    end)
    sector:AddSlider("Tween Speed", 0, 0.5, 300, 5, function(State)
        getgenv().roghoulsettings['tweenspeed'] = State
    end)
    sector:AddSeperator('-')
    sector:AddToggle('Farm Eto',false,function(xstate)
        getgenv()['roghoulsettings']['etofarm'] = xstate
    end)
    sector:AddToggle('Farm Nishki',false,function(xstate)
        getgenv()['roghoulsettings']['nishkifarm'] = xstate
    end)
    sector:AddToggle('Farm Amon',false,function(xstate)
        getgenv()['roghoulsettings']['amonfarm'] = xstate
    end)

    sector:AddToggle('Server Hop For Mobs',false,function(xtstae)
        getgenv().roghoulsettings['serverhopformobs'] = xtstae
    end)
    local HopForEnemy = sector:AddDropdown('Server Hop If No Mob',getgenv().roghoulsettings['serverhopmobs'],"",true,function(dropdownv)
        local EnemiesFound = table.concat(dropdownv,',')
        -- if table.find()
        for i,__value in next, getgenv().roghoulsettings['serverhopifnotfoundmobs'] do 
            getgenv().roghoulsettings['serverhopifnotfoundmobs'][i] = false;
        end -- remove gykatsu server hop and replace with this
        for _,v in next, string.split(EnemiesFound,',') do 
            for i,__value in next, getgenv().roghoulsettings['serverhopifnotfoundmobs'] do 
                if i == v then 
                    getgenv().roghoulsettings['serverhopifnotfoundmobs'][i] = true; -- could use in while loop to see if there is a mob in the string - serverhopifnotfoundstr
                end
            end -- remove gykatsu server hop and replace with this
        end
        getgenv().roghoulsettings['serverhopifnotfoundstr'] = EnemiesFound 
    end)


    sector:AddToggle('Kill Self When Low',false,function(xstate)
        getgenv().roghoulsettings['killselfwhenlow'] = xstate
    end)
    sector:AddSlider('Kill Self Lowest Health',0,100,6000,1,function(xstate)
        getgenv().roghoulsettings['killselflowesthealth'] = xstate
    end)

    sector:AddToggle('Farm Gyakusatsu',false,function(xstate) 
        getgenv()['roghoulsettings']['gykatfarm'] = xstate
    end)
    sector:AddToggle('Cashout Rep Before Gyakusatsu',false,function(xstate) 
        getgenv()['roghoulsettings']['cashoutrepbeforegykatsufarm'] = xstate
    end)
    sector:AddSeperator('Classic Gykatsu')
    sector:AddToggle('Classic Gykatsu Farm',false,function(xstate) 
        getgenv()['roghoulsettings']['classicfarm'] = xstate
    end)
    sector:AddDropdown("Go High Mobs", getgenv().roghoulsettings['mobsusage'], "", true, function(dropdownv) --  if multi dropdown it instantly puts inside a table
        local MobsHigh = table.concat(dropdownv,',')
        --print('clicked')
        --print('first chosen: '..dropdownv)
        -- if type(dropdownv) == 'table' then 
        --     MobsHigh = '';
        --     for u,v in next, table.concat(dropdownv,',') do 
        --         MobsHigh = MobsHigh..v..':'
        --     end
        -- end
        for i,v in next, getgenv().roghoulsettings['mobstogohighon'] do 
            getgenv().roghoulsettings['mobstogohighon'][i] = false;
        end
        for _,v in next, string.split(MobsHigh,',') do 
            for i,__value in next, getgenv().roghoulsettings['mobstogohighon'] do 
                if i == v then 
                    getgenv().roghoulsettings['mobstogohighon'][i] = true;
                end
            end
        end

        getgenv().roghoulsettings['mobstogohighonstr'] = MobsHigh
    end)
    sector:AddSeperator()
    sector:AddToggle('Go High When Targetted',false,function(xstate) 
        getgenv()['roghoulsettings']['gohighwhentargetted'] = xstate
    end)
    sector:AddToggle('Teleport To Safe When Targetted',false,function(xstate)
        getgenv().roghoulsettings['teleporttosafewheninrange'] = xstate
    end)
    sector:AddSlider('Delay From Safe To Classic',0,5,100,1,function(xstate)
        getgenv().roghoulsettings['delayfromsafebacktoclassic'] = xstate
    end)
    sector:AddToggle('Avoid Jug High',false,function(xstate) 
        getgenv()['roghoulsettings']['avoidjughigh'] = xstate
    end)
    sector:AddSlider("Go High Target Distance", 0, 0, 125, 1, function(State)
        getgenv().roghoulsettings['gohightargetdistance'] = State
    end)
    sector:AddSlider("High Distance", 0, 0, 65, 1, function(State)
        getgenv().roghoulsettings['hightargety'] = State
    end)

    sector:AddToggle('Avoid Jug',false,function(xstate) 
        getgenv()['roghoulsettings']['avoidjug'] = xstate
    end)
    sector:AddSlider("Jug Target Distance", 0, 0, 125, 1, function(State)
        getgenv().roghoulsettings['jugtargetdistance'] = State
    end)
    sector:AddSlider("Jug Height", 0, 0, 125, 1, function(State)
        getgenv().roghoulsettings['jugheight'] = State
    end)
    sector:AddToggle('Dont Aim At Coiler When Up',false,function(xstate) 
        getgenv()['roghoulsettings']['dontaimatcoilerwhenup'] = xstate
    end)
    sector:AddSeperator()


    sector:AddToggle('Target Close People',false,function(xstate) 
        getgenv()['roghoulsettings']['targetting'] = xstate
    end)
    sector:AddToggle('Go Above Of Close Target',false,function(xstate) -- People - Target
        getgenv()['roghoulsettings']['goaboveofclosepeople'] = xstate
    end)
    sector:AddSlider("Above Distance", 0, 0, 65, 1, function(State)
        getgenv().roghoulsettings['highplayertargety'] = State
    end)
    sector:AddSlider("Targetting Distance", 0, 0, 125, 1, function(State)
        getgenv().roghoulsettings['targettingdistance'] = State
    end)
    sector:AddSeperator()
    sector:AddToggle('Aim at Coilers',false,function(xstate) 
        getgenv()['roghoulsettings']['aimatcoilers'] = xstate
    end)
    sector:AddToggle('Go Ontop Of Coiler',false,function(xstate) -- People - Target
        getgenv()['roghoulsettings']['goontopofcoilers'] = xstate
    end)
    sector:AddSlider("Ontop of Coiler Height", 0, 0, 65, 1, function(State)
        getgenv().roghoulsettings['highcoilery'] = State
    end)

    sector:AddSlider("Coilers Distance", 0, 0, 125, 1, function(State)
        getgenv().roghoulsettings['coilersdistance'] = State
    end)
    sector:AddSeperator('')


    sector:AddSeperator('Gykatsu Farming Options') -- POST WEBHOOK
    sector:AddToggle('Server Hop For Gyakusatsu',false,function(xstate) 
        getgenv()['roghoulsettings']['serverhopgykatsu'] = xstate
    end)
    sector:AddSeperator('Serverhop Settings')
    sector:AddTextbox('Serverhop Seconds',500,function(xstate)
        getgenv().roghoulsettings['serverhopgyakusatsuafter'] = tonumber(xstate) -- slider
    end)
    sector:AddToggle('Serverhop After Seconds For Gyakusatsu',false,function(xstate) 
        getgenv()['roghoulsettings']['serverhopafterseconds'] = xstate
    end)




    sector:AddTextbox('Serverhop Weapon Time',50,function(xstate)
        getgenv().roghoulsettings['serverhopifweaponchecktime'] = tonumber(xstate) -- slider 
    end)
    sector:AddToggle('Serverhop Weapon Bugged',false,function(xstate) 
        getgenv()['roghoulsettings']['serverhopifweaponbugged'] = xstate
    end)




    sector:AddTextbox('Serverhop If No Contribution',100,function(xstate)
        getgenv().roghoulsettings['serverhopifnopointsafter'] = tonumber(xstate) -- slider
    end)
    sector:AddSlider('Minimum Contribution',0,5,100,1,function(xstate)
        getgenv().roghoulsettings['serverhopifnopointminimum'] = tonumber(xstate) -- slider
    end)
    sector:AddToggle('Above Contribution',true,function(xstate) 
        getgenv()['roghoulsettings']['abovecontribution'] = xstate
    end)
    sector:AddToggle('Serverhop If No Contribution',false,function(xstate) 
        getgenv()['roghoulsettings']['serverhopifnopoint'] = xstate
    end)

    sector:AddSeperator('')

    
    sector:AddToggle('Attempt Kill Gyakusatsu Mobs',false,function(xstate) 
        getgenv()['roghoulsettings']['gykustatsumobskill'] = xstate
    end)
    sector:AddToggle('Safe Gykatsu',false,function(xstate) 
        getgenv()['roghoulsettings']['safegykatsu'] = xstate
    end)
    -- sector:AddToggle('Safe Gyakusatsu Spot',false,function(xtstae)
    --     getgenv().roghoulsettings['safespot'] = xtstae
    -- end)
    sector:AddSlider("Safe Spot Distance", -100, -3.4, 125, 1, function(State)
        getgenv().roghoulsettings['safespotdistance'] = State
    end)
    sector:AddSlider("Safe Distance", 0, 75, 125, 1, function(State)
        getgenv().roghoulsettings['safedistance'] = State
    end)
    sector:AddToggle('Safe Movement',false,function(xtstae)
        getgenv().roghoulsettings['safemovement'] = xtstae
    end)
    sector:AddToggle('Ontop of Cells',false,function(xtstae)
        getgenv().roghoulsettings['ontopofcells'] = xtstae -- hover on cells
    end)
    sector:AddToggle('Not ontop of gykat',false,function(xtstae)
        getgenv().roghoulsettings['shifttotheleft'] = xtstae -- hover on cells
    end)
    sector:AddSlider("Not ontop slider", 0, 5, 20, 1, function(State)
        getgenv().roghoulsettings['notontopdistance'] = State
    end)
    sector:AddToggle('End Gykatsu High',false,function(xstate) 
        getgenv()['roghoulsettings']['highgykatsu'] = xstate
    end)
    -- DCDCAA = get service
    --4EC9B0
    getgenv().serverhop = function()
        local Http = game:GetService("HttpService")
        local Api = "https://games.roblox.com/v1/games/"
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        
        
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        -- function = C586C0 ff0055
        local listed = 0
        local reg = {}
        for _,server in next, ListServers(nil).data do 
            pcall(function()
                if server.id ~= game.JobId then 
                    table.insert(reg,server.id)  
                end
                --print(server.id)
            end)
        end
        pcall(function() -- i dont want the pcall to not make it teleport
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
        end)
        
    end
    sector:AddSeperator('-')
    sector:AddToggle('Auto Absorb',true,function(xstate)
        getgenv()['roghoulsettings']['autoabsorb'] = xstate
    end)
    sector:AddSlider("Player X", -25, 0, 25, 5, function(State)
        getgenv().roghoulsettings['playerx'] = State
    end)
    sector:AddSlider("Player Y", -25, 0, 30, 5, function(State)
        getgenv().roghoulsettings['playery'] = State
    end)
    sector:AddSlider("Player Z", -100, 0, 100, 5, function(State)
        getgenv().roghoulsettings['playerz'] = State
    end)
    sector:AddButton('Rejoin',function(xstate)
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)

    othercheats:AddToggle('Auto Trainer',false,function(xtstae)
        getgenv().roghoulsettings['autotrainer'] = xtstae
    end)
    othercheats:AddDropdown("Stages", getgenv().roghoulsettings['stages'], "", false, function(dropdownv)
        getgenv().roghoulsettings['activestage'] = dropdownv
    end)
    othercheats:AddDropdown('Load To',getgenv().roghoulsettings['loadto'],'',false,function(xstate)
        getgenv().roghoulsettings['loadingto'] = xstate
        if getgenv().roghoulsettings['loadingto'] ~= '' then 
            game:GetService("ReplicatedStorage").Remotes.Race.Chose:InvokeServer(('%s'):format(getgenv().roghoulsettings['loadingto']))
        end
    end)

    othercheats:AddToggle('Auto Ally All',false,function(xstate) -- ally whitelist 
        getgenv().roghoulsettings['autoallyall'] = xstate
    end)
    othercheats:AddToggle('Streamer Mode',false,function(xstate) -- ally whitelist 
        getgenv().roghoulsettings['streamermode'] = xstate -- stramer
    end)
    othercheats:AddToggle('Anti Report',false,function(xstate) -- ally whitelist 
        getgenv().roghoulsettings['antireport'] = xstate -- stramer
    end)

    othercheats:AddSeperator()

    othercheats:AddToggle('Use E',false,function(xtstae)
        getgenv().roghoulsettings['usee'] = xtstae
    end)
    othercheats:AddToggle('Release E',false,function(xtstae)
        getgenv().roghoulsettings['rele'] = xtstae 
    end)
    othercheats:AddSlider("When To Release E", 0, 0, 100, 5, function(State)
        getgenv().roghoulsettings['reletime'] = State
    end) -- press Key certain times to use others
    othercheats:AddToggle('Use E When Targetted',false,function(xtstae)
        getgenv().roghoulsettings['useetarget'] = xtstae
    end)
    othercheats:AddSlider("Target Distance", 0, 0, 50, 5, function(State) -- releuseetargettime useetargetrange
        getgenv().roghoulsettings['useetargetdistance'] = State -- 
    end) -- press Key certain times to use others
    othercheats:AddToggle('E Release Keys Before Use',false,function(xtstae)
        getgenv().roghoulsettings['ereleasekeysbeforeusee'] = xtstae
    end)
    -- othercheats:AddToggle('Activate E When Close',false,function(xtstae)
    --     getgenv().roghoulsettings['eactivatewhenclose'] = xtstae
    -- end)
    othercheats:AddToggle('Use E When Certain Mob Close',false,function(xtstae)
        getgenv().roghoulsettings['useewhencertainmobclose'] = xtstae
    end)
    othercheats:AddDropdown('E Mobs Close',getgenv().roghoulsettings['mobsusage'],'All',true,function(xstate)
        local MobsActivated = ''--table.concat(xstate)
        for _k,v in next, table.concat(xstate) do 
            MobsActivated = MobsActivated..v..':' -- coiler:
        end
        getgenv().roghoulsettings['useeoncertainmobs'] = MobsActivated
    end)
    othercheats:AddSlider("E Close Distance", 0, 0, 50, 5, function(State) -- releuseetargettime useetargetrange
        getgenv().roghoulsettings['eclosedistance'] = State  
    end)


    othercheats:AddSeperator('')

    othercheats:AddToggle('Use R',false,function(xtstae)
        getgenv().roghoulsettings['user'] = xtstae 
    end)
    othercheats:AddToggle('Release R',false,function(xtstae)
        getgenv().roghoulsettings['relr'] = xtstae 
    end)
    othercheats:AddSlider("When To Release R", 0, 0, 100, 5, function(State)
        getgenv().roghoulsettings['relrtime'] = State
    end)
    othercheats:AddToggle('Use R When Targetted',false,function(xtstae)
        getgenv().roghoulsettings['usertarget'] = xtstae
    end)
    othercheats:AddSlider("Target Distance", 0, 0, 50, 5, function(State)
        getgenv().roghoulsettings['usertargetrange'] = State 
    end)
    othercheats:AddToggle('R Release Keys Before Use',false,function(xtstae)
        getgenv().roghoulsettings['rreleasekeysbeforeuser'] = xtstae
    end)
    -- othercheats:AddToggle('Activate R When Close',false,function(xtstae)
    --     getgenv().roghoulsettings['ractivatewhenclose'] = xtstae
    -- end)
    othercheats:AddToggle('Use R When Certain Mob Close',false,function(xtstae)
        getgenv().roghoulsettings['userwhencertainmobclose'] = xtstae
    end)
    othercheats:AddDropdown('R Mobs Close',getgenv().roghoulsettings['mobsusage'],'All',true,function(xstate)
        local MobsActivated = ''
        for _k,v in next, table.concat(xstate) do 
            MobsActivated = MobsActivated..v..':' 
        end
        getgenv().roghoulsettings['useroncertainmobs'] = MobsActivated
    end)
    othercheats:AddSlider("R Close Distance", 0, 0, 50, 5, function(State) 
        getgenv().roghoulsettings['rclosedistance'] = State  
    end)

    othercheats:AddSeperator('')


    othercheats:AddToggle('Use F',false,function(xtstae)
        getgenv().roghoulsettings['usef'] = xtstae
    end)
    othercheats:AddToggle('Release F',false,function(xtstae)
        getgenv().roghoulsettings['relf'] = xtstae 
    end)
    othercheats:AddSlider("When To Release F", 0, 0, 100, 5, function(State)
        getgenv().roghoulsettings['relftime'] = State
    end)
    othercheats:AddToggle('Use F When Targetted',false,function(xtstae)
        getgenv().roghoulsettings['useftarget'] = xtstae
    end)
    othercheats:AddSlider("Target Distance", 0, 0, 50, 5, function(State)
        getgenv().roghoulsettings['useftargetrange'] = State 
    end)
    -- othercheats:AddToggle('F Release Keys Before Use',false,function(xtstae) -- before use of f
    --     getgenv().roghoulsettings['freleasekeysbeforeusef'] = xtstae
    -- end)
    othercheats:AddToggle('Activate F When Close',false,function(xtstae)
        getgenv().roghoulsettings['factivatewhenclose'] = xtstae
    end)
    othercheats:AddToggle('Use F When Certain Mob Close',false,function(xtstae)
        getgenv().roghoulsettings['usefwhencertainmobclose'] = xtstae
    end)
    othercheats:AddDropdown('F Mobs Close',getgenv().roghoulsettings['mobsusage'],'All',true,function(xstate)
        local MobsActivated = ''
        for _k,v in next, table.concat(xstate) do 
            MobsActivated = MobsActivated..v..':' 
        end
        getgenv().roghoulsettings['usefoncertainmobs'] = MobsActivated
    end)
    othercheats:AddSlider("F Close Distance", 0, 0, 50, 5, function(State)
        getgenv().roghoulsettings['fclosedistance'] = State  
    end)
    othercheats:AddSeperator('')

    othercheats:AddToggle('Use C',false,function(xtstae)
        getgenv().roghoulsettings['usec'] = xtstae
    end)
    othercheats:AddToggle('Use C Farming',false,function(xtstae)
        getgenv().roghoulsettings['cfarm'] = xtstae
    end)
    othercheats:AddSlider("When To Press C", 0, 0, 100, 5, function(State)
        getgenv().roghoulsettings['relctime'] = State
    end)
    othercheats:AddToggle('Click',true,function(xtstae)
        getgenv().roghoulsettings['click'] = xtstae
    end)
    othercheats:AddToggle('Auto Equip Arata',false,function(xstate)
        getgenv().roghoulsettings['equiparata'] = xstate
    end)


    othercheats:AddToggle('No Kajiri Velocity',false,function(xstate)
        getgenv().roghoulsettings['nokajirivelocity'] = xstate
        if getgenv().roghoulsettings['nokajirivelocity'] == true then 
            local novelocity = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').ChildAdded:Connect(function(x)
                if x.Name == 'BodyPNoSlide' and x:IsA('BodyVelocity') then 
                    x.P = 0;
                    x.MaxForce = Vector3.new(0,0,0)
                    game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Anchored = true         
                    x:Destroy() 
                    game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Anchored = false
                end
                
            end)
            task.spawn(function()
                repeat task.wait(0.1) until getgenv().loopsUnload == true or  getgenv().roghoulsettings['nokajirivelocity'] == false 
                novelocity:Disconnect()
            end)
        end
    end)
    othercheats:AddButton('Attempt Insta Kill',function(xstate)
        local dir = game:GetService("Workspace").NPCSpawns
        for _,c in next, dir:GetChildren() do 
            for _,v in next,c:GetChildren() do 
                if v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then 
                    if isnetworkowner(v.PrimaryPart) then
                        pcall(function()
                            v:FindFirstChild('Head'):Destroy()
                        end)
                    end
                end 
            end

        end  
    end)
    othercheats:AddButton('Teleport To Gya Mobs',function(xstate) -- try to get ownership
        local enemymodel = nil
        for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
            if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                enemymodel = c
            end
        end
        if enemymodel ~= nil then 
            local PrevCFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
            for i,child in next, enemymodel:GetChildren() do 
                if child.PrimaryPart and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and child.Name == 'Mob' then -- remove child.Name == 'mob' and it teleports to the main blobs
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = child.PrimaryPart.CFrame
                    if isnetworkowner(child.PrimaryPart) or isnetworkowner(child.Head) then 
                        child:FindFirstChildWhichIsA('Humanoid').Health = 0
                        print('isowner')
                    end
                end
                task.wait(.2)
            end
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = PrevCFrame
        end
    end)
    if getgenv().adminCheck == true then 
        othercheats:AddSeperator('Risky Cheats')
        othercheats:AddButton('Rollback',function()
            task.spawn(function()
                task.delay(5,function()
                    print('Rolledback');
                    game.Players.LocalPlayer:Kick('[AZFAKE]: Rollback')
                    if getgenv().roghoulsettings['rejoinafterrollback'] == true then 
                        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,game.JobId)
                    end
                end)
                while task.wait(0.001) do 
                    -- local ohString1 = 
                    game:GetService("ReplicatedStorage").Remotes.Settings.FactionChoose:InvokeServer("Chidori [Ro-Ghoul]\255")
                    -- local ohString1 = 
                    game:GetService("ReplicatedStorage").Remotes.Settings.SpawnSelection:FireServer("CCGBuilding\255")
                end
            end)    
        end)
        othercheats:AddToggle('Rollback Data',false,function(xstate)
            getgenv().roghoulsettings['rollingbackdata'] = xstate
            -- task.spawn(function()
            --     azfakenotify('Loading...')
            --     task.wait(1)
            --     azfakenotify('Rolledback! This wont kick.')
            --     while task.wait(0.001) do -- put this in the global while loop so i can set rollingback data from anywhere without this toggle going on so if they save the toggle wont be on true
            --         if getgenv().loopsUnload == true then print('restarted data') break end 
            --         if getgenv().roghoulsettings['rollingbackdata']  == false then print('stopped') 
            --             if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
            --                 game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') .Health = 0
            --             end
            --         break end
            --         -- local ohString1 = 
            --         game:GetService("ReplicatedStorage").Remotes.Settings.FactionChoose:InvokeServer("Chidori [Ro-Ghoul]\255")
            --         -- local ohString1 = 
            --         game:GetService("ReplicatedStorage").Remotes.Settings.SpawnSelection:FireServer("CCGBuilding\255")
            --     end
            -- end)    
        end)
        othercheats:AddDropdown('Roll Method',getgenv().roghoulsettings['rollmode'],"",false,function(xstate) -- multiple dropdown mode uses math.random to choose inside the table which one it will spin each time it runs in th spin function
            getgenv().roghoulsettings['chosenroll'] = xstate
        end)
        othercheats:AddTextbox('Primary Colour','',function(xstate)
            getgenv().roghoulsettings['primaryspincolour'] = xstate
        end)
        othercheats:AddTextbox('Secondary Colour','',function(xstate)
            getgenv().roghoulsettings['primaryspincolour'] = xstate
        end)
        othercheats:AddToggle('Roll Colours',false,function(xstate)
            if xstate == true then 
                task.spawn(function()
                    if getgenv().roghoulsettings['autorollbackonspin'] == true then 
                        azfakenotify('Auto Rolling Back','untilClick')
                        getgenv().roghoulsettings['rollingbackdata'] = true -- if it was already true dont set to false when we find the colour
                        task.wait(.3)
                    end
        
                    local function getcolour(x) -- function to check if they match
                        local Colour = Color3.fromRGB(0,0,0)
                        local NameOfColour = ''
                        local colourvalues = {}
                        for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('NewQuinqueGui'):FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame'):FindFirstChild('ColorFrame'):FindFirstChild('Colors'):FindFirstChild('ColorFrame'):GetChildren() do 
                            if v.BackgroundColor3 == x then 
                                Colour = v.BackgroundColor3
                                NameOfColour = v.Name
                            end
                        end
                        return Colour,NameOfColour
                    end
                    -- getcolour()[1] how to get the first value it returns without setting a variable
                    -- Loops inside the colours we got from spinning
        
        
                    local FoundWantedColour = false
                    local FoundColour = false;
                    local function Spin()
                        local Method = getgenv().roghoulsettings['chosenroll']
                        -- local FilteredMethod = ''
                        -- if Method == 'Choice 2' then FilteredMethod = 'Choice' end
                        -- game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('NewQuinqueGui'):FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame'):FindFirstChild('RecolorFrame'):FindFirstChild('CurrColors').Visible = true;
                        local RemPath = ''
    
                        local obj = game:GetService("Workspace").KakuhouSurgeonWarehouse["Kakuhou Surgeon"].SurgeonIndicator
                        if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value == 'CCG' then 
                            obj = game:GetService("Workspace").CCGLab.Chigyou.Indicator
                        end
                        -- if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                        --     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0;
                        -- end
                        local Distance = (obj.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                        if Distance.Magnitude > 15 then 
                            if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0;
                            end
                            repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                            local waited = 0;
                            repeat task.wait(0.1); waited +=0.1 game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = obj.CFrame until waited >= 0.2
                        end
                        
                        fireclickdetector(obj:FindFirstChildWhichIsA('ClickDetector'))
                        local FoundFrame = false;
                        local FrameFound = nil;
                        repeat 
                            task.wait(0.1)
                            for i,c in next, game.Players.LocalPlayer.PlayerGui:GetChildren() do 
                                if c.Name == 'NewSurgeonGui' or c.Name == 'NewQuinqueGui' then  -- string.find(c.Name,'Kagune') or string.find(c.Name,'Quinque')
                                    FoundFrame = true;
                                    FrameFound = c;
                                    break;
                                end
                            end
                        until FoundFrame == true 
                        for i,c in next, FrameFound:GetChildren() do 
                            for k,frame in next, c:GetChildren() do 
                                if frame:IsA('Frame') or frame:IsA('ScrollingFrame') and frame.Name ~= 'Divider' and frame.Visible == true then 
                                    frame.Visible = false
                                end
                            end
                        end
                        if FrameFound ~= nil then 
                            if FrameFound:FindFirstChild('ColorFrame') then 
                                FrameFound:FindFirstChild('ColorFrame').Visible = true;
                            end
                            if FrameFound:FindFirstChild('ShopFrame') and FrameFound:FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame') then 
                                FrameFound:FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame').Visible = true;
                            end
                        end
                        --game.Players.LocalPlayer.PlayerGui:WaitForChild('')
    
                        local useless, colours, uselessagain = nil
                        if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value == 'Ghoul' then 
                            useless, colours, uselessagain = game:GetService("ReplicatedStorage").Remotes.KakuhouSurgeon.RandomizeColor:InvokeServer(Method)
                        else
                            useless, colours, uselessagain = game:GetService("ReplicatedStorage").Remotes.CCGLab.RandomizeColor:InvokeServer(Method)
                        end 
                        -- local FoundColour = false;
                        if colours and type(colours) == 'table' then 
                            for _,v in next, colours do 
                                local PrimaryColour = v.PColor
                                local SecondaryColour = v.SColour 
                                print('Spun on primary: '..PrimaryColour..' Secondary: '..SecondaryColour)
                                if PrimaryColour == getgenv().roghoulsettings['primaryspincolour'] and SecondaryColour == getgenv().roghoulsettings['secondaryspincolour'] then 
                                    FoundWantedColour = true;
                                    uselessagain:InvokeServer(tostring(_))
                                    azfakenotify('Found Colour',3)
                                    azfakenotify('Removing Rollback')
                                    getgenv().roghoulsettings['rollingbackdata'] = false;
                                    FoundWantedColour = true;
                                    FoundColour = true;
                                    break
                                elseif getgenv().roghoulsettings['acceptifprimaryis'] == true and getgenv().roghoulsettings['acceptprimarycolour'] ~= '' and getgenv().roghoulsettings['acceptprimarycolour'] == PrimaryColour then 
                                    if getgenv().roghoulsettings['acceptifsecondaryis'] == true and getgenv().roghoulsettings['acceptsecondarycolour'] ~= '' and SecondaryColour == getgenv().roghoulsettings['acceptsecondarycolour'] then 
                                        uselessagain:InvokeServer(tostring(_))
                                    elseif getgenv().roghoulsettings['acceptifsecondaryis'] == false then 
                                        uselessagain:InvokeServer(tostring(_))
                                    end
                                elseif getgenv().roghoulsettings['acceptifsecondaryis'] == true and getgenv().roghoulsettings['acceptsecondarycolour'] ~= '' and getgenv().roghoulsettings['acceptprimarycolour'] == PrimaryColour then 
                                    if getgenv().roghoulsettings['acceptifprimaryis'] == true and getgenv().roghoulsettings['acceptprimarycolour'] ~= '' and SecondaryColour == getgenv().roghoulsettings['acceptprimarycolour'] then 
                                        uselessagain:InvokeServer(tostring(_))
                                    elseif getgenv().roghoulsettings['acceptifprimaryis'] == false then 
                                        uselessagain:InvokeServer(tostring(_))
                                    end
                                end
                            end
                        end
                        if FoundColour == false and colours and type(colours) == 'table' then 
                            pcall(function() -- theres no need for pcall if its a table tho
                                uselessagain:InvokeServer('0');
                            end)
                        end
                        if game.Players.LocalPlayer:FindFirstChild('PlayerFolder') then 
                            task.wait(0.1)
                            pcall(function()
                                local ColourPath = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('NewQuinqueGui'):FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame'):FindFirstChild('RecolorFrame'):FindFirstChild('CurrColors');
                                if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value == 'Ghoul' then 
                                    ColourPath = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('NewSurgeonGui'):FindFirstChild('ColorFrame'):FindFirstChild('RecolorFrame'):FindFirstChild('CurrColors')
                                end
                                local CurrentColours = ColourPath 
                                local l__Value__72 = game.Players.LocalPlayer:FindFirstChild('PlayerFolder').Customization.WeaponPrimaryColor.Value;
                                local l__Value__73 = game.Players.LocalPlayer:FindFirstChild('PlayerFolder').Customization.WeaponSecondaryColor.Value;
                                CurrentColours.PColor.BackgroundColor3 = BrickColor.new(l__Value__72).Color;
                                CurrentColours.SColor.BackgroundColor3 = BrickColor.new(l__Value__73).Color;
                                CurrentColours.PColor.Text = l__Value__72;
                                CurrentColours.SColor.Text = l__Value__73;
                                print('Primary Colour: '..l__Value__72)
                                print('Secondary Colour: '..l__Value__73)
                            end)
                        end
                    end
        
        
        
        
                    local StopAmount = getgenv().roghoulsettings['stopamount'];
        
                    azfakenotify('Spinning Colours',3)
                    repeat 
                        task.wait(getgenv().roghoulsettings['spindelay']) -- spinspeed
                        if tonumber(game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Settings'):FindFirstChild('ColorCredits').Value) >= StopAmount and FoundColour == false then 
                            Spin()
                        elseif tonumber(game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Settings'):FindFirstChild('ColorCredits').Value) <= StopAmount then 
                            azfakenotify('Not enough credits',3)
                        elseif FoundColour == true then 
                        end
                    until tonumber(game:GetService("Players").LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Settings'):FindFirstChild('ColorCredits').Value) < StopAmount or FoundColour == true or getgenv().loopsUnload == true
                    -- for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('NewQuinqueGui'):FindFirstChild('ShopFrame'):FindFirstChild('ColorFrame'):FindFirstChild('RecolorFrame'):FindFirstChild('Colors'):GetChildren() do 
                    --     local PNameC,PCColour = getcolour()
                    --     local SNameC,SCColour = getcolour()
                    --     if v:FindFirstChild('PColour') and v:FindFirstChild('SColour') and NameC == getgenv().roghoulsettings['primaryspincolour'] and SNameC == getgenv().roghoulsettings['secondaryspincolour'] then 
                    --         firepromt(v:FindFirstChild('B'))
                    --         FoundWantedColour = true ;
                    --         break;
                    --     end
                    -- end
                    -- azfakenotify('Finished spinning',3)
                    if FoundWantedColour == false then 
                        if getgenv().roghoulsettings['rollbackafterspin'] == true then 
                            task.spawn(function()
                                task.delay(5,function()
                                    print('Rolledback');
                                    game.Players.LocalPlayer:Kick('[AZFAKE]: Rollback')
                                    if getgenv().roghoulsettings['rejoinafterrollback'] == true then 
                                        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,game.JobId)
                                    end
                                end)
                                while task.wait(0.001) do 
                                    -- local ohString1 = 
                                    game:GetService("ReplicatedStorage").Remotes.Settings.FactionChoose:InvokeServer("Chidori [Ro-Ghoul]\255")
                                    -- local ohString1 = 
                                    game:GetService("ReplicatedStorage").Remotes.Settings.SpawnSelection:FireServer("CCGBuilding\255")
                                end
                            end)   
                        end
                        if getgenv().roghoulsettings['rejoinafterrollback'] == true and getgenv().roghoulsettings['autorollbackonspin'] == true then 
                            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,game.JobId)
                        end
                    end
                end)
            end
        end)
        othercheats:AddSlider("Stop Spinning At", 0, 50, 300, 5, function(State)
            getgenv().roghoulsettings['stopamount'] = State
        end)
        othercheats:AddSlider("Spin Speed", 0, 0.5, 5, 5, function(State)
            getgenv().roghoulsettings['spindelay'] = State -- spinspeed
        end)
        othercheats:AddToggle('Accept Spin If Primary Is',false,function(xstate)
            getgenv().roghoulsettings['acceptifprimaryis'] = xstate
        end)
        othercheats:AddTextbox('If Primary Is','',function(xstate)
            getgenv().roghoulsettings['acceptprimarycolour'] = xstate
        end)

        othercheats:AddToggle('Accept Spin If Secondary Is',false,function(xstate)
            getgenv().roghoulsettings['acceptifsecondaryis'] = xstate
        end)
        othercheats:AddTextbox('If Secondary Is','',function(xstate)
            getgenv().roghoulsettings['acceptsecondarycolour'] = xstate
        end)

        othercheats:AddSeperator()
        othercheats:AddToggle('Rollback Colour After Spin',false,function(xstate)
            getgenv().roghoulsettings['rollbackafterspin'] = xstate
        end)
        othercheats:AddToggle('Rollback Colour Before Spin',false,function(xstate) -- Auto 
            getgenv().roghoulsettings['autorollbackonspin'] = xstate -- set rollback data to true (the toggle)
        end)
        othercheats:AddToggle('Rejoin After Rollback',false,function(xstate) -- Auto 
            getgenv().roghoulsettings['rejoinafterrollback'] = xstate -- set rollback data to true (the toggle)
        end)
        -- othercheats:AddLabel()
    end
    webhookcheats:AddToggle('POST WEBHOOK GYKATSU',false,function(xstate)
        getgenv().roghoulsettings['postgykatsu'] = xstate
    end)
    webhookcheats:AddTextbox('Gykatsu Webhook','',function(xtstae)
        getgenv().roghoulsettings['gyaktsuwebhook'] = xtstae
    end)
    webhookcheats:AddToggle('POST WEBHOOK',false,function(xstate)
        getgenv().roghoulsettings['postwebhook'] = xstate
    end)
    webhookcheats:AddTextbox('Webhook','',function(xtstae)
        getgenv().roghoulsettings['webhook'] = xtstae
    end)
    webhookcheats:AddToggle('POST SERVERHOP WEBHOOK',false,function(xstate)
        getgenv().roghoulsettings['postserverhopwebhook'] = xstate  
    end)
    webhookcheats:AddTextbox('Serverhop Webhook','',function(xtstae)
        getgenv().roghoulsettings['serverhopforgykatsuwebhook'] = xtstae -- post
    end)




    setupAimbotTab(getgenv().roghoulsettings)


    -- local aimbotbutton = pvpsector:AddToggle('Aimbot',false,function(xstate)
        
    -- end)
    -- local aimbotrigger = pvpsector:AddKeybindAttachment('Aimbot Button'):AddKeybind()
    -- aimbotbutton:AddKeybind()
    -- pvpsector:AddToggle('Movement Prediction',false,function(xstate)
        
    -- end)



    game.Players.LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
    end)

    local function postwebhook(xtype,data)
        if syn then 
            local WEBHOOKPOSTING = '';
            if xtype == 'normal' then 
                WEBHOOKPOSTING = getgenv().roghoulsettings['webhook']
            elseif xtype =='gykatsu' then 
                WEBHOOKPOSTING = getgenv().roghoulsettings['gyaktsuwebhook']
            elseif xtype == 'serverhop' then
                WEBHOOKPOSTING = getgenv().roghoulsettings['postserverhopwebhook'] --wpst
            end
            local receiveddata = {}
            for i,v in next, data do 
                table.insert(receiveddata,i)
            end
            syn.request(
                {
                    Url = WEBHOOKPOSTING,
                    Method = 'POST',
                    Headers = {
                        ['Content-Type'] = 'application/json'
                    }, -- AZFAKE WEBHOOK
                    Body = game:GetService('HttpService'):JSONEncode(data) -- {data.title; content = data.content}
                }
            );
        end
    end

    -- foolio

    local function find(x)
        local found = false
        if game.Players.LocalPlayer.Character:FindFirstChild(x) then 
            -- found =  true
            -- print(x..' found')
        end
        return found
    end
    getgenv().GetClosestTarget = function()
        local oldSet = nil 
        local oldpos = nil
        local lookingFor = ''
        if getgenv().roghoulsettings['farmingtarget'] ==  'Humans' then lookingFor = 'Human' end 
        if getgenv().roghoulsettings['farmingtarget'] ==  'Investigators' then lookingFor = 'CCG' end 
        if getgenv().roghoulsettings['farmingtarget'] ==  'Aogiri' then lookingFor = 'Ghoul' end 
        if getgenv().roghoulsettings['isquesting'] == true then 
            local complete = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('CurrentQuest'):FindFirstChild('Complete')
            local quest = '';
            if complete:FindFirstChildWhichIsA('StringValue') then quest = complete:FindFirstChildWhichIsA('StringValue').Name end 
            if quest:find('Aogiri') then lookingFor = 'Ghoul' end
        end
        for _,v in next, workspace.NPCSpawns:GetChildren() do 
            if v.Name:find(lookingFor) and v:FindFirstChildWhichIsA('Model') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('Humanoid') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart') then 
                local target = v:FindFirstChildWhichIsA('Model')
                local targetroot = target:FindFirstChild('HumanoidRootPart')
                if oldSet == nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart') then 
                    getgenv()['roghoulsettings']['FinalChoice'] = v:FindFirstChildWhichIsA('Model')
                    -- if getgenv()['roghoulsettings']['FinalChoice'] ~= nil and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('Humanoid').Health >0 then 
                    -- else
                    --     getgenv()['roghoulsettings']['FinalChoice'] = nil
                    -- end
                    -- pcall(function()
                    oldSet = getgenv()['roghoulsettings']['FinalChoice']
                    oldpos = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position).Magnitude
                    -- end)

                elseif oldSet~=nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart')  then -- and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart')
                    --print('Already chosen')
                    if oldpos > (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position).Magnitude then 
                        getgenv()['roghoulsettings']['FinalChoice'] = v:FindFirstChildWhichIsA('Model')
                        -- if getgenv()['roghoulsettings']['FinalChoice'] ~= nil and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('Humanoid').Health >0 then 
                        -- else
                        --     getgenv()['roghoulsettings']['FinalChoice'] = nil
                        -- end
                        -- pcall(function()
                        print('Swapped distance '..oldpos)
                        oldSet = getgenv()['roghoulsettings']['FinalChoice']
                        oldpos = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position)
                        print('To '..oldpos)
                        -- end)
                        
                    end
                end



            end
        end
    end
    local function setaction(x)
        print(' prev: '..getgenv().roghoulsettings['action']..' new: '..x)
        -- if getgenv().roghoulsettings['dontidle'] == false then 
        --     print(getgenv().roghoulsettings['action']..' idle: '..tostring(getgenv().roghoulsettings['dontidle'])..' A')
        --     getgenv().roghoulsettings['action'] = x
        --     getgenv().roghoulsettings['dontidle'] = false;
        -- elseif getgenv().roghoulsettings['action'] == 'tweening' and getgenv().roghoulsettings['dontidle'] == true and x == 'idle' then 
        --     print(getgenv().roghoulsettings['action']..' idle: '..tostring(getgenv().roghoulsettings['dontidle'])..' B')
        --     getgenv().roghoulsettings['dontidle'] = false;
        -- end
        getgenv().roghoulsettings['action'] = x
    end
    local function tweenpoint(point,obj)
        local savedaction = getgenv().roghoulsettings['action']
        if savedaction == 'tweening' then print('already tweening'); getgenv().roghoulsettings['anotherexecutedwhentweening'] = true end
        print('called')
        getgenv().roghoulsettings['action'] = 'tweening'
        local function holdtween()
            local rootpos = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position
            local dist = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position)
    
    
            local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
            TweenInfo.new(dist.Magnitude/getgenv()['roghoulsettings']['tweenspeed'], Enum.EasingStyle.Linear, Enum.EasingDirection.Out),{CFrame = point})   
            tween:Play()
            table.insert(getgenv().roghoulsettings['tweens'],tween)
            local completedtween = false 
            tween.Completed:Connect(function() completedtween =true end)
            local wascancelledduetonodile = false;
            local differentChoice = false
            local registedchoice = getgenv()['roghoulsettings']['FinalChoice']
            local rname = registedchoice.Name
            local function getState()
                local cancel = false 
                if getgenv()['roghoulsettings']['farming'] == false then cancel = true end 
                if not obj:FindFirstChild('HumanoidRootPart') then cancel = true end 
                if not obj then cancel = true end 
                if getgenv().roghoulsettings['anotherexecutedwhentweening'] == true then print('another executed') getgenv().roghoulsettings['anotherexecutedwhentweening'] = false; cancel = true end
                -- if getgenv().roghoulsettings['dontidle'] ==true then 
                --     getgenv().roghoulsettings['dontidle'] = false 
                --     wascancelledduetonodile = true;
                --     cancel = true;
                -- end
                return cancel
            end
            local holdState = getState()
    
    
            local hasalreadychecked = false;
            
    
    
    
    
            repeat 
                task.wait(0.01)
                holdState = getState()
                -- if registedchoice ~= getgenv()['roghoulsettings']['FinalChoice'] then differentChoice = true end;
                -- if hasalreadychecked == false then 
                --     hasalreadychecked = true
                --     -- task.delay(2,function()
                --     --     getgenv().GetClosestTarget()
                --     -- end)
                -- end
            until completedtween == true or holdState == true or differentChoice == true
            if holdState== true then 
                tween:Cancel()
            end
            setaction('canquest')
        end
        local rootpos = game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position
        local dist = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - obj:FindFirstChild('HumanoidRootPart').Position)


        local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
        TweenInfo.new(dist.Magnitude/getgenv()['roghoulsettings']['tweenspeed'], Enum.EasingStyle.Linear, Enum.EasingDirection.Out),{CFrame = point})   
        tween:Play()
        table.insert(getgenv().roghoulsettings['tweens'],tween)
        local completedtween = false 
        tween.Completed:Connect(function() completedtween =true end)
        local wascancelledduetonodile = false;
        local differentChoice = false
        local registedchoice = getgenv()['roghoulsettings']['FinalChoice']
        local rname = registedchoice.Name
        local function getState()
            local cancel = false 
            if getgenv()['roghoulsettings']['farming'] == false then cancel = true end 
            if not obj:FindFirstChild('HumanoidRootPart') then cancel = true end 
            if not obj then cancel = true end 
            if getgenv().roghoulsettings['anotherexecutedwhentweening'] == true then print('another executed') getgenv().roghoulsettings['anotherexecutedwhentweening'] = false; cancel = true end
            if registedchoice ~= getgenv()['roghoulsettings']['FinalChoice'] then differentChoice = true end -- ;cancel = true
            -- if getgenv().roghoulsettings['dontidle'] ==true then 
            --     getgenv().roghoulsettings['dontidle'] = false 
            --     wascancelledduetonodile = true;
            --     cancel = true;
            -- end
            return cancel
        end
        local holdState = getState()


        local hasalreadychecked = false;
        




        repeat 
            task.wait(0.01)
            holdState = getState()
            -- if registedchoice ~= getgenv()['roghoulsettings']['FinalChoice'] then differentChoice = true end;
            -- if hasalreadychecked == false then 
            --     hasalreadychecked = true
            --     -- task.delay(2,function()
            --     --     getgenv().GetClosestTarget()
            --     -- end)
            -- end
            -- print('In Loop')
        until completedtween == true or holdState == true or differentChoice == true
        if holdState== true then 
            print('HoldState is true')
            tween:Cancel()
            setaction('canquest')
            --return holdState
        end
        if differentChoice == true then 
            print('Different Choice, '..rname..' new = '..getgenv()['roghoulsettings']['FinalChoice'].Name)
            tween:Cancel()
            setaction('canquest')
            -- tween:Cancel()
           -- holdtween()
        end
        for _,v in next, getgenv().roghoulsettings['tweens'] do 
            --if v == tween then table.remove(getgenv().roghoulsettings['tweens'],_) break end
        end

        -- if differentChoice == true then 
        --     tween:Cancel()
        --     local dist = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position)
        --     local tween_new = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
        --     TweenInfo.new(dist.Magnitude/getgenv()['roghoulsettings']['tweenspeed'], Enum.EasingStyle.Linear, Enum.EasingDirection.Out),{CFrame = point})   
        --     tween_new:Play()
        --     local completednew = false 
        --     tween_new.Completed:Connect(function() completednew =true end)

        --     repeat 
        --         task.wait(0.01)
        --         holdState = getState()
        --         if registedchoice ~= getgenv()['roghoulsettings']['FinalChoice'] then differentChoice = true end;
        --     until completednew == true or holdState == true or differentChoice == true
        --     if holdState== true or differentChoice == true then 
        --         tween_new:Cancel()
        --     end
        -- end
        -- while task.wait() do 
        --     if not find('HumanoidRootPart') then tween:Cancel() end 
        --     if getgenv()['roghoulsettings']['farming'] == false then tween:Cancel() end 
        --     -- if completed then break end
        --     if completedtween == true then 
        --         break
        --     end
        -- end
        -- game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').CFrame = point
        --print('broken tween')
        -- if getgenv().roghoulsettings['calledagain'] == false  then 
        --     if getgenv().roghoulsettings['callednotice'] == true then 
        --         getgenv().roghoulsettings['callednotice'] = false
        --         getgenv().roghoulsettings['action'] = 'tweening'
        --     else
        --         getgenv().roghoulsettings['callednotice'] = true
        --         getgenv().roghoulsettings['action'] = 'idle'
        --     end
        -- end
        -- if getgenv().roghoulsettings['dontidle'] == true then 

        -- else
        --     getgenv().roghoulsettings['action'] = 'idle'
        -- end
        -- if differentChoice == false then 
        --     getgenv().roghoulsettings['action'] = 'idle'
        -- end
        -- getgenv().roghoulsettings['anotherexecutedwhentweening'] = false;


        -- if getgenv().roghoulsettings['anotherexecutedwhentweening'] == true and saveaction == 'tweening' then 
        --     getgenv().roghoulsettings['action'] = 'idle'
        -- else
        --     getgenv().roghoulsettings['action'] = 'idle'
        -- -- elseif 
        -- end

        getgenv().roghoulsettings['anotherexecutedwhentweening'] = false;
        -- if wascancelledduetonodile == false then 
        --     setaction('idle')
        -- end
        -- local foundself = false
        -- for _,v in next, getgenv().roghoulsettings['tweens'] do 
        --     if type(v) == 'table' and v['caughtlacking'] == tween then 
        --         foundself = true;
        --     end
        -- end
        -- if foundself == false then 
        --     setaction('idle')
        -- end
        if differentChoice == false then 
           
        end --ndebug
        if holdState == false and differentChoice == false then 
            setaction('idle')
        end

        -- getgenv().roghoulsettings['action'] = 'idle'
        
        return holdState
    end
    local function getclosest()
        local oldSet = nil 
        local oldpos = nil
    end 
    local function findobj(v,x)
        if not v:FindFirstChild(x) then 
            return false
        else
            return true
        end
    end
    local key,trainers = nil,nil
    repeat 
        for i,v in pairs(getgc(true)) do
            if not key and type(v) == "function" and getinfo(v).source:find(".ClientControl") then
                for i2,v2 in pairs(getconstants(v)) do
                    if v2 == "KeyEvent" then
                        local keyfound = getconstant(v, i2 + 1)
                        if #keyfound >= 100 then
                            key = keyfound
                            break
                        end
                    end
                end
            elseif type(v) == "table" and ((table.find(v, "(S1) Kureo Mado") and team == "CCG") or (table.find(v, "(S1) Ken Kaneki"))) then
                trainers = v
            end
        end
        wait()
    until key
    local function pressKey(topress)
        if game.Players.LocalPlayer.Character:FindFirstChild('Remotes') and game.Players.LocalPlayer.Character:FindFirstChild('Remotes'):FindFirstChild('KeyEvent') then 
            game.Players.LocalPlayer.Character:FindFirstChild('Remotes'):FindFirstChild('KeyEvent'):FireServer(key, topress, "Down", game.Players.LocalPlayer:GetMouse().Hit, nil, workspace.Camera.CFrame)
        end
    end
    local function releaseKey(torelease) -- futin
        if game.Players.LocalPlayer.Character:FindFirstChild('Remotes') and game.Players.LocalPlayer.Character:FindFirstChild('Remotes'):FindFirstChild('KeyEvent') then 
            game.Players.LocalPlayer.Character:FindFirstChild('Remotes'):FindFirstChild('KeyEvent'):FireServer( key, torelease, "Up", game.Players.LocalPlayer:GetMouse().Hit, nil, workspace.Camera.CFrame)
        end
    end
    local function getquest(x)
        getgenv().roghoulsettings['action'] = 'getting quest'
        game:GetService("Workspace").CCGBuilding:FindFirstChild('Yoshitoki'):FindFirstChild('HumanoidRootPart')
        local obj = game:GetService("Workspace"):FindFirstChild('TrainerModel'):FindFirstChild('ClickIndicator')
        if x.type == 'CCG' then 
            obj = game:GetService("Workspace").CCGBuilding:FindFirstChild('Yoshitoki'):FindFirstChild('TaskIndicator')
        else
            obj = game:GetService("Workspace").Anteiku:FindFirstChild('Yoshimura'):FindFirstChild('TaskIndicator')
        end
        local dist = (game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position - obj.Position)
        local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
        TweenInfo.new(dist.Magnitude/getgenv()['roghoulsettings']['tweenspeed'], Enum.EasingStyle.Linear, Enum.EasingDirection.Out),{CFrame = obj.CFrame})   
        tween:Play()
        local completedtween = false 
        tween.Completed:Connect(function() completedtween =true end)
        local function getState()
            local cancel = false 
            if getgenv()['roghoulsettings']['farming'] == false then cancel = true end 
            if not obj then cancel = true end 
            return cancel
        end
        local holdState = getState()
        repeat 
            task.wait(0.01)
            holdState = getState()
        until completedtween == true or holdState == true
        if holdState == true then 
            tween:Cancel()
        end
        task.delay(6,function()
            if getgenv().roghoulsettings['action'] == 'getting quest' then 
                getgenv().roghoulsettings['action'] = 'canquest'
                getgenv().roghoulsettings['isquesting'] = true
            end
        end)
        fireclickdetector(obj.ClickDetector)
        task.wait(1)
        game:GetService("ReplicatedStorage").Remotes.Yoshitoki.Task:InvokeServer()
        game:GetService("ReplicatedStorage").Remotes.Yoshimura.Task:InvokeServer()
        -- local GetTasksButton = nil
        -- for _,v in next, game.Players.LocalPlayer.PlayerGui:GetChildren() do 
        --     if v:FindFirstChild('Back') and v:FindFirstChild('Back'):FindFirstChild('Tasks') then 
        --         GetTasksButton = v:FindFirstChild('Back'):FindFirstChild('TaskFrame'):FindFirstChild('TaskButton')
        --     end
        -- end
        -- if GetTasksButton then 
        --     firesignal(GetTasksButton.MouseButton1Click)
        -- end
        
        getgenv().roghoulsettings['action'] = 'canquest'
        getgenv().roghoulsettings['isquesting'] = true
    end
    local function getaction()
        return getgenv().roghoulsettings['action']
    end
    -- get key function

    local function toquest()
        
    end

    local function equiparara()

    end

    local function findnameobj(x,r,h)
        local obj = nil
        for _,v in next, r:GetChildren()do 
            if v.Name == x and v:IsA(h) then 
                obj = v
            end
        end 
        return obj
    end

    -- game:Enypass
    --print(game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value)
    -- get closest npc spawn instead of humanoidrootpart
    Configuration:CreateConfigSystem()
    task.spawn(function()
        while task.wait(0.01) do 
            if getgenv().loopsUnload == true then print('ro ghoul break') break end
            local level = tonumber(game.Players.LocalPlayer:WaitForChild('PlayerFolder'):WaitForChild('Stats'):WaitForChild('Level').Value)
            -- local FinalChoice = nil 
            local typeofnpc = 'humanoid'
            local oldSet = nil 
            local oldpos = nil
            local typeweapon = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value
            if typeweapon == 'CCG' then typeweapon='Quinque' end 
            if typeweapon == 'Ghoul' then typeweapon='Kagune' end 
            if getgenv().roghoulsettings['killselfwhenlow'] == true then 
                getgenv().roghoulsettings['killselfwhenlow'] = nil
                task.spawn(function()
                    repeat task.wait()
                        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then --chaarcter
                            if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health < getgenv().roghoulsettings['killselflowesthealth'] and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                if getgenv().roghoulsettings['antireport'] == true then 
                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(1,1,1)
                                end
                                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0;
                            end
                        end -- not workspace:FindFirstChild('Gyakusatsu') or getgenv().roghoulsettings['farming'] == false or
                    until getgenv().loopsUnload == true or getgenv().roghoulsettings['killselfwhenlow'] == false
                end )
            end
            if getgenv().roghoulsettings['antireport'] == true then 
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 = nil
                    -- game.Players.LocalPlayer.Character.UpperTorso.CFrame = CFrame.new(1,1,1)
                end
            end
            if getgenv().roghoulsettings['streamermode'] == true then 
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Head') and game.Players.LocalPlayer.Character:FindFirstChild('Head'):FindFirstChild('PlayerStatus') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Head'):FindFirstChild('PlayerStatus'):Destroy()
                end
            end
            if getgenv().roghoulsettings['serverhopifweaponbugged'] == true then 
                getgenv().roghoulsettings['serverhopifweaponbugged'] = nil
                local WeaponModel = nil;
                local Ticked = 0
                task.spawn(function()
                    repeat task.wait(1); 
                        Ticked += 1
                        pcall(function()
                            WeaponModel = findnameobj(typeweapon,game.Players.LocalPlayer.Character,'Model')
                        end)
                    until WeaponModel ~= nil or Ticked >= getgenv().roghoulsettings['serverhopifweaponchecktime']
                end)
                if WeaponModel == nil then 
                    task.spawn(function()
                        getgenv().serverhop()
                        repeat 
                            task.wait(5)
                            getgenv().serverhop()
                        until 1 == 2
                    end)
                end
            end
            if getgenv().roghoulsettings['rollingbackdata'] == true then 
                getgenv().roghoulsettings['rollingbackdata'] = nil;
                task.spawn(function()
                    azfakenotify('Loading...','untilClick')
                    task.wait(1)
                    azfakenotify('Rolledback! This wont kick.','untilClick')
                    while task.wait(0.001) do -- put this in the global while loop so i can set rollingback data from anywhere without this toggle going on so if they save the toggle wont be on true
                        if getgenv().loopsUnload == true then print('restarted data') break end 
                        if getgenv().roghoulsettings['rollingbackdata']  == false then print('stopped') 
                            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') .Health = 0
                            end
                            game:GetService("ReplicatedStorage").Remotes.Settings.SpawnSelection:FireServer("Anteiku")
                            azfakenotify('Removed Rollback Sequence','untilClick')
                        break end
                        -- local ohString1 = 
                        game:GetService("ReplicatedStorage").Remotes.Settings.FactionChoose:InvokeServer("Chidori [Ro-Ghoul]\255")
                        -- local ohString1 = 
                        game:GetService("ReplicatedStorage").Remotes.Settings.SpawnSelection:FireServer("CCGBuilding\255")
                    end
                end) 
            end

            if getgenv().roghoulsettings['serverhopformobs'] == true then 
                local MobsPrev = true;
                getgenv().roghoulsettings['serverhopformobs'] = nil;
                local FoundMobs = {
                    ['Eto'] = false;
                    ['Amon'] = false;
                    ['Nishiki'] = false;
                }
                local AmountFound = 0;
                local ActiveFound = 0;
                for _,InstanceHolder in next, workspace.NPCSpawns:GetChildren() do 
                    local __Mob = InstanceHolder:FindFirstChildWhichIsA('Model');
                    for MobIndex,Mob in next, InstanceHolder:GetChildren() do 
                        if Mob.Name:find('Eto') and getgenv().roghoulsettings['serverhopifnotfoundmobs']['Eto'] == true then FoundMobs['Eto'] = true; AmountFound +=1 if getgenv().roghoulsettings['postserverhopwebhook'] == true and Level > 1250 then postwebhook('serverhop',{title = 'AZFAKE WEBHOOK',content = 'Farming Eto'})  end end
                        if Mob.Name:find('Amon') and getgenv().roghoulsettings['serverhopifnotfoundmobs']['Amon'] == true then FoundMobs['Amon'] = true; AmountFound +=1 if getgenv().roghoulsettings['postserverhopwebhook'] == true and Level > 750 then postwebhook('serverhop',{title = 'AZFAKE WEBHOOK',content = 'Farming Amon'})  end end
                        if Mob.Name:find('Nishiki') and getgenv().roghoulsettings['serverhopifnotfoundmobs']['Nishiki'] == true then FoundMobs['Nishiki'] = true; AmountFound +=1 if getgenv().roghoulsettings['postserverhopwebhook'] == true and Level > 250 then postwebhook('serverhop',{title = 'AZFAKE WEBHOOK',content = 'Farming Nishiki'})  end end
                    end
                end
                for _,ReadingProperty in next, getgenv().roghoulsettings['serverhopifnotfoundmobs'] do 
                    if ReadingProperty == true then --and FoundMobs[_] == false then 
                        ActiveFound += 1
                        --getgenv().serverhop()
                        --break
                    end
                end 
                -- if Nishiki is found but amon isnt ; Farm Nishiki and then serverhop
                if AmountFound == 0 and MobsPrev == true then 
                    print('No mobs so serverhop')
                
                    getgenv().serverhop()
                end
                if getgenv().roghoulsettings['serverhopformobs'] == nil then 
                    getgenv().roghoulsettings['serverhopformobs'] = true -- false
                end
            end
            if getgenv().roghoulsettings['farming'] == true then 
                if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 then 
                    -- print('waiting for quinque')
                    print('waiting for '..string.lower(typeweapon))
                    pressKey(getgenv().roghoulsettings['activestage'])
                    repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) 
                    if getgenv().roghoulsettings['usec'] == true then 
                        pressKey('C')
                    end
                    -- task.wait(3)
                    print(string.lower(typeweapon)..' active')
                    -- print('quinque active')
                end
                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                    -- print('waiting for quinque')
                    print('waiting for '..string.lower('arata'))
                    pressKey('Zero')
                    -- repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                    repeat task.wait() 
                        task.delay(2.5,function()
                            if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                pressKey('Zero')
                            end
                        end)
                    until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                    -- task.wait(3)
                    print(string.lower('arata')..' active')
                    -- print('quinque active')
                end
            end

            if getgenv().roghoulsettings['autoallyall'] == true then 
                task.spawn(function()
                    task.delay(1,function()
                        for _,v in next, game.Players:GetPlayers() do 
                            if not table.find(getgenv().roghoulsettings['ourallied'],v.Name) then 
                                table.insert(getgenv().roghoulsettings['ourallied'],v.Name)
                                task.wait(0.01)
                                game:GetService("ReplicatedStorage").Remotes.Ally.ToggleAlly:InvokeServer(v.Name) 
                            end
                        end
                    end)
                end)
            end

            if getaction() == 'canquest' or getaction() == 'usequest' and getgenv()['roghoulsettings']['hasntstarted'] == true  then 

                if getgenv().roghoulsettings['farmingtarget'] ~= '' then 
                    local lookingFor = ''
                    if getgenv().roghoulsettings['farmingtarget'] ==  'Humans' then lookingFor = 'Human' end 
                    if getgenv().roghoulsettings['farmingtarget'] ==  'Investigators' then lookingFor = 'CCG' end 
                    if getgenv().roghoulsettings['farmingtarget'] ==  'Aogiri' then lookingFor = 'Ghoul' end 
                    if getgenv().roghoulsettings['isquesting'] == true then 
                        local complete = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('CurrentQuest'):FindFirstChild('Complete')
                        local quest = '';
                        if complete:FindFirstChildWhichIsA('StringValue') then quest = complete:FindFirstChildWhichIsA('StringValue').Name end 
                        if quest:find('Aogiri') then lookingFor = 'Ghoul' end
                    end
                    for _,v in next, workspace.NPCSpawns:GetChildren() do 
                        if v.Name:find(lookingFor) and v:FindFirstChildWhichIsA('Model') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('Humanoid') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart') then 

                            if oldSet == nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart') then 
                                getgenv()['roghoulsettings']['FinalChoice'] = v:FindFirstChildWhichIsA('Model')
                                -- if getgenv()['roghoulsettings']['FinalChoice'] ~= nil and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('Humanoid').Health >0 then 
                                -- else
                                --     getgenv()['roghoulsettings']['FinalChoice'] = nil
                                -- end
                                -- pcall(function()
                                oldSet = getgenv()['roghoulsettings']['FinalChoice']
                                oldpos = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                -- end)

                            elseif oldSet~=nil and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart')  then -- and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart')
                                --print('Already chosen')
                                if oldpos > (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position).Magnitude then 
                                    getgenv()['roghoulsettings']['FinalChoice'] = v:FindFirstChildWhichIsA('Model')
                                    -- if getgenv()['roghoulsettings']['FinalChoice'] ~= nil and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('Humanoid').Health >0 then 
                                    -- else
                                    --     getgenv()['roghoulsettings']['FinalChoice'] = nil
                                    -- end
                                    -- pcall(function()
                                    print('Swapped distance '..oldpos)
                                    oldSet = getgenv()['roghoulsettings']['FinalChoice']
                                    oldpos = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position)
                                    print('To '..oldpos)
                                    -- end)
                                    
                                end
                            end



                        end
                    end
                end
                if getgenv()['roghoulsettings']['nishkifarm'] == true and level >= 250 then 
                    typeofnpc = 'boss'
                    local quicksub = 'Nishiki'
                    for _,v in next, workspace.NPCSpawns:GetChildren() do 
                        if v.Name == 'BossSpawns' then 
                            for k,c in next, v:GetChildren() do 
                                if c.Name:find(quicksub) then 
                                    print(c.Name)
                                    getgenv()['roghoulsettings']['FinalChoice'] = c
                                end
                            end
                        end
                    end
                end
                if getgenv()['roghoulsettings']['amonfarm'] == true and level >= 750 then 
                    typeofnpc = 'boss'
                    local quicksub = 'Amon'
                    for _,v in next, workspace.NPCSpawns:GetChildren() do 
                        if v.Name == 'BossSpawns' then 
                            for k,c in next, v:GetChildren() do 
                                if c.Name:find(quicksub) then 
                                    getgenv()['roghoulsettings']['FinalChoice'] = c
                                end
                            end
                        end
                    end
                end
                if getgenv()['roghoulsettings']['etofarm'] == true and level >= 1250 then 
                    typeofnpc = 'boss'
                    local quicksub = 'Eto'
                    for _,v in next, workspace.NPCSpawns:GetChildren() do 
                        if v.Name == 'BossSpawns' then 
                            for k,c in next, v:GetChildren() do 
                                if c.Name:find(quicksub) then 
                                    getgenv()['roghoulsettings']['FinalChoice'] = c
                                end
                            end
                        end
                    end
                end
                if getgenv()['roghoulsettings']['gykatfarm'] == true and level >= 1250 then 
                    typeofnpc = 'gykat'
                    local quicksub = 'Gy'
                    for _,v in next, workspace:GetChildren() do 
                        if v.Name == 'Gyakusatsu' then 
                            getgenv()['roghoulsettings']['FinalChoice'] = v
                        end
                    end
                end
            end
            local function gettypeofnpc()
                local hasfound = false
                local npctypetable = {'gykat','boss'}
                if table.find(npctypetable,typeofnpc) then 
                    hasfound = true 
                end
                return hasfound
            end
            task.spawn(function()
                if  typeofnpc~= 'gykat' and  getaction() == 'canquest' and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and getgenv()['roghoulsettings']['FinalChoice'] ~= nil and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') and getgenv()['roghoulsettings']['hasntstarted'] == true and getgenv()['roghoulsettings']['farming'] == true  then 
                    getgenv()['roghoulsettings']['action'] = 'choosing'
                    if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 then 
                        -- print('waiting for quinque')
                        print('waiting for '..string.lower(typeweapon))
                        pressKey(getgenv().roghoulsettings['activestage'])

                        repeat task.wait() 
                            task.delay(2.5,function()
                                -- you see how you hookfunction print
                                -- inside the hookfunction 
                                -- if you use print it will crash game
                                -- we can use a metatable to hook a call method
                                -- then keep using the call we hooked to check for weapon
                                if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon)  then 
                                    pressKey(getgenv().roghoulsettings['activestage'])
                                end
                            end)
                        until game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) 
                        if getgenv().roghoulsettings['usec'] == true then 
                            pressKey('C')
                        end 
                        -- task.wait(3)
                        print(string.lower(typeweapon)..' active')
                        -- print('quinque active')
                    end
                    if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                        -- print('waiting for quinque')
                        print('waiting for '..string.lower('arata'))
                        pressKey('Zero')
                        --repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                        repeat task.wait() 
                            task.delay(2.5,function()
                                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                    pressKey('Zero')
                                end
                            end)
                        until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                        -- task.wait(3)
                        print(string.lower('arata')..' active')
                        -- print('quinque active')
                    end
                    local registedchoice = nil;
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') then 
                        local dist = nil;
                        pcall(function()
                            dist =  (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position)
                        end)
                        if dist == nil then 
                            getgenv()['roghoulsettings']['action'] = 'canquest';
                            return
                        end
                       

                        local results
                        if getgenv().roghoulsettings['intervalteleport'] == true then 
    
                            getgenv().divious_teleport{
                                distance = getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').CFrame * 
                                CFrame.new(
                                    getgenv()['roghoulsettings']['playerx'],
                                    getgenv()['roghoulsettings']['playery'],
                                    getgenv()['roghoulsettings']['playerz']
                                );
                                division = getgenv()['roghoulsettings']['division'];
                                delay = getgenv()['roghoulsettings']['delay'];
                                tween = false
                            }
    
                        else
                            
                            -- if typeofnpc == 'gykat' then 
                            --     local CFrame = workspace.Gyakusatsu:FindFirstChild():FindFirstChild('Spawn').CFrame * CFrame.new(0,-getgenv()['roghoulsettings']['playerz'],0) * CFrame.Angles(math.rad(90),0,0)
                            -- end

                            registedchoice = getgenv()['roghoulsettings']['FinalChoice']
                            results = tweenpoint(getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').CFrame *CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv()['roghoulsettings']['playery'],getgenv()['roghoulsettings']['playerz']),getgenv()['roghoulsettings']['FinalChoice'])
    
    
                            -- if not getgenv()['roghoulsettings']['FinalChoice'] or not getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') then 
                            --     tween:Cancel()
                            -- end
                            --repeat task.wait() until not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') or not getgenv()['roghoulsettings']['FinalChoice'] or completed == true--(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').Position).Magnitude < 10
                            
                        end
                        -- print('x')
                        -- task.spawn(function()
                        --     local brokenchoice =false
                        --     task.delay(0.1,function()
                        --         if typeofnpc ~='boss' then 
                        --             getgenv().GetClosestTarget()
                        --         end 
                        --     end)
                        --     repeat 
                        --         task.wait(.1)
                        --         -- if gettypeofnpc() == false then 
                        --         --     getgenv().GetClosestTarget()
                        --         -- end 
                        --         getgenv().GetClosestTarget() -- brokenchoice == false and
                        --         if  getgenv()['roghoulsettings']['FinalChoice'] ~= registedchoice and getgenv()['roghoulsettings']['action'] ~= 'idle'  then 
                        --             -- getgenv().roghoulsettings['anotherexecutedwhentweening'] = true;
                        --             -- getgenv().roghoulsettings['cancelcurrenttween'] = true;
                        --             --getgenv().roghoulsettings['dontidle'] = true
                        --             print('Changed Target')
                        --             registedchoice = getgenv()['roghoulsettings']['FinalChoice']

                        --             for _,v in next, getgenv().roghoulsettings['tweens'] do
                        --                 table.insert(getgenv().roghoulsettings['tweens'],{
                        --                     caughtlacking = v
                        --                 }) 
                        --                 -- pcall(function()
                        --                 --     v:Cancel()
                        --                 -- end)
                        --                 if v then 
                        --                     pcall(function()
                        --                         v:Cancel()
                        --                     end)
                        --                 end
                        --                 print('cancel tween') 
                        --                 table.remove(getgenv().roghoulsettings['tweens'],_)
                        --             end
                        --             -- if getgenv()['roghoulsettings']['FinalChoice'] and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') then 
                                        
                        --             -- end
                                    
                        --             -- getgenv().roghoulsettings['anotherexecutedwhentweening'] = false;
                        --             -- getgenv().roghoulsettings['cancelcurrenttween'] = false;
                        --             -- repeat task.wait(); until getaction() == 'idle'
                        --             --brokenchoice = true 
                        --             -- getgenv().roghoulsettings['dontidle'] = false;
                        --         end
                        --     until getaction() == 'idle' --or swapped == true --brokenchoice == true
                        --     print('set to idle')
                        --     -- getgenv().roghoulsettings['dontidle'] =false;
                        -- end)



                        if results == true then 
                            getgenv()['roghoulsettings']['action'] = 'canquest'
                            getgenv().roghoulsettings['callednotice'] = false;
                            getgenv()['roghoulsettings']['hasntstarted'] = true
                            
                            return
                        end
    
                        
                        if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                            -- print('waiting for quinque')
                            print('waiting for '..string.lower(typeweapon))
                            pressKey(getgenv().roghoulsettings['activestage'])
                            pressKey(getgenv().roghoulsettings['activestage'])
                            repeat task.wait() 
                                task.delay(2.5,function()
                                    if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                        pressKey('Zero')
                                    end
                                end)
                            until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                            if getgenv().roghoulsettings['usec'] == true then 
                                pressKey('C')
                            end
                            -- task.wait(3)
                            print(string.lower(typeweapon)..' active')
                            -- print('quinque active')
                        end
                        if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                            -- print('waiting for quinque')
                            print('waiting for '..string.lower('arata'))
                            pressKey('Zero')
                            -- repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                            repeat task.wait() 
                                task.delay(2.5,function()
                                    if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                        pressKey('Zero')
                                    end
                                end)
                            until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                            -- task.wait(3)
                            print(string.lower('arata')..' active')
                            -- print('quinque active')
                        end

                        --open after teleport but this opens after tween

                        -- if results == true then 
                        --     getgenv()['roghoulsettings']['action'] = 'canquest'
                        --     getgenv()['roghoulsettings']['hasntstarted'] = true
                        --     return
                        -- end
                        --repeat task.wait(); getgenv().GetClosestTarget() until getaction() == 'idle' or getaction() == 'canquest'
                        if getaction() == 'canquest' then 
                            getgenv().roghoulsettings['callednotice'] = false;
                            getgenv()['roghoulsettings']['hasntstarted'] = true
                        return end
                        
                        if getgenv()['roghoulsettings']['hasntstarted'] == false then
                            getgenv()['roghoulsettings']['action'] = 'canquest'
                            getgenv().roghoulsettings['callednotice'] = false;
                            getgenv()['roghoulsettings']['hasntstarted'] = true
                        return end
                        getgenv()['roghoulsettings']['action'] = 'attack'
                        getgenv()['roghoulsettings']['hasntstarted'] = false



                        -- if registedchoice ~= getgenv()['roghoulsettings']['FinalChoice'] then 
                        --     getgenv()['roghoulsettings']['action'] = 'canquest'
                        --     getgenv().roghoulsettings['callednotice'] = false;
                        --     getgenv()['roghoulsettings']['hasntstarted'] = true
                        --     return
                        -- end
                        task.spawn(function()
                            repeat task.wait(0.01) 
                                if getgenv()['roghoulsettings']['FinalChoice'] and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0  then 

                                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and getgenv()['roghoulsettings']['FinalChoice'] and getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart') then 
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart').CFrame * 
                                        CFrame.new(
                                            getgenv()['roghoulsettings']['playerx'],
                                            getgenv()['roghoulsettings']['playery'],
                                            getgenv()['roghoulsettings']['playerz']
                                        )
                                    end
                                    if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                                        -- print('waiting for quinque')
                                        print('waiting for '..string.lower(typeweapon))
                                        pressKey(getgenv().roghoulsettings['activestage'])
                                        pressKey(getgenv().roghoulsettings['activestage'])
                                        repeat task.wait() 
                                            task.delay(2.5,function()
                                                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                                    pressKey('Zero')
                                                end
                                            end)
                                        until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                                        if getgenv().roghoulsettings['usec'] == true then 
                                            pressKey('C')
                                        end
                                        -- task.wait(3)
                                        print(string.lower(typeweapon)..' active')
                                        -- print('quinque active')
                                    end
                                    if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                                        -- print('waiting for quinque')
                                        print('waiting for '..string.lower('arata'))
                                        pressKey('Zero')
                                        --repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                                        repeat task.wait() 
                                            task.delay(2.5,function()
                                                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                                    pressKey('Zero')
                                                end
                                            end)
                                        until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                                        -- task.wait(3)
                                        print(string.lower('arata')..' active')
                                        -- print('quinque active')
                                    end
                                    if getgenv().roghoulsettings['click'] then 
                                        task.delay(.1,function()
                                            pressKey('Mouse1')
                                        end)
                                    end
                                    
                                    -- CFrame.Angles(math.rad(90),0,0) upside down for gykatsu
                                    -- task.spawn(function()
                                    --     if getgenv().roghoulsettings['usee'] == true then 
                                    --         pressKey('E')
                                    --         task.wait(1)
                                    --     end
                                    --     if getgenv().roghoulsettings['user'] == true then 
                                    --         pressKey('R')
                                    --         task.wait(1)
                                    --     end
                                    --     if getgenv().roghoulsettings['usef'] == true then 
                                    --         pressKey('F')
                                    --         task.wait(1)
                                    --     end
                                    -- end)
                                    task.spawn(function()
                                        if getgenv().roghoulsettings['usee'] == true then 
                                            pressKey('E')
                                            task.wait(1)
                                            if getgenv().roghoulsettings['rele'] == true and getgenv().roghoulsettings['erelease'] == false then 
                                                getgenv().roghoulsettings['erelease']  = true;
                                                task.spawn(function()
                                                    task.wait(getgenv().roghoulsettings['reletime'])
                                                    releaseKey('E')
                                                    getgenv().roghoulsettings['erelease']  = false;
                                                end)
                                            end
                                        end
                                        if getgenv().roghoulsettings['user'] == true then 
                                            pressKey('R')
                                            task.wait(1)
                                            if getgenv().roghoulsettings['relr'] == true and getgenv().roghoulsettings['rrelease'] == false then 
                                                getgenv().roghoulsettings['rrelease'] = true;
                                                task.spawn(function()
                                                    task.wait(getgenv().roghoulsettings['relrtime'])
                                                    releaseKey('R')
                                                    getgenv().roghoulsettings['rrelease'] = false;
                                                end)
                                            end
                                        end
                                        if getgenv().roghoulsettings['usef'] == true then 
                                            pressKey('F')
                                            task.wait(1)
                                            if getgenv().roghoulsettings['relf'] == true and getgenv().roghoulsettings['frelease'] == false then 
                                                getgenv().roghoulsettings['frelease'] = true;
                                                task.spawn(function()
                                                    task.wait(getgenv().roghoulsettings['relftime'])
                                                    releaseKey('F')
                                                    getgenv().roghoulsettings['frelease'] = false;
                                                end)
                                            end
                                        end
                                        if getgenv().roghoulsettings['cfarm'] == true then 
                                            if getgenv().roghoulsettings['cpresswait'] == false then --cwait
                                                getgenv().roghoulsettings['cpresswait'] = true;
                                                task.spawn(function()
                                                    task.wait(getgenv().roghoulsettings['relctime'])
                                                    pressKey('C')
                                                end)
                                            end
                                        end
                                    end)

                                    if getgenv()['roghoulsettings']['autoinstakill'] then 
                                        task.delay(.1,function()
                                            local dir = game:GetService("Workspace").NPCSpawns
                                            for _,c in next, dir:GetChildren() do 
                                                for _,v in next,c:GetChildren() do 
                                                    if v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then 
                                                        if isnetworkowner(v.PrimaryPart) then
                                                            pcall(function()
                                                                v:FindFirstChild('Head'):Destroy()
                                                            end)
                                                        end
                                                    end 
                                                end
                                    
                                            end  
                                        end)
                                    end

                                end
                                
                            until not getgenv()['roghoulsettings']['FinalChoice'] or not getgenv()['roghoulsettings']['FinalChoice']:FindFirstChild('HumanoidRootPart')
                            or getgenv().loopsUnload == true or getgenv()['roghoulsettings']['farming'] == false
                            print('break')
                            getgenv()['roghoulsettings']['hasntstarted'] = true
                            if getgenv()['roghoulsettings']['autoabsorb'] == true and getgenv()['roghoulsettings']['FinalChoice'] ~= nil then 
                                for _,v in next, getgenv()['roghoulsettings']['FinalChoice']:GetChildren() do 
                                    if v.Name:find('Corpse') then 
                                        pcall(function()
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild('ClickPart').CFrame * CFrame.new(0,1.7,0)
                                            task.wait(.2)
                                            game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):MoveTo(v:FindFirstChild('ClickPart').Position)
                                            game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):MoveTo(v:FindFirstChild('ClickPart').Position)
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild('ClickPart').CFrame * CFrame.new(0,1.7,0)
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild('ClickPart').CFrame * CFrame.new(0,1.7,0)
                                            task.wait(.1)
                                            repeat 
                                                task.wait(0.01)
                                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild('ClickPart').CFrame * CFrame.new(0,1.7,0)
                                                fireclickdetector(v:FindFirstChild('ClickPart'):FindFirstChildWhichIsA('ClickDetector'))
                                            until not getgenv()['roghoulsettings']['FinalChoice']
                                            fireclickdetector(v:FindFirstChild('ClickPart'):FindFirstChildWhichIsA('ClickDetector'))
                                            fireclickdetector(v:FindFirstChild('ClickPart'):FindFirstChildWhichIsA('ClickDetector'))
                                            fireclickdetector(v:FindFirstChild('ClickPart')[''])
                                            fireclickdetector(v:FindFirstChild('ClickPart'):FindFirstChildWhichIsA('ClickDetector'))
                                            fireclickdetector(v:FindFirstChild('ClickPart'):FindFirstChildWhichIsA('ClickDetector'))
                                            fireclickdetector(v:FindFirstChild('ClickPart')[''])
                                        end)
                                        -- task.wait(.3)
                                    end
                                end
                                -- game:GetService("Workspace").NPCSpawns.HumanSpawns.Human["Human Corpse"].
                            end
                            if getgenv()['roghoulsettings']['autoquest'] == true then 
                                if game.Players.LocalPlayer:FindFirstChild('PlayerFolder') and game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('CurrentQuest') then 
                                    local complete = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('CurrentQuest'):FindFirstChild('Complete')
                                    local quest = '';
                                    if complete:FindFirstChildWhichIsA('StringValue') then quest = complete:FindFirstChildWhichIsA('StringValue').Name end 
                                    if complete:FindFirstChild(quest) and complete:FindFirstChild(quest).Value == complete:FindFirstChild(quest):FindFirstChild('Max').Value then 
                                        getquest{type = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value}
                                    elseif not complete:FindFirstChildWhichIsA('StringValue') then 
                                        getquest{type = game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization').Team.Value}
                                    end
                                end
                            end
                            getgenv()['roghoulsettings']['action'] = 'canquest'
                            getgenv()['roghoulsettings']['hasntstarted'] = true
                            getgenv().roghoulsettings['callednotice'] = false;
                        end)
                    else
                        getgenv()['roghoulsettings']['action'] = 'canquest'
                        getgenv().roghoulsettings['callednotice'] = false;
                        getgenv()['roghoulsettings']['hasntstarted'] = true;
                        return
                    end
                elseif getgenv().roghoulsettings['farming'] == true and game:GetService("Workspace"):FindFirstChild('Gyakusatsu') and typeofnpc == 'gykat' and  getaction() == 'canquest' and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    getgenv()['roghoulsettings']['action'] = 'fighting';
                    getgenv()['roghoulsettings']['hasntstarted'] = false;
                    if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 then 
                        -- print('waiting for quinque')
                        print('waiting for '..string.lower(typeweapon))
                        pressKey(getgenv().roghoulsettings['activestage'])
                        repeat task.wait() 
                            task.delay(2.5,function()
                                if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon)  then 
                                    pressKey(getgenv().roghoulsettings['activestage'])
                                end
                            end)
                        until game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) 
                        if getgenv().roghoulsettings['usec'] == true then 
                            pressKey('C')
                        end 
                        -- task.wait(3)
                        print(string.lower(typeweapon)..' active')
                        -- print('quinque active')
                    end
                    if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                        -- print('waiting for quinque')
                        print('waiting for '..string.lower('arata'))
                        pressKey('Zero')
                        -- repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                        repeat task.wait() 
                            task.delay(2.5,function()
                                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                    pressKey('Zero')
                                end
                            end)
                        until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                        -- task.wait(3)
                        print(string.lower('arata')..' active')
                        -- print('quinque active')
                    end
                    local enemymodel = nil
                    for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
                        if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                            enemymodel = c
                        end
                    end

                    if getgenv().roghoulsettings['serverhopifnopoint'] == true then 
                        task.delay(getgenv().roghoulsettings['serverhopifnopointsafter'],function()
                            local Points = nil; --'' --0
                            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList') and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List') then 
                                for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                    if v and string.find(v.Name,game.Players.LocalPlayer.Name) then 
                                        Points = v:FindFirstChild('GyaPerc').Text
                                        break
                                    end
                                end
                            end
                            if Points == nil then 
                                task.spawn(function()
                                    repeat 
                                        task.wait(.5)
                                        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList') and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List') then 
                                            for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                                if v and string.find(v.Name,game.Players.LocalPlayer.Name) then 
                                                    Points = v:FindFirstChild('GyaPerc').Text
                                                    break
                                                end
                                            end
                                        end
                                    until Points ~= nil
                                end)
                            end
                            repeat task.wait(.5) until Points ~= nil
                            if getgenv().roghoulsettings['abovecontribution'] == true then 
                                if tonumber(Points) < getgenv().roghoulsettings['serverhopifnopointminimum'] then -- serverhopifnopoints
                                    getgenv().serverhop()
                                end
                            else
                                if tonumber(Points) <= getgenv().roghoulsettings['serverhopifnopointminimum'] then -- serverhopifnopoints
                                    getgenv().serverhop()
                                end
                            end
                        end)
                    end


                    local Sacs = game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value
                    azfakenotify('You Have: '..Sacs..' Gykatsu Sacs','untilClick')
                    local function returnmobsindistance(x)
                        local mobsindistance = {}
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            for k,c in next, enemymodel:GetChildren() do 
                                if c.Name == 'Mob' and c:FindFirstChild('HumanoidRootPart') and c:FindFirstChild('Humanoid') and c:FindFirstChild('Humanoid').Health > 0 then 
                                    local Distance = (c:FindFirstChild('HumanoidRootPart').Position-game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                    if Distance <= x then 
                                        table.insert(mobsindistance,string.split(v:FindFirstChildWhichIsA('Script').Name,'NPC')[1]) -- Script
                                    end
                                end
                            end
                        end
                        return mobsindistance
                    end
                    local function usemoves()
                        if getgenv().roghoulsettings['click'] then 
                            task.delay(.1,function()
                                pressKey('Mouse1')
                            end)
                        end
                        -- CFrame.Angles(math.rad(90),0,0) upside down for gykatsu
                        task.spawn(function()
                            if getgenv().roghoulsettings['usee'] == true then 
                                local JustUseMove = false;
                                if getgenv().roghoulsettings['useewhencertainmobclose'] == true then 
                                    local mobstodetect = getgenv().roghoulsettings['useeoncertainmobs']
                                    if getgenv().roghoulsettings['useeoncertainmobs'] == 'All' then JustUseMove = true end;
                                    for i,t in next, string.split(mobstodetect,':') do 
                                        if table.find(returnmobsindistance(getgenv().roghoulsettings['eclosedistance']),t) then 
                                            JustUseMove = true;
                                            break -- add a loop index so each time we loop inside the for it adds one
                                            -- if the loop index isnt equal to the total indexs inside string.split then it means we broke it early.
                                        end
                                    end

                                    if JustUseMove == true then 
                                        if getgenv().roghoulsettings['ereleasekeysbeforeusee'] == true then 
                                            releaseKey('R')
                                            releaseKey('F')
                                        end
                                        pressKey('E')
                                        task.wait(1)
                                        if getgenv().roghoulsettings['rele'] == true and getgenv().roghoulsettings['erelease'] == false then 
                                            getgenv().roghoulsettings['erelease']  = true;
                                            task.spawn(function()
                                                task.wait(getgenv().roghoulsettings['reletime'])
                                                releaseKey('E')
                                                getgenv().roghoulsettings['erelease']  = false;
                                            end)
                                        end 
                                    else 
                                        JustUseMove = nil;
                                    end
                                end
                                if getgenv().roghoulsettings['useetarget'] == true and JustUseMove == false then 
                                    local LittlestDistance = nil; -- if this is smaller than target distance
                                    if enemymodel then 
                                        for i,child in next, enemymodel:GetChildren() do 
                                            if child.PrimaryPart and child.Name == 'Mob' and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                local Magnitude = (child.PrimaryPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                                if Magnitude <= getgenv().roghoulsettings['useetargetdistance'] then 
                                                    if getgenv().roghoulsettings['ereleasekeysbeforeusee'] == true then 
                                                        releaseKey('R')
                                                        releaseKey('F')
                                                    end
                                                    pressKey('E')
                                                    task.wait(1)
                                                    if getgenv().roghoulsettings['rele'] == true and getgenv().roghoulsettings['erelease'] == false then 
                                                        getgenv().roghoulsettings['erelease']  = true;
                                                        task.spawn(function()
                                                            task.wait(getgenv().roghoulsettings['reletime'])
                                                            releaseKey('E')
                                                            getgenv().roghoulsettings['erelease']  = false;
                                                        end)
                                                    end 
                                                end
                                            end
                                        end
                                    end
                                elseif JustUseMove == false then
                                    if getgenv().roghoulsettings['ereleasekeysbeforeusee'] == true then 
                                        releaseKey('R')
                                        releaseKey('F')
                                    end
                                    pressKey('E')
                                    task.wait(1)
                                    if getgenv().roghoulsettings['rele'] == true and getgenv().roghoulsettings['erelease'] == false then 
                                        getgenv().roghoulsettings['erelease']  = true;
                                        task.spawn(function()
                                            task.wait(getgenv().roghoulsettings['reletime'])
                                            releaseKey('E')
                                            getgenv().roghoulsettings['erelease']  = false;
                                        end)
                                    end     
                                end

                            end
                            if getgenv().roghoulsettings['user'] == true then 
                                local JustUseMove = false;
                                if getgenv().roghoulsettings['userwhencertainmobclose'] == true then 
                                    local mobstodetect = getgenv().roghoulsettings['useroncertainmobs']
                                    if getgenv().roghoulsettings['useroncertainmobs'] == 'All' then JustUseMove = true end;
                                    for i,t in next, string.split(mobstodetect,':') do 
                                        if table.find(returnmobsindistance(getgenv().roghoulsettings['rclosedistance']),t) then 
                                            JustUseMove = true;
                                            break -- add a loop index so each time we loop inside the for it adds one
                                            -- if the loop index isnt equal to the total indexs inside string.split then it means we broke it early.
                                        end
                                    end
                                    if JustUseMove == true then 
                                        if getgenv().roghoulsettings['rreleasekeysbeforeuser'] == true then 
                                            releaseKey('E')
                                            releaseKey('F')
                                        end
                                        pressKey('R')
                                        task.wait(1)
                                        if getgenv().roghoulsettings['relr'] == true and getgenv().roghoulsettings['rrelease'] == false then 
                                            getgenv().roghoulsettings['rrelease'] = true;
                                            task.spawn(function()
                                                task.wait(getgenv().roghoulsettings['relrtime'])
                                                releaseKey('R')
                                                getgenv().roghoulsettings['rrelease'] = false;
                                            end)
                                        end
                                    else 
                                        JustUseMove = nil;
                                    end
                                end

                                if getgenv().roghoulsettings['usertarget'] == true and JustUseMove == false then 
                                    local LittlestDistance = nil;
                                    if enemymodel then 
                                        for i,child in next, enemymodel:GetChildren() do 
                                            if child.PrimaryPart and child.Name == 'Mob' and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                local Magnitude = (child.PrimaryPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                                if Magnitude <= getgenv().roghoulsettings['usertargetdistance'] then 
                                                    if getgenv().roghoulsettings['rreleasekeysbeforeuser'] == true then 
                                                        releaseKey('E')
                                                        releaseKey('F')
                                                    end
                                                    pressKey('R')
                                                    task.wait(1)
                                                    if getgenv().roghoulsettings['relr'] == true and getgenv().roghoulsettings['rrelease'] == false then 
                                                        getgenv().roghoulsettings['rrelease'] = true;
                                                        task.spawn(function()
                                                            task.wait(getgenv().roghoulsettings['relrtime'])
                                                            releaseKey('R')
                                                            getgenv().roghoulsettings['rrelease'] = false;
                                                        end)
                                                    end
                                                end
                                            end
                                        end
                                    end
                                elseif JustUseMove == false then
                                    if getgenv().roghoulsettings['rreleasekeysbeforeuser'] == true then 
                                        releaseKey('E')
                                        releaseKey('F')
                                    end
                                    pressKey('R')
                                    task.wait(1)
                                    if getgenv().roghoulsettings['relr'] == true and getgenv().roghoulsettings['rrelease'] == false then 
                                        getgenv().roghoulsettings['rrelease'] = true;
                                        task.spawn(function()
                                            task.wait(getgenv().roghoulsettings['relrtime'])
                                            releaseKey('R')
                                            getgenv().roghoulsettings['rrelease'] = false;
                                        end)
                                    end
                                end

                            end
                            if getgenv().roghoulsettings['usef'] == true then 
                                local JustUseMove = false;
                                if getgenv().roghoulsettings['usefwhencertainmobclose'] == true then 
                                    local mobstodetect = getgenv().roghoulsettings['usefoncertainmobs']
                                    if getgenv().roghoulsettings['usefoncertainmobs'] == 'All' then JustUseMove = true end;
                                    for i,t in next, string.split(mobstodetect,':') do 
                                        if table.find(returnmobsindistance(getgenv().roghoulsettings['fclosedistance']),t) then 
                                            JustUseMove = true;
                                            break -- add a loop index so each time we loop inside the for it adds one
                                            -- if the loop index isnt equal to the total indexs inside string.split then it means we broke it early.
                                        end
                                    end
                                    if JustUseMove == true then 
                                        if getgenv().roghoulsettings['freleasekeysbeforeusef'] == true then 
                                            releaseKey('E')
                                            releaseKey('R')
                                        end
                                        pressKey('F')
                                        task.wait(1)
                                        if getgenv().roghoulsettings['relf'] == true and getgenv().roghoulsettings['frelease'] == false then 
                                            getgenv().roghoulsettings['frelease'] = true;
                                            task.spawn(function()
                                                task.wait(getgenv().roghoulsettings['relftime'])
                                                releaseKey('F')
                                                getgenv().roghoulsettings['frelease'] = false;
                                            end)
                                        end 
                                    else
                                        JustUseMove = nil;
                                    end
                                end
                                if getgenv().roghoulsettings['useftarget'] == true and JustUseMove == false then 
                                    local LittlestDistance = nil;
                                    if enemymodel then 
                                        for i,child in next, enemymodel:GetChildren() do 
                                            if child.PrimaryPart and child.Name == 'Mob' and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                local Magnitude = (child.PrimaryPart.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                                if Magnitude <= getgenv().roghoulsettings['useftargetdistance'] then 
                                                    if getgenv().roghoulsettings['freleasekeysbeforeusef'] == true then 
                                                        releaseKey('E')
                                                        releaseKey('R')
                                                    end
                                                    pressKey('F')
                                                    task.wait(1)
                                                    if getgenv().roghoulsettings['relf'] == true and getgenv().roghoulsettings['frelease'] == false then 
                                                        getgenv().roghoulsettings['frelease'] = true;
                                                        task.spawn(function()
                                                            task.wait(getgenv().roghoulsettings['relftime'])
                                                            releaseKey('F')
                                                            getgenv().roghoulsettings['frelease'] = false;
                                                        end)
                                                    end 
                                                end
                                            end
                                        end
                                    end
                                elseif JustUseMove == false then
                                    if getgenv().roghoulsettings['freleasekeysbeforeusef'] == true then 
                                        releaseKey('E')
                                        releaseKey('R')
                                    end
                                    pressKey('F')
                                    task.wait(1)
                                    if getgenv().roghoulsettings['relf'] == true and getgenv().roghoulsettings['frelease'] == false then 
                                        getgenv().roghoulsettings['frelease'] = true;
                                        task.spawn(function()
                                            task.wait(getgenv().roghoulsettings['relftime'])
                                            releaseKey('F')
                                            getgenv().roghoulsettings['frelease'] = false;
                                        end)
                                    end 
                                end
                            end
                            if getgenv().roghoulsettings['cfarm'] == true then 
                                if getgenv().roghoulsettings['cpresswait'] == false then --cwait
                                    getgenv().roghoulsettings['cpresswait'] = true;
                                    task.spawn(function()
                                        task.wait(getgenv().roghoulsettings['relctime'])
                                        pressKey('C')
                                    end)
                                end
                            end
                        end)
                    end
                    if enemymodel then 
                        if getgenv()['roghoulsettings']['serverhopafterseconds'] == true then 
                            task.delay(tonumber(getgenv().roghoulsettings['serverhopforgyakusatsuafter']),function()
                                getgenv().serverhop() -- sevrrh
                            end)
                        end
                        local TimeElasped = 0;
                        local StopElasped = false;
                        local PlayersParticipated = 0;
                        task.spawn(function()
                            repeat task.wait(1); TimeElasped += 1 until StopElasped == true --not workspace:FindFirstChild('Gyakusatsu')
                        end)
                        if getgenv()['roghoulsettings']['cashoutrepbeforegykatsufarm'] == true then 
                            local obj = game:GetService("Workspace"):FindFirstChild('TrainerModel'):FindFirstChild('ClickIndicator')
                            if game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization'):FindFirstChild('Team').Value == 'CCG' then --type
                                obj = game:GetService("Workspace").CCGBuilding:FindFirstChild('Yoshitoki'):FindFirstChild('TaskIndicator')
                            elseif game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization'):FindFirstChild('Team').Value == 'Ghoul' then
                                obj = game:GetService("Workspace").Anteiku:FindFirstChild('Yoshimura'):FindFirstChild('TaskIndicator')
                            end
                            if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0;
                            end
                            repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
    
                            repeat 
                                task.wait(0.1)
                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = obj.CFrame
                            until game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame == obj.CFrame
                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = obj.CFrame
                            if game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization'):FindFirstChild('Team').Value == 'CCG' then --type
                                game:GetService("ReplicatedStorage").Remotes.ReputationCashOut:InvokeServer()
                            elseif game.Players.LocalPlayer:FindFirstChild('PlayerFolder'):FindFirstChild('Customization'):FindFirstChild('Team').Value == 'Ghoul' then
                                game:GetService("ReplicatedStorage").Remotes.ReputationCashOut:InvokeServer()
                            end
                        end


                        if getgenv().roghoulsettings['antireport'] == true then -- go under then set part0 to nil but put a layer under it so it doesn't fall off
                            repeat task.wait() until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil
                        end 

                        if getgenv()['roghoulsettings']['classicfarm']  == true then 
                            local __farmable = {}
                            for _,v in next, enemymodel:GetChildren() do  
                                if v.Name ~= 'Mob' and v.Name ~= 'Gyakusatsu' then 
                                    table.insert(__farmable,v)
                                end
                            end
                            local gykat = enemymodel:FindFirstChild('Gyakusatsu')
                            for _,v in next, __farmable do 
                                if v:FindFirstChild('HumanoidRootPart') then 
                                
                                    local Sides = {
                                        ['Left'] = CFrame.new(-997.681641, 64.747406, 210.257309);
                                        ['Middle'] = CFrame.new(-998.055847, 64.7473831, 283.880157);
                                        ['Right'] = CFrame.new(-995.961548, 64.7473831, 335.631134);
                                    }-- sides
    
                                    local blobroot = v:FindFirstChild('HumanoidRootPart')
                                    local closestside = 'left' -- SideClosest
                                    local LoopCFrameSide = Sides['Right']
                                    local PosX = v:FindFirstChild('HumanoidRootPart').CFrame.X 
                                    local LeftAdjustment = (PosX-Sides['Left'].X)
                                    local RightAdjustment = (PosX-Sides['Right'].X)
                                    if v.Name:sub(2,2) == ('R') then LoopCFrameSide = Sides['Left'] end
                                    if v.Name:sub(2,2) == ('L') then LoopCFrameSide = Sides['Right'] end
                                    -- if LeftAdjustment > RightAdjustment then closestside = 'right'; LoopCFrameSide = Sides['Right'] end 
                                    -- if RightAdjustment < LeftAdjustment then closestside = 'left'; LoopCFrameSide = Sides['Left'] end 
                                    local delaying = false;
                                    local oldValue = nil;
                                    local oldValueText = ';'
                                    local canResetValueText = true;
                                    
                                    -- if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                    --     local DistanceFromStartingPosition = (LoopCFrameSide.Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position) -- v.Position?
                                    --     -- print(DistanceFromStartingPosition.Magnitude)
                                    --     if DistanceFromStartingPosition.Magnitude > 100 then 
                                    --         -- getgenv().divious_teleport(
                                    --         --     {
                                    --         --         distance = LoopCFrameSide;
                                    --         --         delay = 0.3;
                                    --         --         tween = true;
                                    --         --         division = 3
                                    --         --     }
                                    --         -- )
                                    --         -- task.wait(4)
                                    --     end
                                    -- end
                                    
    
                                    repeat 
                                        task.wait(0.01)
                                        --pcall(function()
                                            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                pcall(function()
                                                    if getgenv().roghoulsettings['antireport'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 ~= nil then -- go under then set part0 to nil but put a layer under it so it doesn't fall off
                                                        repeat task.wait(0.0001) until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil
                                                        game.Players.LocalPlayer.Character.UpperTorso.CFrame = CFrame.new(1,1,1)
                                                        task.wait(1)
                                                    end 
                                                end)
                                                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil then 
                                                    game.Players.LocalPlayer.Character.UpperTorso.CFrame = CFrame.new(1,1,1)
                                                end
                                                -- local mob = getgenv().roghoulsettings['closestcoiler']
                                                local ShouldGoHighDueToFilteredMob = false;
                                                local ShouldntTeleportToOriginalSpace = false
                                                local ShouldTeleportToSafeMode = false
                                                local HighAvoidedJug = false
                                                local JugHigh = nil
                                                if getgenv()['roghoulsettings']['gohighwhentargetted'] == true or getgenv().roghoulsettings['teleporttosafewheninrange'] == true then 
                                                    for i,mob in next, enemymodel:GetChildren() do 
                                                        if mob.Name == 'Mob' and mob:FindFirstChildWhichIsA('Humanoid') and mob:FindFirstChildWhichIsA('Humanoid').Health >0 and mob:FindFirstChild('HumanoidRootPart') then 
                                                            local Distance = nil
                                                            pcall(function()
                                                                Distance = (mob:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                            end)
                                                            if Distance ~= nil and Distance.Magnitude <= getgenv().roghoulsettings['gohightargetdistance'] and mob:FindFirstChildWhichIsA('Script') then 
                                                                local MobName = string.split(mob:FindFirstChildWhichIsA('Script').Name,'NPC')[1]
                                                                --print(MobName)
                                                                for _a,activated in next, getgenv().roghoulsettings['mobstogohighon'] do 
                                                                    --print(_a, MobName,activated)
                                                                    if _a == MobName and activated == true then 
                                                                        if MobName == 'Jug' and getgenv()['roghoulsettings']['avoidjughigh'] == true then 
                                                                            HighAvoidedJug = true
                                                                            JugHigh = nob
                                                                        end
                                                                        if getgenv().roghoulsettings['teleporttosafewheninrange'] == true then 
                                                                            ShouldTeleportToSafeMode = true
                                                                        end
                                                                        if getgenv().roghoulsettings['gohighwhentargetted'] == true then 
                                                                            ShouldGoHighDueToFilteredMob = true
                                                                        end
                                                                        --ShouldGoHighDueToFilteredMob = true;
                                                                        --break; -- save fps
                                                                    elseif _a == 'All' and activated == true then 
                                                                        if MobName == 'Jug' and getgenv()['roghoulsettings']['avoidjughigh'] == true then 
                                                                            HighAvoidedJug = true
                                                                            JugHigh = mob
                                                                        end
                                                                        if getgenv().roghoulsettings['teleporttosafewheninrange'] == true then 
                                                                            ShouldTeleportToSafeMode = true
                                                                        end
                                                                        if getgenv().roghoulsettings['gohighwhentargetted'] == true then 
                                                                            ShouldGoHighDueToFilteredMob = true
                                                                        end
                                                                        --ShouldGoHighDueToFilteredMob = true;
                                                                        --break;
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        if ShouldGoHighDueToFilteredMob == true then break end;
                                                    end
                                                end
                                                


                                                if getgenv().roghoulsettings['waitingtoteleportfromsafe'] == true then 
                                                    ShouldTeleportToSafeMode = true 
                                                    shouldShouldGoHighDueToFilteredMob = false
                                                end




                                                if ShouldGoHighDueToFilteredMob == true then 
                                                    getgenv().roghoulsettings['isup'] = true;
                                                elseif ShouldGoHighDueToFilteredMob == false then 
                                                    getgenv().roghoulsettings['isup'] = false;
                                                end


                                                if getgenv().roghoulsettings['targettingvictim'] and getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart') then 
                                                    local Distance = (getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                    if Distance.Magnitude > getgenv().roghoulsettings['targettingdistance'] then 
                                                        getgenv().roghoulsettings['targettingvictim'] = nil;
                                                    end
                                                end
                                                if getgenv().roghoulsettings['targettingvictim'] and getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid') then 
                                                    if getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid').Health == 0 then 
                                                        getgenv().roghoulsettings['targettingvictim'] = nil;
                                                    end
                                                end

                                                if getgenv().roghoulsettings['closestcoiler'] ~= nil and getgenv().roghoulsettings['closestcoiler']:FindFirstChildWhichIsA('Humanoid') and getgenv().roghoulsettings['closestcoiler']:FindFirstChildWhichIsA('Humanoid').Health < 0 then -- .Health > 0
                                                else
                                                    getgenv().roghoulsettings['closestcoiler'] = nil;
                                                end
                                                if getgenv().roghoulsettings['closestcoiler'] ~= nil and getgenv().roghoulsettings['closestcoiler']:FindFirstChildWhichIsA('Humanoid') then 
                                                    if getgenv().roghoulsettings['closestcoiler']:FindFirstChildWhichIsA('Humanoid').Health == 0 then 
                                                        getgenv().roghoulsettings['closestcoiler'] = nil 
                                                    end
                                                end
                                                if getgenv().roghoulsettings['closestcoiler'] ~= nil and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart') then 
                                                    local Distance = (getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                    if Distance.Magnitude > getgenv().roghoulsettings['coilersdistance'] then 
                                                        getgenv().roghoulsettings['closestcoiler'] = nil
                                                    end
                                                end



                                                if getgenv()['roghoulsettings']['avoidjug'] == true and ShouldGoHighDueToFilteredMob == false then 
                                                    for i,mob in next, enemymodel:GetChildren() do 
                                                        if mob.Name == 'Mob' and mob:FindFirstChildWhichIsA('Humanoid') and mob:FindFirstChildWhichIsA('Humanoid').Health >0 and mob:FindFirstChild('HumanoidRootPart') and mob:FindFirstChildWhichIsA('Script') then 
                                                            local MobName = string.split(mob:FindFirstChildWhichIsA('Script').Name,'NPC')[1]
                                                            local Distance = (mob:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                            if Distance.Magnitude <= getgenv().roghoulsettings['jugtargetdistance'] and MobName == 'Jug' and ShouldGoHighDueToFilteredMob == false then 
                                                                --ShouldntTeleportToOriginalSpace = mob:FindFirstChild('HumanoidRootPart')
                                                                ShouldGoHighDueToFilteredMob = nil
                                                            end
                                                        end
                                                    end
                                                end


                                                if getgenv().roghoulsettings['antireport'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 ~= nil then -- go under then set part0 to nil but put a layer under it so it doesn't fall off
                                                    repeat task.wait(0.001) until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil
                                                    task.wait(.5)
                                                end 
                                                if getgenv()['roghoulsettings']['goaboveofclosepeople'] == true and getgenv()['roghoulsettings']['targettingvictim'] ~= nil and getgenv()['roghoulsettings']['targettingvictim'] ~= nil and getgenv()['roghoulsettings']['targettingvictim']:FindFirstChild('Humanoid') and getgenv()['roghoulsettings']['targettingvictim']:FindFirstChild('Humanoid').Health > 0 and getgenv()['roghoulsettings']['targettingvictim']:FindFirstChild('HumanoidRootPart') then 
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv()['roghoulsettings']['targettingvictim']:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,getgenv().roghoulsettings['highplayertargety'],0)
                                                elseif getgenv()['roghoulsettings']['goontopofcoilers'] == true and getgenv().roghoulsettings['closestcoiler'] ~= nil and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid') and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid').Health > 0 and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart') then 
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().roghoulsettings['closestcoiler'].Character:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,getgenv().roghoulsettings['highcoilery'],0) -- closte
                                                else
                                                    -- if type(ShouldntTeleportToOriginalSpace) ~= 'boolean' and ShouldGoHighDueToFilteredMob == false then 
                                                    --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame * LoopCFrameSide * ShouldntTeleportToOriginalSpace.CFrame
                                                    if ShouldTeleportToSafeMode == true then 
                                                        if getgenv().roghoulsettings['waitingtoteleportfromsafe'] == false then 
                                                            getgenv().roghoulsettings['waitingtoteleportfromsafe'] = true 
                                                            task.spawn(function()
                                                                task.wait(getgenv().roghoulsettings['delayfromsafebacktoclassic'])
                                                                getgenv().roghoulsettings['waitingtoteleportfromsafe'] = false
                                                                ShouldTeleportToSafeMode = false
                                                            end) -- safe transition
                                                            -- task.delay(getgenv().roghoulsettings['delayfromsafebacktoclassic'],function()
                                                            --     getgenv().roghoulsettings['waitingtoteleportfromsafe'] = false
                                                            --     ShouldTeleportToSafeMode = false
                                                            -- end) -- safe transition
                                                        end
                                                        local DistanceFromGyka = (enemymodel:FindFirstChild('Gyakusatsu'):FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                        if DistanceFromGyka.Magnitude > 10 then 
                                                            pcall(function()
                                                                --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                                                                --game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(.5,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {CFrame = enemymodel:FindFirstChild('Gyakusatsu'):FindFirstChild('HumanoidRootPart').CFrame}):Play()
                                                                --task.wait(.5)
                                                                --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false  
                                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = enemymodel:FindFirstChild('Gyakusatsu'):FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,getgenv().roghoulsettings['safedistance'],-50)  
                                                            end)
                                                        else
                                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = enemymodel:FindFirstChild('Gyakusatsu'):FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,getgenv().roghoulsettings['safedistance'],-50)   --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = enemymodel:FindFirstChild('Gyakusatsu'):FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,getgenv().roghoulsettings['safedistance'],-3.4)
                                                        end
                                                    elseif ShouldGoHighDueToFilteredMob == true then 
                                                        if HighAvoidedJug == false then 
                                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = LoopCFrameSide * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)
                                                        else
                                                            -- if LoopCFrameSide == Sides['Right'] then -- (getgenv().roghoulsettings['gohightargetdistance']/10)
                                                            --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Left']  * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)--CFrame.new(-10,getgenv().roghoulsettings['hightargety'],0)
                                                            -- elseif LoopCFrameSide == Sides['Left'] then 
                                                            --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Right'] * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)  --CFrame.new(10,getgenv().roghoulsettings['hightargety'],0)
                                                            -- end
                                                            -- used to goto the opposite side but now it goes to the opposite side of which the jug is closest to
                                                            local DistanceLeft = (JugHigh:FindFirstChild('HumanoidRootPart').Position-Sides['Left'].Position)
                                                            local DistanceRight = (JugHigh:FindFirstChild('HumanoidRootPart').Position - Sides['Right'].Position) -- Sides Right
                                                            if DistanceRight.Magnitude < DistanceLeft.Magnitude then 
                                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Right'] * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)
                                                            else
                                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Left'] * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)
                                                            end
                                                        end
                                                    elseif ShouldGoHighDueToFilteredMob == nil then 
                                                        -- if LoopCFrameSide == Sides['Right'] then 
                                                        --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Left'] --* CFrame.new((getgenv().roghoulsettings['jugtargetdistance']-1),0,0)
                                                        -- elseif LoopCFrameSide == Sides['Left'] then 
                                                        --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Right'] --* CFrame.new(-(getgenv().roghoulsettings['jugtargetdistance']-1),0,0)
                                                        -- end
                                                        local DistanceLeft = (JugHigh:FindFirstChild('HumanoidRootPart').Position-Sides['Left'].Position)
                                                        local DistanceRight = (JugHigh:FindFirstChild('HumanoidRootPart').Position - Sides['Right'].Position) -- Sides Right
                                                        if DistanceRight.Magnitude < DistanceLeft.Magnitude then 
                                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Right'] * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)
                                                        else
                                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Sides['Left'] * CFrame.new(0,getgenv().roghoulsettings['hightargety'],0)
                                                        end
                                                    else
                                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = LoopCFrameSide
                                                    end
                                                end
                                                local Topic = nil ;
                                                if getgenv()['roghoulsettings']['targetting'] == true then 
                                                    local ClosestVictim = nil;
                                                    local ClosestDistance = nil;
                                                    if getgenv()['roghoulsettings']['targettingvictim'] == nil then 
                                                        for _,getp in next, game.Players:GetPlayers() do 
                                                            if getp.Name ~= game.Players.LocalPlayer.Name and getp.Character and getp.Character:FindFirstChild('Humanoid') and getp.Character:FindFirstChild('Humanoid').Health > 0 and getp.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                                -- can use DistanceFromCharacter()
                                                                local Distance = (getp.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude -- game.P;ayer
                                                                -- if Distance <= getgenv().roghoulsettings['targettingdistance'] then 
                                                                --     if ClosestDistance == nil then 
                                                                --         ClosestVictim = getp.Character;
                                                                --         ClosestDistance = Distance;
                                                                --     else
                                                                --         if ClosestDistance > Distance then 
                                                                --             ClosestVictim = getp.Character;
                                                                --             ClosestDistance = Distance;
                                                                --         end
                                                                --     end
                                                                -- end
                                                                if Distance <= getgenv().roghoulsettings['targettingdistance'] and ClosestDistance == nil then 
                                                                    ClosestVictim = getp.Character;
                                                                    ClosestDistance = Distance;
                                                                elseif Distance <= getgenv().roghoulsettings['targettingdistance'] and ClosestDistance ~= nil and ClosestDistance > Distance then 
                                                                    ClosestVictim = getp.Character;
                                                                    ClosestDistance = Distance;
                                                                end
                                                            end
                                                        end
                                                        -- if ClosestVictim ~= nil then 
                                                        -- end
                                                        getgenv().roghoulsettings['targettingvictim'] = ClosestVictim
                                                    end
                                                    if not getgenv().roghoulsettings['targettingvictim'] or not getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid') or getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid').Health == 0 or not getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart') then 
                                                        getgenv().roghoulsettings['targettingvictim'] = nil;
                                                    end
                                                    if getgenv().roghoulsettings['targettingvictim'] ~= nil then 
                                                        if not getgenv().roghoulsettings['targettingvictim'] or not getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid') or getgenv().roghoulsettings['targettingvictim']:FindFirstChild('Humanoid').Health == 0 or not getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart') then 
                                                            getgenv().roghoulsettings['targettingvictim'] = nil;
                                                        end
                                                        --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart').Position)
                                                    end
                                                end
                                                if getgenv()['roghoulsettings']['aimatcoilers'] == true then  -- and getgenv().roghoulsettings['dontaimatcoilerwhenup'] == false or getgenv()['roghoulsettings']['aimatcoilers'] == true and getgenv().roghoulsettings['dontaimatcoilerwhenup']== true and getgenv().roghoulsettings['isup'] == false
                                                    --if getgenv().roghoulsettings['dontaimatcoilerwhenup'] == true and getgenv().roghoulsettings['isup'] == true then return end
                                                    if getgenv().roghoulsettings['dontaimatcoilerwhenup'] == false and getgenv().roghoulsettings['isup'] == false then
                                                        local ClosestCoiler = nil;
                                                        local ClosestCoilerDistance = nil;
                                                        if getgenv().roghoulsettings['closestcoiler'] == nil then 
                                                            for _,mob in next, enemymodel:GetChildren() do 
                                                                if mob.Name == 'Mob' and mob:FindFirstChild('CoilerNPC') and mob:FindFirstChildWhichIsA('Humanoid') and mob:FindFirstChildWhichIsA('Humanoid').Health > 0 and mob:FindFirstChild('HumanoidRootPart') then 
                                                                    local CoilerDistance = (mob:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                                                    if CoilerDistance.Magnitude <= getgenv().roghoulsettings['coilersdistance'] and ClosestCoilerDistance == nil then 
                                                                        ClosestCoiler = mob ; 
                                                                        ClosestCoilerDistance = CoilerDistance.Magnitude ;
                                                                    elseif CoilerDistance.Magnitude <= getgenv().roghoulsettings['coilersdistance'] and ClosestCoilerDistance ~= nil and ClosestCoilerDistance > CoilerDistance.Magnitude then 
                                                                        ClosestCoiler = mob ; 
                                                                        ClosestCoilerDistance = CoilerDistance.Magnitude ;
                                                                    end
                                                                end
                                                            end
                                                            --if ClosestCoiler ~= nil then 
                                                            getgenv().roghoulsettings['closestcoiler'] = ClosestCoiler
                                                            --end
                                                        end
                                                        if not getgenv().roghoulsettings['closestcoiler'] or not getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid') or getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid') and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid').Health == 0 or not getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart') then 
                                                            getgenv().roghoulsettings['closestcoiler'] = nil;
                                                        end
                                                        if getgenv().roghoulsettings['closestcoiler'] ~= nil then 
                                                            if not getgenv().roghoulsettings['closestcoiler'] or not getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid') or getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid') and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('Humanoid').Health == 0 or not getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart') then 
                                                                getgenv().roghoulsettings['closestcoiler'] = nil;
                                                            else
                                                                --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart').Position)
                                                            end
                                                        end
                                                    end
                                                end
                                                if getgenv()['roghoulsettings']['targettingvictim'] ~= nil and getgenv()['roghoulsettings']['targettingvictim']:FindFirstChild('HumanoidRootPart') then 
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,getgenv().roghoulsettings['targettingvictim']:FindFirstChild('HumanoidRootPart').Position)  
                                                elseif getgenv().roghoulsettings['closestcoiler'] ~= nil and getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart') then 
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,getgenv().roghoulsettings['closestcoiler']:FindFirstChild('HumanoidRootPart').Position)
                                                else
                                                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v and v:FindFirstChild('HumanoidRootPart') then 
                                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,v:FindFirstChild('HumanoidRootPart').Position)
                                                    end
                                                end
                                                -- 
                                                usemoves()
                                                if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 then 
                                                    -- print('waiting for quinque')
                                                    print('waiting for '..string.lower(typeweapon))
                                                    pressKey(getgenv().roghoulsettings['activestage'])
                                                    repeat task.wait() 
                                                        task.delay(2.5,function()
                                                            if not game.Players.LocalPlayer.Character:FindFirstChild(typeweapon)  then 
                                                                pressKey(getgenv().roghoulsettings['activestage'])
                                                            end
                                                        end)
                                                    until game.Players.LocalPlayer.Character:FindFirstChild(typeweapon) 
                                                    if getgenv().roghoulsettings['usec'] == true then 
                                                        pressKey('C')
                                                    end 
                                                    -- task.wait(3)
                                                    print(string.lower(typeweapon)..' active')
                                                    -- print('quinque active')
                                                end
                                                if not game.Players.LocalPlayer.Character:FindFirstChild('Arata') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >0 and getgenv().roghoulsettings['equiparata'] == true then 
                                                    -- print('waiting for quinque')
                                                    print('waiting for '..string.lower('arata'))
                                                    pressKey('Zero')
                                                    -- repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                                                    repeat task.wait() 
                                                        task.delay(2.5,function()
                                                            if not game.Players.LocalPlayer.Character:FindFirstChild('Arata')  then 
                                                                pressKey('Zero')
                                                            end
                                                        end)
                                                    until game.Players.LocalPlayer.Character:FindFirstChild('Arata') 
                                                    -- task.wait(3)
                                                    print(string.lower('arata')..' active')
                                                    -- print('quinque active')
                                                end
    
    
                                                -- HANDLE THE POINTS NOT BEING GIVEN
                                                local function findwithx(x)
                                                    local xfound = nil;
                                                    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList') and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List') then 
                                                        for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                                            if v and v.Name == x then 
                                                                xfound = v
                                                                break
                                                            end
                                                        end
                                                    end
                                                    return xfound
                                                end
                                                if delaying == false then 
                                                    delaying = true;
                                                    task.delay(2,function()
                                                        local GyaSacsEarned = nil
                                                        task.spawn(function()
                                                            repeat task.wait() GyaSacsEarned = findwithx(game.Players.LocalPlayer.Name); until GyaSacsEarned ~= nil
                                                            GyaSacsEarned = GyaSacsEarned:FindFirstChild('GyaPerc').Text
                                                            GyaSacsEarned = string.split(Value,'%')[1]
                                                            if GyaSacsEarned == oldValueText then 
                                                                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                                                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                                                end
                                                            else 
                                                                oldValueText = GyaSacsEarned
                                                            end
                                                        end)
                                                    end)
                                                    canResetValueText = true;
                                                    delaying = false;
                                                end
                                            end
                                        --end)
                                    until not workspace:FindFirstChild('Gyakusatsu'):FindFirstChild(v.Name) or getgenv().loopsUnload == true or getgenv().roghoulsettings['farming'] == false or getgenv().roghoulsettings['gykatfarm'] == false
    
                                end

                                -- for k,c in next, Sides do 

                                -- end
                            end
                        elseif getgenv()['roghoulsettings']['safegykatsu'] == false then 
                            for _,v in next, enemymodel:GetChildren() do 
                                if v.Name ~= 'Gyakusatsu' and v.Name ~= 'Mob' then 
                                    repeat 
                                        task.wait(0.01)
                                        pcall(function()
                                            local CFrameMultiplication = CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv()['roghoulsettings']['playery'],getgenv()['roghoulsettings']['playerz']) * CFrame.Angles(math.rad(90),0,0)
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrameMultiplication
                                            usemoves()
                                            if getgenv()['roghoulsettings']['gykustatsumobskill'] then 
                                                local enemymodel = nil
                                                for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
                                                    if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                                                        enemymodel = c
                                                    end
                                                end
                                                if enemymodel ~= nil then 
                                                    for i,child in next, enemymodel:GetChildren() do 
                                                        if child.PrimaryPart then 
                                                            if isnetworkowner(child.PrimaryPart) or isnetworkowner(child.Head) then 
                                                                child:FindFirstChildWhichIsA('Humanoid').Health = 0
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end)
    
                                    until not workspace:FindFirstChild('Gyakusatsu'):FindFirstChild(v.Name) or getgenv().roghoulsettings['farming'] == false or getgenv().roghoulsettings['gykatfarm'] == false or getgenv().loopsUnload == true
                                end
                            end -- v:FindFirstChildWhichIsA('Humanoid').Health == 0
                        elseif getgenv()['roghoulsettings']['safegykatsu'] == true then 
                            azfakenotify('Using Safe Gykatsu Mode','untilClick')
                            local xfarmablemobs = {}
                            for _,v in next, enemymodel:GetChildren() do  
                                if v.Name ~= 'Mob' and v.Name ~= 'Gyakusatsu' then 
                                    table.insert(xfarmablemobs,v)
                                end
                            end
                            local gyk = enemymodel:FindFirstChild('Gyakusatsu')
                            for _,v in next, xfarmablemobs do 
                                -- print(v.Name)
                                local delaying = false;
                                local oldValue = nil;
                                local oldValueText = ';'
                                local canResetValueText = true;
                                local MovementX = 0;
                                if getgenv().roghoulsettings['shifttotheleft'] == true then 
                                    MovementX = getgenv().roghoulsettings['notontopdistance'] 
                                end
                                local WaitingToChangeMovementX = false;
                                local function findwithx(x)
                                    pcall(function()
                                        local xfound = nil;
                                        for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                            if v.Name:find(x) then 
                                                xfound = v
                                                break
                                            end
                                        end
                                        return xfound
                                    end)
                                end
                                repeat 
                                    task.wait(0.01)
                                    pcall(function()
                                        local CFrameMultiplication = CFrame.new(MovementX,getgenv().roghoulsettings['safedistance'],getgenv().roghoulsettings['safespotdistance']) ---3.4) 
                                        if getgenv().roghoulsettings['safemovement'] == true and WaitingToChangeMovementX == false then 
                                            WaitingToChangeMovementX = true;
                                            task.delay(2,function()
                                                MovementX = math.random(1,20)
                                                WaitingToChangeMovementX = false;
                                            end)
                                        end
                                        if getgenv().roghoulsettings['ontopofcells'] == true then 
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrameMultiplication
                                        else
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame =  gyk:FindFirstChild('HumanoidRootPart').CFrame * CFrameMultiplication
                                        end
                                        
                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,v:FindFirstChild('HumanoidRootPart').Position) 
                                        usemoves()
                                        if canResetValueText == true  and delaying == false then 
                                            pcall(function()
                                                oldValue = findwithx(game.Players.LocalPlayer.Name);
                                                if oldValue ~= '' then 
                                                    oldValueText = oldValue:FindFirstChild('GyaPerc').Text
                                                    oldValueText = string.split(oldValueText,'%')[1]
                                                    canResetValueText = false;
                                                    print('Set percent to '..oldValueText)
                                                end
                                            end)
                                        end
                                        if delaying == false then 
                                            delaying = true;
                                            task.delay(2,function()
                                                local ValueGyasec = nil
                                                task.spawn(function()
                                                    repeat task.wait(0.001) ValueGyasec = findwithx(game.Players.LocalPlayer.Name); until Value ~= nil
                                                    ValueGyasec = Value:FindFirstChild('GyaPerc').Text
                                                    ValueGyasec = string.split(ValueGyasec,'%')[1]
                                                    print('got value = '..ValueGyasec)
                                                    if ValueGyasec == oldValueText then 
                                                        print('Equal to')
                                                        if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                                            game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                                        end
                                                        -- pcall(function()
                                                            
                                                        -- end)
                                                    end
                                                end)
                                                -- If Value ~= nil then delaying = true; (it keeps running the delay until value is true)
                                                -- Value = Value:FindFirstChild('GyaPerc').Text
                                                -- Value = string.split(Value,'%')[1]

                                                -- if Value == oldValueText then 
                                                --     if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                                --         game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                                --     end
                                                --     -- pcall(function()
                                                        
                                                --     -- end)
                                                -- end
                                                --GyaPerc
                                            end)
                                            canResetValueText = true;
                                            delaying = false;
                                        end
                                    end) -- workspace:FindFirstChild('Gyakusatsu'):FindFirstChild(v.Name)  v:FindFirstChildWhichIsA('Humanoid').Health <= 0
                                until not workspace:FindFirstChild('Gyakusatsu'):FindFirstChild(v.Name) or not v  or getgenv().loopsUnload == true or getgenv().roghoulsettings['farming'] == false or getgenv().roghoulsettings['gykatfarm'] == false
                            end
                            -- print(v.Name)
                        end
                        -- for _,v in next, enemymodel:GetChildren() do 
                        --     if v.Name ~= 'Gyakusatsu' and v.Name ~= 'Mob' then 
                        --         repeat 
                        --             task.wait(0.01)
                        --             pcall(function()
                        --                 local CFrameMultiplication = CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv()['roghoulsettings']['playery'],getgenv()['roghoulsettings']['playerz']) * CFrame.Angles(math.rad(90),0,0)
                        --                 game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrameMultiplication
                        --                 usemoves()
                        --                 if getgenv()['roghoulsettings']['gykustatsumobskill'] then 
                        --                     local enemymodel = nil
                        --                     for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
                        --                         if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                        --                             enemymodel = c
                        --                         end
                        --                     end
                        --                     if enemymodel ~= nil then 
                        --                         for i,child in next, enemymodel:GetChildren() do 
                        --                             if child.PrimaryPart then 
                        --                                 if isnetworkowner(child.HumanoidRootPart) then 
                        --                                     child:FindFirstChildWhichIsA('Humanoid').Health = 0
                        --                                 end
                        --                             end
                        --                         end
                        --                     end
                        --                 end
                        --             end)

                        --         until not workspace:FindFirstChild('Gyakusatsu'):FindFirstChild(v.Name) or getgenv().roghoulsettings['farming'] == false or getgenv().loopsUnload == true
                        --     end
                        -- end -- v:FindFirstChildWhichIsA('Humanoid').Health == 0
                        if getgenv().loopsUnload == false and getgenv().roghoulsettings['farming'] == true and getgenv().roghoulsettings['gykatfarm'] == true then 
                            for _,v in next, enemymodel:GetChildren() do 
                                local Sides = {
                                    ['Left'] = CFrame.new(-997.681641, 64.747406, 210.257309);
                                    ['Middle'] = CFrame.new(-998.055847, 64.7473831, 283.880157);
                                    ['Right'] = CFrame.new(-995.961548, 64.7473831, 335.631134);
                                }-- sides
                                local OURCONTRIBUTION = 0;
                                if v.Name == 'Gyakusatsu' then 
                                    local delaying = false;
                                    local oldValue = nil;
                                    local oldValueText = ';'
                                    local canResetValueText = true;
                                    local OtherPlayers = {}
                                    local function findwithx(x)
                                        local xfound = nil;
                                        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList') and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List') then 
                                            for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                                if v and v.Name == x then 
                                                    xfound = v
                                                    break
                                                end
                                            end
                                        end
                                        return xfound
                                    end
                                    local function findplayervalue(x) -- 
                                        local playervalue = nil
                                        for _,v in next, OtherPlayers do 
                                            if v['name'] == x then -- v.Name:find() so if the first digit changes it will still find
                                                playervalue = v
                                            end
                                        end
                                        return playervalue
                                    end
                                    local AllPlayerValues = '\n    '
                                    local ConvertedTime = ''
                                    local TimePrefixes = {
                                        ['1'] = 'One';
                                        ['2'] = 'Two';
                                        ['3'] = 'Three';
                                        ['4'] = 'Four';
                                        ['5'] = 'Five';
                                        ['6'] = 'Six';
                                        ['7'] = 'Seven';
                                        ['8'] = 'Eight';
                                        ['9'] = 'Nine';
                                        ['10'] = 'Ten';
                                        ['20'] = 'Twenty';
                                        ['30'] = 'Thirty';
                                        ['40'] = 'Fourty';
                                        ['50'] = 'Fifty';
                                        ['60'] = 'Sixty';
                                    }
                                    local function convertTime()
                                        local timeconverted = ''
                                        local StrElapsed = string.len(tostring(TimeElasped))
                                        local function getc(x)
                                            local __x__ee = nil
                                            for _,v in next, TimePrefixes do 
                                                if _ == x then 
                                                    __x__ee = v
                                                end
                                            end
                                            return __x__ee
                                        end
                                        local function reversec(x)
                                            local __x__ee = nil
                                            for _,v in next, TimePrefixes do 
                                                if v == x then 
                                                    __x__ee = _
                                                end
                                            end
                                            return __x__ee
                                        end
                                        for i=1, string.len(tostring(TimeElasped)) do 
                                            -- if getc(StrElapsed:sub(i,i)) 
                                        end
                                        local division = TimeElasped -- tonumber(TimeElasped)/60  --60 -- 1.25 -- 600
                                        local divisbleminute = 0
                                        if tonumber(TimeElasped) > 60 then 
                                            division = tonumber(TimeElasped)/tonumber(   '1' ..  string.rep('0',string.len(tostring(TimeElasped))-1)              ) --    120 = 3 - 1 = 20        10
                                            local fulllength = tostring(division)
                                            local numreceiving = ''
                                            local lengthafter = 0
                                            for i=1, string.len(tostring(division)) do 
                                                local subbing = fulllength:sub(i,i)
                                                if subbing == '.' then 
                                                    numreceiving = numreceiving..'.'..fulllength:sub(i+1,i+1)
                                                    lengthafter = i+2
                                                    break
                                                else
                                                    numreceiving = numreceiving..subbing
                                                end
                                            end
                                            print('num rec '..numreceiving)
                                            local olddivision = tostring(division)
                                            divisbleminute = tonumber(numreceiving)/(0.60) --* tonumber(   '1' ..  string.rep('0',string.len(tostring(TimeElasped))-1)              )
                                            local fnumbers = {}
                                            for i=1, string.len(tostring(divisbleminute)) do 
                                                table.insert(fnumbers,tostring(divisbleminute):sub(i,i))
                                            end
                                            local foundmorethanthreetimes = {}
                                            for i,v in next, fnumbers do 
                                                local NumberGot = tostring(v)
                                                local FoundThree = false
                                                for x,t in next, fnumbers do 
                                                    local NumberGot2 = tostring(v)
                                                    for e,g in next, fnumbers do 
                                                        local NumberGot3 = tostring(v)
                                                        if NumberGot == NumberGot2 and NumberGot2 == NumberGot3 then 
                                                            FoundThree = true
                                                            break
                                                        end
                                                    end
                                                    if FoundThree == true then break end
                                                end
                                                if FoundThree == true then 
                                                    table.insert(foundmorethanthreetimes,NumberGot)
                                                end
                                            end
                                            if #foundmorethanthreetimes == 0 then 
                                                division = divisbleminute 
                                            else
                                                local howmanytimes_60_into = math.floor(division/0.60)
                                                print('Divides into 60: '..math.floor(howmanytimes_60_into))
                                                local remainder = (TimeElasped - (howmanytimes_60_into*60))
                                                print('Seconds remaining: '..remainder)
                                                division = tonumber( tostring(howmanytimes_60_into) .. '.'..tostring(remainder) )
                                            end
                                            -- if fulllength:sub(lengthafter,lengthafter) ~= nil then 
                                            --     --print(fulllength:sub(lengthafter,lengthafter).. 'l')
                                            --     division = division..'.'..olddivision:sub(lengthafter,string.len(olddivision))
                                            -- end
                                        else
                                            division = division / 100
                                        end
                                        division = division..'0'
                                        print('div minute '..divisbleminute)
                                        print('DIVISION '..division)
                                        local holdlapsed = tonumber(TimeElasped);
                                        local preview = holdlapsed - 60
                                        -- repeat 
                                    
                                        -- until preview
                                        local isdecimal = false
                                        if string.find(tostring(division),'.') then 
                                            isdecimal = true
                                        end
                                        local strdecimal = tostring(division) -- strdivision
                                        local reacheddecimal = false 
                                        local minutesector = 0
                                        for i=1, string.len(strdecimal) do 
                                            local subto = strdecimal:sub(i,i)
                                            if subto == '.' then 
                                                reacheddecimal = true 
                                                if timeconverted ~= '' then 
                                                    timeconverted = timeconverted..'and ' -- put Minute here
                                                end
                                            elseif subto ~= '0' and strdecimal:sub(i-1,i-1) ~= '0' and subto ~= '/' then -- if find minute then get the word before that - use reversec to add the numbers together and get the word for it then add minute after
                                                minutesector = minutesector..subto
                                                local nextconvert = strdecimal:sub(i+1,i+1)
                                                local addon = getc(subto) 
                                                timeconverted = string.gsub(timeconverted,'Seconds','')
                                                if nextconvert == '0' and tonumber(TimeElasped) < 60 then 
                                                    addon = getc(subto..'0').. ' Seconds'
                                                end
                                                timeconverted = timeconverted..addon   --..'minute'
                                                if isdecimal == true then 
                                                    if reacheddecimal == false then 
                                                        local decimalconversion = tonumber(subto) 
                                                        if tonumber(subto) < 1 then 
                                                            decimalconversion = (tonumber(reversec(timeconverted))/6)*1 -- i wanted to do just that letter :/
                                                        else
                                                            --decimalconversion = '{'..decimalconversion..'}'  -- 125  - 1.25 '{'..decimalconversion..'}'    '{'..decimalconversion..'}
                                                        end
                                                        local ending = ' Minute '
                                                        local __found = ''
                                                        for _=1, string.len(strdecimal) do -- string.split(timeconverted,' ')
                                                            if strdecimal:sub(_,_) == '.' then -- until we reach the decimal
                                                                print('decimal reached')
                                                                break 
                                                            else
                                                                __found = __found..strdecimal:sub(_,_)
                                                            end
                                                        end
                                                        print('found = '..__found)
                                                        --print(minutesector)
                                                        if __found ~= '1' then 
                                                            ending = ' Minutes '
                                                        end
                                                        timeconverted = tostring(  decimalconversion      )..ending
                                                    else
                                                        timeconverted = timeconverted -- or we can wrap it in {then plus it}
                                                    end
                                                else
                                                    if subto ~= '1' then
                                                        timeconverted = timeconverted..' Minutes '
                                                    else
                                                        timeconverted = timeconverted..' Minute '
                                                    end
                                                end
                                            end
                                        end
                                        if timeconverted:find('and') then 
                                            timeconverted = timeconverted..' Seconds'
                                        end
                                        
                                        local amountofotherwords = 0
                                        local bracketplacement = ''
                                        for i,v in next, TimePrefixes do 
                                            if timeconverted:find(v) then 
                                                
                                                if amountofotherwords == 0 then 
                                                    local f_found = 0
                                                    for subbed = 1, string.len(timeconverted) do 
                                                        if timeconverted:sub(subbed,subbed) == v:sub(1,1) then 
                                                            f_found = subbed
                                                            break
                                                        end 
                                                    end
                                                    local h_prev = timeconverted
                                                    timeconverted = timeconverted:sub(1,f_found-1);
                                                    timeconverted = timeconverted..'{'..h_prev:sub(f_found,string.len(h_prev))
                                                    bracketplacement = '{'..h_prev:sub(f_found,string.len(h_prev))
                                                    timeconverted = timeconverted..'}'
                                                    bracketplacement = bracketplacement..'}'
                                                end
                                                amountofotherwords += 1
                                                -- timeconverted = string.gsub(timeconverted)
                                                print('found '..v)
                                            end
                                        end
                                        local PhrasesFound = {}
                                        if amountofotherwords >= 1 then 
                                            for i,v in next, TimePrefixes do 
                                                if timeconverted:find(v) then 
                                                    -- get when it starts
                                                    -- local f_found = 0
                                                    for subbed = 1, string.len(timeconverted) do 
                                                        if timeconverted:sub(subbed,subbed) == v:sub(1,1) then 
                                                            f_found = subbed
                                                            break
                                                        end 
                                                    end
                                                    --timeconverted = string.gsub(timeconverted,v)
                                                    if amountofotherwords == 0 then 
                                                        local h_prev = timeconverted
                                                        timeconverted = timeconverted:sub(1,f_found-1);
                                                        timeconverted = timeconverted..'{'..h_prev:sub(f_found,string.len(h_prev))
                                                        timeconverted = timeconverted..'}'
                                                    end
                                                    table.insert(PhrasesFound,v)
                                                    -- if first then start it with {
                                                    -- end it in } 
                                                    -- add all strings together and use table.find() then gsub
                                                end
                                            end
                                    
                                    
                                            local Sum = 0
                                            local WordEquivalent = ''
                                            for i,v in next, PhrasesFound do 
                                                --print(v)
                                                --timeconverted = string.gsub(timeconverted,v,reversec(v))
                                                if i == 1 then 
                                                    Sum = Sum +  tonumber( reversec(v):sub(1,1) .. 0)
                                                    WordEquivalent = tonumber( reversec(v):sub(1,1) .. 0)
                                                    WordEquivalent = getc(tostring(WordEquivalent))
                                                    print('NEew Equiv: '..WordEquivalent)
                                                else
                                                    Sum = Sum +  tonumber( reversec(v):sub(1,1))
                                                end
                                            end
                                            print('Current Sum: '..Sum)
                                            -- for _,v in next, PhrasesFound do 
                                            --     if _ == 1 then 
                                            --         print(Sum)
                                            --         print(tonumber(reversec(v)))
                                            --         Sum = Sum +  tonumber( reversec(v):sub(1,1) .. 0) -- tonumber(reversec(v)) +
                                            --         print(Sum)
                                            --     else
                                            --         print(Sum)
                                            --         Sum = Sum + tonumber(reversec(v))
                                            --     end
                                            -- end
                                    
                                            for _,v in next, TimePrefixes do 
                                                timeconverted = string.gsub(timeconverted,_,v)
                                            end
                                    
                                            -- local Sum = 0
                                            -- for _,v in next, PhrasesFound do 
                                            --     if _ == 1 then 
                                            --         print(Sum)
                                            --         print(tonumber(reversec(v)))
                                            --         Sum = Sum +  tonumber( reversec(v):sub(1,1) .. 0) -- tonumber(reversec(v)) +
                                            --         print(Sum)
                                            --     else
                                            --         print(Sum)
                                            --         Sum = Sum + tonumber(reversec(v))
                                            --     end
                                            -- end
                                            -- if Sum == 1 then 
                                            --     timeconverted = string.gsub(timeconverted,bracketplacement,Sum..' Second')
                                            -- else
                                            --     timeconverted = string.gsub(timeconverted,bracketplacement,Sum..' Seconds')
                                            -- end
                                            local StartingNumber = ''
                                            local StartedConversion = false
                                            local PrevStartingNumber = ''
                                            for i=1, string.len(timeconverted) do 
                                                if timeconverted:sub(i,i) == '{'  then  -- timeconverted:sub(1,1) == '{' and and i == 1
                                                    StartedConversion = true
                                                    --StartingNumber = timeconverted:sub(2,2)
                                                elseif timeconverted:sub(i,i) == '}' and StartedConversion == true then 
                                                    StartedConversion = false 
                                                elseif StartedConversion == true then 
                                                    StartingNumber = StartingNumber..timeconverted:sub(i,i)
                                                end
                                            end
                                            local ConvertedNumber = ''
                                            PrevStartingNumber = StartingNumber
                                            for _,v in next, TimePrefixes do 
                                                if string.find(StartingNumber,v) then 
                                                    StartingNumber = string.gsub(StartingNumber,v,WordEquivalent..' ')
                                                    break
                                                end
                                            end
                                            print(StartingNumber)
                                            ConvertedNumber = StartingNumber
                                            print(timeconverted)
                                            timeconverted = string.gsub(timeconverted,'{'..PrevStartingNumber..'}',ConvertedNumber)
                                            --local endnumber = tonumber(StartingNumber) * 60 + Sum --/ tonumber(   '1' ..  string.rep('0',string.len(tostring(TimeElasped))-1)              )
                                            --print(StartingNumber.. 's num')
                                            --print(Sum..' sum')
                                            --print(endnumber..' end number')
                                        end
                                    
                                        return timeconverted
                                    end
                                    repeat 
                                        task.wait(0.01)
                                        -- if canResetValueText == true  and delaying == false then 
                                        --     pcall(function()
                                        --         if oldValue ~= '' then 
                                        --             oldValueText = oldValue:FindFirstChild('GyaPerc').Text
                                        --             oldValueText = string.split(oldValueText,'%')[1]
                                        --             canResetValueText = false;
                                        --         end
                                        --     end)
                                        --     print('Set percent to '..oldValueText)
                                        -- end
                                        -- if delaying == false then 
                                        --     delaying = true;
                                        --     task.delay(2,function()
                                        --         local Value = nil
                                        --         task.spawn(function()
                                        --             repeat task.wait() Value = findwithx(game.Players.LocalPlayer.Name); until Value ~= nil
                                        --             Value = Value:FindFirstChild('GyaPerc').Text
                                        --             Value = string.split(Value,'%')[1]
                                        --             print('got value = '..Value)
                                        --             if Value == oldValueText then 
                                        --                 if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                        --                     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                        --                 end
                                        --                 -- pcall(function()
                                                            
                                        --                 -- end)
                                        --             end
                                        --         end)
                                        --         -- If Value ~= nil then delaying = true; (it keeps running the delay until value is true)
                                        --         -- Value = Value:FindFirstChild('GyaPerc').Text
                                        --         -- Value = string.split(Value,'%')[1]

                                        --         -- if Value == oldValueText then 
                                        --         --     if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                        --         --         game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                        --         --     end
                                        --         --     -- pcall(function()
                                                        
                                        --         --     -- end)
                                        --         -- end
                                        --         --GyaPerc
                                        --     end)
                                        --     canResetValueText = true;
                                        --     delaying = false;
                                        -- end
                                        if delaying == false then 
                                            delaying = true;
                                            task.delay(2,function()
                                                local GyaSacsEarned = nil
                                                task.spawn(function()
                                                    repeat task.wait() GyaSacsEarned = findwithx(game.Players.LocalPlayer.Name); until GyaSacsEarned ~= nil
                                                    GyaSacsEarned = GyaSacsEarned:FindFirstChild('GyaPerc').Text
                                                    GyaSacsEarned = string.split(Value,'%')[1]
                                                    if GyaSacsEarned == oldValueText then 
                                                        if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                                                            game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health = 0
                                                        end
                                                    else 
                                                        oldValueText = GyaSacsEarned
                                                    end
                                                end)
                                            end)
                                            canResetValueText = true;
                                            delaying = false;
                                        end
                                        pcall(function()
                                            if getgenv().roghoulsettings['antireport'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 ~= nil then -- go under then set part0 to nil but put a layer under it so it doesn't fall off
                                                repeat task.wait(0.0001) until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil
                                                game.Players.LocalPlayer.Character.UpperTorso.CFrame = CFrame.new(1,1,1)
                                                task.wait(1)
                                            end 
                                            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root') and game.Players.LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('Root').Part1 == nil then 
                                                game.Players.LocalPlayer.Character.UpperTorso.CFrame = CFrame.new(1,1,1)
                                            end
                                            local CFrameMultiplication = CFrame.new(getgenv()['roghoulsettings']['playerx'],13.2,-3.4) * CFrame.Angles(math.rad(90),0,0)
                                            if getgenv()['roghoulsettings']['highgykatsu'] == true then 
                                                CFrameMultiplication = CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv().roghoulsettings['safedistance'],-3.4) * CFrame.Angles(math.rad(-90),0,0)
                                            end
                                            -- HumanoiD
                                            if getgenv()['roghoulsettings']['classicfarm'] == true then 
                                                CFrameMultiplication = Sides['Middle'] 
                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrameMultiplication
                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position,v:FindFirstChild('HumanoidRootPart').Position)
                                            else
                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrameMultiplication
                                            end
                                            usemoves()
                                            if getgenv()['roghoulsettings']['gykustatsumobskill'] then 
                                                local enemymodel = nil
                                                for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
                                                    if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                                                        enemymodel = c
                                                    end
                                                end
                                                if enemymodel ~= nil then 
                                                    for i,child in next, enemymodel:GetChildren() do 
                                                        if child.PrimaryPart then 
                                                            if isnetworkowner(child.PrimaryPart) or isnetworkowner(child.Head) then 
                                                                child:FindFirstChildWhichIsA('Humanoid').Health = 0
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end)
                                        task.spawn(function()
                                            repeat 
                                                task.wait(.2)
                                                pcall(function()
                                                    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List') then 
                                                        -- PlayersParticipated = 0;
                                                        for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('PlayerList'):FindFirstChild('PlayerListFrame'):FindFirstChild('List'):GetChildren() do 
                                                            if string.find(v.Name,game.Players.LocalPlayer.Name) and v:FindFirstChild('GyaPerc') and v:FindFirstChild('GyaPerc').Visible == true then 
                                                                OURCONTRIBUTION = v:FindFirstChild('GyaPerc').Text;
                                                                --break -- remove break so we can check how many players participated
                                                                -- since we are the first one on the list the first check for the name will be us and the check for playersparticipated might not run and if it does it will be added by one but since the loop breaks as it finds us first, playersparticipated will be 1 cuz it only runs one time because we are the first name in the list of players and it stops finding our contribution after it finds out name and the loop for finding contribution is the same loop to find how many players participated
                                                            end
                                                            if v:FindFirstChild('GyaPerc') and v:FindFirstChild('GyaPerc').Visible == true then 
                                                                --if not table.find(OtherPlayers,v.Name:sub(2,string.len(v.Name))) then 
                                                                if findplayervalue(v.Name:sub(2,string.len(v.Name))) == nil then 

                                                                    table.insert(OtherPlayers,
                                                                        {
                                                                            ['name'] = v.Name:sub(2,string.len(v.Name)),
                                                                            ['contribution'] = v:FindFirstChild('GyaPerc').Text
                                                                        }
                                                                    )
                                                                    PlayersParticipated += 1
                                                                    --print('created')
                                                                else
                                                                    findplayervalue(v.Name:sub(2,string.len(v.Name)))['contribution'] = v:FindFirstChild('GyaPerc').Text
                                                                    --print('set contrib')
                                                                end
                                                            end
                                                        end
                                                    end
                                                end)
                                                -- local gotplayer = {}
                                            until not workspace:FindFirstChild('Gyakusatsu')
                                            -- print(AllPlayerValues)
                                            --[[
                                                    Dumbass with 9 contribution
                                            ]]
                                        end)
                                    until not workspace:FindFirstChild('Gyakusatsu') or getgenv().roghoulsettings['farming'] == false or getgenv().loopsUnload == true
                                    if not workspace:FindFirstChild('Gyakusatsu') then 
                                        StopElasped = true;
                                        if getgenv().roghoulsettings['postgykatsu'] == true then 
                                            for i,gyakusatsuuser in next, OtherPlayers do 
                                                print(gyakusatsuuser)
                                                --if not table.find(gotplayer,gyakusatsuuser['name']) then 
                                                --table.insert(gotplayer,gyakusatsuuser['name']) was this here before or what
                                                -- that was probably the reason why i couldnt put it on the discord message and the reason for the error
                                                AllPlayerValues = AllPlayerValues..'Player '..gyakusatsuuser['name']..' with '..gyakusatsuuser['contribution']..' contribution\n    '
                                                --end
                                            end
                                            print(AllPlayerValues)
                                            local GyakusatsuData = {
                                                ['content'] = '';
                                                ['embeds'] = {{
                                                    ['title'] = 'AZFAKE WEBHOOK';
                                                    ['description'] = 'powered by azfake';
                                                    ['type'] = 'rich';
                                                    ['color'] = tonumber(0xffffff);
                                                    ['fields'] = {
                                                        {
                                                            ['name'] = 'Date';
                                                            ['value'] = os.date();
                                                            ['inline'] = true;
                                                        };
                                                        {
                                                            ['name'] = 'Contribution';
                                                            ['value'] = OURCONTRIBUTION;
                                                            ['inline'] = true;
                                                        };
                                                        {
                                                            ['name'] = 'Players Participated In Gyakusatsu';
                                                            ['value'] = tostring(PlayersParticipated);
                                                            ['inline'] = true;
                                                        };
                                                        {
                                                            ['name'] = 'List Of Players Contribution';
                                                            ['value'] = AllPlayerValues;
                                                            ['inline'] = true;
                                                        };
                                                        {
                                                            ['name'] = 'Time Elasped';
                                                            ['value'] = tostring(TimeElasped)..' OR '..convertTime();
                                                            ['inline'] = true;
                                                        };
                                                        {
                                                            ['name'] = 'Current Gyakusatsu Sacs';
                                                            ['value'] = game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value;
                                                            ['inline'] = true;
                                                        };
                                                    }
                                                }}
                                            }
                                            postwebhook('gykatsu',GyakusatsuData)
                                                -- {
                                                --     ['title'] = 'AZFAKE WEBHOOK',
                                                --     embeds = {
                                                --         title = 'AZFAKE WEBHOOK'; --['AZFAKE WEBHOOK']
                                                --         description = 
                                                --         'Gyakusatsu with '..OURCONTRIBUTION..
                                                --         '\nContribution at '..os.date()..
                                                --         '\nPlayers Participated: '..tostring(PlayersParticipated)..
                                                --         '\nList of Players Participating: '..AllPlayerValues..
                                                --         '\nTime Elasped: '..TimeElasped.. -- total contribution taken away from other players
                                                --         '\nGyakusatsu Sacs: '..game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value..
                                                --         '\npowered by azfake'
                                                --     } 
                                                -- }
                                        end 
                                    end
                                end
                            end
                        end
                        
                    end
                    getgenv()['roghoulsettings']['action'] = 'canquest'
                    getgenv()['roghoulsettings']['hasntstarted'] = true;
                    -- local gykatcurrently = nil
                    -- local PlacesWithBlobs = {
                    --     'BL';
                    --     'BR';
                    --     'FL';
                    --     'FR';
                    -- }
                    -- local wasfound = false
                    -- local CFrameMultiplication = CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv()['roghoulsettings']['playery'],getgenv()['roghoulsettings']['playerz']) * CFrame.Angles(math.rad(90),0,0)
                    -- local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
                    -- TweenInfo.new(4,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),
                    -- {CFrame = game:GetService("Workspace").Gyakusatsu:FindFirstChild('BL').Spawn.CFrame* CFrameMultiplication})
                    -- tween:Play()
                    -- task.wait(4)
                    -- for _,v in next, game:GetService("Workspace").Gyakusatsu:GetChildren() do 
                    --     if table.find(PlacesWithBlobs,v.Name) then 
                    --         wasfound = true 
                    --         local stopteleporting = false
                    --         task.spawn(function()
                    --             repeat 
                    --                 task.wait(0.01)
                    --                 if game:GetService("Workspace").Gyakusatsu:FindFirstChild(v.Name) and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    --                     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('Spawn').CFrame * CFrame.new(getgenv()['roghoulsettings']['playerx'],getgenv()['roghoulsettings']['playery'],getgenv()['roghoulsettings']['playerz']) * CFrame.Angles(math.rad(90),0,0)
                    --                 elseif not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game:GetService("Workspace").Gyakusatsu:FindFirstChild(v.Name) then
                                        
                    --                 else
                    --                     stopteleporting = true
                    --                 end
                    --             until stopteleporting == true
                    --         end)
                    --         repeat task.wait() until not game:GetService("Workspace").Gyakusatsu:FindFirstChild(v.Name) or getgenv().loopsUnload ==true or getgenv().roghoulsettings['farming'] == false
                    --         stopteleporting = true
                    --     end
                    -- end
                    -- if wasfound == false then 
                    --     local spawn = game:GetService("Workspace"):FindFirstChild('Gyakusatsu').Body.Spawn.CFrame
                    --     local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
                    --     TweenInfo.new(4,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),
                    --     {CFrame = spawn* CFrameMultiplication})
                    --     tween:Play()
                    --     repeat 
                    --         task.wait(0.01)
                    --         game:GetService("ReplicatedStorage").Remotes.CamCF:FireServer(ohCFrame1)
                    --     until not game:GetService("Workspace"):FindFirstChild('Gyakusatsu')
                    -- end
                    
                end
            end)

            if getgenv().roghoulsettings['autotrainer'] == true then 
                getgenv().roghoulsettings['autotrainer'] = nil 
                local backconnection = game.Players.LocalPlayer.Backpack.DescendantAdded:Connect(function(child)
                    if child.Name == 'TSCodeVal'  then 
                        getgenv()['roghoulsettings']['tscode'] = child.Value
                    end
                end)  
                game:GetService("ReplicatedStorage").Remotes.Trainers.RequestTraining:InvokeServer(
                game:GetService("Players").LocalPlayer:WaitForChild('PlayerFolder'):WaitForChild('Trainers'):WaitForChild('GhoulTrainer').Value) 
                game:GetService("ReplicatedStorage").Remotes.Trainers.RequestTraining:InvokeServer(
                game:GetService("Players").LocalPlayer:WaitForChild('PlayerFolder'):WaitForChild('Trainers'):WaitForChild('CCGTrainer').Value) 
                -- task.wait(1)
                local Session = nil
                task.wait(.3)
                for i,v in pairs(workspace.TrainingSessions:GetChildren()) do
                    if v:WaitForChild('Player').Value == game.Players.LocalPlayer then
                        Session = v
                        print('training player')
                        break
                    end
                end
                if Session ~= nil then 
                    task.spawn(function()
                        Session.Comm:FireServer("Finished", getgenv()['roghoulsettings']['tscode'], false)
                    end)
                end
                print('Backconnection disconnect')
                backconnection:Disconnect()
                task.spawn(function()
                    repeat task.wait(30); 
                        pcall(function()
                            local backconnection = game.Players.LocalPlayer.Backpack.DescendantAdded:Connect(function(child) -- waitforchild backpack
                                if child.Name == 'TSCodeVal'  then 
                                    getgenv()['roghoulsettings']['tscode'] = child.Value
                                end
                            end)                    
                            game:GetService("ReplicatedStorage").Remotes.Trainers.RequestTraining:InvokeServer(
                            game:GetService("Players").LocalPlayer:WaitForChild('PlayerFolder'):WaitForChild('Trainers'):WaitForChild('GhoulTrainer').Value) 
                            game:GetService("ReplicatedStorage").Remotes.Trainers.RequestTraining:InvokeServer(
                            game:GetService("Players").LocalPlayer:WaitForChild('PlayerFolder'):WaitForChild('Trainers'):WaitForChild('CCGTrainer').Value) 
                            -- task.wait(1)
                            -- for i,v in pairs(workspace.TrainingSessions:GetChildren()) do
                            --     if v:FindFirstChild('Player').Value == game.Players.LocalPlayer then
                            --         print('training player')
                            --         fire(waitforobj(v, "Comm"), "Finished", getgenv()['roghoulsettings']['tscode'], false)
                            --         break
                            --     end
                            -- end
                            local Session = nil
                            task.wait(.3)
                            for i,v in pairs(workspace.TrainingSessions:GetChildren()) do
                                if v:WaitForChild('Player').Value == game.Players.LocalPlayer then
                                    Session = v
                                    print('training player')
                                    break
                                end
                            end
                            if Session ~= nil then 
                                task.spawn(function()
                                    Session.Comm:FireServer("Finished", getgenv()['roghoulsettings']['tscode'], false)
                                end)
                            end
                            backconnection:Disconnect()
                        end)

                    until getgenv().roghoulsettings['autotrainer'] == false
                end)
            end
            if getgenv()['roghoulsettings']['serverhopgykatsu'] == true and not workspace:FindFirstChild('Gyakusatsu') then 
                print('Serverhopping')
                getgenv().serverhop()
            end
            if getgenv()['roghoulsettings']['gykustatsumobskill'] then 
                local enemymodel = nil
                for u,c in next, game:GetService("Workspace").NPCSpawns:GetChildren() do 
                    if c.Name == 'GyakusatsuSpawn' and c:FindFirstChildWhichIsA('Model') then 
                        enemymodel = c
                    end
                end
                if enemymodel ~= nil then 
                    for i,child in next, enemymodel:GetChildren() do 
                        if child.PrimaryPart then 
                            if isnetworkowner(child.PrimaryPart) or isnetworkowner(child.Head) then 
                                child:FindFirstChildWhichIsA('Humanoid').Health = 0
                                print('isowner')
                            end
                        end
                    end
                end
            end
        end
    end)

elseif game.PlaceId == 6735572261 then -- pilgrammed
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local tab = window:CreateTab(gameName)
    local Configuration = window:CreateTab('Configurations')
    local esptab = window:CreateTab('Esp')
    local sector = tab:CreateSector('Cheats','left')
    local othersector = tab:CreateSector('Cheats','left')
    local espsector = esptab:CreateSector('Cheats','left')
    local otheresp = esptab:CreateSector('Cheats','right')
    local farmingsector = tab:CreateSector('Cheats','right')
    Configuration:CreateConfigSystem()





    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        -- for i=0, #game.CoreGui.ChatLogger.Frame.Logs:GetChildren() do 
        --     -- if i > 15 then 
        --     --     for i,v in pairs(game.CoreGui.ChatLogger.Frame.Logs:GetChildren()) do if v:IsA('TextLabel') then v:Destroy() end end
        --     -- end
        --     add -= 0.01
        --     if i > 20 then 
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 6
        --     else
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 23.5
        --     end
    
        -- end
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''--plr.Name --''
        local ourname = game.Players.LocalPlayer.Name--''
        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
        --     if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
        --         name = v.DisplayName.Value
        --     end
        --     if v.RealName.Value == game.Players.LocalPlayer.Name then 
        --         ourname = v.DisplayName.Value
        --     end
        -- end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        
        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            Notify('','name was said',2)
            -- if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
            --     task.spawn(function()
            --         local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
            --         Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
            --     end)
            -- end
        end
        if splitName[1] == 'Picked' then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        end
        if splitName[1] == 'AZFAKE-SERVER' then 
            x.TextColor3 = Color3.fromRGB(100, 155, 255)
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end










    if getgenv().pilgrammedsettings ~= nil and getgenv().pilgrammedsettings['oresconnections'] ~= nil then 
        for _,v in next, getgenv().pilgrammedsettings['oresconnections'] do 
            v:Disconnect()
        end
    end
    if getgenv().pilgrammedsettings ~= nil and getgenv().pilgrammedsettings['farmingconnections'] ~= nil then 
        for _,v in next, getgenv().pilgrammedsettings['farmingconnections'] do 
            v:Disconnect()
        end
    end
    if getgenv().pilgrammedsettings ~= nil and getgenv().pilgrammedsettings['globalconnections'] ~= nil then 
        for _,v in next, getgenv().pilgrammedsettings['globalconnections'] do 
            v:Disconnect()
        end
    end
    getgenv().FlySpeedSlide = getgenv().FlySpeedSlide or 0
    getgenv().CFspeed = 50
    getgenv().CFloop = nil
    getgenv().istyping = false
    game:GetService('UserInputService').InputBegan:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)
    game:GetService('UserInputService').InputEnded:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)

    getgenv().pilgrammedsettings = {
        nocooldown = false;
        registeredcooldowns = {
            'Cooldown';
            'CD';
        };
        oresesp = false; 
        playeresp = false;
        oresespcolour = Color3.new(255,255,255);
        playerespcolour = Color3.new(255,255,255);
        chestespcolour = Color3.new(255,255,255);
        espframework = '{name}     {distance}     {health}';
        speedtoggle = false;
        speed = 0;
        chestfarm = false;
        oresconnections = {};
        oreslocations = {};
        orestp = nil;
        killaura = false;
        godmode = false;
        tweenchest = false;
        tweenspeed = 0;
        datastop = false;
        noclip = false;
        noclipfunction =nil;
        flying = false;
        flyspeed = 0;
        farmablenpcs = {
            'King Sandpod';
            'Sandpod';
            'Sandpod Larva';
            'Creepy Crab';          
            'Eye Spy';
            'Mummy Eye';
            'Raider';
            'Thief';
            'Mummy';
            'Raider Ranger';
            'Skeleton Warrior';
            'Pro Thief';
            'Green Slime';
            'Blue Slime';
            'Shark';
            'Artilleryman';
            'Cactus Man';
            'Froglo';
            'Wicked Witch';
            'Urchin';
            'Marauder';
            'Copper Ant';
            'Mercenary';
            'Archmage';
            'Pebble';
            'Ogre';
            'Prism Troll';
            'Kai Guy';
            'Magma Turtle';
            'Substantial Sizzling Slime';
            'Sizzling Slime';
            'Giant Thief';
            'Cannoneer';
            'Swashbuckler';
            'Bigfish';
            'Pop Off Pirate';
            'Highway Son';
            'Eye Fly';
            'Tangerini';
            'Empyrean Knight';
            'Bushwalker';
            'Highland Warden';
            'Hunter';
            'Frost Assassin';
            'Ice Golem';
            'Ice King';
            'Pop Off Pirate';
            'Granny';
            'Mondo Squid';
            'Old Fart';
            'Brown Bear';
            'Chalkman';
            'Yalgaroth';
            'Viperhead';
            'Abidominal Snowman';
            'Mondo Prism';
            'The Matris';
            'N';
            --'BOONDA' - npc
        };
        farmingconnections = {};
        farmingnpc = nil;
        selectednpc = nil;
        farmnpc = false;
        tweenmode = false;
        farmtween = 0;
        rotation = 0;
        playerx = 0;
        playery = 0;
        playerz = 0;
        noshadows = false;
        chestesp = false;
        nofalldamage = false;
        godmodefail = false;
        failcframe = CFrame.new(2269.52832, -112.244843, -2150.00293, -0.668285847, 0.000216084649, 0.743904531, 0.000615683093, 0.999999762, 0.000262624701, -0.743904293, 0.000633517804, -0.668285847);
        alreadyfailtp = false;
        storefailcframe = nil;
        infinitejump = false;
        nofog = false;
        nosky = false;
        globalconnections = {};
        npcesp =false;
        mobesp =false;
        npcespcolour = Color3.new(255,255,255);
        mobespcolour = Color3.new(255,255,255);
        alwaysday = false;
        cabinetcframe = CFrame.new(805.30426, 9.00002766, -424.262085, 0.955899119, -1.71145444e-08, -0.293695271, -8.7016403e-09, 1, -8.6594639e-08, 0.293695271, 8.53313651e-08, 0.955899119);
        savecpu = false;
        savecpudistance = 0;
        chestdelay = 0;
        buyingitem = '';
        gamemod = false;
        brightness = 0;
        exposurecompensation = 0;
        moneymanaging = '';
        bossspawns = {
            ['archmage'] = CFrame.new(-969.154602, 127.212181, 1711.52966, 0.848035753, 5.63108458e-08, -0.529938996, -7.15024484e-08, 1, -8.1628011e-09, 0.529938996, 4.48142821e-08, 0.848035753);
            ['grannyspawn'] = CFrame.new(1407.22717, 37.6016922, -3756.67407, 0.700541377, -5.33524513e-08, 0.713611782, 3.77432379e-08, 1, 3.77120344e-08, -0.713611782, 5.15177956e-10, 0.700541377);
            ['old fart'] = CFrame.new(7374.5708, -459.5, 935.879028, 1, 0, 0, 0, 1, 0, 0, 0, 1);
            ['the matris'] = CFrame.new(-3124.96094, -33.0356293, -4391.34473, 0.984812498, -0, -0.173621148, 0, 1, -0, 0.173621148, 0, 0.984812498);
        };
        
        notifywhenmeteor = false;
        selectedboss = '';
        itemequip = '';
        killauram2 = false;
        notoolcd = false;
        notoolcdhold = false;
        buttonUp = false;
        notoolcdholddelay = 0;
        attackauradelay = 0.5;
        notoolcdclick = false;
        platformstanding = false;
        attemptkill = false;
    }

    local ctn; ctn = game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
        if getgenv()['pilgrammedsettings']['notoolcdclick'] == true then 
            for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
                if v:IsA('Tool') then 
                    v:Activate()
                    v:Deactivate()
                end
            end
        end
        getgenv().pilgrammedsettings.buttonUp = true -- check if no tool cd hold is true
    end)
    local gpn; gpn = game.Players.LocalPlayer:GetMouse().Button1Up:Connect(function()
        getgenv().pilgrammedsettings.buttonUp = false
    end)

    task.spawn(function()
        repeat task.wait(.5) until getgenv().loopsUnload == true 
        gpn:Disconnect(); ctn:Disconnect();
    end)
    sector:AddToggle('No Cooldown',false,function(xstate)
        getgenv().pilgrammedsettings['nocooldown'] = xstate
    end)
    sector:AddToggle('No Fall Damage',false,function(xstate)
        getgenv().pilgrammedsettings['nofalldamage'] = xstate
    end)
    -- sector:AddToggle('Infinite Jump',false,function(xstate)
    --     getgenv().pilgrammedsettings['infinitejump'] = xstate
    -- end)
    sector:AddToggle('God Mode',false,function(xstate)
        getgenv().pilgrammedsettings['godmode'] = xstate
    end)
    -- sector:AddToggle('Teleport When Fail Godmode',false,function(xstate)
    --     getgenv().pilgrammedsettings['godmodefail'] = xstate
    -- end)
    sector:AddToggle('Attack Aura',false,function(xstate)
        getgenv().pilgrammedsettings['killaura'] = xstate
    end)
    sector:AddSlider('Attack Aura Delay',0,0.5,5,100,function(xtstae)
        getgenv().pilgrammedsettings['attackauradelay'] = xtstae
    end) -- 0.5,100
    sector:AddToggle('Attack Heavy',false,function(xstate)
        getgenv().pilgrammedsettings['killauram2'] = xstate
    end)
    farmingsector:AddToggle('Chest Farm',false,function(xstate)
        getgenv().pilgrammedsettings['chestfarm'] = xstate
    end)
    local tweentochest = farmingsector:AddToggle('Tween To Chest',false,function(xstate)
        getgenv().pilgrammedsettings['tweenchest'] = xstate
    end)-- make tweenspeed be visible
    local tweenspeedchest = farmingsector:AddSlider("Tween Speed", 0, 0, 10, 1, function(State)
        getgenv().pilgrammedsettings['tweenspeed'] = State
    end)
    local chestdelay = farmingsector:AddSlider("Chest Delay", 0, 0, 10, 100, function(State)
        getgenv().pilgrammedsettings['chestdelay'] = State
    end)
    tweentochest:MakeVisibleIfActive(tweenspeedchest)
    tweentochest:MakeVisibleIfActive(chestdelay)
    farmingsector:AddToggle('Data Stop',false,function(xstate)
        getgenv().pilgrammedsettings['datastop'] = xstate
        if getgenv()['pilgrammedsettings']['datastop'] == true then 

            if game:GetService("ReplicatedStorage").Remotes:FindFirstChild('UseData') then 
                game:GetService("ReplicatedStorage").Remotes:FindFirstChild('UseData'):Destroy()
            end
            if game:GetService("ReplicatedStorage").Remotes:FindFirstChild('LoadData') then 
                game:GetService("ReplicatedStorage").Remotes:FindFirstChild('LoadData'):Destroy()
            end

            task.spawn(function()
                local dsMeta = getrawmetatable(DS)
    
                for _,x in next, dsMeta do 
                    print(_,x)       
                    if type(x)=='function' then
                        pcall(function()
                            y = x('player-'..game.Players.LocalPlayer.UserId)
                            print(y)
                        end)
                    end
                end
                settings().Network.IncomingReplicationLag =  50
                local data = game.Players.LocalPlayer:SaveData()
                task.spawn(function()
                    repeat
                        task.wait(0.0000001)
                        game.Players.LocalPlayer:LoadData(data)
                    until getgenv().loopsUnload == true or getgenv()['pilgrammedsettings']['datastop'] == false
                end)
                task.spawn(function()
                    while task.wait(0.000000000000000000000001) do
                        if getgenv().loopsUnload == true or getgenv()['pilgrammedsettings']['datastop'] == false then print('data break') break end
                        game.Players.LocalPlayer:LoadData(data)
                    end
                end)
            end)
        end
    end)
    local npcselection = farmingsector:AddDropdown("Target Selection", getgenv()['pilgrammedsettings']['farmablenpcs'], "", false, function(dropdownv)
        local foundnpcs = nil
        for _,v in next, workspace.Mobs:GetChildren() do 
            for k,c in next, v:GetChildren() do 
                if c.Name == dropdownv then 
                    foundnpcs = c
                    break
                end
            end
        end
        getgenv()['pilgrammedsettings']['selectednpc'] = foundnpcs.Name
    end)
    farmingsector:AddButton('Teleport To Target',function()
        if getgenv()['pilgrammedsettings']['selectednpc'] ~= nil then 
            local foundnpcs = nil
            for _,v in next, workspace.Mobs:GetChildren() do 
                for k,c in next, v:GetChildren() do 
                    if c.Name == getgenv()['pilgrammedsettings']['selectednpc'] then 
                        foundnpcs = c
                        break
                    end
                end
            end
            if foundnpcs ~= nil then 
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = foundnpcs:FindFirstChild('HumanoidRootPart').CFrame
            end
            
        end
    end)

    farmingsector:AddSeperator()
    -- task.spawn(function()
    --     for _,v in next, game:GetService("Workspace").Mobs:GetChildren() do 
    --         for k,c in next, v:GetChildren() do 
    --             -- npcselection:Add(c.Name)
    --             local connection; connection = v.ChildAdded:Connect(function(child)
    --                 table.insert(getgenv()['pilgrammedsettings']['farmablenpcs'],child)
    --                 -- print('waiting for humanoid')
    --                 --local humanoidfound = child:FindFirstChild('Humanoid') or child:FindFirstChild('Human')
    --                 repeat task.wait(0.01) until child:FindFirstChildWhichIsA('Humanoid')
    --                 -- print('found humanoid')
    --                 child:FindFirstChildWhichIsA('Humanoid').Died:Connect(function()
    --                     for _i,vx in next,getgenv()['pilgrammedsettings']['farmablenpcs'] do 
    --                         if vx == child then 
    --                             table.remove(getgenv()['pilgrammedsettings']['farmablenpcs'],_i)
    --                             npcselection:Remove(child.Name)
    --                             break
    --                         end
    --                     end
    --                 end)
    --             end)
    --             table.insert(getgenv()['pilgrammedsettings']['farmablenpcs'],c)
    --             repeat task.wait(0.01) until c:FindFirstChildWhichIsA('Humanoid')
    --             c:FindFirstChildWhichIsA('Humanoid').Died:Connect(function()
    --                 for _i,vx in next,getgenv()['pilgrammedsettings']['farmablenpcs'] do 
    --                     if vx == c then 
    --                         table.remove(getgenv()['pilgrammedsettings']['farmablenpcs'],_i)
    --                         npcselection:Remove(c.Name)
    --                         break
    --                     end
    --                 end
    --             end)
    --         end
    --     end
    -- end)


    farmingsector:AddSlider("Farming Tween Speed", 0, 0, 10, 1, function(State)
        getgenv().pilgrammedsettings['farmtween'] = State
    end)
    farmingsector:AddToggle('Tween Mode',false,function(xstate)
        getgenv().pilgrammedsettings['tweenmode'] = xstate
    end)
    farmingsector:AddToggle('Farm NPC',false,function(xstate)
        getgenv().pilgrammedsettings['farmnpc'] = xstate
    end)


    farmingsector:AddSlider("Player X", -20, 0, 20, 5, function(State)
        getgenv().pilgrammedsettings['playerx'] = State
    end)
    farmingsector:AddSlider("Player Y", -20, 0, 20, 5, function(State)
        getgenv().pilgrammedsettings['playery'] = State
    end)
    farmingsector:AddSlider("Player Z", -20, 0, 20, 5, function(State)
        getgenv().pilgrammedsettings['playerz'] = State
    end)


    farmingsector:AddSlider("Farming Rotation", 0, 0, 360, 1, function(State)
        getgenv().pilgrammedsettings['rotation'] = State
    end)

    farmingsector:AddSeperator()
    local infinitejumpattachment = sector:AddKeybindAttachment('Infinite Jump'):AddKeybind()
    local infinitejump = sector:AddToggle('Infinite Jump',false,function(xstate)
        getgenv().pilgrammedsettings['infinitejump'] = xstate-- mode to hold or not
    end)

    local speedtgl = sector:AddToggle('Speed',false,function(xstate)
        getgenv().pilgrammedsettings['speedtoggle'] = xstate
    end)


    local ToggleBindFlySpeed = sector:AddToggle("Fly", false, function(e)
        getgenv()['pilgrammedsettings']['flying'] = e
        if getgenv()['pilgrammedsettings']['flying'] == false  then -- and getgenv().istyping == false
            -- getgenv().CFloop:Disconnect()
            --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
            Head.Anchored = false
            -- getgenv().CFloop = nil
        elseif getgenv()['pilgrammedsettings']['flying'] == true and getgenv().istyping == false then

            Players = game.Players
            -- getgenv().flying = true
            task.spawn(function()
                repeat wait()
                until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
                local mouse = game.Players.LocalPlayer:GetMouse()
                repeat wait() until mouse
                local plr = game.Players.LocalPlayer
                local torso = plr.Character:WaitForChild('HumanoidRootPart')
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = getgenv()['pilgrammedsettings']['flyspeed']
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = getgenv()['pilgrammedsettings']['flyspeed'] --Options.FlySpeedSlide.Value
                            maxspeed = getgenv()['pilgrammedsettings']['flyspeed']
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector    ))  * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until getgenv()['pilgrammedsettings']['flying']  == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    plr.Character:WaitForChild('Humanoid').PlatformStand = false
                    print('stop flying')
                end
                mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)

    local ToggleBindNoclip= sector:AddToggle("Noclip", false, function(e)
        getgenv()['pilgrammedsettings']['noclip'] = e 
        if getgenv()['pilgrammedsettings']['noclip']  ==false and getgenv().istyping == false then
            getgenv()['pilgrammedsettings']['noclipfunction']:Disconnect()
        elseif getgenv()['pilgrammedsettings']['noclip']  == true and getgenv().istyping == false then --  
            -- task.wait(0.1)
            -- local function NoclipLoop()
            --     if getgenv()['pilgrammedsettings']['noclip']  == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
            -- end
            getgenv()['pilgrammedsettings']['noclipfunction'] = game:GetService('RunService').Stepped:Connect(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Part") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
            end)
        end
    end)
    sector:AddSlider("Speed", 0, 0, 250, 1, function(State)
        getgenv().pilgrammedsettings['speed'] = State
    end)
    sector:AddSlider("Fly", 0, 0, 250, 1, function(State)
        getgenv().pilgrammedsettings['flyspeed'] = State
    end)
    sector:AddToggle('Platform Standing',false,function(xstate)
        getgenv().pilgrammedsettings['platformstanding'] = xstate
    end)

    local speedbinds = speedtgl:AddKeybind()
    local flybind = ToggleBindFlySpeed:AddKeybind()
    local noclipbind = ToggleBindNoclip:AddKeybind()

    sector:AddSeperator()


    for _,v in next, game:GetService("Workspace").Ores:GetChildren() do 
        table.insert(getgenv()['pilgrammedsettings']['oreslocations'],v.Name)
    end

    sector:AddDropdown("Ores TP", getgenv()['pilgrammedsettings']['oreslocations'], "", false, function(dropdownv)
        getgenv()['pilgrammedsettings']['orestp'] = dropdownv
    end)


    
    sector:AddButton('Teleport To Ore',function()
        if getgenv()['pilgrammedsettings']['orestp'] ~= nil and game:GetService("Workspace").Ores:FindFirstChild(getgenv()['pilgrammedsettings']['orestp']):FindFirstChildWhichIsA('Model') then 
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = game:GetService("Workspace").Ores:FindFirstChild(getgenv()['pilgrammedsettings']['orestp']):FindFirstChildWhichIsA('Model'):FindFirstChild('Part').CFrame
        end
    end)




    othersector:AddButton('Teleport To All Mirrors',function()
        for _,v in next, workspace.Mirrors:GetChildren() do 
            for k,c in next, v:GetChildren() do 
                if c:FindFirstChild('ProximityPrompt') then 
                    task.wait(.1)
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = c.CFrame
                    task.wait(.2)
                    local inputManager = game:GetService('VirtualInputManager')
                    inputManager:SendKeyEvent(true,Enum.KeyCode.G,false,game)
                    inputManager:SendKeyEvent(false,Enum.KeyCode.G,false,game)
                    inputManager:SendKeyEvent(true,Enum.KeyCode.G,false,game)
                    inputManager:SendKeyEvent(false,Enum.KeyCode.G,false,game)
                end
            end
        end
    end)
    othersector:AddButton('Teleport To Cabinet',function()
        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().pilgrammedsettings['cabinetcframe']
    end)
    sector:AddButton('Remove Binds',function() --  s    e    (x) t or
        infinitejumpattachment:Unbind()
        speedbinds:Unbind()
        flybind:Unbind()
        noclipbind:Unbind()
    end)




    othersector:AddToggle('No Shadows',false,function(xstate)
        getgenv().pilgrammedsettings['noshadows'] = xstate
    end)
    othersector:AddToggle('No Fog',false,function(xstate)
        getgenv().pilgrammedsettings['nofog'] = xstate
    end)
    othersector:AddToggle('No Sky',false,function(xstate)
        getgenv().pilgrammedsettings['nosky'] = xstate
    end)
    othersector:AddToggle('Always Day',false,function(xstate)
        getgenv().pilgrammedsettings['alwaysday'] = xstate
    end)
    othersector:AddToggle("Game Modifiers", false, function(State)
        getgenv().pilgrammedsettings['gamemod'] = State
    end)
    othersector:AddSlider("Brightness", 0, 0, 10, 1, function(State)
        getgenv().pilgrammedsettings['brightness'] = State
    end)
    othersector:AddSlider("Exposure Compensation", 0, 0, 1, 100, function(State)
        getgenv().pilgrammedsettings['exposurecompensation'] = State
    end)


    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    othersector:AddTextbox('Purchase Item',nil,function(xstate)
        getgenv().pilgrammedsettings['buyingitem'] =xstate  -- could use this for withdraw and deposit and rename this to selectionbox pilgrammedsettings.selectionbox
    end)
    othersector:AddButton('Purchase',function()
        game:GetService("ReplicatedStorage").Remotes.Buy:InvokeServer(getgenv().pilgrammedsettings['buyingitem'])
    end)
    
    othersector:AddTextbox('Money Withdraw/Deposit',nil,function(xstate)
        getgenv().pilgrammedsettings['moneymanaging'] =xstate  -- could use this for withdraw and deposit and rename this to selectionbox pilgrammedsettings.selectionbox
    end)
    -- othersector:AddButton('Withdraw',function()
    --     game:GetService("ReplicatedStorage").Remotes.Buy:FireServer(getgenv().pilgrammedsettings['buyingitem'])
    -- end)
    othersector:AddButton('Deposit',function()
        local ohBoolean1 = true
        local ohNumber2 = tonumber(getgenv().pilgrammedsettings['moneymanaging'])
        game:GetService("ReplicatedStorage").Remotes.Bank:InvokeServer(ohBoolean1, ohNumber2)
    end)
    -- sector:AddToggle('No Fa',false,function(xstate)
    --     getgenv().pilgrammedsettings['nofalldamage'] = xstate
    -- end)

    farmingsector:AddToggle("Notify when Meteor", false, function(State)
        getgenv().pilgrammedsettings['notifywhenmeteor'] = State
    end)

    local bosses = {}
    for _,v in next,getgenv().pilgrammedsettings['bossspawns'] do 
        table.insert(bosses,_)
        -- sector:AddDropdown("Ores TP", getgenv()['pilgrammedsettings']['oreslocations'], "", false, function(dropdownv)
        --     getgenv()['pilgrammedsettings']['orestp'] = dropdownv
        -- end)
    
    end

    farmingsector:AddDropdown("Boss Spawn", bosses, "", false, function(dropdownv)
        getgenv()['pilgrammedsettings']['selectedboss'] = dropdownv
    end)
    local spawnbossbutton = farmingsector:AddButton('Spawn Boss',function()
        local foundboss = false
        local cframeofboss = nil
        for _,v in next, getgenv().pilgrammedsettings['bossspawns'] do 
            if _ == getgenv()['pilgrammedsettings']['selectedboss'] then 
                foundboss = true;cframeofboss = v
            end
        end
        if foundboss == true then 
            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = cframeofboss
        end
    end)
    spawnbossbutton:ActivateKnowledge()
    spawnbossbutton:AddKnowledge('Teleports you to boss spawn')
    -- sector:AddSeperator()
    sector:AddTextbox('Equip Item','',function(xstate)
        getgenv().pilgrammedsettings['itemequip'] =xstate  -- could use this for withdraw and deposit and rename this to selectionbox pilgrammedsettings.selectionbox
    end)
    sector:AddButton('Equip',function()
        if getgenv().pilgrammedsettings['itemequip'] ~= '' and game.Players.LocalPlayer:FindFirstChild('Backpack') and game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild(getgenv().pilgrammedsettings['itemequip']) then 
            local Item = game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild(getgenv().pilgrammedsettings['itemequip'])
            Item.Parent = game.Players.LocalPlayer.Character
        end
    end)
    sector:AddButton('Equip All Item',function()
        for _,v in next, game.Players.LocalPlayer:FindFirstChild('Backpack'):GetChildren() do
            local Item = v
            if v.Name == getgenv().pilgrammedsettings['itemequip'] and game.Players.LocalPlayer:FindFirstChild('Backpack'):FindFirstChild(getgenv().pilgrammedsettings['itemequip']) then 
                v.Parent = game.Players.LocalPlayer.Character
            end
        end
    end)
    --[[
        for _,v in next, game.Players.LocalPlayer:FindFirstChild('Backpack'):GetChildren() do
            local Item = v
            if v.Name == 'Pro Dagger'  then 
                v.Parent = game.Players.LocalPlayer.Character
            end
        end
    ]]
    sector:AddButton('Equip All',function()
        for _,v in next, game.Players.LocalPlayer:FindFirstChild('Backpack'):GetChildren() do
            local Item = v
            Item.Parent = game.Players.LocalPlayer.Character
        end
    end)

    sector:AddButton('Unequip All',function()
        game.Players.LocalPlayer.Character.Humanoid:UnEquipTools() 
    end)
    sector:AddSeperator('More')
    sector:AddToggle('No Tool CD',false,function(xstate)
        getgenv().pilgrammedsettings['notoolcd'] = xstate
    end)

    sector:AddToggle('No Tool Hold',false,function(xstate)
        getgenv().pilgrammedsettings['notoolcdhold'] = xstate
    end)
    sector:AddToggle('No Tool Click',false,function(xstate)
        getgenv().pilgrammedsettings['notoolcdclick'] = xstate
    end)
    sector:AddSlider('Tool Hold Delay',0,0.5,5,100,function(xtstae)
        getgenv().pilgrammedsettings['notoolcdholddelay'] = xtstae
    end) -- 0.5,100
    sector:AddToggle('Attempt Kill NPC',false,function(xstate)
        getgenv().pilgrammedsettings['attemptkill'] = xstate
    end)
    sector:AddButton('Kill Closest NPC',function()
        local foundnpcs = nil
        local previousPos = 0
        local previousroot = nil
        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            for _,v in next, workspace.Mobs:GetChildren() do 
                for k,c in next, v:GetChildren() do 
                    if c:FindFirstChild('HumanoidRootPart') then 
                        local dist = (c:FindFirstChild('HumanoidRootPart').Position-game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                        if previousroot == nil and dist < 50 then 
                            previousPos = dist;
                            previousroot = c:FindFirstChild('HumanoidRootPart')
                        elseif dist < 50 and previousPos > dist then 
                            previousPos = dist;
                            previousroot = c:FindFirstChild('HumanoidRootPart')
                        end
                    end
                end
            end
            if previousroot ~= nil then 
                if isnetworkowner(previousroot.Parent.PrimaryPart) then 
                    if previousroot.Parent:FindFirstChild('Head') then 
                        previousroot.Parent:FindFirstChild('Head'):Destroy()
                    end
                    if previousroot.Parent:FindFirstChildWhichIsA('Humanoid') then 
                        previousroot.Parent:FindFirstChildWhichIsA('Humanoid').Health = 0
                    end
                    pcall(function()
                        previousroot.Parent:BreakJoints()
                    end)
                -- else
                --     azfakenotify('is not network owner',2)
                end
            end
        end
    end)
    -- "", ""
    
    -- itemequip


    getgenv().OresEsp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local contains = 'Contains, '
        for _,v in next, v:GetChildren() do 
            contains = contains.. v.Name..' - '
        end
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            local distance = math.huge
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                local vect,onscreen = cam:worldToViewportPoint(v.Position)
                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    distance = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    local isactive = sectionesp['__OBJECT_EXISTS']
                    if onscreen and isactive == true then 
                        sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                        sectionesp.Visible = true
                        sectionesp.Text = 'Ores: '..math.floor(distance)..'studs'..' '..contains -- make it show closest
                        sectionesp.Color = getgenv().pilgrammedsettings['oresespcolour']
                    elseif not onscreen and isactive == true  then
                        sectionesp.Visible = false
                    end
                end
                if getgenv().loopsUnload == true then 
                    print('keep running ores esp disconnect') 
                    if isactive == true then 
                        sectionesp:Remove(); 
                    end
                    keeprunning:Disconnect() 
                    return
                end -- ; - :  
                if getgenv().pilgrammedsettings['oresesp'] == false then 
                    print('keep running ores esp disconnect') 
                    if isactive == true then 
                        pcall(function()
                            sectionesp:Remove() -- table insert removedesps,v
                        end)    
                    end
                    keeprunning:Disconnect() 
                    return
                end


                if getgenv().pilgrammedsettings['savecpu'] then 
                    -- if dist check if bigger than savecpudistance
                    -- 
                    if distance > getgenv().pilgrammedsettings['savecpudistance'] and isactive == true then 
                        sectionesp:Remove() -- table insert removedesps,v
                    else
                        if not isactive  then 
                            sectionesp = Drawing.new('Text')
                            sectionesp.Visible = false
                            sectionesp.Center = true 
                            sectionesp.Outline = true 
                            sectionesp.Font = 2 
                            sectionesp.Size = 13
                            sectionesp.Color = Color3.new(5,0,0)
                            sectionesp.Text = '<>'
                        end
                    end
                end
            end)
        end
        coroutine.wrap(updPosition)()
    end 
    getgenv().GetOres = function()

    end
    getgenv().ChestEsp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                local vect,onscreen = cam:worldToViewportPoint(v.Position)
                local distance = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local isactive = sectionesp['__OBJECT_EXISTS']
                if onscreen and isactive then 
                    sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                    sectionesp.Visible = true
                    sectionesp.Text = 'Chest: '..math.floor(distance)..'studs'
                    sectionesp.Color = getgenv().pilgrammedsettings['chestespcolour']
                elseif not onscreen and isactive  then
                    sectionesp.Visible = false
                end -- chesp
                if getgenv().loopsUnload == true then 
                    print('keep running chest esp disconnect') 
                    pcall(function()
                        sectionesp:Remove(); 
                    end)
                    keeprunning:Disconnect() 
                end -- ; - :  
                if getgenv().pilgrammedsettings['chestesp'] == false then 
                    print('keep running chest esp disconnect') 
                    pcall(function()
                        sectionesp:Remove(); 
                    end) 
                    keeprunning:Disconnect() 
                end
            
                if getgenv().pilgrammedsettings['savecpu'] then 
                    -- if dist check if bigger than savecpudistance
                    -- 
                    if distance > getgenv().pilgrammedsettings['savecpudistance'] and isactive == true then 
                        sectionesp:Remove() -- table insert removedesps,v
                    else
                        if not isactive  then 
                            sectionesp = Drawing.new('Text')
                            sectionesp.Visible = false
                            sectionesp.Center = true 
                            sectionesp.Outline = true 
                            sectionesp.Font = 2 
                            sectionesp.Size = 13
                            sectionesp.Color = Color3.new(5,0,0)
                            sectionesp.Text = '<>'
                        end
                    end
                end
            end)
        end -- add to global connections
        coroutine.wrap(updPosition)()
    end 
    getgenv().MobEsp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Humanoid') then 
                    local vect,onscreen = cam:worldToViewportPoint(v.HumanoidRootPart.Position)
                    local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    local isactive = sectionesp['__OBJECT_EXISTS']
                    if onscreen and isactive  then 
                        sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                        sectionesp.Visible = true
                        local subtext = v.Name..'    '..math.floor(distance)..' studs'
                        subtext = subtext..string.rep(' ',math.floor(string.len(subtext)/2))..'['..math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth)..']'
                        sectionesp.Text = subtext
                        sectionesp.Color = getgenv().pilgrammedsettings['mobespcolour']
                    elseif not onscreen and isactive  then
                        sectionesp.Visible = false
                    end
                    if getgenv().loopsUnload == true then 
                        print('keep running mob esp disconnect') 
                        pcall(function()
                            sectionesp:Remove(); 
                        end) 
                        keeprunning:Disconnect() 
                    end -- ; - :  
                    if getgenv().pilgrammedsettings['mobesp'] == false then 
                        print('keep running mob esp disconnect') 
                        pcall(function()
                            sectionesp:Remove(); 
                        end) 
                        keeprunning:Disconnect() 
                    end
                    
                    
                    if getgenv().pilgrammedsettings['savecpu'] then 
                        -- if dist check if bigger than savecpudistance
                        -- 
                        if distance > getgenv().pilgrammedsettings['savecpudistance'] and isactive == true then 
                            pcall(function()
                                sectionesp:Remove() -- table insert removedesps,v
                            end)    
                        else
                            if not isactive  then 

                                sectionesp = Drawing.new('Text')
                                pcall(function()
                                    sectionesp.Visible = false
                                end)
                                pcall(function()
                                    sectionesp.Center = true 
                                end)
                                pcall(function()
                                    sectionesp.Outline = true 
                                end)
                                pcall(function()
                                    sectionesp.Font = 2 
                                end)
                                pcall(function()
                                    sectionesp.Size = 13
                                end)
                                pcall(function()
                                    sectionesp.Color = Color3.new(5,0,0)
                                end)
                                pcall(function()
                                    sectionesp.Text = '<>'
                                end)
                                
                                
                                
                                
                                
                                
                                
                            end
                        end
                    end
                else
                    print('no humanoidrootpart break end'); 
                    pcall(function()
                        sectionesp:Remove();
                    end)
                    pcall(function()
                        keeprunning:Disconnect()
                    end)
                    
                end
            end)
        end
        coroutine.wrap(updPosition)()
    end 


    getgenv().NPCesp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local contains = 'Contains, '
        for _,v in next, v:GetChildren() do 
            contains = contains.. v.Name..' - '
        end
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                if v:FindFirstChild('HumanoidRootPart') then 
                    local vect,onscreen = cam:worldToViewportPoint(v.HumanoidRootPart.Position)
                    local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    local isactive = sectionesp['__OBJECT_EXISTS']
                    if onscreen and isactive then 
                        sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                        sectionesp.Visible = true
                        sectionesp.Text = v.Name..'     '..math.floor(distance)..' studs'
                        sectionesp.Color = getgenv().pilgrammedsettings['npcespcolour']
                    elseif not onscreen and isactive then
                        sectionesp.Visible = false
                    end
                    if getgenv().loopsUnload == true then print('keep running npc esp disconnect') pcall(function()
                        sectionesp:Remove(); 
                    end) keeprunning:Disconnect() end -- ; - :  
                    if getgenv().pilgrammedsettings['npcesp'] == false then 
                        print('keep running npc esp disconnect') 
                        pcall(function()
                            sectionesp:Remove(); 
                        end) 
                        keeprunning:Disconnect() 
                    end
                
                    if getgenv().pilgrammedsettings['savecpu'] then 
                        -- if dist check if bigger than savecpudistance
                        -- 
                        if distance > getgenv().pilgrammedsettings['savecpudistance'] and isactive == true then 
                            pcall(function()
                                sectionesp:Remove() -- table insert removedesps,v
                            end)     
                        else
                            if not isactive  then 
                                sectionesp = Drawing.new('Text')
                                sectionesp.Visible = false
                                sectionesp.Center = true 
                                sectionesp.Outline = true 
                                sectionesp.Font = 2 
                                sectionesp.Size = 13
                                sectionesp.Color = Color3.new(5,0,0)
                                sectionesp.Text = '<>'
                            end
                        end
                    end
                else
                    print('npc esp no root part break'); 
                    pcall(function()
                        sectionesp:Remove();
                    end)
                    pcall(function()
                        keeprunning:Disconnect()
                    end)
                end
            end)
        end
        coroutine.wrap(updPosition)()
    end

    getgenv()['pilgrammedsettings'].GetOres = function()
        local connections = {}
        
        for _,v in next, workspace:FindFirstChild('Ores'):GetChildren() do 

            for k,c in next, v:GetChildren() do 
                if c:FindFirstChild('Part') then 
                    getgenv().OresEsp(c:FindFirstChild('Part'))
                end
            end
    
    
            -- table.insert(getgenv()['pilgrammedsettings']['oresconnections'],connection)
            local connection = v.ChildAdded:Connect(function(child)
                getgenv().OresEsp(child:WaitForChild('Part'))
            end)
            table.insert(connections,connection)
        end
        return connections
    end
    getgenv()['pilgrammedsettings'].GetChests = function()
        for _,v in next, workspace:FindFirstChild('Chests'):GetChildren() do 
            print(v.Name)
            task.spawn(function()
                getgenv().ChestEsp(v:FindFirstChild('Root'))
            end)
        end
        local connection; connection = workspace:FindFirstChild('Chests').ChildAdded:Connect(function(child)
            if child:FindFirstChild('Root') then 
                getgenv().ChestEsp(child:FindFirstChild('Root'))
            end
        end)
        table.insert(getgenv()['pilgrammedsettings']['globalconnections'],connection)
        return connection
    end

    getgenv()['pilgrammedsettings'].GetMobs = function()
        local dirs = game:GetService("Workspace"):FindFirstChild('Mobs'):GetChildren() -- GetChildren('Mobs')
        local connection;
        for _,v in next, game:GetService("Workspace"):FindFirstChild('Mobs'):GetChildren() do 
            for i,mob in next,v:GetChildren() do 
                if mob:FindFirstChild('HumanoidRootPart') then 
                    getgenv().MobEsp(mob)
                end
            end
            connection = v.ChildAdded:Connect(function(child)
                if child:WaitForChild('HumanoidRootPart') then 
                    getgenv().MobEsp(child)
                end
            end)
        end

        table.insert(getgenv()['pilgrammedsettings']['globalconnections'],connection)
        return connection
    end
    getgenv()['pilgrammedsettings'].GetNpcs = function()
        for _,v in next, workspace:FindFirstChild('NPCs'):GetChildren() do    
            getgenv().NPCesp(v)
        end
    end
    local cam = workspace.CurrentCamera
    local worldToViewportPoint = cam.worldToViewportPoint
    local head_offset =  Vector3.new(0,1.5,0)
    local leg_offset = Vector3.new(0,10,0)
    getgenv()['pilgrammedsettings'].CreatePlayerEsp = function(v)
        -- print(v.Name)
        task.wait(0.1)
        -- 
            local esp = Drawing.new('Text')
            esp.Visible = false
            esp.Center = true 
            esp.Outline = true 
            esp.Font = 2 
            esp.Size = 13
            esp.Color = Color3.new(5,0,0)
            esp.Text = 'SEXY'

            local tracer = Drawing.new('Line')
            tracer.Visible = false
            tracer.Color = Color3.new(1,0,0)
            tracer.Thickness = 1 
            tracer.Transparency = 1 
            
            
            local box_o = Drawing.new('Square')
            box_o.Visible = false
            box_o.Color = Color3.new(0,0,0)
            box_o.Thickness = 2
            box_o.Transparency =1 
            box_o.Filled = false
            
            local box = Drawing.new('Square')
            box.Visible = false
            box.Color = Color3.new(1,0,0)
            box.Thickness = 1.5
            box.Transparency =1 
            box.Filled = false
        
            local hb_o = Drawing.new('Square')
            hb_o.Visible = false
            hb_o.Color = Color3.new(0,0,0)
            hb_o.Thickness = 1
            hb_o.Transparency =1 
            hb_o.Filled = false
            
            local hb = Drawing.new('Square')
            hb.Visible = false
            hb.Color = Color3.new(1,0,0)
            hb.Thickness = 1
            hb.Transparency =1 
            hb.Filled = true
            local health = Drawing.new('Text')
            health.Visible = false
            local distancex = Drawing.new('Text')
            distancex.Visible = false
        local function rootesp()
            local xkeeptracer
            local plsstoptracer = false
            cam = workspace.CurrentCamera
            xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.2)
                if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if onscreen and getgenv()['pilgrammedsettings']['playeresp'] and getgenv().tracers and tracer then 
                        tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                        tracer.To = Vector2.new(vect.X,vect.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                    if not v or getgenv().loopsUnload == true then 
                        plsstoptracer = true
                    end
                elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                    xkeeptracer:Disconnect()
                    if tracer then 
                        pcall(function()
                            tracer:Remove()
                        end)
                    end
                else
                    tracer.Visible = false
                end
            end) 
        end
        local function boxroot()
            local xkeeprunning 
            xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v.Character and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    local vroot = v.Character.HumanoidRootPart
                    local head = v.Character.Head
                    
                    local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                    local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                    if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                    elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                    local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                    local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                    
                    if onscreen and getgenv()['pilgrammedsettings']['playeresp'] and box then 
                        cam = workspace.CurrentCamera
                        --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))

    
                        if box_o and cam.ViewportSize and rootpos and headpos then 
                            box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                            box_o.Visible = true 
                        end
                        if box then 
                            box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                            box.Visible = true
                        end

                        hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                        hb_o.Position = box_o.Position - Vector2.new(6,0)
                        hb_o.Visible = true
                        hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                        hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                        hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                        hb.Visible = true

                        -- local Talents = #v.Backpack:GetChildren()-1
                        -- local Power = Talents--#Talents-1
                        esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,-15)
                        esp.Color = getgenv()['pilgrammedsettings']['playerespcolour']
                        local preframework = getgenv()['pilgrammedsettings']['espframework']
                        
                        preframework =string.gsub(
                            preframework,
                            '{name}',
                            v.Name
                        )
                        preframework = string.gsub(
                            preframework,
                            '{distance}',
                            tostring(math.floor(distance))..'s'
                        )
                        preframework = string.gsub(
                            preframework,
                            '{health}',
                            math.floor(v.Character.Humanoid.Health)..'/'..math.floor(v.Character.Humanoid.MaxHealth)--..' '..(math.floor(v.Character.Humanoid.Health) /  math.floor(v.Character.Humanoid.MaxHealth) * 100)..'%' -- add percentage
                        )
                        esp.Text = preframework
                        if getgenv()['pilgrammedsettings']['playeresp'] == true then esp.Visible = true end
                     
                    else
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)
                       
                        
                        
                    end
                end
                if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true or getgenv()['pilgrammedsettings']['playeresp'] == false then 
                    xkeeprunning:Disconnect()
                    pcall(function()
                        box:Remove()
                    end)
                    pcall(function()
                        box_o:Remove()
                    end)
                    pcall(function()
                        hb:Remove()
                    end)
                    pcall(function()
                        hb_o:Remove()
                    end)
                    pcall(function()
                        esp:Remove()
                    end)
                    pcall(function()
                        distancex:Remove()
                    end)
                    pcall(function()
                        health:Remove()
                    end)
                end
            end) 
        end
        task.spawn(function()
            coroutine.wrap(rootesp)()
            coroutine.wrap(boxroot)()
        end)

    end


    espsector:AddToggle('Save CPU',false,function(xstate)
        getgenv().pilgrammedsettings['savecpu'] = xstate
    end)
    espsector:AddSlider("Save CPU Distance", 0, 1000, 10000, 5, function(State)
        getgenv().pilgrammedsettings['savecpudistance'] = State
    end)

    espsector:AddToggle('Ores Esp',false,function(xstate)
        getgenv().pilgrammedsettings['oresesp'] = xstate
        if getgenv()['pilgrammedsettings']['oresesp'] == true then 
            
            local connections=  getgenv()['pilgrammedsettings'].GetOres()
            task.spawn(function()
                repeat task.wait() until getgenv().pilgrammedsettings['oresesp'] == false 
                for _,v in next, connections do 
                    v:Disconnect()
                end
            end)
        end
    end)
    espsector:AddToggle('Chest Esp',false,function(xstate)
        getgenv().pilgrammedsettings['chestesp'] = xstate
        if getgenv()['pilgrammedsettings']['chestesp'] == true then 
            local connection = getgenv()['pilgrammedsettings'].GetChests()
            task.spawn(function()
                repeat task.wait() until getgenv().pilgrammedsettings['chestesp'] == false 
                connection:Disconnect()
            end)
            
        end
    end)
    espsector:AddToggle('Mob Esp',false,function(xstate)
        getgenv().pilgrammedsettings['mobesp'] = xstate
        if getgenv()['pilgrammedsettings']['mobesp'] == true then 
            local connection = getgenv()['pilgrammedsettings'].GetMobs()
            task.spawn(function()
                repeat task.wait() until getgenv().pilgrammedsettings['mobesp'] == false 
                connection:Disconnect()
            end)
        end
    end)
    espsector:AddToggle('NPC Esp',false,function(xstate)
        getgenv().pilgrammedsettings['npcesp'] = xstate
        if getgenv()['pilgrammedsettings']['npcesp'] == true then 
            getgenv()['pilgrammedsettings'].GetNpcs()
        end
    end)
    espsector:AddToggle('Player Esp',false,function(xstate)
        getgenv().pilgrammedsettings['playeresp'] = xstate
        for _,v in next, game:GetService('Players'):GetPlayers() do 
            if getgenv()['pilgrammedsettings']['playeresp'] == true then 
                getgenv()['pilgrammedsettings'].CreatePlayerEsp(v)
            end 
        end   
    end)
    espsector:AddSeperator('-')
    otheresp:AddColorpicker('Ores Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().pilgrammedsettings['oresespcolour'] = xstate
    end)
    otheresp:AddColorpicker('Chest Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().pilgrammedsettings['chestespcolour'] = xstate
    end)
    otheresp:AddColorpicker('Mob Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().pilgrammedsettings['mobespcolour'] = xstate
    end)
    otheresp:AddColorpicker('Npc Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().pilgrammedsettings['npcespcolour'] = xstate
    end)
    otheresp:AddColorpicker('Player Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().pilgrammedsettings['playerespcolour'] = xstate
    end)
    






    


    --PlayerGui:GetGuiObjectsAtPosition

    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if call_type == 'GetState'  and getgenv().pilgrammedsettings['nofalldamage'] then 
            return Enum.HumanoidStateType.PlatformStanding
        elseif call_type == 'Kick' then 
            warn('Attempted to kick')
            return task.wait(math.huge)
        else
            return metahook(self,...)
        end
        return metahook(self,...)
    end)

    local metaindex;
    metaindex = hookmetamethod(game,'__index',newcclosure(function(self,a)
        if self == game:GetService('Lighting') and a == 'ClockTime' and getgenv().pilgrammedsettings['alwaysday'] == true then 
            return 12
        elseif self == game:GetService('Lighting') and a == 'TimeOfDay' and getgenv().pilgrammedsettings['alwaysday'] == true then 
            return 12
        end
        return metaindex(self,a)
    end))

    -- make notify return text box so u can change text
    task.spawn(function()
        while task.wait(0.01) do 
            if getgenv().loopsUnload == true then print('pilgrammed loop break') break end

            if getgenv().pilgrammedsettings['attemptkill'] == true then 
                local foundnpcs = nil
                local previousPos = 0
                local previousroot = nil
                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                    for _,v in next, workspace.Mobs:GetChildren() do 
                        for k,c in next, v:GetChildren() do 
                            if c:FindFirstChild('HumanoidRootPart') and c.PrimaryPart then
                                if isnetworkowner(c.PrimaryPart) then 
                                    
                                end
                                -- local dist = (c:FindFirstChild('HumanoidRootPart').Position-game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                                -- if previousroot == nil and dist < 50 then 
                                --     previousPos = dist;
                                --     previousroot = c:FindFirstChild('HumanoidRootPart')
                                -- elseif dist < 50 and previousPos > dist then 
                                --     previousPos = dist;
                                --     previousroot = c:FindFirstChild('HumanoidRootPart')
                                -- end
                            end
                        end
                    end
                    if previousroot ~= nil then 
                        if isnetworkowner(previousroot.Parent.PrimaryPart) then 
                            if previousroot.Parent:FindFirstChild('Head') then 
                                previousroot.Parent:FindFirstChild('Head'):Destroy()
                            end
                            if previousroot.Parent:FindFirstChildWhichIsA('Humanoid') then 
                                previousroot.Parent:FindFirstChildWhichIsA('Humanoid').Health = 0
                            end
                            pcall(function()
                                previousroot.Parent:BreakJoints()
                            end)
                        end
                    end
                end
            end

            if getgenv().pilgrammedsettings['notoolcdhold'] == true and getgenv().pilgrammedsettings['buttonUp'] == true then 
                for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
                    if v:IsA('Tool') then 
                        v:Activate()
                    end
                end
                for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
                    if v:IsA('Tool') then 
                        v:Deactivate()
                    end
                end
            -- else
            --     for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
            --         if v:IsA('Tool') then 
            --             v:Deactivate()
            --         end
            --     end
            end

            if getgenv().pilgrammedsettings['platformstanding'] == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').PlatformStand = true 
                end
            else
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').PlatformStand = false; 
                end
            end

            if getgenv().pilgrammedsettings['notifywhenmeteor'] == true then 
                if game:GetService("ReplicatedStorage"):FindFirstChild('GameInfo'):FindFirstChild('Meteor').Value == 65 then 
                    task.spawn(function()
                        azfakenotify('Meteor has spawned','untilClick')
                        task.wait(5)
                    end)
                end
            end

            if getgenv().pilgrammedsettings['noshadows'] == true then 
                game:GetService('Lighting').GlobalShadows = false;
            end
            if getgenv().pilgrammedsettings['nofog'] == true then 
                game:GetService('Lighting').FogEnd = 100000
            end
            if getgenv().pilgrammedsettings['nosky'] == true and game:GetService('Lighting'):FindFirstChildWhichIsA('Sky') then 
                game:GetService('Lighting'):FindFirstChildWhichIsA('Sky'):Destroy() -- SkyAmbient
            end
            if getgenv().pilgrammedsettings['gamemod'] then 
                game:GetService('Lighting').ColorShift_Top = Color3.fromRGB(255, 255, 255)
                game:GetService('Lighting').ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
                game:GetService('Lighting').Ambient = Color3.fromRGB(255, 255, 255)
            end
            if getgenv().pilgrammedsettings['gamemod'] then 
                game:GetService('Lighting').Brightness = getgenv().pilgrammedsettings['brightness']
                game:GetService('Lighting').ExposureCompensation = getgenv().pilgrammedsettings['exposurecompensation'] -- make toggle for it
                
            end
            -- if infinitejumpattachment:IsPressed() == true then 
            --     getgenv().pilgrammedsettings['infinitejump'] = true
            --     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
            --     local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').StateChanged:Connect(function(old,new)
            --         game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
            --     end)
            --     task.spawn(function()
            --         repeat task.wait() until getgenv().pilgrammedsettings['infinitejump'] == false 
            --         connection:Disconnect()
            --     end)
            -- else
            --     getgenv().pilgrammedsettings['infinitejump'] = false
            -- end







            if getgenv().pilgrammedsettings['infinitejump'] == true and infinitejumpattachment:IsPressed() == true then 
                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').StateChanged:Connect(function(old,new)
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                end)
                task.spawn(function()
                    repeat task.wait() until infinitejumpattachment:IsPressed() == false 
                    connection:Disconnect() -- velocity
                end)
            end

            if getgenv().pilgrammedsettings['nofalldamage'] and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                getgenv().pilgrammedsettings['nofalldamage'] = nil 

                
                -- game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                -- local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('FloorMaterial'):Connect(function()
                --     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').FloorMaterial = Enum.Material.Slate
                -- end)
                --     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                -- end)
                task.spawn(function()
                    -- repeat task.wait(0.001) if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetState() == Enum.HumanoidStateType.Freefall then 
                    --     -- game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.Jumping)
                    --     game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.PlatformStanding)
                    -- end until getgenv().pilgrammedsettings['nofalldamage'] == false 

                    repeat task.wait(0.001) 
                        
                        if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                            game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):ChangeState(Enum.HumanoidStateType.PlatformStanding)
                        end
                        
                     until getgenv().pilgrammedsettings['nofalldamage'] == false 


                    -- connection:Disconnect()
                end)
            end
            task.spawn(function()
                local foundnpcs = nil
                for _,v in next, workspace.Mobs:GetChildren() do 
                    for k,c in next, v:GetChildren() do 
                        if c.Name == getgenv()['pilgrammedsettings']['selectednpc'] and c:FindFirstChildWhichIsA('Humanoid') and c:FindFirstChildWhichIsA('Humanoid').Health > 0 then 
                            foundnpcs = c
                            break -- function to rename alll humanoids to humanoid
                        end
                    end
                end
                if getgenv().pilgrammedsettings['farmnpc'] == true and foundnpcs and foundnpcs:FindFirstChildWhichIsA('Humanoid') and foundnpcs:FindFirstChildWhichIsA('Humanoid').Health > 0 and foundnpcs:FindFirstChild('HumanoidRootPart') then 
                    getgenv().pilgrammedsettings['farmnpc'] = nil;
                    if getgenv().pilgrammedsettings['tweenmode'] and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(getgenv().pilgrammedsettings['farmtween'],Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = foundnpcs:FindFirstChild('HumanoidRootPart').CFrame});
                        tween:Play() 
                        task.wait(getgenv().pilgrammedsettings['farmtween'])
                    end
                    
                    local function getRemovals()
                        local cancel = false;
                        if not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            cancel = true;
                        end;
                        if not foundnpcs then 
                            cancel = true;
                        end;
                        return cancel
                    end
                    repeat 
                        task.wait(0.01)
                        -- game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and foundnpcs and foundnpcs:FindFirstChild('HumanoidRootPart') then 
                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = foundnpcs:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(
                                getgenv().pilgrammedsettings['playerx'],
                                getgenv().pilgrammedsettings['playery'],
                                getgenv().pilgrammedsettings['playerz']
                            ) * CFrame.Angles(math.rad(getgenv().pilgrammedsettings['rotation']),0,0)
                        end
                    until getgenv().pilgrammedsettings['farmnpc'] == false or getgenv().loopsUnload == true or foundnpcs == nil or not foundnpcs:FindFirstChildWhichIsA('Humanoid') or foundnpcs:FindFirstChildWhichIsA('Humanoid').Health <=0  or not foundnpcs:FindFirstChild('HumanoidRootPart') or not game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                    
                    if getgenv().pilgrammedsettings['farmnpc'] == nil then 
                        getgenv().pilgrammedsettings['farmnpc'] = true
                        print('stopped farm')
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
                    end
                -- elseif getgenv().pilgrammedsettings['farmnpc'] == true then 

                --     getgenv()['pilgrammedsettings']['selectednpc']
                end
            end)

            





            if getgenv().pilgrammedsettings['godmode'] == true  then 
                getgenv().pilgrammedsettings['godmode'] = nil
                task.spawn(function()
                    repeat task.wait(0.001)
                        game:GetService("ReplicatedStorage").Remotes.Roll:FireServer()
                        -- task.delay(.1,function()
                        -- if getgenv().pilgrammedsettings['alreadyfailtp'] == false and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and not game.Players.LocalPlayer.Character:FindFirstChild('IFrame') and getgenv().pilgrammedsettings['godmodefail'] == true then 
                        --     -- getgenv().pilgrammedsettings['godmodefail'] = nil
                        --     getgenv().pilgrammedsettings['alreadyfailtp'] = true
                        --     getgenv().pilgrammedsettings['storefailcframe'] = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame
                        --     game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().pilgrammedsettings['failcframe']
                        --     task.spawn(function()
                        --         repeat task.wait() until game.Players.LocalPlayer.Character:FindFirstChild('IFrame')
                        --         getgenv().pilgrammedsettings['alreadyfailtp'] = false
                        --         game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = getgenv().pilgrammedsettings['storefailcframe']
                        --     end)
                            
                        -- end
                        -- end)
                    until getgenv().pilgrammedsettings['godmode']== false
                end)
                -- task.spawn(function()
                --     repeat task.wait(0.001)
                --         game:GetService("ReplicatedStorage").Remotes.Roll:FireServer()
                --     until getgenv().pilgrammedsettings['godmode']== false
                -- end)
            end


            if getgenv().pilgrammedsettings['killaura'] == true then 
                getgenv().pilgrammedsettings['killaura'] = nil 
                repeat 
                    -- task.wait(1) -- not needed
                    for _,v in next,game:GetService("Workspace").Mobs:GetChildren() do 
                        for i,mob in next, v:GetChildren() do 
                            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and mob:FindFirstChild('HumanoidRootPart') and mob:FindFirstChild('Human') and mob:FindFirstChild('Human').Health >0 then 
                                local dist = (mob:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                if dist.Magnitude <= 20 then 
                                    for k,c in next, game.Players.LocalPlayer.Character:GetChildren() do 
                                        local slashmode = 1 
                                        if getgenv().pilgrammedsettings['killauram2'] == true then slashmode = 2 end
                                        if getgenv().pilgrammedsettings['notoolcd'] == false then 
                                            if c:FindFirstChild('Slash') then 
                                                c:FindFirstChild('Slash'):FireServer(slashmode)
                                            end
                                            if c:FindFirstChild('Shoot') then 
                                                c:FindFirstChild('Shoot'):FireServer(nil)
                                            end
                                            if c:FindFirstChild('Event') then 
                                                c:FindFirstChild('Event'):FireServer(nil)
                                            end
                                        else
                                            if c:IsA('Tool') then 
                                                c:Activate()
                                            end
                                        end
                                        task.wait(getgenv().pilgrammedsettings['attackauradelay'])--task.wait(.1)
                                    end
                                   
                                end
                            end
                        end
                    end
                    task.wait(0.1)
                until getgenv().pilgrammedsettings['killaura'] == false

            end
            if getgenv().pilgrammedsettings['chestfarm'] == true and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 
                getgenv().pilgrammedsettings['chestfarm'] = nil
                task.spawn(function()
                    for _,v in next, game:GetService("Workspace"):FindFirstChild('Chests'):GetChildren() do 
                        if getgenv().pilgrammedsettings['chestfarm'] == false then break end
                        if v:FindFirstChild('ProximityPrompt') then 
                            if getgenv()['pilgrammedsettings']['tweenchest'] == true then 
                                getgenv().pilgrammedsettings['chestfarm']  = nil
                                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                                local tween = game:GetService('TweenService'):Create(game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),TweenInfo.new(getgenv()['pilgrammedsettings']['tweenspeed'],Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = v:FindFirstChild('Root').CFrame});
                                tween:Play()    
                                local completed = false ;
                                tween.Completed:Connect(function() completed = true; end)
                                repeat task.wait() until completed == true or getgenv().loopsUnload == true or getgenv()['pilgrammedsettings']['chestfarm'] == false
                                if completed == false then 
                                    tween:Cancel()
                                end
                                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                                azfake.fireproximitypromt(v:FindFirstChild('ProximityPrompt'))
                            else
                                task.wait(.1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild('Root').CFrame 
                                local function firepromt(Obj, Amount, Skip)
                                    if Obj.ClassName == "ProximityPrompt" then 
                                        Amount = Amount or 1
                                        local PromptTime = Obj.HoldDuration
                                        if Skip then 
                                            Obj.HoldDuration = 0
                                        end
                                        for i = 1, Amount do 
                                            Obj:InputHoldBegin()
                                            if not Skip then 
                                                wait(Obj.HoldDuration)
                                            end
                                            Obj:InputHoldEnd()
                                        end
                                        Obj.HoldDuration = PromptTime
                                    else 
                                        error("userdata<ProximityPrompt> expected")
                                    end
    
                                end
                                -- firepromt(v:FindFirstChild('ProximityPrompt'))
                                azfake.fireproximitypromt(v:FindFirstChild('ProximityPrompt'))
                            end 
                            task.wait(getgenv().pilgrammedsettings['chestdelay']) --task.wait(getgenv())
                        end
                    end
                    if getgenv().pilgrammedsettings['chestfarm'] == nil then 
                        getgenv().pilgrammedsettings['chestfarm'] = true 
                    end
                end)

            end
            if getgenv()['pilgrammedsettings']['speedtoggle'] == true then 
                
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 


                    getgenv().pilgrammedsettings['speedtoggle'] = nil
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().pilgrammedsettings['speed']
                    local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()-- getpropertychangedsignal could be used here 
                        game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().pilgrammedsettings['speed']
                    end) 

                    task.spawn(function()
                        repeat task.wait() until getgenv().pilgrammedsettings['speedtoggle'] == false or getgenv().loopsUnload == true 
                        connection:Disconnect()
                    end)

                end
            end
            if getgenv().pilgrammedsettings['nocooldown'] == true then 
                for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do 
                    -- for i,cooldown in next, getgenv()['pilgrammedsettings']['registeredcooldowns'] do 
                    --     print(cooldown..' cooldown')
                    --     if v.Name:find(cooldown) then 
                    --         print(v.Name)
                    --         v:Destroy()
                    --     end
                    -- end
                    if table.find(getgenv()['pilgrammedsettings']['registeredcooldowns'],v.Name) then 
                        v:Destroy()
                    end
                end
            end
        end
    end)
elseif game.PlaceId == 5561268850 or game.PlaceId == 6312903733 then -- randomly generated drones
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')

    getgenv().randomdroidsettings = {
        instakill = false;
        autopressbuttons = false;
        autocollectciruits = false;
        teleporttoeveryroom = false;
        roomtp = false;
        autoroompuzzle = false;
    }
    sector:AddButton('Teleport to dungeon',function()
        game:GetService('TeleportService'):teleport(6312903733)
    end)
    if game.PlaceId == 6312903733 then 
        sector:AddToggle('Insta Kill',false,function(xstate)
            getgenv().randomdroidsettings['instakill'] = xstate
        end)
        sector:AddToggle('Auto Press Buttons',false,function(xstate)
            getgenv().randomdroidsettings['autopressbuttons'] = xstate
        end)
        sector:AddToggle('Auto Collect Circuits',false,function(xstate)
            getgenv().randomdroidsettings['autocollectcircuits'] = xstate
        end)
        sector:AddToggle('Teleport to Rooms',false,function(xstate)
            getgenv().randomdroidsettings['roomtp'] = xstate
        end)
        sector:AddToggle('Auto Room Puzzle',false,function(xstate)
            getgenv().randomdroidsettings['autoroompuzzle'] = xstate
        end)
    end
    -- game:GetService("Workspace").Circuit.TouchInterest
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('droids break end') break end 
            if getgenv().randomdroidsettings['instakill'] == true then 
                local dir = game:GetService("Workspace"):FindFirstChild('Room').Enemies
    
                for _,v in next, dir:GetChildren() do 
                    if v:FindFirstChild('HumanoidRootPart') then 
                        if isnetworkowner(v.PrimaryPart) then 
                            v:FindFirstChildWhichIsA('Humanoid').Health = 0
                            if v:FindFirstChild('ForceField') and v:FindFirstChild('Head') then 
                                v:FindFirstChild('Head'):Destroy()
                            end
                            print('was owner')
                        end
                    elseif v.Name:find('Spawner') then 
                        if isnetworkowner(v.PrimaryPart) then 
                            v:FindFirstChildWhichIsA('Humanoid').Health = 0
                            print('was owner')
                        end
                    elseif v.Name:find('Puzzle') and isnetworkowner(v.PrimaryPart) then 
                        local Find = string.split(v.Name,' ')[2]
                        -- print(Find)
                        task.delay(1,function()
                            local Pressure = game:GetService("Workspace"):FindFirstChild('Room'):FindFirstChild('Enemies'):FindFirstChild('PressurePlate '..Find)
                            v:SetPrimaryPartCFrame(Pressure.PrimaryPart.CFrame)
                        end)
                    end
                end  
                for _,v in next, game:GetService("Workspace"):FindFirstChild('Room'):GetChildren() do 
                    if v.Name == 'Crystal' and isnetworkowner(v.PrimaryPart) then 
                        if v:FindFirstChildWhichIsA('Humanoid') then 
                            v:FindFirstChildWhichIsA('Humanoid').Health = 0
                        end
                    end
                end 
            end
            if getgenv().randomdroidsettings['autopressbuttons'] == true then 
                local dir = game:GetService("Workspace"):FindFirstChild('Room').Enemies
    
                for _,v in next, dir:GetChildren() do 
                    if v:FindFirstChild('ClickDetector') then 
                        task.delay(1.2,function()
                            fireclickdetector(v:FindFirstChild('ClickDetector'))
                        end)
                    end
                end  
            end
            if getgenv().randomdroidsettings['autocollectcircuits'] == true then 
                for _,v in next, workspace:GetChildren() do 
                    if v.Name == 'Circuit' then 
                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Left Leg'),v,0)
                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild('Left Leg'),v,1)
                    end
                end
            end 
            if getgenv().randomdroidsettings['roomtp'] == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                if workspace:FindFirstChild('Room') then 
                    local Room = workspace:FindFirstChild('Room')
                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = Room:FindFirstChild('Floor').CFrame * CFrame.new(0,15,0)
                end
            end
        end
    end)
elseif game.PlaceId == 8568266872 then  -- kill to save princess
    local tab = window:CreateTab(gameName)
    local secotor = tab:CreateSector('Cheats','left')
    getgenv().princesssettings = {
        instakill = false
    }
    secotor:AddToggle('Insta Kill',false,function(xstate)
        getgenv().princesssettings['instakill'] = xstate
    end)
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('princess break end') break end 
            if getgenv().princesssettings['instakill'] == true then 
                local dir = game:GetService("Workspace").Waves
                for _,c in next, dir:GetChildren() do 
                    for _,v in next, c:FindFirstChild('Enemy'):GetChildren() do 
                        if v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then 
                            if isnetworkowner(v.PrimaryPart) then 
                                v:FindFirstChildWhichIsA('Humanoid').Health = 0
                            end
                        end
                    end
                end    
            end
        end
    end)
elseif azfake.findintable_i(dungeon_quest_games,gameName) and dungeon_quest_games[gameName] == game.PlaceId  then 
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')
    local botsector = tab:CreateSector('Cheats','right')
    local boteditsect = tab:CreateSector('Cheats','extra')
    getgenv().dungeonquestsettings = {
        instakill = false;
        selectedbot = '';
        usebotcommands = false;
        configcommands = false;
        configediting = '';
        config = {};
        adddelay = false;
        delay = 0;
        tpenemy = false;
        antiafk = false;
        tweenenemy = false;
        tweenspeed = 1;
        tpenemysafe = false;
        safedelay = 0;
        speed = false;
        speedval = 0;
    }
    sector:AddToggle('Insta Kill',false,function(xstate)
        getgenv().dungeonquestsettings['instakill'] = xstate
    end)
    sector:AddToggle('Teleport to Enemies',false,function(xstate)
        getgenv().dungeonquestsettings['tpenemy'] = xstate
    end)
    local tpsafe = sector:AddToggle('Teleport to Enemies Safe',false,function(xstate)
        getgenv().dungeonquestsettings['tpenemysafe'] = xstate
    end)
    local safedelay = sector:AddSlider('Safe Delay',0,1,10,100,function(xtstae)
        getgenv().dungeonquestsettings['safedelay'] = xtstae
    end)
    tpsafe:MakeVisibleIfActive(safedelay)
    local tweenenemy = sector:AddToggle('Tween to Enemies',false,function(xstate)
        getgenv().dungeonquestsettings['tweenenemy'] = xstate
    end);--tweenenemy:AddHint('Tweens to enemies')
    local tweenspeedslider = sector:AddSlider('Tween Speed',0,1,10,100,function(xtstae)
        getgenv().dungeonquestsettings['tweenspeed'] = xtstae
    end)
    tweenenemy:MakeVisibleIfActive(tweenspeedslider)
    sector:AddToggle('Anti afk',false,function(xstate) -- Aafk
        getgenv().dungeonquestsettings['antiafk'] = xstate
    end)
    sector:AddToggle('Walkspeed',false,function(xstate)
        getgenv().dungeonquestsettings['speed'] = xstate
    end)
    sector:AddSlider('Speed',0,70,250,1,function(xtstae)-- 240 maximum
        getgenv().dungeonquestsettings['speedval'] = xtstae
    end)
    botsector:AddTextbox('Auto Dungeon Bot','',function(xstate)
        getgenv().dungeonquestsettings['selectedbot'] = xstate
    end)
    sector:AddButton('Destroy Map',function()
        for _,v in next, workspace:GetChildren() do --descendants or loop through v children and destroy
            --if not table.find(game.Players:GetPlayers(),)
            if not game.Players:FindFirstChild(game.Players.LocalPlayer.Name) and v:IsA('Model') then 
                v:Destroy()
            end
        end
    end)
    game.Players.LocalPlayer.Idled:Connect(function()
        if getgenv().dungeonquestsettings['antiafk'] == true then 
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end
    end)
    sethiddenproperty(LocalPlayer, "MaxSimulationRadius", math.huge)
    sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
    -- check if txt isnt there
    -- add a toggle so you dont have to type extension name
    -- add a textbox for the extension ending it wants to add if the toggle for no extension name is on but the default is .txt
    --botsector:AddSeperator('Bot functions')
    local function compilesettings()
        local str = 'settings = {}'
        str = str:sub(1,string.len(str)-1)
        for _,v in next, getgenv().dungeonquestsettings['config'] do 
            -- {[1]=48444;} - {[1]=48444;
            --if str ~= '{' then str = str..';' end
            if type(v) == 'table' then 
                str = str..'{point=CFrame.new('..tostring(v['point'])..');'..'delay='..tostring(v['delay'])..'};'
            else
                str = str..'point=CFrame.new('..tostring(v)..');'
            end
            
        end
        str = str..'}\nreturn settings'
        return str
    end
    local function getsettings()
        return compilesettings --loadstring(compilesettings())()
    end
    local function uncompile(x)
        local str = x 
        local outcome = loadstring(x)();
        return outcome
    end
    botsector:AddButton('Run bot',function()
        local file = getgenv().dungeonquestsettings['selectedbot']
        if isfile(file) then 
            azfakenotify('Loading File: '..file,1)
            for _,v in next, getgenv().dungeonquestsettings['config'] do 
                task.wait(0.01)
                if type(v) == 'table' then 
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v['point']
                    task.wait(v['delay'])
                else
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v
                end
            end
        else
            azfakenotify('File: '..file..' Is not recognised.',3)
        end
    end)
    botsector:AddButton('Load bot',function()
        local file = getgenv().dungeonquestsettings['selectedbot']
        if isfile(file) then 
            azfakenotify('Loading File: '..file,'untilClick')
            getgenv().dungeonquestsettings['config'] = uncompile(readfile(file)) --game:GetService('HttpService'):JSONDecode(readfile(file))
        else
            azfakenotify('File: '..file..' Is not recognised.',3)
        end
    end)
    botsector:AddButton('Save bot',function()
        local file = getgenv().dungeonquestsettings['selectedbot']
        if isfile(file) then 
            azfakenotify('Loading File: '..file,2)
            --uncompile(compilesettings()) --do --writefile(file,game:GetService('HttpService'):JSONEncode(getgenv().dungeonquestsettings['config']))
            writefile(file,compilesettings())
        else
            azfakenotify('File: '..file..' Is not recognised.',3)
        end
    end)
    botsector:AddSeperator()
    -- botsector:AddButton('Edit bot',function()
    --     local file = getgenv().dungeonquestsettings['selectedbot']
    --     if isfile(file) then 
    --         azfakenotify('Editing File: '..file,'untilClick')
    --         getgenv().dungeonquestsettings['config'] = uncompile(compilesettings()) -- compilesettings
    --     else
    --         azfakenotify('File: '..file..' Is not found.',3)
    --     end
    -- end)
    local createsavefile = botsector:AddButton('Create bot save file',function()
        local file = getgenv().dungeonquestsettings['selectedbot']
        if not isfile(file) then 
            writefile(file,'')
        else
            azfakenotify('File exists',1)
        end
    end)
    createsavefile:ActivateKnowledge();
    createsavefile:AddKnowledge('Creates the file')
    --botsector:AddSeperator('~')
    local bottgl = boteditsect:AddToggle('Bot commands',false,function(xstate)
        getgenv().dungeonquestsettings['usebotcommands'] = xstate
    end)
    local delay = boteditsect:AddToggle('Add Delay',false,function(xstate)
        getgenv().dungeonquestsettings['adddelay'] = xstate
    end)
    local tbdelay = boteditsect:AddTextbox('Delay','',function(xstate)
        if tonumber(xstate) then 
            getgenv().dungeonquestsettings['delay'] = tonumber(xstate)
        else
            azfakenotify('Filtered Input not accepted')
        end
    end)
    local displaydelaybutton = boteditsect:AddButton('Display Delay',function()
        azfakenotify('Delay: '..tostring(getgenv().dungeonquestsettings['delay']))
    end)
    delay:MakeVisibleIfActive(tbdelay)
    delay:MakeVisibleIfActive(displaydelaybutton)
    local resetbutton = boteditsect:AddButton('Reset Editing Config',function()
        getgenv().dungeonquestsettings['config'] = {}
    end)
    local addpoint = boteditsect:AddButton('Add Point',function()
        local index = 1 
        for _,v in next, getgenv().dungeonquestsettings['config']  do 
            index = index + 1 -- index = _ + 1 or 
        end
        if getgenv().dungeonquestsettings['adddelay'] == true then 
            getgenv().dungeonquestsettings['config'][index] = {
                point = game.Players.LocalPlayer.Character.PrimaryPart.CFrame;
                delay = getgenv().dungeonquestsettings['delay'];
            }
        else
            getgenv().dungeonquestsettings['config'][index] = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
        end
    end)
    addpoint:ActivateKnowledge()
    addpoint:AddKnowledge('Creates a point where you are standing')
    local removepoint = boteditsect:AddButton('Remove Previous Point',function()
        local index = 1 
        for _,v in next, getgenv().dungeonquestsettings['config']  do 
            index = _ --index = index + 1 -- index = _ + 1 or 
        end
        table.remove(getgenv().dungeonquestsettings['config'],index)
    end)
    bottgl:MakeVisibleIfActive(resetbutton)
    bottgl:MakeVisibleIfActive(addpoint)
    bottgl:MakeVisibleIfActive(removepoint)
    boteditsect:AddToggle('Bot config commands',false,function(xstate)
        getgenv().dungeonquestsettings['configcommands'] = xstate
    end)
    game.Players.LocalPlayer.Chatted:Connect(function(msg)
        if not getgenv().dungeonquestsettings['usebotcommands'] then return end
        if msg == '/e resetstatus' then 
            getgenv().dungeonquestsettings['config'] = {}
        elseif msg == '/e createpoint' then 
            local index = 1 
            for _,v in next, getgenv().dungeonquestsettings['config']  do 
                index = index + 1 -- index = _ + 1 or 
            end
            getgenv().dungeonquestsettings['config'][index] = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
        elseif msg == '/e deletepreviouspoint' then 
            local index = 1 
            for _,v in next, getgenv().dungeonquestsettings['config']  do 
                index = _ --index = index + 1 -- index = _ + 1 or 
            end
            table.remove(getgenv().dungeonquestsettings['config'],index)
        end
    end)
    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if call_type == 'GetState'  then 
            return Enum.HumanoidStateType.PlatformStanding
        elseif call_type == 'Kick' then 
            warn('Attempted to kick')
            return task.wait(math.huge)
        else
            return metahook(self,...)
        end
        return metahook(self,...)
    end)
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('princess break end') break end 


            if getgenv().dungeonquestsettings['speed'] == true then 
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 
                    getgenv().dungeonquestsettings['speed'] = nil
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().dungeonquestsettings['speedval']
                    local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()-- getpropertychangedsignal could be used here 
                        game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().dungeonquestsettings['speedval']
                    end) 
                    task.spawn(function()
                        repeat task.wait() until getgenv().dungeonquestsettings['speed'] == false or getgenv().loopsUnload == true 
                        connection:Disconnect()
                    end)

                end
            end

            if getgenv().dungeonquestsettings['tpenemy'] == true then 
                --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true
                getgenv().dungeonquestsettings['tpenemy'] = nil 
                task.spawn(function()
                    repeat 
                        for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            pcall(function()
                                if child:IsA("BasePart") and child.CanCollide == true then
                                    child.CanCollide = false
                                end
                            end)
                        end
                        local dir = game:GetService("Workspace"):FindFirstChild('dungeon')
                        if dir then 
                            for _,c in next, dir:GetChildren() do 
                                if c:FindFirstChild('enemyFolder') then 
                                    for _,v in next,c:FindFirstChild('enemyFolder'):GetChildren() do 
                                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then  
                                            if getgenv().dungeonquestsettings['tweenenemy'] == true then 
                                                local tween = game:GetService('TweenService'):Create(
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
                                                    TweenInfo.new(getgenv().dungeonquestsettings['tweenspeed'],Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,7)}
                                                )
                                                tween:Play()
                                                -- task.spawn(function()
                                                --     repeat task.wait() until tweencompleted or not v:FindFirstChild('HumanoidRootPart')
                                                -- end)
                                            else
                                                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and getgenv().dungeonquestsettings['tpenemysafe'] == true  then 
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame *= CFrame.new(0,50,0)
                                                    task.wait(.1)
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,50,10)
                                                    task.wait(.1)
                                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,10)
                                                    task.wait(0.01)
                                                    task.wait(getgenv().dungeonquestsettings['safedelay'])
                                                else
                                                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                        game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,7)
                                                    end
                                                end
                                                
                                            end
                                            task.wait(.1)
                                        end 
                                    end
                                end 
                            end 
                        end  
                        local dir2 = game:GetService("Workspace"):FindFirstChild('enemies')
                        if dir2 then 
                            for _,v in next, dir2:GetChildren() do 
                                if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then  
                                    if getgenv().dungeonquestsettings['tweenenemy'] == true then 
                                        local tween = game:GetService('TweenService'):Create(
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'),
                                            TweenInfo.new(getgenv().dungeonquestsettings['tweenspeed'],Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,7)}
                                        )
                                        tween:Play()
                                    else
                                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and getgenv().dungeonquestsettings['tpenemysafe'] == true  then 
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame *= CFrame.new(0,50,0)
                                            task.wait(.1)
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,50,10)
                                            task.wait(.1)
                                            game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,10)
                                            task.wait(0.01)
                                            task.wait(getgenv().dungeonquestsettings['safedelay'])
                                        else
                                            if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                                                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,7)
                                            end
                                        end
                                        
                                    end
                                    task.wait(.1)
                                end 
                            end 
                        end  
                        task.wait()
                    until getgenv().dungeonquestsettings['tpenemy'] == false
                    --game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
                end)
            end
            if getgenv().dungeonquestsettings['instakill'] == true then 
                local dir = game:GetService("Workspace"):FindFirstChild('dungeon')
                if dir then 
                    for _,c in next, dir:GetChildren() do 
                        if c:FindFirstChild('enemyFolder') then 
                            for _,v in next,c:FindFirstChild('enemyFolder'):GetChildren() do 
                                if v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then 
                                    
                                    if isnetworkowner(v.PrimaryPart) then
                                        pcall(function()
                                            v:FindFirstChild('Head'):Destroy()
                                            v:FindFirstChildWhichIsA('Humanoid').Health = 0
                                            print('was owner')
                                            print(v.Name..' onw')
                                        end)
                                    end
                                end 
                            end
            
                        end 
            
                    end 
                end  
                local dir2 = game:GetService("Workspace"):FindFirstChild('enemies')
                if dir2 then 
                    for _,v in next, dir2:GetChildren() do 
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then  
                            if isnetworkowner(v.PrimaryPart) then
                                pcall(function()
                                    v:FindFirstChild('Head'):Destroy()
                                    v:FindFirstChildWhichIsA('Humanoid').Health = 0--DealDamage
                                    print('was owner')
                                    print(v.Name..' onw')
                                end)
                            end
                        end 
                    end 
                end 
            end
        end
    end)
elseif game.PlaceId == 12604352060 then -- arcane odyssey
    local function createLogger()
        pcall(function() if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger'):Destroy() end end)
        
        local ChatLogger = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local TextLabel = Instance.new("TextLabel")
        local UICorner_2 = Instance.new("UICorner")
        local Logs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local tmp = Instance.new("Folder")
        local tmp_2 = Instance.new("TextLabel")
        
        --Properties:
        
        ChatLogger.Name = "ChatLogger"
        ChatLogger.Parent = game.CoreGui
        ChatLogger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ChatLogger
        Frame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Frame.BackgroundTransparency = 0.600
        Frame.Position = UDim2.new(0.707954645, 0, 0.372806996, 0)
        Frame.Size = UDim2.new(0, 458, 0, 285)
        
        UICorner.Parent = Frame
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        TextLabel.BackgroundTransparency = 0.600
        TextLabel.Size = UDim2.new(0, 458, 0, 38)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Chat Logger"
        TextLabel.TextColor3 = Color3.fromRGB(54, 54, 54)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.TextStrokeTransparency = 9.000
        TextLabel.TextWrapped = true
        
        UICorner_2.Parent = TextLabel
        
        Logs.Name = "Logs"
        Logs.Parent = Frame
        Logs.Active = true
        Logs.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
        Logs.BackgroundTransparency = 0.900
        Logs.BorderSizePixel = 0
        Logs.Position = UDim2.new(0.0218340605, 0, 0.164912283, 0)
        Logs.Size = UDim2.new(0, 436, 0, 230)
        Logs.ScrollBarThickness = 6
        
        UIListLayout.Parent = Logs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        tmp.Name = "tmp"
        tmp.Parent = Logs
        
        tmp_2.Name = "tmp"
        tmp_2.Parent = tmp
        tmp_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tmp_2.BackgroundTransparency = 1.000
        tmp_2.Size = UDim2.new(0, 429, 0, 46)
        tmp_2.Visible = false
        tmp_2.Font = Enum.Font.SourceSans
        tmp_2.Text = "[Player1][]: Hello"
        tmp_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        tmp_2.TextSize = 25.000
        tmp_2.TextWrapped = true
        tmp_2.TextXAlignment = Enum.TextXAlignment.Left
        game.CoreGui.ChatLogger.Frame.Active = true
    
        local UIS = game:GetService("UserInputService")
        local frame = game.CoreGui.ChatLogger.Frame
        
        local dragToggle = nil
        local dragSpeed = 0.1
        local dragStart = nil
        local startPos = nil
        
        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)
        
        UIS.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end
        end)
    end
    createLogger()
    local function logIt(msg,plr)
        local xplus = 0
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,0)
        local add = 1
        -- for i=0, #game.CoreGui.ChatLogger.Frame.Logs:GetChildren() do 
        --     -- if i > 15 then 
        --     --     for i,v in pairs(game.CoreGui.ChatLogger.Frame.Logs:GetChildren()) do if v:IsA('TextLabel') then v:Destroy() end end
        --     -- end
        --     add -= 0.01
        --     if i > 20 then 
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 6
        --     else
        --         game.CoreGui.ChatLogger.Frame.Logs.CanvasSize += UDim2.new(0,0,0.5,0)
        --         xplus += 23.5
        --     end
    
        -- end
        game.CoreGui.ChatLogger.Frame.Logs.CanvasSize = UDim2.new(0,0,0,game.CoreGui.ChatLogger.Frame.Logs.UIListLayout.AbsoluteContentSize.Y+50)
        local x = game.CoreGui.ChatLogger.Frame.Logs.tmp.tmp:Clone();
        x.RichText = true;
        local name = ''--plr.Name --''
        local ourname = game.Players.LocalPlayer.Name--''
        -- for i,v in pairs(game.Players.LocalPlayer.PlayerGui.ClientGui.Mainframe.PlayerList.List:GetChildren()) do 
        --     if v:FindFirstChild('RealName') and v:FindFirstChild('RealName').Value ~= '' and v:FindFirstChild('RealName').Value == plr.Name and v:FindFirstChild('DisplayName') and v:FindFirstChild('DisplayName').Value ~= ''  then 
        --         name = v.DisplayName.Value
        --     end
        --     if v.RealName.Value == game.Players.LocalPlayer.Name then 
        --         ourname = v.DisplayName.Value
        --     end
        -- end -- Logs.ChildAdded
        -- could make it so for chakra sense it makes the colour blue; when hovered it changes to [CHAKRA SENSER]
        local splitName = string.split(msg,' ')
        game.CoreGui.ChatLogger.Frame.Logs.CanvasPosition += Vector2.new(0,10000000) --* xplus
        if string.lower(splitName[3]) == 'clipped' or string.lower(splitName[3]) == string.lower(game.Players.LocalPlayer.Name) then print('hard text') x.TextColor3 = Color3.fromRGB(255, 25, 86) end
        
        if game.Players:FindFirstChild(splitName[1]) and tostring(string.lower(splitName[3])) == string.lower(ourname:sub(1,string.len(splitName[3])))  then 
            Notify('','name was said',2)
            -- if game.ReplicatedStorage.Cooldowns:FindFirstChild(splitName[1]):FindFirstChild('Chakra Sense') then 
            --     task.spawn(function()
            --         local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
    
            --         Notification.Notify("AZFAKE", "We think somebody is watching;", "rbxassetid://4914902889");
            --     end)
            -- end
        end
        if splitName[1] == 'Picked' then 
            x.TextColor3 = Color3.fromRGB(255, 25, 86)
        end
        if splitName[1] == 'AZFAKE-SERVER' then 
            x.TextColor3 = Color3.fromRGB(100, 155, 255)
        end
        local text = ''
        for _, x in pairs(splitName) do if _ >= 3 then if _ == 3 then 
            text = x else
            text = text..' '..x 
        end end end
        x.Text = '['..name..']['..splitName[1]..']: '..text
        x.Parent = game.CoreGui.ChatLogger.Frame.Logs
        x.Visible = true
    end
    getgenv().istyping = false;
    game:GetService('UserInputService').InputBegan:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)
    game:GetService('UserInputService').InputEnded:Connect(function(key,istyping) --// could put it inside the while loop and check if its not loaded to load it again
        if istyping then getgenv().istyping = true  return end 
        getgenv().istyping = false --//could make it so it sets a global variable for holding a key to true instead of getstat
    end)

    local tab = window:CreateTab('Arcane Odyssey')
    local esptab = window:CreateTab('Esp')
    local sector = tab:CreateSector('Cheats','left')
    local tpsect = tab:CreateSector('Cheats','right')
    local espsector = esptab:CreateSector('Cheats','left')
    
    getgenv().arcaneodysseysettings = {
        chestesp = false;
        chestespcolour = Color3.new(255,255,255);
        autoopenchest = false;
        registeredchest = false;
        chestfarm = false;
        chestfarmdelay = 0.5;
        killaura = false;
        breaknpcs = false;
        npcs = {}; --{;}
        selectednpc = '';
        loadmap = false;
        godmode = false;
        specifiedteleports = {
            ['enchant guy'] = CFrame.new(5084.35791, 407.999908, 3117.66992, 0.819164038, -1.16481569e-09, -0.573559344, -8.65178595e-09, 1, -1.43874352e-08, 0.573559344, 1.67479826e-08, 0.819164038);
        };
        selectedteleport = nil;
        mapteleports = {};
        selectedmap = nil;
        loadnpcs = false;
        playeresp = false;
        playerespcolour = Color3.new(255,255,255);
        espframework = '{name}     {distance}     {health}';
        flying = false;
        flyspeed = 0;
        speedtoggle = false;
        speed = 0;
        noclip = false;
        noclipfunction = nil;
        improvedloadsetting = false;
        maps = {

        };
        selectedmap = '';
        loadmapfunction = nil; -- json file that loads configs by going through the table
        infinitestamina = false;
    }

    -- arcane odssey cehest esp
    sector:AddToggle('Kill Aura',false,function(xstate)
        getgenv().arcaneodysseysettings['killaura'] = xstate
    end)
    sector:AddToggle('Bring NPCs',false,function(xstate)
        getgenv().arcaneodysseysettings['breaknpcs'] = xstate
    end)

    
    sector:AddToggle('God Mode',false,function(xstate)
        getgenv().arcaneodysseysettings['godmode'] = xstate
    end)
    sector:AddToggle('Infinite Stamina',false,function(xstate)
        getgenv().arcaneodysseysettings['infinitestamina'] = xstate
    end)
    local improvedmethod = sector:AddToggle('Improved Loading Method',false,function(xstate)
        getgenv().arcaneodysseysettings['improvedloadsetting'] = xstate
    end)
    local mapareas = {}
    for _,v in next, getgenv().arcaneodysseysettings['maps'] do 

    end
    for _,v in next, workspace:WaitForChild('Map'):GetChildren() do 
        if v:FindFirstChild('Center') then 
            table.insert(getgenv().arcaneodysseysettings['maps'],v.Name)
        end
    end
    local dpd = sector:AddDropdown("Load Map Area", getgenv().arcaneodysseysettings['maps'], "", false, function(dropdownv)
        getgenv().arcaneodysseysettings['selectedmap'] = dropdownv -- could do instance or
    end) -- make option visible if dropdown is equal to
    local loadselectedmap = sector:AddButton('Load Selected Map',function()
        if getgenv().arcaneodysseysettings['selectedmap'] ~= '' and workspace:FindFirstChild('Map'):FindFirstChild(getgenv().arcaneodysseysettings['selectedmap']) and game.ReplicatedStorage:WaitForChild('RS'):WaitForChild('Remotes'):WaitForChild('Misc').OnTeleport then 
            if getgenv().arcaneodysseysettings['loadmapfunction'] ~= nil then 
            else
                for index, connection in next, getconnections(game.ReplicatedStorage.RS.Remotes.Misc.OnTeleport.OnClientEvent) do
                    local env = connection.Function and getfenv(connection.Function)
                
                    if env and tostring(rawget(env, "script")) == "Unloading" then
                        getgenv().arcaneodysseysettings['loadmapfunction'] = debug.getupvalue(connection.Function, 2)
                        break
                    end
                end
            end

            getgenv().arcaneodysseysettings['loadmapfunction'](workspace:FindFirstChild('Map'):FindFirstChild(getgenv().arcaneodysseysettings['selectedmap']).Center.Position)
        end
    end)

    improvedmethod:MakeVisibleIfActive(dpd)
    improvedmethod:MakeVisibleIfActive(loadselectedmap)

    sector:AddToggle('Load Map',false,function(xstate)
        getgenv().arcaneodysseysettings['loadmap'] = xstate
    end)
    sector:AddToggle('Load Npcs',false,function(xstate)
        getgenv().arcaneodysseysettings['loadnpcs'] = xstate
    end)





    local unloadDirectories = {

    }
    getgenv().RunAntiUnload = function()
        local connections = {}

        for _,mapfolder in next, workspace.Map:GetChildren() do 
            for i,obj in next, mapfolder:GetChildren() do 
                local oldparent = mapfolder
                local connection = obj:GetPropertyChangedSignal('Parent'):Connect(function(new)
                    if new ~= nil then 
                        print('Tried to move to '..new.Name..' with parent '..new.Parent.Name..' Object moving: '..obj.Name)
                        if new:IsA('Folder') and new.Parent.Name == 'RS' then 
                            obj.Parent = oldparent
                        end
                    else
                        obj.Parent = oldparent
                    end

                end)
                table.insert(connections,connection)
            end
            local addedconnection = mapfolder.ChildAdded:Connect(function(child)
                local oldparent = mapfolder
                local connection = child:GetPropertyChangedSignal('Parent'):Connect(function(new)
                    if new ~= nil then 
                        print('Tried to move to '..new.Name..' with parent '..new.Parent.Name..' Object moving: '..child.Name)
                        if child:IsA('Folder') and new.Parent.Name == 'RS' then 
                            obj.Parent = oldparent
                        end
                    else
                        child.Parent = oldparent
                        print('set parent to '..oldparent.Name)
                    end

                end)
                table.insert(connections,connection)
            end)
            table.insert(connections,addedconnection)
        end
        for _,npc in next, workspace.NPCs:GetChildren() do 
            for _,model in next, npc:GetChildren() do 
                local oldparent = model.Parent; -- npc
                local connection = model:GetPropertyChangedSignal('Parent'):Connect(function(new)
                    if new ~= nil then 
                        print('Tried to move np  to '..new.Name..' with parent '..new.Parent.Name..' npc moving: '..model.Name) -- pcall
                        model.Parent = oldparent
                    else
                        model.Parent = oldparent
                    end
                end)
                table.insert(connections,connection)
            end
            local addedconnection = npc.ChildAdded:Connect(function(model)
                local oldparent = npc;
                local connection = model:GetPropertyChangedSignal('Parent'):Connect(function(new)
                    if new ~= nil then 
                        print('Tried to move np  to '..new.Name..' with parent '..new.Parent.Name..' npc moving: '..model.Name) -- pcall
                        model.Parent = oldparent
                    else
                        model.Parent = oldparent
                    end
                end)
                table.insert(connections,connection)
            end)
            table.insert(connections,addedconnection)
        end
        return connections
    end
    sector:AddToggle('Anti Unload Map',false,function(xstate)
        getgenv().arcaneodysseysettings['antiunloadloadmap'] = xstate
        if getgenv().arcaneodysseysettings['antiunloadloadmap'] == true then 
            local cons = getgenv().RunAntiUnload()

            task.spawn(function()
                repeat task.wait() until getgenv().loopsUnload == true or getgenv().arcaneodysseysettings['antiunloadloadmap'] == false
                for _,v in next, cons do 
                    v:Disconnect()
                    table.remove(cons,_) -- global connections
                end
            end)
        end
    end)




    sector:AddLabel('Risky Cheats')
    sector:AddToggle('Chest Farm',false,function(xstate)
        getgenv().arcaneodysseysettings['chestfarm'] = xstate
    end)
    sector:AddSlider('Chest Teleport Delay',0,0.5,100,100,function(xstate)
        getgenv().arcaneodysseysettings['chestfarmdelay'] = xstate
    end)
    sector:AddToggle('Auto Open Chest',false,function(xstate)
        getgenv().arcaneodysseysettings['autoopenchest'] = xstate
    end)
    for _,v in next, workspace.NPCs:GetChildren() do 
        table.insert(getgenv().arcaneodysseysettings['npcs'],v.Name) -- could insert {enemy = v}
        -- table.insert(getgenv().arcaneodysseysettings['npcs'],v)
    end
    
    for _,v in next, workspace.Map:GetChildren() do 
        if v:FindFirstChild('Center') then-- Chests
            table.insert(getgenv().arcaneodysseysettings['mapteleports'],v.Name) -- could insert {enemy = v}
        end

        -- table.insert(getgenv().arcaneodysseysettings['npcs'],v)
    end
    tpsect:AddDropdown("NPC Teleportation", getgenv().arcaneodysseysettings['npcs'], "", false, function(dropdownv)
        getgenv().arcaneodysseysettings['selectednpc'] = dropdownv -- could do instance or
    end)
    tpsect:AddTextbox("NPC Name", "", function(xtstae)
        for _,v in next, workspace.NPCs:GetChildren() do 
            if v.Name:sub(1,string.len(xtstae)) == xtstae then 
                getgenv().arcaneodysseysettings['selectednpc'] = v.Name
                -- getgenv().arcaneodysseysettings['selectednpc'] = v
                break
            end
        end
    end)
    tpsect:AddButton('Teleport To Npc',function()
        if getgenv().arcaneodysseysettings['selectednpc'] ~= '' then 
            for _,npc in next, workspace.NPCs:GetChildren() do 
                if npc:FindFirstChildWhichIsA('Model') and npc.Name == getgenv().arcaneodysseysettings['selectednpc'] then 
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc:FindFirstChildWhichIsA('Model'):FindFirstChild('HumanoidRootPart').CFrame
                    break
                end
            end
        end
    end)
    tpsect:AddSeperator()
    local specifiedteleports = {}
    for _,v in next, getgenv().arcaneodysseysettings['specifiedteleports'] do 
        table.insert(specifiedteleports,_)
    end
    tpsect:AddDropdown("cframe teleport", specifiedteleports, "", false, function(dropdownv)
        getgenv().arcaneodysseysettings['selectedteleport'] = dropdownv -- could do instance or
    end)
    tpsect:AddButton('teleport to cframe',function()
        if getgenv().arcaneodysseysettings['selectedteleport'] ~= nil then 
            local found = false;
            local cframeofcframe = nil;
            for _,v in next, getgenv().arcaneodysseysettings['specifiedteleports'] do 
                if _ == getgenv().arcaneodysseysettings['selectedteleport'] then 
                    found = true;
                    cframeofcframe = v;
                end
            end
            if found == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')  then 
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = cframeofcframe
            end

        end
    end)
    tpsect:AddDropdown("Map Teleport", getgenv().arcaneodysseysettings['mapteleports'], "", false, function(dropdownv)
        getgenv().arcaneodysseysettings['selectedmap'] = dropdownv -- could do instance or
    end)
    tpsect:AddButton('Teleport to map',function()
        if getgenv().arcaneodysseysettings['selectedmap'] ~= nil then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace:FindFirstChild('Map'):FindFirstChild(getgenv().arcaneodysseysettings['selectedmap']):FindFirstChild('Center').CFrame * CFrame.new(0,6,0)
        end
    end)
    -- sector:AddButton('Inf Cash',function()
    --     if workspace.NPCs.Manni:FindFirstChild('Manni') then 
    --         local ohInstance1 = workspace.NPCs.Manni.Manni
    --         local ohString2 = "{\"Level\":1,\"Name\":\"Red apple\",\"Amount\":1}"
    --         local ohString3 = ""
    --         local ohNumber4 = -10000
    --         game:GetService("ReplicatedStorage").RS.Remotes.Misc.BuyItem:InvokeServer(ohInstance1, ohString2, ohString3, ohNumber4)
    --     else
    --         azfakenotify('Has to be close to manny',5)
    --     end
    -- end)
    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)


    -- sector:AddButton('Infinite Level',function()
    --     task.spawn(function()
    --         azfakenotify('credits: skidnik',2)
    --         azfakenotify('you need explosive barrel',2)
    --         azfakenotify('this can crash you',5)
    --         local replicatedStorage = game:GetService("ReplicatedStorage");
    --         local npcs = Workspace.NPCs;
    --         local carryRemote = replicatedStorage.RS.Remotes.Misc.Carry;
            
    --         for i,v in next, npcs:GetChildren() do
    --             local shopName = v:FindFirstChild("Job",true);
    --             if not shopName or shopName.Value ~= "Shipwright" then continue; end
    --             task.spawn(function()
    --                 for i = 1, 1e4 do 
    --                     pcall(function()
    --                         carryRemote:FireServer("Sell",v.Model.Value)
    --                     end)
    --                 end
    --             end)
    --         end
    --     end)
    -- end)

    
    local speedtgl = sector:AddToggle('Speed',false,function(xstate)
        getgenv().arcaneodysseysettings['speedtoggle'] = xstate
    end)


    local ToggleBindFlySpeed = sector:AddToggle("Fly", false, function(e)
        getgenv()['arcaneodysseysettings']['flying'] = e
        if getgenv()['arcaneodysseysettings']['flying'] == false  then -- and getgenv().istyping == false
            -- getgenv().CFloop:Disconnect()
            --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
            Head.Anchored = false
            -- getgenv().CFloop = nil
        elseif getgenv()['arcaneodysseysettings']['flying'] == true and getgenv().istyping == false then

            Players = game.Players
            -- getgenv().flying = true
            task.spawn(function()
                repeat wait()
                until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
                local mouse = game.Players.LocalPlayer:GetMouse()
                repeat wait() until mouse
                local plr = game.Players.LocalPlayer
                local torso = plr.Character:WaitForChild('HumanoidRootPart')
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = getgenv()['arcaneodysseysettings']['flyspeed']
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = getgenv()['arcaneodysseysettings']['flyspeed'] --Options.FlySpeedSlide.Value
                            maxspeed = getgenv()['arcaneodysseysettings']['flyspeed']
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector    ))  * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until getgenv()['arcaneodysseysettings']['flying']  == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    plr.Character:WaitForChild('Humanoid').PlatformStand = false
                    print('stop flying')
                end
                mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)

    local ToggleBindNoclip= sector:AddToggle("Noclip", false, function(e)
        getgenv()['arcaneodysseysettings']['noclip'] = e 
        if getgenv()['arcaneodysseysettings']['noclip']  ==false and getgenv().istyping == false then
            getgenv()['arcaneodysseysettings']['noclipfunction']:Disconnect()
        elseif getgenv()['arcaneodysseysettings']['noclip']  == true and getgenv().istyping == false then --  
            task.wait(0.1)
            local function NoclipLoop()
                pcall(function()
                    if getgenv()['arcaneodysseysettings']['noclip']  == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
                        for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            pcall(function()
                                if child:IsA("BasePart") and child.CanCollide == true then
                                    child.CanCollide = false
                                end
                            end)
                        end
                    else
                        --getgenv()['pilgrammedsettings']['noclip'] = false -- if it was a global var like azfakeglobaltables[bloodlines]
                        -- it would enable it but wont be in the game
                        -- the games loop wouldnt run because it only recognises it in pilgrammed
                        getgenv().arcaneodysseysettings['noclip'] = false;
                        -- ToggleBindNoclip:Set(false)
                    end
                end)
            end
            getgenv()['pilgrammedsettings']['noclipfunction']  = game:GetService('RunService').Stepped:Connect(NoclipLoop)
        end
    end)
    sector:AddSlider("Speed", 0, 0, 250, 1, function(State)
        getgenv().arcaneodysseysettings['speed'] = State
    end)
    sector:AddSlider("Fly", 0, 0, 250, 1, function(State)
        getgenv().arcaneodysseysettings['flyspeed'] = State
    end)



    getgenv().AssignChestEsp = function(v)
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                local vect,onscreen = cam:worldToViewportPoint(v.Position)
                local distance = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local isactive = sectionesp['__OBJECT_EXISTS']
                if onscreen and isactive then 
                    sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                    sectionesp.Visible = true
                    sectionesp.Text = 'Chest: '..math.floor(distance)..'studs'
                    sectionesp.Color = getgenv().arcaneodysseysettings['chestespcolour']
                elseif not onscreen and isactive  then
                    sectionesp.Visible = false
                end -- chesp
                if getgenv().loopsUnload == true then 
                    print('keep running chest esp disconnect') 
                    pcall(function()
                        sectionesp:Remove(); 
                    end)
                    keeprunning:Disconnect() 
                end -- ; - :  
                if getgenv().arcaneodysseysettings['chestesp'] == false then 
                    print('keep running chest esp disconnect') 
                    pcall(function()
                        sectionesp:Remove(); 
                    end) 
                    keeprunning:Disconnect() 
                end
            
                -- if getgenv().pilgrammedsettings['savecpu'] then 
                --     -- if dist check if bigger than savecpudistance
                --     -- 
                --     if distance > getgenv().pilgrammedsettings['savecpudistance'] and isactive == true then 
                --         sectionesp:Remove() -- table insert removedesps,v
                --     else
                --         if not isactive  then 
                --             sectionesp = Drawing.new('Text')
                --             sectionesp.Visible = false
                --             sectionesp.Center = true 
                --             sectionesp.Outline = true 
                --             sectionesp.Font = 2 
                --             sectionesp.Size = 13
                --             sectionesp.Color = Color3.new(5,0,0)
                --             sectionesp.Text = '<>'
                --         end
                --     end
                -- end
            end)
        end -- add to global connections
        coroutine.wrap(updPosition)()
    end
    getgenv().chestespfunction = function()
        local connections = {}
        for _,v in next, game:GetService("Workspace").Map:GetChildren() do 
            if v:FindFirstChild('Chests') then 
                for k,chest in next, v:FindFirstChild('Chests'):GetChildren() do 
                    getgenv().AssignChestEsp(chest:FindFirstChildWhichIsA('MeshPart'))
                end
                local ctn; ctn = v:FindFirstChild('Chests').ChildAdded:Connect(function(chest) -- chechestst
                    getgenv().AssignChestEsp(chest:FindFirstChildWhichIsA('MeshPart'))
                end)
                table.insert(ctn,connections)
            end
        end
        return connections
    end;

    local cam = workspace.CurrentCamera
    local worldToViewportPoint = cam.worldToViewportPoint
    local head_offset =  Vector3.new(0,1.5,0)
    local leg_offset = Vector3.new(0,10,0)
    getgenv()['arcaneodysseysettings'].CreatePlayerEsp = function(v)
        -- print(v.Name)
        task.wait(0.1)
        -- 
            local esp = Drawing.new('Text')
            esp.Visible = false
            esp.Center = true 
            esp.Outline = true 
            esp.Font = 2 
            esp.Size = 13
            esp.Color = Color3.new(5,0,0)
            esp.Text = 'SEXY'

            local tracer = Drawing.new('Line')
            tracer.Visible = false
            tracer.Color = Color3.new(1,0,0)
            tracer.Thickness = 1 
            tracer.Transparency = 1 
            
            
            local box_o = Drawing.new('Square')
            box_o.Visible = false
            box_o.Color = Color3.new(0,0,0)
            box_o.Thickness = 2
            box_o.Transparency =1 
            box_o.Filled = false
            
            local box = Drawing.new('Square')
            box.Visible = false
            box.Color = Color3.new(1,0,0)
            box.Thickness = 1.5
            box.Transparency =1 
            box.Filled = false
        
            local hb_o = Drawing.new('Square')
            hb_o.Visible = false
            hb_o.Color = Color3.new(0,0,0)
            hb_o.Thickness = 1
            hb_o.Transparency =1 
            hb_o.Filled = false
            
            local hb = Drawing.new('Square')
            hb.Visible = false
            hb.Color = Color3.new(1,0,0)
            hb.Thickness = 1
            hb.Transparency =1 
            hb.Filled = true
            local health = Drawing.new('Text')
            health.Visible = false
            local distancex = Drawing.new('Text')
            distancex.Visible = false
        local function rootesp()
            local xkeeptracer
            local plsstoptracer = false
            cam = workspace.CurrentCamera
            xkeeptracer = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.2)
                if v and v.Character and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer and v.Character.Humanoid.Health >0 then 
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    if onscreen and getgenv()['arcaneodysseysettings']['playeresp'] and getgenv().tracers and tracer then 
                        tracer.From = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/1)
                        tracer.To = Vector2.new(vect.X,vect.Y)
                        tracer.Visible = true
                    else
                        tracer.Visible = false
                    end
                    if not v or getgenv().loopsUnload == true then 
                        plsstoptracer = true
                    end
                elseif not v or getgenv().loopsUnload == true or plsstoptracer then 
                    xkeeptracer:Disconnect()
                    if tracer then 
                        pcall(function()
                            tracer:Remove()
                        end)
                    end
                else
                    tracer.Visible = false
                end
            end) 
        end
        local function boxroot()
            local xkeeprunning 
            xkeeprunning = game:GetService('RunService').RenderStepped:Connect(function()
                task.wait(0.1)
                if v.Character and v.Character:FindFirstChild('Head') and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('HumanoidRootPart') and v ~= game.Players.LocalPlayer  then  -- and v.Character.Humanoid.Health >0
                    local vect,onscreen = cam:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    
                    local vroot = v.Character.HumanoidRootPart
                    local head = v.Character.Head
                    
                    local rootpos,rootvis = worldToViewportPoint(cam,vroot.Position)
                    local distance = (v.Character:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character:WaitForChild('HumanoidRootPart').Position).Magnitude
                    if distance < 30 and distance > 5 then head_offset = Vector3.new(0,1.2,0); leg_offset = Vector3.new(0,5,0) 
                    elseif distance < 100 and distance > 30 then head_offset = Vector3.new(0,1,0); leg_offset = Vector3.new(0,8,0)  end
                    local headpos = worldToViewportPoint(cam,vroot.Position + head_offset)
                    local legpos = worldToViewportPoint(cam,vroot.Position - leg_offset)
                    
                    if onscreen and getgenv()['arcaneodysseysettings']['playeresp'] and box then 
                        cam = workspace.CurrentCamera
                        --print('e: '..cam.ViewportSize.X..' '..tostring(rootpos)..' '..tostring(headpos)..' '..tostring(box_o))

    
                        if box_o and cam.ViewportSize and rootpos and headpos then 
                            box_o.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box_o.Position = Vector2.new(rootpos.X - box_o.Size.X / 1.5, rootpos.Y - box_o.Size.Y / 2)
                            box_o.Visible = true 
                        end
                        if box then 
                            box.Size = Vector2.new(cam.ViewportSize.X/2/rootpos.Z,headpos.Y - legpos.Y)
                            box.Position = Vector2.new(rootpos.X - box.Size.X / 2, rootpos.Y - box.Size.Y / 2)
                            box.Visible = true
                        end

                        hb_o.Size = Vector2.new(2,headpos.Y - legpos.Y)
                        hb_o.Position = box_o.Position - Vector2.new(6,0)
                        hb_o.Visible = true
                        hb.Size = Vector2.new(2,(headpos.Y - legpos.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0 , v.Character.Humanoid.MaxHealth) ))
                        hb.Position = Vector2.new(box.Position.X - 6,box.Position.Y + (1/hb.Size.Y))
                        hb.Color = Color3.fromRGB(255-255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),255/(v.Character.Humanoid.MaxHealth /v.Character.Humanoid.Health ),0)
                        hb.Visible = true

                        -- local Talents = #v.Backpack:GetChildren()-1
                        -- local Power = Talents--#Talents-1
                        esp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,-15)
                        esp.Color = getgenv()['arcaneodysseysettings']['playerespcolour']
                        local preframework = getgenv()['arcaneodysseysettings']['espframework']
                        
                        preframework =string.gsub(
                            preframework,
                            '{name}',
                            v.Name
                        )
                        preframework = string.gsub(
                            preframework,
                            '{distance}',
                            tostring(math.floor(distance))..'s'
                        )
                        preframework = string.gsub(
                            preframework,
                            '{health}',
                            math.floor(v.Character.Humanoid.Health)..'/'..math.floor(v.Character.Humanoid.MaxHealth)--..' '..(math.floor(v.Character.Humanoid.Health) /  math.floor(v.Character.Humanoid.MaxHealth) * 100)..'%' -- add percentage
                        )
                        esp.Text = preframework
                        if getgenv()['arcaneodysseysettings']['playeresp'] == true then esp.Visible = true end
                     
                    else
                        pcall(function()
                            box.Visible = false
                        end)
                        pcall(function()
                            box_o.Visible = false
                        end)
                        pcall(function()
                            hb.Visible = false
                        end)
                        pcall(function()
                            hb_o.Visible = false
                        end)
                        pcall(function()
                            esp.Visible = false
                        end)
                        pcall(function()
                            distancex.Visible = false 
                        end)
                        pcall(function()
                            health.Visible = false
                        end)
                       
                        
                        
                    end
                end
                if not game.Players:FindFirstChild(v.Name) or getgenv().loopsUnload == true or getgenv()['arcaneodysseysettings']['playeresp'] == false then 
                    xkeeprunning:Disconnect()
                    pcall(function()
                        box:Remove()
                    end)
                    pcall(function()
                        box_o:Remove()
                    end)
                    pcall(function()
                        hb:Remove()
                    end)
                    pcall(function()
                        hb_o:Remove()
                    end)
                    pcall(function()
                        esp:Remove()
                    end)
                    pcall(function()
                        distancex:Remove()
                    end)
                    pcall(function()
                        health:Remove()
                    end)
                end
            end) 
        end
        task.spawn(function()
            coroutine.wrap(rootesp)()
            coroutine.wrap(boxroot)()
        end)

    end

    -- arc - arcaneodysseysettings


    espsector:AddToggle('Player Esp',false,function(xstate)
        getgenv().arcaneodysseysettings['playeresp'] = xstate
        for _,v in next, game:GetService('Players'):GetPlayers() do 
            if getgenv()['arcaneodysseysettings']['playeresp'] == true then 
                getgenv()['arcaneodysseysettings'].CreatePlayerEsp(v)
            end 
        end   
    end)
    espsector:AddToggle('Chest Esp',false,function(xstate)
        getgenv().arcaneodysseysettings['chestesp'] = xstate
        if getgenv().arcaneodysseysettings['chestesp'] == true then 
            local chestaddeds = getgenv().chestespfunction()
            task.spawn(function()
                repeat task.wait() until getgenv().arcaneodysseysettings['chestesp'] == false or getgenv().loopsUnload == true 
                for _,v in next, chestaddeds do 
                    v:Disconnect()
                end
            end)
        end
    end)

    espsector:AddColorpicker('Chest Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().arcaneodysseysettings['chestespcolour'] = xstate
    end)

    espsector:AddColorpicker('Player Colour',Color3.fromRGB(255, 255,255),function(xstate)
        getgenv().arcaneodysseysettings['playerespcolour'] = xstate
    end)
    








    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if call_type == 'DealWeaponDamage'  then 
            if args[3] and game.Players.LocalPlayer.Character ~= nil and args[3] == game.Players.LocalPlayer.Character and getgenv().arcaneodysseysettings['godmode'] then 
                return
            end 
            -- metahook(self,...)
            -- metahook(self,...)
            -- metahook(self,...)
            -- return metahook(self,unpack({
            --     1;args[2];args[3];args[4];args[5]
            -- }))
        elseif call_type == 'FireServer' and self.Name == 'StaminaCost' and getgenv().arcaneodysseysettings['infinitestamina'] == true then 
            args[1] = 0
            return metahook(self,unpack(args))
        end
        return metahook(self,...)
    end)
    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

    -- local ohNumber1 = 0
    -- local ohInstance2 = workspace["8qxl0"]
    -- local ohInstance3 = workspace.Enemies["Rookie Pirate"]
    -- local ohInstance4 = workspace["8qxl0"]["Old Dagger"]
    -- local ohString5 = "Slash"

    -- game:GetService("ReplicatedStorage").RS.Remotes.Combat.DealWeaponDamage:FireServer(ohNumber1, ohInstance2, ohInstance3, ohInstance4, ohString5)

    local metaindex;
    metaindex = hookmetamethod(game,'__index',newcclosure(function(self,property)
        if tostring(self) == 'UnloadAt' and tostring(property) == 'Value' and getgenv().arcaneodysseysettings['loadmap'] == true then 
            return math.huge 
        elseif tostring(self) == 'UnloadDetailsAt' and tostring(property) == 'Value' and getgenv().arcaneodysseysettings['loadmap'] == true then 
            return math.huge
        end
        return metaindex(self,property)
    end))



    task.spawn(function()
        while task.wait(0.01) do 
            if getgenv().loopsUnload == true then print('odyssey break end') break end

            -- if getgenv().arcaneodysseysettings['godmode'] == true then 
            --     local ohNumber1 = 0.001
            --     local ohString2 = "Dodge"

            --     game:GetService("ReplicatedStorage").RS.Remotes.Combat.StaminaCost:FireServer(ohNumber1, ohString2)
            -- end
            if getgenv()['arcaneodysseysettings']['speedtoggle'] == true then 
                
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health > 0 then 
                    getgenv().arcaneodysseysettings['speedtoggle'] = nil
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().arcaneodysseysettings['speed']
                    local connection; connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()-- getpropertychangedsignal could be used here 
                        game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().arcaneodysseysettings['speed']
                    end) 
                    task.spawn(function()
                        repeat task.wait() until getgenv().arcaneodysseysettings['speedtoggle'] == false or getgenv().loopsUnload == true 
                        connection:Disconnect()
                    end)

                end
            end
            if getgenv().arcaneodysseysettings['loadmap'] == true then 
                for _,v in next, game.ReplicatedStorage.RS:GetChildren() do 
                    -- local success = pcall(string.split,v.Name,'Unload')
                    -- print(success)
                    local unloadsplit = string.split(v.Name,'Unload');
                    local RegistrationDirectory = {
                        ['Enemies'] = workspace.Enemies;
                        ['Bosses'] = workspace.Enemies;
                    }
                    local wasfound = false
                    if unloadsplit[1] ~= nil and unloadsplit[2] ~= nil then 
                        wasfound = true;
                        local foundreg,regvalue = false,nil
                        for reg,val in next, RegistrationDirectory do 
                            if unloadsplit[2] == reg then 
                                foundreg = true;
                                regvalue = val;
                                break
                            end
                        end
                        if foundreg == true then 
                            for k,c in next, v:GetChildren() do 
                                c.Parent = regvalue;
                            end
                        else
                            if unloadsplit[2] == 'Islands' then 
                                for i,mapfolder in next, v:GetChildren() do -- function to unpack folder and put all its children into another
                                    local splitwithout = string.split(mapfolder.Name,'_')
                                    -- print(splitwithout)
                                    if workspace.Map:FindFirstChild(splitwithout[1]) then 
                                        for kc,c in next, mapfolder:GetChildren() do 
                                            c.Parent = workspace.Map:FindFirstChild(mapfolder.Name)
                                        end
                                    else

                                        print('couldnt find map')
                                    end
                                end
                            end
    
                        end
                        -- if foundreg == true then 
                        --     for k,c in next, v:GetChildren() do 
                        --         c.Parent = regvalue;
                        --     end
                        -- else
                        --     if unloadsplit[2] == 'Islands' then 
                        --         for i,mapfolder in next, v:GetChildren() do -- function to unpack folder and put all its children into another
                        --             local splitwithout = string.split(mapfolder.Name,'_')
                        --             -- print(splitwithout)
                        --             if workspace.Map:FindFirstChild(splitwithout[1]) then 
                        --                 for kc,c in next, mapfolder:GetChildren() do 
                        --                     c.Parent = workspace.Map:FindFirstChild(mapfolder.Name)
                        --                 end
                        --             else

                        --                 print('couldnt find map')
                        --             end
                        --         end
                        --     end
                        -- end
                       -- local found = azfake.find(v,{''})
 
                    end
                    if wasfound == false then 
                        local foundreg,regvalue = false,nil
                        for reg,val in next, RegistrationDirectory do 
                            if v.Name == reg then 
                                foundreg = true;
                                regvalue = val;
                                break
                            end
                        end
                        if foundreg == true then 
                            for k,c in next, v:GetChildren() do 
                                c.Parent = regvalue;
                            end
                        end
                    end
                end
            end

            if getgenv().arcaneodysseysettings['loadnpcs'] == true then -- only run when loadmap runs
                for _,v in next, game.ReplicatedStorage.RS:GetChildren() do 
                    -- local success = pcall(string.split,v.Name,'Unload')
                    -- print(success)
                    local unloadsplit = string.split(v.Name,'Unload');
                    local RegistrationDirectory = {
                        ['NPCs'] = workspace.NPCs;
                    }
                    local wasfound = false
                    if unloadsplit[1] ~= nil and unloadsplit[2] ~= nil then 
                        wasfound = true;
                        local foundreg,regvalue = false,nil
                        for reg,val in next, RegistrationDirectory do 
                            if unloadsplit[2] == reg then 
                                foundreg = true;
                                regvalue = val;
                                break
                            end
                        end
                        if foundreg == true then 
                            for k,c in next, v:GetChildren() do 
                                c.Parent = regvalue:FindFirstChild(c.Name);
                            end
                        end 
                    end
                end
            end

            if getgenv().arcaneodysseysettings['breaknpcs'] == true then 
                local dir = game:GetService("Workspace").Enemies
                for _,v in next, dir:GetChildren() do 
                    if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('HumanoidRootPart') and v.PrimaryPart ~= nil and v ~= game.Players.LocalPlayer.Character and v:FindFirstChildWhichIsA('Humanoid') then 
                        if isnetworkowner(v.PrimaryPart) then
                            pcall(function()
                                local PERC = 70 * v:FindFirstChildWhichIsA('Humanoid').MaxHealth / 100
                                if v:FindFirstChildWhichIsA('Humanoid').Health > PERC then 

                                    v:FindFirstChild('HumanoidRootPart').CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,-6)
                                else
                                    -- v:FindFirstChild('Humanoid').Health = 0
                                    -- v:FindFirstChild('Head'):Destroy()
                                    v:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(0,-math.huge,0)
                                end
                                
                            end)
                        end
                    end  
                end  
            end
            if getgenv().arcaneodysseysettings['killaura'] == true then 
                for i,v in pairs(workspace.Enemies:GetChildren()) do
                    if game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Tool') and v:IsA("Model") and v:FindFirstChildWhichIsA("Humanoid") and v:FindFirstChildWhichIsA("Humanoid").Health > 0 and  game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) < 21 then
                        local args = {
                            [1] = 0,
                            [2] = game:GetService('Players').LocalPlayer.Character,
                            [3] = v,
                            [4] = game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Tool'),
                            [5] = 'Slash'
                        }
                        game:GetService('ReplicatedStorage').RS.Remotes.Combat.DealWeaponDamage:FireServer(unpack(args))
                    end
                end
            end

            if getgenv().arcaneodysseysettings['autoopenchest'] == true and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                for _,v in next, game:GetService("Workspace").Map:GetChildren() do 
                    if v:FindFirstChild('Chests') then 
                        for k,chest in next, v:FindFirstChild('Chests'):GetChildren() do 
                            if v:FindFirstChildWhichIsA('MeshPart') then  
                                local dist = (v:FindFirstChildWhichIsA('MeshPart').Position - game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position)
                                if dist.Magnitude < 10 then 
                                    game:GetService("ReplicatedStorage").RS.Remotes.Misc.OpenChest:FireServer(chest)
                                    for e,d in next, v:GetDescendants() do 
                                        if d.Name == 'Prompt' then 
                                            azfake.fireproximitypromt(d)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if getgenv().arcaneodysseysettings['chestfarm'] == true then 
                getgenv().arcaneodysseysettings['chestfarm'] = nil 
                for _,v in next, game:GetService("Workspace").Map:GetChildren() do 
                    if v:FindFirstChild('Chests') then 
                        repeat 
                            task.wait()
                            for k,chest in next, v:FindFirstChild('Chests'):GetChildren() do 
                                if getgenv().arcaneodysseysettings['chestfarm'] == nil and chest:FindFirstChildWhichIsA('MeshPart') then 
                                    game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = chest:FindFirstChildWhichIsA('MeshPart').CFrame
                                    task.wait(getgenv().arcaneodysseysettings['chestfarmdelay'])
                                end
                            end
                        until getgenv().arcaneodysseysettings['chestfarm'] == false or getgenv().loopsUnload == true
                    end
                end
            end
        end
    end)
    --game:GetService("Workspace").Map["Elm Island"].TempChests["Treasure Chest"]

elseif game.PlaceId == 11320933137 then 
    local tab = window:CreateTab(gameName)
    local betsector = tab:CreateSector('Cheats','left')

    getgenv().vbet1bet = {
        amountofmines = 0;
        safespotmaximum = 3;
    }

    betsector:AddTextbox('Amount of Mines','',function(xstate)
        if tonumber(xstate) then 
            getgenv().vbet1bet['amountofmines'] = tonumber(xstate)
            azfakenotify('Amount of mines set to: '..getgenv().vbet1bet['amountofmines'] ,2 )
        else
            azfakenotify('Unable to convert '..tostring(xstate)..' to a number',2)
        end
    end)
    betsector:AddTextbox('Safe Spots','',function(xstate)
        if tonumber(xstate) then 
            getgenv().vbet1bet['safespotmaximum'] = tonumber(xstate)
            azfakenotify('Safe Spots amount'..getgenv().vbet1bet['safespotmaximum'],2 )
        else
            azfakenotify('Unable to convert '..tostring(xstate)..' to a number',2)
        end
    end)
    getgenv().PredictMinesFunction = function()

    end
    betsector:AddButton('Predict Mines',function()
        if game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Background.Games["Game_Mines"]:FindFirstChild('Active').Value == true then 

            return azfakenotify('Mines unable to calculate','untilClick')
        end
        local mines = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Background.Games["Game_Mines"].Minefield
        local amountofmines = 0
        for _,v in next, mines:GetChildren() do 
            if v.Name == 'Mine' then amountofmines += 1 end -- v.Names
            if v:FindFirstChild('prediction') then v:FindFirstChild('prediction'):Destroy() end
            if v:FindFirstChildWhichIsA('TextLabel') then v:FindFirstChildWhichIsA('TextLabel'):Destroy() end
        end
        for i=1, getgenv().vbet1bet['safespotmaximum'] do 
            local selection = mines:GetChildren()[math.random(2,amountofmines)]
            local label = Instance.new('TextLabel',selection);
            label.Name = 'prediction'
            label.BackgroundTransparency = 1;
            label.TextColor3 = Color3.fromRGB(255,255,255)
            label.Text = 'Safe spot'
            label.Position = selection.Position + UDim2.fromScale(0.5,0.5)
        end
    end)
    betsector:AddButton('Predict Crash',function()
        local Multis = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Background.Games["Game_Crash"].PastMultis
        local multi = 1
        for _,v in next, Multis:GetChildren() do 
            if v:IsA('TextButton') and _ > #Multis:GetChildren()-2 then 
                local number = tonumber(string.split(v.Text,'x')[1])
                multi = number * multi*0.1 / math.random(1,2)
            end
        end 
        multi = multi / math.random(1,2) * math.random(5,9) * (0.9*math.random(1,4)) *1.4 + (1.01)

        azfakenotify('Crash expected to be around '..tostring(multi),1)
    end)

    betsector:AddLabel('Uses luck to predict')
elseif game.PlaceId == 6008108575 then 
    local tab = window:CreateTab(gameName)
    local esptab = window:CreateTab('ESP')
    local sector = tab:CreateSector('Cheats','left')


    getgenv().nst1settings = {
        nocooldown = false;
        playeresp =false;
        maxviewplayerdistance = 100;
        nocooldownrejections = {};
        nocooldowndetections = {
            'Ragdolled';
            --'Blocking';
            --'ShieldBlocking';
            'SoftStun';
            'Attacking';
            'Stun';
            'NoRun';
        };
        attackspeed = 1;
        useattackspeed = false;
        usewalkspeed = false;
        walkseped = 16;
    }





    sector:AddToggle('No Delay',false,function(xstate)
        getgenv().nst1settings['nocooldown']  = xstate
    end)
    sector:AddToggle('Attack Speed',false,function(xstate)
        getgenv().nst1settings['useattackspeed']  = xstate
    end)
    sector:AddSlider('Attack Speed',0,1,100,1,function(xstate)
        getgenv().nst1settings['attackspeed'] = xstate
    end)
    sector:AddToggle('WalkSpeed',false,function(xstate)
        getgenv().nst1settings['usewalkspeed']  = xstate
    end)
    sector:AddSlider('WalkSpeed',0,1,40,1,function(xstate)
        getgenv().nst1settings['walkseped'] = xstate
    end)

    local playerespsector = esptab:CreateSector('Player Esp','left')
    playerespsector:AddToggle("Player ESP", false, function(xstate)
        getgenv().nst1settings['playeresp'] = xstate
        if getgenv().nst1settings['playeresp'] == true then 
            for _,loop_player in next, game.Players:GetChildren() do 
                --if not table.find(game.Players:GetPlayers())
                local v = loop_player.Character
                local loop_character = loop_player.Character
                task.spawn(function()
                    local __assigned = azfake.__esp__call(loop_player,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            --__assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;
                        playersettings = true;
                        maxdistance = getgenv().nst1settings['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
                            __assigned.object.Text = loop_character.Name..' - '..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                        end
                        __assigned.maxdistance = getgenv().nst1settings['maxviewplayerdistance']
                        __assigned.checkingvalue = getgenv().nst1settings['playeresp']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.waitingvalue = false;
                end)
            end
            local DirectoryAdded = game.Players.ChildAdded:Connect(function(loop_player)

                local v = loop_player.Character
                local loop_character = loop_player.Character
                task.spawn(function()
                    local __assigned = azfake.__esp__call(loop_player,{
                        esptext = '..';
                        ['removedcallback'] = function()
                            --__assigned.object:Remove()
                        end; -- ojbecy
                        ['inloopfunction'] = function()
                            --
                        end;
                        playersettings = true;
                        maxdistance = getgenv().nst1settings['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                    })
                    __assigned.inloopfunction = function()-- whati f no max health
                        if loop_player.Character:FindFirstChild('HumanoidRootPart') and loop_player.Character:FindFirstChild('Humanoid') then 
                            __assigned.object.Text = loop_character.Name..' - '..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(loop_character:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                        end
                        __assigned.maxdistance = getgenv().nst1settings['maxviewplayerdistance']
                        __assigned.checkingvalue = getgenv().nst1settings['playeresp']
                    end
                    __assigned.removedcallback = function()
                        pcall(function()
                            __assigned.object:Remove()
                        end)
                    end
                    __assigned.waitingvalue = false;
                end)
                -- if not game.Players:FindFirstChild(v.Name) then 
                --     task.spawn(function()
                --         local __assigned = azfake.__esp__call(v,{
                --             esptext = '..';
                --             ['removedcallback'] = function()
                --                 __assigned.object:Remove()
                --             end; -- ojbecy
                --             ['inloopfunction'] = function()
                --                 --
                --             end;
                --             charactersettings = true;
                --             maxdistance = getgenv().fightlocalgame['maxviewplayerdistance'] -- getgenv().fightlocalgame['maxplayermobdistance'];
                --         })
                --         __assigned.inloopfunction = function()-- whati f no max health
                --             __assigned.object.Text = v.Name..' - '..math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth)..'  '..(math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)/math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth))*100
                --             __assigned.maxdistance = getgenv().fightlocalgame['maxviewplayerdistance']
                --         end
                --         __assigned.removedcallback = function()
                --             pcall(function()
                --                 __assigned.object:Remove()
                --             end)
                --         end
                --         __assigned.checkingvalue = getgenv().fightlocalgame['playeresp']
                --         __assigned.waitingvalue = false;
                --     end)
                -- end
            end)
            task.spawn(function()
                repeat task.wait(.3) until getgenv().loopsUnload == true ;
                DirectoryAdded:Disconnect()
            end)
        end
    end)
    playerespsector:AddSlider('Player Esp Distance',0,100,10000,1,function(xstate)
        getgenv().fightlocalgame['maxviewplayerdistance'] = xstate -- maxplayermobdistance
    end)

    task.spawn(function()
        while task.wait(0.1) do 
            if getgenv().loopsUnload == true then print('nst loop break') break end
            if getgenv().nst1settings['nocooldown'] == true and game.Players.LocalPlayer.Character then 
                for _,v in next, game.Players.LocalPlayer.Character:GetChildren() do -- table.find(getgenv().nst1settings['nocooldowndetections',v.Name]) 
                    if table.find(getgenv().nst1settings['nocooldowndetections'],v.Name) then -- getgenv().nst1settings['nocooldowndetections',v.Name]
                        v:Destroy()
                    end
                end
            end
            if getgenv().nst1settings['useattackspeed'] == true and game.Players.LocalPlayer.Character:FindFirstChild('Values') then 
                game.Players.LocalPlayer.Character:FindFirstChild('Values'):FindFirstChild('AttackSpeed').Value = getgenv().nst1settings['attackspeed'] 
            end
            if getgenv().nst1settings['usewalkspeed'] == true and game.Players.LocalPlayer.Character:FindFirstChild('Values') then 
                game.Players.LocalPlayer.Character:FindFirstChild('Values'):FindFirstChild('WalkSpeed').Value = getgenv().nst1settings['walkseped'] 
            end
            --game.Players.LocalPlayer.Character.Values.
        end
    end)

elseif game.PlaceId == 8651781069 then 
    local tab = window:CreateTab(gameName)
    local esptab = window:CreateTab('ESP')
    local sector = tab:CreateSector('Cheats','left')
    local espsector = esptab:CreateSector('Cheats','left')
    getgenv().voxlsettings = {
        rollbacking = false;
        antivoid = false;
        flying = false;
        flyspeed = 0;
        istyping = false;
        walkspeed = false;
        walkspeedspeed = 0;--walskee
        savecpu = false;
        savecpudistance = 0;
        mobesp = false;
        mobespcolour = Color3.fromRGB(255,255,255);
        noclip = false;
        noclippingfunction = nil;
    }
    setupAimbotTab(getgenv().voxlsettings)

    game:GetService('UserInputService').InputBegan:Connect(function(key,istyping)
        getgenv().voxlsettings['istyping'] = istyping
    end)
    game:GetService('UserInputService').InputEnded:Connect(function(key,istyping)
        getgenv().voxlsettings['istyping'] = istyping
    end)

    sector:AddToggle('Anti Void',false,function(xstate)
        getgenv().voxlsettings['antivoid'] = xstate;
        if getgenv().voxlsettings['antivoid'] == true then 
            for _,v in next, game:GetService("Workspace").Void:GetChildren() do 
                for i,voidpart in next, v:GetChildren() do 
                    voidpart.CanCollide = false;
                    voidpart.CanTouch = false;
                end
            end
        end
    end)
    local ToggleBindFlySpeed = sector:AddToggle("Fly", false, function(e)
        getgenv().voxlsettings['flying'] = e
        if getgenv().voxlsettings['flying'] == false  then -- and getgenv().istyping == false
            -- getgenv().CFloop:Disconnect()
            --game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            local Head = game.Players.LocalPlayer.Character:WaitForChild("Head")
            Head.Anchored = false
            -- getgenv().CFloop = nil
        elseif getgenv().voxlsettings['flying'] == true and getgenv().voxlsettings['istyping'] == false then

            Players = game.Players
            -- getgenv().flying = true
            task.spawn(function()
                repeat wait()
                until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
                local mouse = game.Players.LocalPlayer:GetMouse()
                repeat wait() until mouse
                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
                local plr = game.Players.LocalPlayer
                local torso = plr.Character.HumanoidRootPart
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = getgenv().voxlsettings['flyspeed']
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:findFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = getgenv().voxlsettings['flyspeed'] --Options.FlySpeedSlide.Value
                            maxspeed = getgenv().voxlsettings['flyspeed']
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until getgenv().voxlsettings['flying'] == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    plr.Character:WaitForChild('Humanoid').PlatformStand = false
                    print('stop flying')
                end
                mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)
    sector:AddSlider('Fly Speed',0,0,250,1,function(xstate)
        getgenv().voxlsettings['flyspeed'] = xstate
    end)
    local ToggleBindNoclip = sector:AddToggle("Noclip", false, function(e)
        if getgenv().voxlsettings['istyping'] == false then 
            getgenv().voxlsettings['noclip'] = e 
        end
        if getgenv().voxlsettings['noclip'] == false then
            getgenv().voxlsettings['noclippingfunction']:Disconnect()
        elseif getgenv().voxlsettings['noclip']  then --  
            -- task.wait(0.1)
            -- local function NoclipLoop()
            --     if getgenv()['pilgrammedsettings']['noclip']  == true and game.Players.LocalPlayer.Character  and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health >= 0 then
            -- end
            getgenv().voxlsettings['noclippingfunction'] = game:GetService('RunService').Stepped:Connect(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Part") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
            end)
        end
    end)
    local walkspeedtoggle = sector:AddToggle('WalkSpeed',false,function(xstate)
        getgenv().voxlsettings['walkspeed'] = xstate
    end)
    sector:AddSlider('Speed',0,0,250,1,function(xstate)
        getgenv().voxlsettings['walkspeedspeed'] = xstate
    end)
    ToggleBindFlySpeed:AddKeybind()
    if getgenv().adminCheck == true then 
        sector:AddToggle('Rollback',false,function(xstate)
            getgenv().voxlsettings['rollbacking'] = xstate
        end)
    end

    

    getgenv().MobEsp = function(v) 
        local sectionesp = Drawing.new('Text')
        sectionesp.Visible = false
        sectionesp.Center = true 
        sectionesp.Outline = true 
        sectionesp.Font = 2 
        sectionesp.Size = 13
        sectionesp.Color = Color3.new(5,0,0)
        sectionesp.Text = '<>'
        local function updPosition()
            local keeprunning = nil 
            local cam = workspace.CurrentCamera
            keeprunning = game:GetService('RunService').RenderStepped:Connect(function() -- global loop
                if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChildWhichIsA('Humanoid') then 
                    local vect,onscreen = cam:worldToViewportPoint(v.HumanoidRootPart.Position)
                    local distance = (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    local isactive = sectionesp['__OBJECT_EXISTS']
                    if onscreen and isactive  then 
                        sectionesp.Position = Vector2.new(vect.X,vect.Y ) + Vector2.new(0,15)
                        sectionesp.Visible = true
                        local subtext = v.Name..'    '..math.floor(distance)..' studs'
                        subtext = subtext..string.rep(' ',math.floor(string.len(subtext)/2))..'['..math.floor(v:FindFirstChildWhichIsA('Humanoid').Health)..'/'..math.floor(v:FindFirstChildWhichIsA('Humanoid').MaxHealth)..']'
                        sectionesp.Text = subtext
                        sectionesp.Color = getgenv().voxlsettings['mobespcolour']
                    elseif not onscreen and isactive  then
                        sectionesp.Visible = false
                    end
                    if getgenv().loopsUnload == true then 
                        print('keep running mob esp disconnect') 
                        pcall(function()
                            sectionesp:Remove(); 
                        end) 
                        keeprunning:Disconnect() 
                    end -- ; - :  
                    if getgenv().voxlsettings['mobesp'] == false then 
                        print('keep running mob esp disconnect') 
                        pcall(function()
                            sectionesp:Remove(); 
                        end) 
                        keeprunning:Disconnect() 
                    end
                    
                    
                    if getgenv().voxlsettings['savecpu'] then 
                        -- if dist check if bigger than savecpudistance
                        -- 
                        if distance > getgenv().voxlsettings['savecpudistance'] and isactive == true then 
                            pcall(function()
                                sectionesp:Remove() -- table insert removedesps,v
                            end)    
                        else
                            if not isactive  then 

                                sectionesp = Drawing.new('Text')
                                pcall(function()
                                    sectionesp.Visible = false
                                end)
                                pcall(function()
                                    sectionesp.Center = true 
                                end)
                                pcall(function()
                                    sectionesp.Outline = true 
                                end)
                                pcall(function()
                                    sectionesp.Font = 2 
                                end)
                                pcall(function()
                                    sectionesp.Size = 13
                                end)
                                pcall(function()
                                    sectionesp.Color = Color3.new(5,0,0)
                                end)
                                pcall(function()
                                    sectionesp.Text = '<>'
                                end)
                                
                                
                                
                                
                                
                                
                                
                            end
                        end
                    end
                else
                    print('no humanoidrootpart break end'); 
                    pcall(function()
                        sectionesp:Remove();
                    end)
                    pcall(function()
                        keeprunning:Disconnect()
                    end)
                    
                end
            end)
        end
        coroutine.wrap(updPosition)()
    end 





    espsector:AddToggle('MOB Esp',false,function(xstate)
        getgenv().voxlsettings['mobesp'] = xstate -- wait a second and see if its still false to do this
        local vaddeconnections = {} -- P{}
        for _,v in next, game:GetService("Workspace").NPCS:GetChildren() do 
            local mob = v:FindFirstChildWhichIsA('Model')
            if mob then 
                task.spawn(function()
                    getgenv().MobEsp(mob)
                    -- local __assigned = azfake.__esp__call(v,{
                    --     esptext = 'Trinket';
                    --     ['removedcallback'] = function()
                    --         __assigned.object:Remove()
                    --     end; -- ojbecy
                    --     ['inloopfunction'] = function()
                            
                    --         -- __assigned.object.Text = 'Trinket'
                    --         -- __assigned.maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance']
                    --     end;
                    --     maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance'];
                    -- })
                    -- __assigned.inloopfunction = function()
                    --     __assigned.object.Text = 'Trinket'
                    --     __assigned.maxdistance = getgenv().fightlocalgame['maxviewtrinketdistance']
                    -- end
                    -- __assigned.removedcallback = function()
                    --     pcall(function()
                    --         __assigned.object:Remove()
                    --     end)
                    -- end
                    -- __assigned.checkingvalue = getgenv().fightlocalgame['trinketesp']
                    -- __assigned.waitingvalue = false;
                end)
            end
            local vadded = v.ChildAdded:Connect(function(child)
                if child:IsA('Model') then 
                    getgenv().MobEsp(child)
                end
            end)
            table.insert(vaddeconnections,vadded)
        end
        local npcadded = game:GetService("Workspace").NPCS.ChildAdded:Connect(function(child)
            task.wait(2)
            if child:FindFirstChildWhichIsA('Model') then 
                getgenv().MobEsp(child:FindFirstChildWhichIsA('Model'))
            end
        end)
        task.spawn(function()
            repeat task.wait() until getgenv().voxlsettings['mobesp'] == false or getgenv().loopsUnload == true 
            npcadded:Disconnect()
            for _,v in next, vaddeconnections do 
                v:Disconnect()
            end
        end)
    end) -- mob esp distance
    espsector:AddColorpicker('Mob Esp Colour',Color3.fromRGB(255,255,255),function(xstate)
        getgenv().voxlsettings['mobespcolour'] = xstate
    end)
    espsector:AddToggle('Save CPU',false,function(xstate)
        getgenv().voxlsettings['savecpu'] = xstate
    end)
    espsector:AddSlider('Save CPU Distance',0,0,10000,1,function(xstate)
        getgenv().voxlsettings['savecpudistance'] = xstate
    end)
    -- otheresp:AddColorpicker('Mob Colour',Color3.fromRGB(255, 255,255),function(xstate)
    --     getgenv().pilgrammedsettings['mobespcolour'] = xstate
    -- end)

    task.spawn(function()
        while task.wait(0.1) do 
            if getgenv().loopsUnload == true then print('voxl loop break') break end
            if getgenv().voxlsettings['walkspeed'] == true then 
                getgenv().voxlsettings['walkspeed'] = nil;
                repeat task.wait() until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
                local speedconnection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().voxlsettings['walkspeedspeed']
                end)
                local disconnectedspeed = false
                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().voxlsettings['walkspeedspeed']
                task.spawn(function()
                    repeat task.wait() until getgenv().loopsUnload == true or getgenv().voxlsettings['walkspeed'] == false;
                    speedconnection:Disconnect();
                    disconnectedspeed = true
                end)
                task.spawn(function()
                    repeat task.wait() until not game.Players.LocalPlayer.Character or not game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
                    if disconnectedspeed == false then 
                        getgenv().voxlsettings['walkspeed'] = false;
                        task.wait(1)
                        repeat task.wait() until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
                        getgenv().voxlsettings['walkspeed'] = true
                    end
                end)
            end
            if getgenv().voxlsettings['rollbacking'] == true then 
                getgenv().voxlsettings['rollbacking'] = nil 
                azfakenotify('Rolling Back Data',2)
                task.spawn(function()
                    while task.wait(0) do 
                        if getgenv().loopsUnload == true then print('rollback data loop break') end;
                        if getgenv().voxlsettings['rollbacking'] == false then 
                            local ohTable1 = {
                                ["CantripKeybind"] = "N",
                                ["DropsEnabled"] = 2,
                                ["MouselockKeybind"] = "LeftControl",
                                ["BlockKeybind"] = "F",
                                ["MenuKeybind"] = "M",
                                ["WeaponArtKeybind"] = "Q",
                                ["RuneKeybind"] = "R",
                                ["RollKeybind"] = "C",
                                ["DPSOn"] = false,
                                ["InteractKeybind"] = "E",
                                ["ToggleSprint"] = false,
                                ["HelmetToggle"] = true,
                                ["ScreenshakeOn"] = true,
                                ["SprintKeybind"] = "LeftShift",
                                ["AutotrackQuest"] = true,
                                ["EquipKeybind"] = "One",
                                ["MusicVolume"] = 1
                            }
                            
                            game:GetService("ReplicatedStorage").Events.ApplySettings:FireServer(ohTable1)
                        break end
                        local ohTable1 = {
                            ["CantripKeybind"] = "N\255",
                            ["DropsEnabled"] = 2,
                            ["MouselockKeybind"] = "LeftControl",
                            ["BlockKeybind"] = "F",
                            ["MenuKeybind"] = "M",
                            ["WeaponArtKeybind"] = "Q",
                            ["RuneKeybind"] = "R",
                            ["RollKeybind"] = "C",
                            ["DPSOn"] = false,
                            ["InteractKeybind"] = "E",
                            ["ToggleSprint"] = false,
                            ["HelmetToggle"] = true,
                            ["ScreenshakeOn"] = true,
                            ["SprintKeybind"] = "LeftShift",
                            ["AutotrackQuest"] = true,
                            ["EquipKeybind"] = "One",
                            ["MusicVolume"] = 1
                        }
                        
                        game:GetService("ReplicatedStorage").Events.ApplySettings:FireServer(ohTable1)
                    end
                end)
                task.delay(1,function()
                    azfakenotify('Data after this point wont save','untilClick')
                end)
            end
        end
    end)


    AddConfigurations()
elseif game.PlaceId == 2483973525 then 
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')

    getgenv().dsbasettings = {
        instagrab = false;
        bringing = {
            ['Villagers'] = false;
            ['Demon Slayers'] = false;
            ['Demons'] = false;
        };
        bringfilter = {
            'Villagers';
            'Demon Slayers';
            'Demons';
        };
        distance = 0;
    }
    
    sector:AddToggle('Insta Grab',false,function(xstate)
        getgenv().dsbasettings['instagrab'] = xstate
    end)
    sector:AddDropdown('Grab Filter',getgenv().dsbasettings['bringfilter'],"",true,function(xstate)
        local Values = table.concat(xstate,',')
        for _,v in next, getgenv().dsbasettings['bringing'] do 
            getgenv().dsbasettings['bringing'][_] = false
        end
        for _,value in next, xstate do 
            for i,v in next, getgenv().dsbasettings['bringing'] do 
                if value == i then 
                    getgenv().dsbasettings['bringing'][i] = true 
                    print('matching')
                    break
                end
                print(tostring(value)..' value '..tostring(v))
                print(tostring(value)..' value index '..tostring(i))
            end
            print(tostring(value)..' value to normal index'..tostring(_))
        end
    end)
    sector:AddSlider('Grab Distance',0,0,100,1,function(xstate)
        getgenv().dsbasettings['distance'] = xstate
    end)
    task.spawn(function()
        while task.wait(0) do 
            if getgenv().loopsUnload == true then print('dsba loop break') break end
            if getgenv().dsbasettings['instagrab'] == true then 
                for i,mob in next, workspace:FindFirstChild('npc'):FindFirstChild('npcs'):GetChildren() do 
                    -- if mob.PrimaryPart then 
                    --     print(isnetworkowner(mob.PrimaryPart))
                    -- end
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and mob.Name == 'Villager' and getgenv().dsbasettings['bringing']['Villagers'] == true and mob.PrimaryPart and isnetworkowner(mob.PrimaryPart) then 
                        mob.PrimaryPart.CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,-getgenv().dsbasettings['distance']) -- is
                        print(mob.Name)
                    end
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and mob.Name:find('Demon Slayer') and getgenv().dsbasettings['bringing']['Demon Slayers'] == true and mob.PrimaryPart and isnetworkowner(mob.PrimaryPart) then 
                        print(mob.Name)
                        mob.PrimaryPart.CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,-getgenv().dsbasettings['distance']) -- is
                    end
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and mob.Name:find('Demon') and getgenv().dsbasettings['bringing']['Demons'] == true and mob.PrimaryPart and isnetworkowner(mob.PrimaryPart) then 
                        mob.PrimaryPart.CFrame = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame * CFrame.new(0,0,-getgenv().dsbasettings['distance']) -- is
                    end
                    --==print(mob.Name)
                end
            end
        end
    end)
elseif game.PlaceId == 13190091082 or game.PlaceId == 11513105086 or game.PlaceId == 11599532987 then 
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')
    local farmingsector = tab:CreateSector('Cheats','right')
    local othersector = tab:CreateSector('Cheats','right')
    sharedRequires['SetupChatlogger']()
    getgenv().wisteriasettings = {
        rollback = false;
        autospin = false;
        spinfor = '';
        rejoinafterspinning = false;
        autorollbackonspin = false;
        stoprollbackwhengotlastname = false;
        getmove = '';
        nocd = false;
        nocooldowndestroys = {
            'Stunned';
            'CantAttack';
            'JumpSet';
        };
        cangetmoves = {};
        autobreathe = false;
        places = {
            ['butterfly'] = nil;
        };
        listedplaces = {

        };
        tpplace = '';
        slottoaddto = '1';
        pagetoaddto = '1';
        skillmove = '';
        instakill = false;
        flying = false;
        flyspeed = 0;
        speeding = false;
        speed = 0;
        noclipping = false;
        noclipfunction = nil;
        demonnames = {
            'Kurora';
            'Ozomashi';
            'Mijikai';
            'Giji';
            'Kyodaina';
        };
        slotkey = '';
        slotdata = {
            Name = 'bozoing bozo';
            Data = {
                Name = 'x';
                Faction = 'x';
                Level = 'x';
                Note = 'x';
                Key = '1_Slot 1';
                Completed = true;
            }
        };
        slotnumber = '1';
        antiburn = false;
        instantmoney = false;
    }   
    if game.PlaceId == 11513105086 then 
        sector:AddTextbox('Slot Number','1',function(xstate)
            getgenv().wisteriasettings['slotnumber'] = xstate
            getgenv().wisteriasettings['slotdata']['Data']['Key'] = getgenv().wisteriasettings['slotkey']..'_Slot '..getgenv().wisteriasettings['slotnumber']
        end)
        sector:AddTextbox('Slot Key','',function(xstate)
            getgenv().wisteriasettings['slotkey'] = xstate
            getgenv().wisteriasettings['slotdata']['Data']['Key'] = xstate..'_Slot '..getgenv().wisteriasettings['slotnumber']
        end)
        local checkslotkey = sector:AddButton('Check Slot Key',function()
            azfakenotify('Saving and Loading To '..getgenv().wisteriasettings['slotdata']['Data']['Key'],'untilClick')
        end) -- button to check which slots its created and the ids
        checkslotkey:ActivateKnowledge()
        checkslotkey:AddKnowledge("Check The Key You're saving to.")
        sector:AddButton('Create New Slot',function()
            local MakeSlotFunction = nil
            for i,funct in next, getgc() do 
                if getinfo(funct).source:find('SlotPicker') and getinfo(funct).name == 'MakeSlot' then 
                    MakeSlotFunction = funct
                end
            end
            MakeSlotFunction(getgenv().wisteriasettings['slotdata'])
        end)
        local metahook;
        metahook = hookmetamethod(game,'__namecall',newcclosure(function(self,...)
            if getnamecallmethod() == 'InvokeServer' and tostring(self) == 'SaveKey' then 
                return true
            end
            return metahook(self,...)
        end))
        local pgame = sector:AddButton('Play Game',function()
            game:GetService("ReplicatedStorage").Events.SaveKey:InvokeServer(getgenv().wisteriasettings['slotkey'])
            game:GetService("ReplicatedStorage").Events.SaveData:InvokeServer(game:GetService("Players").LocalPlayer)
            task.wait(0.1)
            game.ReplicatedStorage.Events:FindFirstChild('Teleport'):FireServer('true','')
        end)
        pgame:ActivateKnowledge()
        pgame:AddKnowledge('Uses Key')
        return
    end
    for _,v in next, game:GetService("ReplicatedStorage").ArtInfo:GetChildren() do 
        table.insert(getgenv().wisteriasettings['cangetmoves'],v.Name)
    end
    for i,region in next, workspace.Region:GetChildren() do 
        if region.Name:find('butterfly') then -- loop in regions and use string.split with - args 2 to get the mansion name
            getgenv().wisteriasettings['places']['butterfly'] = region
        end
        local regionname = string.split(region.Name,'-')[2]--:sub(2,string.len(string.split(region.Name,'-')[2]))
        if not table.find(getgenv().wisteriasettings['listedplaces'],regionname) then 
            table.insert(getgenv().wisteriasettings['listedplaces'],regionname)
        end
    end
    -- sector:AddTextbox('Get Skill','',function(xstate)
    --     getgenv().wisteriasettings['getmove'] = xstate -- gettingmove
    -- end)


    
    sector:AddToggle('No Cooldown',false,function(xstate)
        getgenv().wisteriasettings['nocd'] = xstate
    end)
    sector:AddToggle('Auto Breathe',false,function(xstate)
        getgenv().wisteriasettings['autobreathe'] = xstate
    end)
    sector:AddButton('God Mode',function()
        game:GetService("Players").LocalPlayer.Character.Effects.Attackers:Destroy()
    end)
    sector:AddToggle('Anti Burn',false,function(xstate)
        getgenv().wisteriasettings['antiburn'] = xstate
    end)

    sector:AddSeperator('')
    sector:AddDropdown('Regions',getgenv().wisteriasettings['listedplaces'],'',false,function(xstate)
        getgenv().wisteriasettings['tpplace'] = xstate
    end)
    sector:AddButton('Teleport To Region',function()
        for _,v in next, workspace.Region:GetChildren() do 
            if string.find(v.Name,getgenv().wisteriasettings['tpplace']) and getgenv().wisteriasettings['tpplace'] ~= '' then 
                game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame = v.CFrame
                break
            end
        end
    end)
    sector:AddSeperator('')
    sector:AddDropdown('Get Skill',getgenv().wisteriasettings['cangetmoves'],'',false,function(xstate)
        getgenv().wisteriasettings['getmove'] = xstate
    end)
    sector:AddButton('Obtain Skill',function()
        local ohString1 = "GiveArt"
        local ohString2 = getgenv().wisteriasettings['getmove']
        game:GetService("Players").LocalPlayer.PlayerGui.Gui.Ui.UiModule.Modules.Rep.GetData:InvokeServer(ohString1, ohString2)   
    end)
    sector:AddTextbox('Slot','1',function(xstate)
        getgenv().wisteriasettings['slottoaddto'] = xstate
    end)
    sector:AddTextbox('Page','1',function(xstate)
        getgenv().wisteriasettings['pagetoaddto'] = xstate
    end)
    sector:AddTextbox('Skill','',function(xstate)
        getgenv().wisteriasettings['skillmove'] = xstate
    end)
    sector:AddButton('Set Skill Slot',function()    
        local ohString1 = "Page"..getgenv().wisteriasettings['pagetoaddto']
        local ohNumber2 = tonumber(getgenv().wisteriasettings['slottoaddto'])
        local ohString3 = getgenv().wisteriasettings['skillmove'] 
        game:GetService("Players").LocalPlayer.PlayerGui.Gui.Ui.UiModule.Modules.Asign.Track:InvokeServer(ohString1, ohNumber2, ohString3)
    end)
    sector:AddSeperator('')
    if game.PlaceId == 11599532987 then --game.PlaceiD 
        sector:AddToggle('Insta Kill',false,function(xstate)
            getgenv().wisteriasettings['instakill'] = xstate
        end)
    end

    local bdemon = farmingsector:AddButton('Become A Demon',function()
        local ohTable1 = {
            ["Type"] = "Continue",
            ["Npc"] = workspace.Npcs['Machigai Tenshi'],
            ["Path"] = "PPath1"
        }

        game:GetService("ReplicatedStorage").Events.Dialogue:FireServer(ohTable1)
        local ohTable1 = {
            ["Type"] = "End",
            ["Npc"] = workspace.Npcs["Machigai Tenshi"],
            ["Path"] = "PPath5"
        }
        game:GetService("ReplicatedStorage").Events.Dialogue:FireServer(ohTable1)
    end)
    farmingsector:AddToggle('Instant Money',false,function(xstate)
        getgenv().wisteriasettings['instantmoney'] = xstate
    end)

    local flytoggle = farmingsector:AddToggle('Fly',false,function(xstate)
        getgenv().wisteriasettings['flying'] = xstate
        if getgenv().wisteriasettings['flying'] == true then 
            game.Players.LocalPlayer.Character:WaitForChild("Head").Anchored = false
            -- getgenv().flying = true
            task.spawn(function()
                repeat wait()
                until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:FindFirstChild("Torso") and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                local mouse = game.Players.LocalPlayer:GetMouse()
                repeat wait() until mouse
                local plr = game.Players.LocalPlayer
                local torso = plr.Character:WaitForChild('HumanoidRootPart')
                local deb = true
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                local lastctrl = {f = 0, b = 0, l = 0, r = 0}
                local maxspeed = getgenv().wisteriasettings['flyspeed']
                local speed = maxspeed  
                function Fly()
                    local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                    bv.velocity = Vector3.new(0,0,0)
                    bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                    repeat task.wait(0.01)
                        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild('exploitation') then 
                            bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"));bv.Name ='exploitation'
                            bv.velocity = Vector3.new(0,0,0)
                            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) -- 9e9
                        end
                        if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
                            local prevRotation = game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation
                            speed = getgenv().wisteriasettings['flyspeed'] --Options.FlySpeedSlide.Value
                            maxspeed = getgenv().wisteriasettings['flyspeed']
                            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                                speed = maxspeed * 2
                                -- if speed > maxspeed then
                                --     speed = maxspeed
                                -- end
                                if speed ~= maxspeed * 10 then
                                    speed = maxspeed * 2
                                end
                            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                                speed = 0
                                if speed < 0 then
                                    speed = 0
                                end
                            end
                                -- elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                            --     bv.velocity = ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector  )) *speed/2
                            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                                bv.velocity = (( game.Workspace.CurrentCamera.CoordinateFrame.lookVector  *  (ctrl.f+ctrl.b)  )) * speed -- ((game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p))
                                -- lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                                if (ctrl.r) ~= 0  then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.r = ctrl.r - ctrl.l
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector  )) * speed
                                end
                                if (ctrl.l) ~= 0 then 
                                    --repeat task.wait(0.005) until game.Players.LocalPlayer.Character.HumanoidRootPart.Rotation ~= prevRotation
                                    ctrl.l = ctrl.l - ctrl.r
                                    bv.velocity += (( game.Workspace.CurrentCamera.CoordinateFrame.RightVector    ))  * -speed
                                end
    
                            else
                                bv.velocity = Vector3.new(0,0,0)
                            end
                                --* CFrame.new((ctrl.l+ctrl.r),0,0) -- *50*speed/maxspeed * Vector3.new(0,0,0) --  
                        end

                    until getgenv().wisteriasettings['flying']  == false or getgenv().loopsUnload == true

                    ctrl = {f = 0, b = 0, l = 0, r = 0}
                    lastctrl = {f = 0, b = 0, l = 0, r = 0}
                    speed = 0
                    bv:Destroy()
                    game.Players.LocalPlayer.Character:WaitForChild('Humanoid').PlatformStand = false
                    --print('stop flying')
                end
                mouse.KeyDown:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 1
                    elseif key:lower() == "s" then
                        ctrl.b = -1
                    elseif key:lower() == "a" then
                        ctrl.l = -1
                    elseif key:lower() == "d" then
                        ctrl.r = 1
                    end
                end)
                mouse.KeyUp:connect(function(key)
                    if key:lower() == "w" then
                        ctrl.f = 0
                        speed = 0
                    elseif key:lower() == "s" then
                        ctrl.b = 0
                    elseif key:lower() == "a" then
                        ctrl.l = 0
                    elseif key:lower() == "d" then
                        ctrl.r = 0
                    end
                end)
                Fly()  
            end)
        end
    end)
    farmingsector:AddSlider('Fly Speed',0,0,250,1,function(xstate)
        getgenv().wisteriasettings['flyspeed'] = xstate
    end)
    local speedtoggle = farmingsector:AddToggle('Walkspeed',false,function(xstate)
        getgenv().wisteriasettings['speeding'] = xstate
    end)
    farmingsector:AddSlider('Speed',0,0,250,1,function(xstate)
        getgenv().wisteriasettings['speed'] = xstate
    end)

    local nocliptoggle = farmingsector:AddToggle('Noclip',false,function(xstate)
        getgenv().wisteriasettings['noclipping'] = xstate
        if getgenv().wisteriasettings['noclipping'] == true then 
            getgenv().wisteriasettings['noclipfunction'] = game:GetService('RunService').Stepped:Connect(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("Part") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide == true then
                        v.CanCollide = false
                    end
                end
            end)
        else
            if getgenv().wisteriasettings['noclipfunction'] ~= nil then 
                getgenv().wisteriasettings['noclipfunction']:Disconnect()
            end
        end
    end)



    local SharedModule = require(game:GetService("ReplicatedStorage").Scripts.Shared)

    local rolbacktoggle = othersector:AddToggle('Rollback',false,function(xstate)
        getgenv().wisteriasettings['rollback'] = xstate
    end)
    local rollspin = othersector:AddToggle('Auto Spin',false,function(xstate) 
        getgenv().wisteriasettings['autospin'] = xstate -- if you got what you want then it can rejoin or disable rollback then rejoin
    end)
    othersector:AddToggle('Auto Rollback On Spin',false,function(xstate)
        getgenv().wisteriasettings['autorollbackonspin'] = xstate
    end)
    othersector:AddToggle('Stop Rollback on Clan',false,function(xstate)
        getgenv().wisteriasettings['stoprollbackwhengotlastname'] = xstate
    end)
    othersector:AddTextbox('Spin For','',function(xstate)
        getgenv().wisteriasettings['spinfor'] = xstate
    end)
    othersector:AddToggle('Rejoin After Spinning',false,function(xstate)
        getgenv().wisteriasettings['rejoinafterspinning'] = xstate -- only if you didnt get what you want
    end)
    othersector:AddSeperator('')
    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end,{
        ask = 'Do you want to rejoin?';
        accept = 'Yes';
        reject = 'No';
    })
    sector:AddButton('Teleport To Final Selection',function()
        game:GetService("TeleportService"):Teleport(11754723819)
    end)
    sector:AddButton('Teleport To Main Menu',function()
        game:GetService('TeleportService'):Teleport(11513105086)
    end)
    hookfunction(SharedModule.CanAttack,function()
        if getgenv().wisteriasettings['nocd'] == true then
            return true
        else
            return true
        end 
    end)
    hookfunction(SharedModule.CanDash,function()
        if getgenv().wisteriasettings['nocd'] == true then
            return true
        else
            return true
        end 
    end)
    hookfunction(SharedModule.CanBlock,function()
        if getgenv().wisteriasettings['nocd'] == true then
            return true
        else
            return true
        end  
    end)

    local metahook; metahook = hookmetamethod(game,'__namecall',newcclosure(function(self,...)
        if tostring(self) == 'SunlightBurn' and getnamecallmethod() == 'FireServer' and getgenv().wisteriasettings['antiburn'] == true then -- self.Name ngetnamecallmethod
            return metahook(self,false)
        end
        return metahook(self,...)
    end))

    task.spawn(function()
        while task.wait(0) do 
            if getgenv().loopsUnload == true then print('wisteria loop break end') break end
            if getgenv().wisteriasettings['rollback'] == true then
                getgenv().wisteriasettings['rollback'] = nil
                azfakenotify('Starting Rollback','untilClick')
                task.delay(1,function()
                    azfakenotify('Rolled back; Data from this point wont save','untilClick')
                end)
                game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('Gui'):FindFirstChild('Gui'):FindFirstChild('Moves').Visible = false
                task.spawn(function()
                    while task.wait(0) do 
                        if getgenv().loopsUnload == true or getgenv().wisteriasettings['rollback'] == false then 
                            print('wisteria rollback loop break')
                            local ohNumber1 = 1
                            local ohString2 = "Z"
                                
                            game:GetService("Players").LocalPlayer.PlayerGui.Gui.Ui.UiModule.Modules.Settings.Set:InvokeServer(ohNumber1, ohString2)   
                            azfakenotify('Ended Rollback','untilClick')  
                            --game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('Gui'):FindFirstChild('Gui'):FindFirstChild('Moves').Visible = true
                            break
                        end
                        game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('Gui'):FindFirstChild('Gui'):FindFirstChild('Moves').Visible = false
                        local ohNumber1 = 1
                        local ohString2 = "\255"
                            
                        game:GetService("Players").LocalPlayer.PlayerGui.Gui.Ui.UiModule.Modules.Settings.Set:InvokeServer(ohNumber1, ohString2)     
                    end
                end)
            end
            if getgenv().wisteriasettings['autospin'] == true then 
                -- spin
                if getgenv().wisteriasettings['autorollbackonspin'] == true then 
                    getgenv().wisteriasettings['rollback'] = true
                end
                firesignal(game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):WaitForChild('Gui'):WaitForChild('DevProducts'):WaitForChild('Holder'):WaitForChild('RerollClan').MouseButton1Click)
                local spins = game:GetService("ReplicatedStorage").Events.GetStats:InvokeServer({["Stat"] = "Spins"})
                if spins == 0 and getgenv().wisteriasettings['rejoinafterspinning'] == true then 
                    game:GetService('TeleportService'):teleport(game.PlaceId)
                end
                local SpinAmount = spins
                local SpinFor = getgenv().wisteriasettings['spinfor']
                local GotSpunItem = false
                for i=1, SpinAmount do 
                    --task.wait(.01)
                    local lastname = game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):WaitForChild('RerollClan'):WaitForChild('RollClanFrame'):WaitForChild('Clan'):WaitForChild('RRLastName'):WaitForChild('LocalScript'):WaitForChild('RR'):InvokeServer("RRLastName")
                    if lastname == SpinFor then 
                        azfakenotify('Rolled '..lastname..' successfully','untilClick')
                        if getgenv().wisteriasettings['stoprollbackwhengotlastname'] == true then 
                            getgenv().wisteriasettings['rollback'] = false;
                            rolbacktoggle:Set(false)
                            GotSpunItem = true
                            getgenv().wisteriasettings['autospin'] = false;
                            rollspin:Set(false)
                        end
                        break
                    end
                end
                if getgenv().wisteriasettings['rejoinafterspinning'] == true and GotSpunItem == false then 
                    game:GetService('TeleportService'):teleport(game.PlaceId)
                end
                -- repeat 

                -- until 
            end
            if getgenv().wisteriasettings['nocd'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Effects') then 
                -- game.Players.LocalPlayer.Character.Info.M1.Value = false
                -- game.Players.LocalPlayer.Character.Effects.HitCount.Value = 0
                if game.Players.LocalPlayer.Character.Effects:FindFirstChild('CantAttack') then 
                    game.Players.LocalPlayer.Character.Effects:FindFirstChild('CantAttack') :Destroy()
                end
                if not game.Players.LocalPlayer.Character.Effects:FindFirstChild('CanMove') then 
                    local canmove = Instance.new('BoolValue')
                    canmove.Name = 'CanMove';
                    canmove.Value = true
                    canmove.Parent = game.Players.LocalPlayer.Character.Effects
                else 
                    game.Players.LocalPlayer.Character.Effects:FindFirstChild('CanMove').Value = true
                end
                if game.Players.LocalPlayer.Character.Effects:FindFirstChild('JumpSet') then 
                    game.Players.LocalPlayer.Character.Effects:FindFirstChild('JumpSet') :Destroy()
                end
                game.Players.LocalPlayer.Character.Effects.AggroMain.Value = nil
                if game.Players.LocalPlayer.Character.Effects:FindFirstChild('Stunned') then 
                    game.Players.LocalPlayer.Character.Effects:FindFirstChild('Stunned') :Destroy()
                end
                for _,v in next, game.Players.LocalPlayer.Character:FindFirstChild('Effects'):GetChildren() do 
                    if v.Name:find('CD') then 
                        v:Destroy()
                    end
                end
            end
            if getgenv().wisteriasettings['autobreathe'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Effects') and game.Players.LocalPlayer.Character:FindFirstChild('Effects'):FindFirstChild('Inhaling').Value == false then 
                game.Players.LocalPlayer.Character:FindFirstChild('Scripts'):FindFirstChild('Local'):FindFirstChild('Breathe'):FireServer(true)
            end
            if getgenv().wisteriasettings['instakill'] == true then 
                for i, mob in next, game:GetService("Workspace").Live:GetChildren() do 
                    if mob.PrimaryPart and isnetworkowner(mob.PrimaryPart) and mob.Name ~= game.Players.LocalPlayer.Name and mob:FindFirstChild('Head')  then 
                        mob:FindFirstChildWhichIsA('Humanoid').Health = 0
                        mob:FindFirstChild('Head'):Destroy()
                        --print('iowner '..mob.Name)
                    end
                end
            end
            if getgenv().wisteriasettings['speeding'] == true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                getgenv().wisteriasettings['speeding'] = nil 
                local connection = game.Players.LocalPlayer.Character:FindFirstChild('Humanoid'):GetPropertyChangedSignal('WalkSpeed'):Connect(function()
                    game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().wisteriasettings['speed'] -- seed
                end)
                game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').WalkSpeed = getgenv().wisteriasettings['speed']
                task.spawn(function()
                    repeat task.wait() until getgenv().loopsUnload == true or game.Players.LocalPlayer.Character:FindFirstChild('Humanoid').Health == 0 or getgenv().wisteriasettings['speeding'] == false
                    connection:Disconnect() 
                    if getgenv().wisteriasettings['speeding'] == nil then 
                        getgenv().wisteriasettings['speeding'] = true
                    end
                end)
            end
            if getgenv().wisteriasettings['instantmoney'] == true then 
                game:GetService("ReplicatedStorage").Events.Dialogue:FireServer({["Type"] = "End",["Npc"] = workspace.Npcs.Mita,["Path"] = "Accept"})
                game:GetService("ReplicatedStorage").Events.Dialogue:FireServer({["Type"] = "End",["Npc"] = workspace.Npcs:FindFirstChild("Saru Kenshi"),["Path"] = "SetSpawn"})
            end
        end
    end)
    AddConfigurations()
elseif game.PlaceId == 8884043854 then 
    local tab = window:CreateTab('Fortblox')
    local sector = tab:CreateSector('Cheats','left')

    getgenv().fortblo1settings = {
        autopickup = false;
        pickup1 = '';
        pickup2 = '';
        pickup3 = '';
        pickup4 = '';
        pickup5 = '';
        find = '';
        find2 = '';
        find3 = '';
        find4 = '';
        find5 = '';
        slentaim = false;
        dist = 1000;
    }
    setupAimbotTab(getgenv().fortblo1settings)
    setupEspTab(getgenv().fortblo1settings)
    AddConfigurations()
    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    sector:AddButton('Get Ammo',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if string.find(string.lower(v.Name),'ammo') then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.2)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    local function getclosestplayer()
        local closestplayer = nil 
        local closestdist = nil 
        for _,v in next, game.Players:GetPlayers() do 
            if v.Character and v ~= game.Players.LocalPlayer and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('Humanoid').Health > 0 and v.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                local dist = (v.Character:FindFirstChild('HumanoidRootPart').Position -game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
                if dist <= getgenv().fortblo1settings['dist'] then 
                    if closestplayer == nil then 
                        closestplayer = v 
                        closestdist = dist
                    else 
                        if dist < closestdist then 
                            closestplayer = v 
                            closestdist = dist
                        end
                    end
                end
            end
        end
        return closestplayer
    end
    -- local mt = getrawmetatable(game)
    -- local namecall = mt.__namecall
    -- make_writeable(mt)
    -- local oldind = mt.__index; 
    -- mt.__namecall = newcclosure(function(self,...)
    --     if getnamecallmethod() == 'FireServer' and tostring(self) == 'Shoot' and getgenv().fortblo1settings['slentaim'] == true then --// checkcaller
    --         local args = {...}
    --         local closeplayer = getclosestplayer()
    --         if closeplayer ~= nil then 
    --             args[2] = closeplayer.Character.Head.Position
    --         end
    --         return namecall(self,unpack(args))
    --     end
    --     return namecall(self,...)
    -- end)
    local metahook;
    -- metahook = hookmetamethod(game,'__namecall',function(self,...)
    --     local args = {...}
    --     local call_type = getnamecallmethod();
    --     if call_type == 'FireServer'  and tostring(self) == 'Shoot' then 
    --         -- local closeplayer = getclosestplayer()
    --         -- print('close player: '..tostring(closeplayer))
    --         -- if closeplayer ~= nil then 
    --         --     args[2] = closeplayer.Character.Head.Position
    --         -- end
    --         print('hi')
    --         for i,child in next, workspace:GetChildren () do 
    --             if game.Players:FindFirstChild(child.Name) and child:FindFirstChild('HumanoidRootPart') then 
    --                 args[2] = child:FindFirstChild('HumanoidRootPart').Position
    --             end
    --         end
    --         -- print(tostring(args[2])..' args 2')
    --         -- for _,v in next, args do 
    --         --     print(_,v)
    --         -- end
    --         -- return metahook(self,args[1],args[2],args[3])
    --         -- local closestplayer = nil 
    --         -- local closestdist = nil 
    --         -- for _,v in next, game.Players:GetPlayers() do 
    --         --     if v.Character and v ~= game.Players.LocalPlayer and v.Character:FindFirstChild('Humanoid') and v.Character:FindFirstChild('Humanoid').Health > 0 and v.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
    --         --         local dist = (game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position - v.Character:FindFirstChild('HumanoidRootPart').Position ).Magnitude
    --         --         if dist <= getgenv().fortblo1settings['dist'] then 
    --         --             if closestplayer == nil then 
    --         --                 closestplayer = v 
    --         --                 closestdist = dist
    --         --             else 
    --         --                 if dist < closestdist then 
    --         --                     closestplayer = v 
    --         --                     closestdist = dist
    --         --                 end
    --         --             end
    --         --         end
    --         --     end
    --         -- end
    --         -- if closestplayer ~= nil then
    --         --     args[2] = closestplayer.Character.Head.Position
    --         -- end 
    --     end
    --     return metahook(self,unpack(args))
    -- end)
    --[[

                local ohInstance1 = workspace.TheVeinsRunWild.Items.Dragon
            local ohVector32 = Vector3.new(-90.17420196533203, 167.70375061035156, -969.10546875)
            local ohTable3 = {
                [1] = -0.674522876739502, 0.0316326729953289, 0.737575888633728
            }
            
            game:GetService("ReplicatedStorage").Remotes.Shoot:FireServer(ohInstance1, ohVector32, ohTable3)])
    ]]
    -- sector:AddSlider('Distance',0,1000,10000,10,function(xstate)
    --     getgenv().fortblo1settings['dist'] = xstate
    -- end)
    -- sector:AddToggle('Silent Aim',false,function(xstate)
    --     getgenv().fortblo1settings['slentaim'] = xstate
    -- end)
    sector:AddToggle('Auto Pickup',false,function(xstate)
        getgenv().fortblo1settings['autopickup'] = xstate
    end)
    sector:AddTextbox('Auto Pickup 1',nil,function(xstate)
        getgenv().fortblo1settings['pickup1'] = xstate
    end)
    sector:AddTextbox('Auto Pickup 2',nil,function(xstate)
        getgenv().fortblo1settings['pickup2'] = xstate
    end)
    sector:AddTextbox('Auto Pickup 3',nil,function(xstate)
        getgenv().fortblo1settings['pickup3'] = xstate
    end)
    sector:AddTextbox('Auto Pickup 4',nil,function(xstate)
        getgenv().fortblo1settings['pickup4'] = xstate
    end)
    sector:AddTextbox('Auto Pickup 5',nil,function(xstate)
        getgenv().fortblo1settings['pickup5'] = xstate
    end)
    sector:AddTextbox('Get Pickup',nil,function(xstate)
        getgenv().fortblo1settings['find'] = xstate
    end)
    sector:AddButton('Pickup Selected',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().fortblo1settings['find'])) == getgenv().fortblo1settings['find'] then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.5)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    sector:AddSeperator('-')
    sector:AddTextbox('Get Pickup 2',nil,function(xstate)
        getgenv().fortblo1settings['find2'] = xstate
    end)
    sector:AddButton('Pickup Selected 2',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().fortblo1settings['find2'])) == getgenv().fortblo1settings['find2'] then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.5)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    sector:AddSeperator('-')
    sector:AddTextbox('Get Pickup 3',nil,function(xstate)
        getgenv().fortblo1settings['find3'] = xstate
    end)
    sector:AddButton('Pickup Selected 3',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().fortblo1settings['find3'])) == getgenv().fortblo1settings['find3'] then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.5)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    sector:AddSeperator('-')    sector:AddTextbox('Get Pickup',nil,function(xstate)
        getgenv().fortblo1settings['find4'] = xstate
    end)
    sector:AddButton('Pickup Selected 4',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().fortblo1settings['find4'])) == getgenv().fortblo1settings['find4'] then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.5)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    sector:AddSeperator('-')    sector:AddTextbox('Get Pickup',nil,function(xstate)
        getgenv().fortblo1settings['find5'] = xstate
    end)
    sector:AddButton('Pickup Selected 4',function()
        for _,v in next, workspace.Drops:GetChildren() do 
            if v.Name:sub(1,string.len(getgenv().fortblo1settings['find5'])) == getgenv().fortblo1settings['find5'] then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                task.wait(.5)
                game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                break
            end
        end
    end)
    sector:AddSeperator('-')
    task.spawn(function()
        while task.wait(1) do 
            if getgenv().fortblo1settings['autopickup']  == true then
                getgenv().fortblo1settings['autopickup'] = nil 
                for _,v in next, workspace.Drops:GetChildren() do 
                    if getgenv().fortblo1settings['autopickup'] == false then 
                        break 
                    end
                    task.wait(0.1)
                    local p1 = getgenv().fortblo1settings['pickup1']
                    local p2 = getgenv().fortblo1settings['pickup2']
                    local p3 = getgenv().fortblo1settings['pickup3']
                    local p4 = getgenv().fortblo1settings['pickup4']
                    local p5 = getgenv().fortblo1settings['pickup5']
                    if v.Name:sub(1,string.len(p1)) == p1 then 
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                        end)
                        game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                    elseif v.Name:sub(1,string.len(p2)) == p2 then 
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                        end)
                        game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                    elseif v.Name:sub(1,string.len(p3)) == p3 then 
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                        end)
                        game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                    elseif v.Name:sub(1,string.len(p4)) == p4 then 
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                        end)
                        game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                    elseif v.Name:sub(1,string.len(p5)) == p5 then 
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
                        end)
                        game:GetService("ReplicatedStorage").Remotes.Pickup:FireServer(v)
                    else
                        task.wait(.005)
                    end
                end
                if getgenv().fortblo1settings['autopickup'] == nil then 
                    getgenv().fortblo1settings['autopickup'] = true
                end
            end
        end
    end)

elseif table.find({'11567929685','11564374799','11860234207'},tostring(game.PlaceId)) then -- fromdon war



    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    sharedRequires['SetupChatlogger']() 
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')
    local weirdsector = tab:CreateSector('Cheats','right')
    local Mouse = game.Players.LocalPlayer:GetMouse()
    local Player = game.Players.LocalPlayer
    Player.Chatted:Connect(function(msg)
        if msg == '!showwarriors' or msg == '!pnum' then 
            -- for i,v in next, game.Players:GetChildren() do 
            --     if tostring(v.Team) == 'Warriors' then 
            --         warn(`{v.Name} is a warrior`)
            --     end
            -- end
            for i,v in next, game.Players:GetChildren() do 
                if tostring(v.Team) == 'Warriors' then 
                    warn(`{tostring(v.Team)} {v.Name} is a warrior`)
                end
                if v.Character and v.Character.Humanoid.Shifting:FindFirstChild('CanShift') and v.Character.Humanoid.Shifting:FindFirstChild('CanShift').Value == true then
                    warn(`{tostring(v.Team)} {v.Name} is a warrior`)
                end
            end
        end
    end)
    getgenv().aotfreedomwar = {
        functions = {};
        infinitegas = false;
        infiniteblades = false;
        titannapehitbox = false;
        titannapesize = {
            x = 5;
            y = 5;
            z = 5;
        };
        shifternapehitbox = false;
        shifternapesize = {
            x = 5;
            y = 5;
            z = 5;
        };
        shifternapetransparency = 1;
        titannapetransparency = 1;
        nocooldown = false;
        nostun = false;
        titanaimbotkeybind = 't';
        titanmouthaimkeybind = 'g';
        instakillkeybind = 'j';
        titannapecolor = Color3.fromRGB(255,255,255);
        shifternapecolor = Color3.fromRGB(255,255,255);
        getallskills = false;
        notitanattack = false;
        autoreload = false;
        titanesp = false;
        titanespcolor = Color3.fromRGB(255, 255,255);
        playeresp = false;
        playerespcolor = Color3.fromRGB(255, 255,255);
        autoattackwhennearenemy = false;
        autom1 = false;
        autohood = false;
        nohooktension = false;
        autocounter = false;
        dontlosehood = false;
        spoofdamage = false;
        spoofdamagenumber = 670;
        walkspeed = false;
        walkspeedspeed = 0;
        hookrange = 100;
        adjusthookrange = false;
        adjustattackspeed = false;
        attackspeed = 0.6;
        titanaimbotrange = 100;
        aimuptitanwall = false;
        infhealth = false;
        spiketrap = false;
        spawnnets = false;
        stunlegsfirst = false;
        spawnontitans = false;
        spawnonplayers = false;
        watermark = true;
        chatlogger = true;
        superjumpmidair = false;
        titans = {'AttackTitan','FemaleTitan','ColossalTitan','ArmoredTitan'};
        tptooriginalpos = false;
        voidplayer = false;
        diewithem = false;
        incrementdeath = 15;
        voidcframe = false;
        accelerateodm = false;
        acceleration = 5;
        spacetoimpulse = false;
        gtoimpulse = false;
        autokick = false;
        twothreads = false;
    } -- add m1 when next to enemy shifter

    aotfreedomwar.functions.pretendimpulse = function() -- force impulse
        local inputManager = game:GetService('VirtualInputManager')
        for i=1, 4 do 
            inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
            task.wait(0.05)
            inputManager:SendKeyEvent(false,Enum.KeyCode.W,false,game)
            task.wait(0.05)
        end
    end
    aotfreedomwar.functions.instakillplayer = function(xtable,void)
        local inputManager = game:GetService('VirtualInputManager')
        local timeplacetaken = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        local originalpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        -- could tp back but using safer opt
        repeat 
            task.wait()
            xtable.Character.HumanoidRootPart.TToUngrabPrompt.Enabled = false;
            xtable.Character.HumanoidRootPart.GToGrabPrompt.Enabled = true;
            inputManager:SendKeyEvent(true,Enum.KeyCode.G,false,game)
            inputManager:SendKeyEvent(false,Enum.KeyCode.G,false,game)
            if (xtable.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 15 then 
                game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(xtable.Character.HumanoidRootPart)
            else
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = xtable.Character.HumanoidRootPart.CFrame
            end
            
        until game.Players.LocalPlayer.Character.Humanoid.Grabbing.Value == true -- (xtable.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3
        task.wait(.1)

        --task.wait(0.1)
        xtable.Character.HumanoidRootPart.GToGrabPrompt.Enabled = true;
        inputManager:SendKeyEvent(true,Enum.KeyCode.G,false,game)
        inputManager:SendKeyEvent(false,Enum.KeyCode.G,false,game)
        br = 0
        repeat task.wait()
            br += 0.1
            inputManager:SendKeyEvent(true,Enum.KeyCode.G,false,game)
            inputManager:SendKeyEvent(false,Enum.KeyCode.G,false,game)
        until br > 1
        xtable.Character.HumanoidRootPart.GToGrabPrompt.Enabled = false;
        xtable.Character.HumanoidRootPart.TToUngrabPrompt.Enabled = true;

        if void == 'grab' then 
            repeat
                task.wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalpos
            until game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame == originalpos
            return
        end
        --
        if aotfreedomwar.voidplayer then 
            if aotfreedomwar.voidcframe then 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,600,0) --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,-60,0)
            else
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *= CFrame.new(0,-60,0) -- - 120
            end
            if aotfreedomwar.diewithem then 
                repeat 
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *= CFrame.new(0,-aotfreedomwar.incrementdeath,0) -- -15
                    task.wait()
                until not game.Players.LocalPlayer.Character or game.Players.LocalPlayer.Character.Humanoid.Health == 0
                return
            end
        else
            local _chosen = workspace.OnGameTitans
            for i,v in next, _chosen:GetChildren() do 
                if v.Humanoid.Health > 0 then
                    _chosen = v
                    break
                end
            end
            repeat 
                task.wait()
                if (_chosen.LeftLowerLeg.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 15 then 
                    game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(_chosen.LeftLowerLeg)
                else
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = _chosen.LeftLowerLeg.CFrame
                end
            until (_chosen.LeftLowerLeg.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 6
        end

        b = 0
        repeat task.wait(.1)
            b += 0.1
            inputManager:SendKeyEvent(true,Enum.KeyCode.T,false,game)
            inputManager:SendKeyEvent(false,Enum.KeyCode.T,false,game)
        until b > 1

        local victims = {}
        for i,v in next, game.Players:GetPlayers() do 
            if v ~= game.Players.LocalPlayer and v ~= xtable then table.insert(victims,v.Name) end
        end
        --victims = nil;
        pcall(function() victims = game.Players:FindFirstChild(victims[math.random(1,#victims)]) end)
        if aotfreedomwar.tptooriginalpos == true then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalpos
            return
        end
        if victims then 
            sp = victims.Character.HumanoidRootPart
            game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(sp)
        else
            local done = false;
            local savest = nil;
            local savestdist = nil;
            -- for i,v in next, workspace:GetDescendants() do 
            --     if done == true then break end 

            --     pcall(function()
            --         local dist = (v.Position - timeplacetaken).Magnitude
            --         if dist <= 15 and not v.Name:find(xtable.Name) then 
            --             if savest == nil then 
            --                 savest = v;
            --                 savestdist =dist
            --             else
            --                 if savestdist > dist then 
            --                     savest = v;
            --                     savestdist = dist 
            --                 end
            --             end
            --             if dist <= 5 then 
            --                 done = true;
            --             end
            --         end
            --     end)
            -- end
            if savest then 
                print('tping back  to '..savest.Name) -- Nmame
                repeat 
                    task.wait()
                    game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(savest)
                until (savest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 25
                repeat 
                    task.wait()
                    game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(savest)
                until (savest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 25
                repeat 
                    task.wait()
                    game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(savest)
                until (savest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 25
                game:GetService("ReplicatedStorage").ServerTeleportFunction:InvokeServer(savest)
            end
            xtable.Character.HumanoidRootPart.TToUngrabPrompt.Enabled = false;
        end
        xtable.Character.HumanoidRootPart.GToGrabPrompt.Enabled = false;
        xtable.Character.HumanoidRootPart.TToUngrabPrompt.Enabled = false;
    end
    aotfreedomwar.functions.checkiftitan = function(x) -- notatitan
        local b = false;
        if table.find(aotfreedomwar.titans,x.Name) then 
            b = true
        end
        return b
    end
    
    local function changeSize(titan)
        pcall(function()
            titan.Nape.Size = Vector3.new(getgenv().aotfreedomwar['titannapesize']['x'],getgenv().aotfreedomwar['titannapesize']['y'],getgenv().aotfreedomwar['titannapesize']['z'])
            titan.Nape.Transparency = getgenv().aotfreedomwar['titannapetransparency']
            titan.Nape.Color = getgenv().aotfreedomwar['titannapecolor']
            --titan.Nape.CanCollide = false;
        
            titan.DamageRegion.Size = Vector3.new(10,8,10)
            titan.DamageRegion.Transparency = getgenv().aotfreedomwar['titannapetransparency']
            titan.DamageRegion.Color = getgenv().aotfreedomwar['titannapecolor']
           -- titan.DamageRegion.CanCollide = false;
        end)
    end
    local function adjustNape(v)
        for _, x in next, v:GetChildren() do 
            if x.Name:find('Nape') and not x:IsA('RemoteEvent') and not x:IsA('RemoteFunction') then 
                --x.CanCollide = false;
                x.Size = Vector3.new(getgenv().aotfreedomwar['shifternapesize']['x'],getgenv().aotfreedomwar['shifternapesize']['y'],getgenv().aotfreedomwar['shifternapesize']['z'])
                x.Transparency = getgenv().aotfreedomwar['shifternapetransparency']
                x.Color = getgenv().aotfreedomwar['shifternapecolor']
            end
        end
    end
    local function updateTitanNapes()
        for i,v in next, workspace.OnGameTitans:GetChildren() do 
            if getgenv().aotfreedomwar['titannapehitbox'] then 
                changeSize(v)
            end
        end
    end


    local function updateShifterNapes()
        for i,v in next, workspace:GetChildren() do 
            if v.Name:find('Titan') and getgenv().aotfreedomwar['shifternapehitbox'] then 
                adjustNape(v)
            end
        end
    end
    
    setupAimbotTab(getgenv().aotfreedomwar)
    setupEspTab(getgenv().aotfreedomwar)
    getgenv().AddPlayerList(weirdsector) -- make nape cancollide off?

    if game.PlaceId == 11860234207 then --.P{la}
        weirdsector:AddButton('Auto Finish',function()
        
            -- local ohString1 = "Event"
    
            -- game:GetService("Players").LocalPlayer.PlayerGui.DialogueGui.DialogueEvent:FireServer(ohString1)

            for i=1,4 do 
                local ohString1 = "Event"
    
                game:GetService("Players").LocalPlayer.PlayerGui.DialogueGui.DialogueEvent:FireServer(ohString1)
                task.wait(.1)
            end
    
            task.wait(4)
            for i,v in next, game:GetService("Workspace").TutorialForest.TrainingDummies:GetChildren() do 
                if v:FindFirstChild('DummyNape') then 
                    local savedColor = v.DummyNape.Color
                    repeat 
                        task.wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.DummyNape.CFrame;
                        task.spawn(function()
                            local inputManager = game:GetService('VirtualInputManager')
                            local m = game.Players.LocalPlayer:GetMouse();
                            inputManager:SendMouseButtonEvent(m.X,m.Y,0,true,game,0)
                            --task.wait(.1)
                            inputManager:SendMouseButtonEvent(m.X,m.Y,0,false,game,0)
                        end)
                    until v:FindFirstChild('DummyNape').Cutted.Value == true -- ~= savedColor
                end
            end
            local ohString1 = "Event"
    
            game:GetService("Players").LocalPlayer.PlayerGui.DialogueGui.DialogueEvent:FireServer(ohString1)
        end)
    end

    -- if a captain dies make u say packwatch alert

    weirdsector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    weirdsector:AddButton('Rejoin Same Server',function()
        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end)

    weirdsector:AddToggle('Watermark',true,function(x)
        aotfreedomwar.watermark = x
        if x == true then 
            wtm:SetState('Active')
        else
            wtm:SetState('Disable')
        end
    end)
    weirdsector:AddToggle('Chatlogger',true,function(x)
        aotfreedomwar.chatlogger = x
        if x == true then 
            if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = true end
        else
            if game.CoreGui:FindFirstChild('ChatLogger') then game.CoreGui:FindFirstChild('ChatLogger').Enabled = false end
        end
        -- chatlogger could return table so chatlogger:disable()
    end)
    local voidfor = ''
    local specificvoid = weirdsector:AddDropdown("Specific Void", {'none'}, "", false, function(dropdownv)
        voidfor = dropdownv;
    end)
    weirdsector:AddButton('Void Person',function()
        if game.Players:FindFirstChild(voidfor) then 
            aotfreedomwar.functions.instakillplayer(game.Players:FindFirstChild(voidfor))
        end
    end)
    weirdsector:AddToggle('Void CFrame',false,function(x)
        aotfreedomwar.voidcframe = x
        -- chatlogger could return table so chatlogger:disable()
    end)
    weirdsector:AddToggle('Die with Them',false,function(x)
        aotfreedomwar.diewithem = x
        -- chatlogger could return table so chatlogger:disable()
    end)
    weirdsector:AddSlider('Drag Death CFrame',0,15,50,10,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['incrementdeath'] = xstate
    end)
    weirdsector:AddButton('Just Grab',function()
        if game.Players:FindFirstChild(voidfor) then 
            aotfreedomwar.functions.instakillplayer(game.Players:FindFirstChild(voidfor),'grab')
        end
    end)
    weirdsector:AddToggle('TP Original Pos',false,function(x)
        aotfreedomwar.tptooriginalpos = x
        -- chatlogger could return table so chatlogger:disable()
    end)
    weirdsector:AddToggle('Void Instead',false,function(x)
        aotfreedomwar.voidplayer = x
        -- chatlogger could return table so chatlogger:disable()
    end)
    weirdsector:AddButton('Kill Nearest Player', function()
        local xtable = {}
        local closestplayer = nil;
        local closestdist = nil;
        for i,v in next, game.Players:GetPlayers() do 
            if v ~= game.Players.LocalPlayer and v.Character and aotfreedomwar.functions.checkiftitan(v.Character) == false then 
                local dist = (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if dist <= 25 then 
                    if closestplayer == nil then 
                        closestplayer = v;
                        closestdist = dist;
                    else
                        if closestdist > dist then 
                            closestplayer = v;
                            closestdist = dist;
                        end
                    end
                end
                table.insert(xtable,v.Name) -- check ifnottitan
            end
        end
        if not closestplayer then return end
        xtable = closestplayer -- game.Players:FindFirstChild(xtable[math.random(1,#xtable)])
        aotfreedomwar.functions.instakillplayer(xtable)
    end)
    weirdsector:AddButton('Kill Anyone', function()
        local xtable = {}
        for i,v in next, game.Players:GetPlayers() do 
            if v ~= game.Players.LocalPlayer and v.Character and aotfreedomwar.functions.checkiftitan(v.Character) == false then 
                table.insert(xtable,v.Name) -- check ifnottitan
            end
        end
        xtable = game.Players:FindFirstChild(xtable[math.random(1,#xtable)])
        aotfreedomwar.functions.instakillplayer(xtable)
    end)
    weirdsector:AddButton('Fix Insta Kill', function()
      --  game.Players.LocalPlayer.Character.Humanoid.Grabbing.Value = true; -- could check if true;
        game.Players.LocalPlayer.Character.Humanoid.Grabbing.Value = true;
        task.wait(1)
        game.Players.LocalPlayer.Character.Humanoid.Grabbing.Value = false;
    end)
    local playerlooking = ''
    local hookingpvp = ''
    local Servers = sector:AddDropdown("Look At", {'none'}, "", false, function(dropdownv)
        playerlooking = dropdownv;
        if dropdownv == 'none' then 
            maid.lookatcon = nil;
            if game.Players.LocalPlayer.Character then 
                workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character
            end
        else
            maid.lookatcon = nil;
            maid.lookatcon = workspace.Camera:GetPropertyChangedSignal('CameraSubject'):Connect(function()
                local obj = workspace:FindFirstChild(playerlooking)
                if game.Players:FindFirstChild(playerlooking) then 
                    workspace.Camera.CameraSubject = game.Players:FindFirstChild(playerlooking).Character --workspace:FindFirstChild(playerlooking)
                end
                --if not obj then obj = game.Players:FindFirstChild(playerlooking.Character) end
            end) -- table insert the connection into global so we can disconnect it later;
            workspace.Camera.CameraSubject = game.Players:FindFirstChild(playerlooking).Character --workspace:FindFirstChild(playerlooking)
        end
    end)
    local hookdrop = sector:AddDropdown("Hook At", {'none'}, "", false, function(dropdownv)
        hookingpvp = dropdownv;
    end)
    --local HookSelect = sect:AddKeybindAttachment('Attach to back'):AddKeybind(); 
    sector:AddLabel('Press K to Manually Assign\nPress 4 To Use') -- eybind
    --game.Players.LocalPlayer:GetMouse().Key
    for i,v in next, game.Players:GetPlayers() do 
        if v ~= game.Players.LocalPlayer then 
            Servers:Add(v.Name) 
       
            specificvoid:Add(v.Name)
            hookdrop:Add(v.Name)
        end 
    end
    game.Players.PlayerAdded:Connect(function(v)
        Servers:Add(v.Name)
     
        specificvoid:Add(v.Name)
        hookdrop:Add(v.Name)
    end)
    game.Players.PlayerRemoving:Connect(function(v)
        Servers:Remove(v.Name)
      
        specificvoid:Remove(v.Name)
        hookdrop:Add(v.Name)
    end)
    





    local autom1tgl = sector:AddToggle('Auto M1',false,function(xstate)
        getgenv().aotfreedomwar['autom1'] = xstate -- autom12
    end):AddKeybind()
    local autom1tgl = sector:AddToggle('Auto Kick',false,function(xstate)
        getgenv().aotfreedomwar['autokick'] = xstate -- autom12
    end)
    sector:AddToggle('Auto Counter',false,function(xstate)
        getgenv().aotfreedomwar['autocounter'] = xstate -- autom12
        if xstate == false then 
            maid.walkspeedchange = nil;
        else
            maid.walkspeedchange = azfake:returndata().humanoid:GetPropertyChangedSignal('WalkSpeed'):Connect(function()
                azfake:returndata().humanoid.WalkSpeed = 25;
            end);
        end;
    end)
    -- sector:AddToggle('Auto Hood',false,function(xstate)
    --     getgenv().aotfreedomwar['autohood'] = xstate -- autom12
    --     if xstate == true then -- game:GetService("Players").LocalPlayer.PlayerGui.MenuGui.MenuLocalSript
    --         local btn = game:GetService("Players").LocalPlayer.PlayerGui.MenuGui.CustomizationScreen.CloakButton
    --         firesignal(btn.MouseButton1Click)
    --         firesignal(btn.MouseButton1Up)
    --     end
    -- end)
    sector:AddToggle('Dont Lose Hood',false,function(xstate) -- LoseHoodEvent
        getgenv().aotfreedomwar['dontlosehood'] = xstate -- dontloosehood
    end)
    sector:AddToggle('Space to Impulse',false,function(xstate) -- LoseHoodEvent
        getgenv().aotfreedomwar['spacetoimpulse'] = xstate -- dontloosehood
    end)
    sector:AddToggle('G to Impulse',false,function(xstate) -- LoseHoodEvent
        getgenv().aotfreedomwar['gtoimpulse'] = xstate -- dontloosehood
    end)
    sector:AddToggle('No Tension',false,function(xstate)
        getgenv().aotfreedomwar['nohooktension'] = xstate -- autom12
    end)
    sector:AddSlider('Acceleration',0,5,100,10,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['acceleration']['x'] = xstate
    end)
    sector:AddToggle('Accelerate ODM',false,function(xstate)
        getgenv().aotfreedomwar['accelerateodm'] = xstate -- autom12
        if xstate then 
            maid.accelerateodm = game.RunService.RenderStepped:Connect(function()
                if azfake:returndata().humanoidrootpart and azfake:returndata().humanoidrootpart:FindFirstChild('Velocity') then 
                    azfake:returndata().humanoidrootpart:FindFirstChild('Velocity').Velocity *= aotfreedomwar.acceleration
                    azfake:returndata().humanoidrootpart:FindFirstChild('Velocity').MaxForce *= 2
                end
            end)
        else
            maid.accelerateodm = nil;
        end
    end)

    sector:AddToggle('Infinite Gas',false,function(xstate)
        getgenv().aotfreedomwar['infinitegas'] = xstate
    end)
    sector:AddToggle('Infinite Blades',false,function(xstate)
        getgenv().aotfreedomwar['infiniteblades'] = xstate
    end)
    sector:AddToggle('Get All Skills',false,function(xstate)
        getgenv().aotfreedomwar['getallskills'] = xstate
    end)
    sector:AddToggle('No Titan Attack',false,function(xstate)
        getgenv().aotfreedomwar['notitanattack'] = xstate
        if getgenv().aotfreedomwar['notitanattack'] == false then 
            if game.Players.LocalPlayer.Character ~= nil then 
                if game.Players.LocalPlayer.Character:FindFirstChild('Humanoid') then 
                    game.Players.LocalPlayer.Character.Humanoid.Invinsible.Value = false;
                end
            end
        end
    end)
    sector:AddToggle('Super Jump Midair',false,function(xstate)
        getgenv().aotfreedomwar['superjumpmidair'] = xstate
    end)
    sector:AddToggle('No Cooldown',false,function(xstate)
        getgenv().aotfreedomwar['nocooldown'] = xstate
    end)
    sector:AddToggle('No Stun',false,function(xstate)
        getgenv().aotfreedomwar['nostun'] = xstate
    end)
    sector:AddToggle('Auto Reload',false,function(xstate)
        getgenv().aotfreedomwar['autoreload'] = xstate
    end)
    sector:AddToggle('Auto Kill Insub',false,function(xstate)
        getgenv().aotfreedomwar['autoattackwhennearenemy'] = xstate
    end)
    sector:AddToggle('Two Threads Inf Heal',false,function(xstate)
        getgenv().aotfreedomwar['twothreads'] = xstate
    end)
    local ifn = sector:AddToggle('Start Inf Healing',false,function(x)
        -- for i=1, 3 do 
        --     game:GetService("Players").LocalPlayer.Backpack:WaitForChild('Granada').Eat:FireServer();
        -- end;
        aotfreedomwar.infhealth = x;
        if x == false then 
            maid.infhealth = nil;
            maid.infhealth2 = nil;
            return
        end;
        game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',100)
        maid.infhealth = game.RunService.RenderStepped:Connect(function()
            -- task.delay(0.1,function()
            --     if game.Players.LocalPlayer.Backpack:FindFirstChild('Granada') then 
            --         game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame.DestroyTool:FireServer(game.Players.LocalPlayer.Backpack.Granada)
            --     end
            -- end)
            for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame:GetChildren() do 
                if tonumber(v.Name) and tonumber(v.Name) > 3 then 
                    v:Destroy()
                end
            end
            if aotfreedomwar.infhealth == false or getgenv().loopsUnload == true then maid.infhealth = nil end
            --game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',0); --  and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada'):FindFirstChild('Eat')
            if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada') then 
                pcall(function()
                    for i=1, 3 do 
                        game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada').Eat:FireServer();
                        task.wait()
                    end
                end)
                task.wait(0.001)
                if game.Players.LocalPlayer.Backpack:FindFirstChild('Granada') then 
                    game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame.DestroyTool:FireServer(game.Players.LocalPlayer.Backpack.Granada)
                end
            else
                game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',0)
            end
        end)
        if aotfreedomwar.twothreads then 
            game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',100)
            maid.infhealth2 = game.RunService.RenderStepped:Connect(function()
                -- task.delay(0.1,function()
                --     if game.Players.LocalPlayer.Backpack:FindFirstChild('Granada') then 
                --         game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame.DestroyTool:FireServer(game.Players.LocalPlayer.Backpack.Granada)
                --     end
                -- end)
                for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame:GetChildren() do 
                    if tonumber(v.Name) and tonumber(v.Name) > 3 then 
                        v:Destroy()
                    end
                end
                if aotfreedomwar.infhealth == false or getgenv().loopsUnload == true then maid.infhealth2 = nil end
                --game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',0); --  and game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada'):FindFirstChild('Eat')
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada') then 
                    pcall(function()
                        for i=1, 3 do 
                            game:GetService("Players").LocalPlayer.Backpack:FindFirstChild('Granada').Eat:FireServer();
                            task.wait()
                        end
                    end)
                    task.wait(0.001)
                    if game.Players.LocalPlayer.Backpack:FindFirstChild('Granada') then 
                        game:GetService("Players").LocalPlayer.PlayerGui.ToolsBar.Frame.DestroyTool:FireServer(game.Players.LocalPlayer.Backpack.Granada)
                    end
                else
                    game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',0)
                end
            end)
        end
    end,{
        ask = 'Stops when you die, click button twice until granada disappears on equip'; -- granola
        accept = 'Yes';
        reject = 'No';
    }):AddKeybind()
    -- ifn:ActivateKnowledge()
    -- ifn:AddKnowledge('click again if granoda doesnt disappear')
    sector:AddToggle('Inf Spike Nets',false,function(x)
        aotfreedomwar.spiketrap = x
        if x == true then 
            game:GetService("ReplicatedStorage").BuyEvent:FireServer('SpikeNet',500);
            -- for i=1, 3 do 
            --     game:GetService("Players").LocalPlayer.Backpack:WaitForChild('Granada').Eat:FireServer();
            -- end;
            task.spawn(function()
                while task.wait(0.1) do 
                    if aotfreedomwar.spiketrap == false or getgenv().loopsUnload == true then break end
                    --game:GetService("ReplicatedStorage").BuyEvent:FireServer('Granada',0);
                    game:GetService("ReplicatedStorage").BuyEvent:FireServer('SpikeNet',0);
                end
            end);
        end
    end)
    sector:AddSeperator('Spike Nets')
    sector:AddToggle('Spawn SpikeNets on Body',false,function(x)
        aotfreedomwar.spawnnets = x
    end)
    sector:AddToggle('Spawn SpikeNets on Titans',false,function(x)
        aotfreedomwar.spawnontitans = x
    end)
    sector:AddToggle('Spawn SpikeNets on Players',false,function(x)
        aotfreedomwar.spawnonplayers = x
    end)
    sector:AddButton('Spawn SpikeNets on Body',function(x)
        local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position
        game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
        local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(15,0,0)
        game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
        local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(-15,0,0)
        game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
        local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(0,0,15)
        game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
        local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(0,0,-15)
        game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
    end)
    sector:AddButton('Spawn SpikeNets on Titans',function(x)
        for i,v in next, workspace:GetChildren() do
            if v.Name:find('Titan') and v:FindFirstChild('LeftLowerLeg') and v.Name ~= 'AttackTitan' and v.Name ~= 'ColossalTitan' and game.Players.LocalPlayer.Character ~= v then 
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position)
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position + Vector3.new(15,0,0))
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position + Vector3.new(-15,0,0))
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position + Vector3.new(0,0,15))
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position + Vector3.new(0,0,-15))
            end
        end
    end)
    sector:AddButton('Spawn SpikeNets on Players',function(x)
        for i,v in next, game.Players:GetChildren() do
            if game.Players.LocalPlayer ~= v then 
                game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.Character.LeftLowerLeg.Position)
            end
        end
    end)
    sector:AddSeperator('Spike Nets')

    sector:AddButton('Fix Spike Nets',function()
        for i,v in next, game.Players.LocalPlayer.Backpack:GetChildren() do 
            if v.Name == 'SpikeNet' then v:Destroy() end
        end
    end)
    sector:AddToggle('Titan Nape Hitbox',false,function(xstate)
        getgenv().aotfreedomwar['titannapehitbox'] = xstate
        updateTitanNapes()
    end)
    sector:AddColorpicker('Titan Nape Color',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().aotfreedomwar['titannapecolor'] = ztx
        updateTitanNapes()
    end)
    sector:AddSlider('Titan Nape Transparency',0,1,1,10,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['titannapetransparency'] = xstate
        updateTitanNapes()
    end)
    sector:AddSlider('Titan Nape Size X',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['titannapesize']['x'] = xstate
        updateTitanNapes()
    end)
    sector:AddSlider('Titan Nape Size Y',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['titannapesize']['y'] = xstate
        updateTitanNapes()
    end)
    sector:AddSlider('Titan Nape Size Z',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['titannapesize']['z'] = xstate
        updateTitanNapes()
    end)
    sector:AddSeperator('-')
    sector:AddToggle('Shifter Nape Hitbox',false,function(xstate)
        getgenv().aotfreedomwar['shifternapehitbox'] = xstate
        updateShifterNapes()
    end)
    sector:AddColorpicker('Shifter Nape Color',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().aotfreedomwar['shifternapecolor'] = ztx
        updateShifterNapes()
    end)
    sector:AddSlider('Shifter Nape Transparency',0,1,1,10,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['shifternapetransparency'] = xstate
        updateShifterNapes()
    end)
    sector:AddSlider('Shifter Nape Size X',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['shifternapesize']['x'] = xstate
        updateShifterNapes()
    end)
    sector:AddSlider('Shifter Nape Size Y',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['shifternapesize']['y'] = xstate
        updateShifterNapes()
    end)
    sector:AddSlider('Shifter Nape Size Z',0,5,100,100,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['shifternapesize']['z'] = xstate
        updateShifterNapes()
    end)
    weirdsector:AddSlider('Titan Aimbot Range',0,100,1000,1,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['titanaimbotrange'] = xstate
    end)
    weirdsector:AddToggle('Aim Up If Behind Titan Wall',false,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['aimuptitanwall'] = xstate -- add knowledge (needs shiftlock)
    end)
    weirdsector:AddToggle('Aimbot Stun Legs',false,function(xstate)
        getgenv().aotfreedomwar['stunlegsfirst'] = xstate
    end)
    weirdsector:AddTextbox('Titan Aimbot Keybind','t',function(xstate)
        getgenv().aotfreedomwar['titanaimbotkeybind'] = xstate
    end)
    weirdsector:AddTextbox('Titan Mouth Aimbot Keybind','g',function(xstate)
        getgenv().aotfreedomwar['titanmouthaimkeybind'] = xstate
    end)
    weirdsector:AddTextbox('Insta Kill Titan Keybind','j',function(xstate)
        getgenv().aotfreedomwar['instakillkeybind'] = xstate
    end)
    weirdsector:AddButton('Hook Everyone',function() -- they nerfed my shit
        -- game.RunService.RenderStepped(LPH_NO_VIRTUALIZE(function()
        --     for i,v in next, game.Players:GetPlayers() do 
        --         if v.Character then 
        --             local obj = v.Character.Head
        --             if obj:FindFirstChildWhichIsA('Part') or obj:FindFirstChildWhichIsA('MeshPart') then 
        --                 -- check if obj is a model
        --                 obj = obj:FindFirstChildWhichIsA('Part') or obj:FindFirstChildWhichIsA('MeshPart')
        --             end
        --             local args = {
        --                 [1] = obj,
        --                 [2] = CFrame.new(100, 100, 100) * CFrame.Angles(-3.1415927410125732, 0.8258955478668213, -3.1415927410125732),
        --                 [3] = CFrame.new(155, -54.0802001953125, -158515625) * CFrame.Angles(-0.5150448083877563, 1.0880918502807617, 0.46471184492111206),
        --                 [4] = Vector3.new(830.6765747070312, 1184.00244140625, -585.1898803710938),
        --                 [5] = Vector3.new(33, -141.49099731445312, 15)
        --             }
        --             game:GetService("Players").LocalPlayer.Character.Gear.Events.MoreEvents.CastEKey:FireServer(unpack(args))    
        --         end
        --     end
        -- end))
        local gearname = 'Gear'
        if not game.Players.LocalPlayer.Character:FindFirstChild('Gear') and game.Players.LocalPlayer.Character:FindFirstChild('APGear') then 
            gearname = 'APGear'
        end
        local origincf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        for i,v in next, game.Players:GetPlayers() do 
            if v.Character and v ~= game.Players.LocalPlayer then
                task.wait(.25) 
                local obj = v.Character.Head
                if obj:FindFirstChildWhichIsA('Part') or obj:FindFirstChildWhichIsA('MeshPart') then 
                    -- check if obj is a model
                    obj = obj:FindFirstChildWhichIsA('Part') or obj:FindFirstChildWhichIsA('MeshPart')
                end
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = obj.CFrame * CFrame.new(0,-15,0)
                local xt = 0
                repeat task.wait(.05)
                    xt += 0.05
                    -- local args = {
                    --     [1] = obj,
                    --     [2] = CFrame.new(100, 100, 100) * CFrame.Angles(-34.1415927410125732, 0.8258955478668213, -3.1415927410125732),
                    --     [3] = CFrame.new(155, -54.0802001953125, -158515625) * CFrame.Angles(-4.5150448083877563, 6.0880918502807617, 43.46471184492111206),
                    --     [4] = Vector3.new(830.6765747070312, 1184.00244140625, -585.1898803710938),
                    --     [5] = Vector3.new(100, -141.49099731445312, 15)
                    -- }
                    local args = {
                        [1] = obj,
                        [2] = CFrame.new(3.90576171875, 54.0802001953125, 3.13983154296875) * CFrame.Angles(-3.1415927410125732, 0.8258955478668213, -3.1415927410125732),
                        [3] = CFrame.new(4.955963134765625, -54.0802001953125, -0.7427978515625) * CFrame.Angles(-0.5150448083877563, 1.0880918502807617, 0.46471184492111206),
                        [4] = Vector3.new(830.6765747070312, 1184.00244140625, -585.1898803710938),
                        [5] = Vector3.new(11.006999969482422, -131.49099731445312, 0)
                    }

                    game:GetService("Players").LocalPlayer.Character[gearname].Events.MoreEvents.CastEKey:FireServer(unpack(args))  
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.MoreEvents.CastQKey:FireServer(unpack(args))  
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.MoreEvents.NoEKey:FireServer(true)  
                  -- -- game:GetService("Players").LocalPlayer.Character.Gear.Events.MoreEvents.NoQKey:FireServer(true) 
                until xt >= 0.5 
                task.wait(.25) 
            end
        end
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = origincf
    end)
    weirdsector:AddToggle('Use Spoof Damage',false,function(xstate)
        getgenv().aotfreedomwar['spoofdamage'] = xstate
    end)
    weirdsector:AddSlider('Spoof Damage',0,670,1170,1,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['spoofdamagenumber'] = xstate
    end)
    weirdsector:AddToggle('Use Walkspeed',false,function(xstate)
        getgenv().aotfreedomwar['walkspeed'] = xstate
        if xstate == false then 
            maid.walkspeedcon = nil;
            return;
        end;
        if azfake:returndata().humanoid then 
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().aotfreedomwar['walkspeedspeed']
        end
        maid.walkspeedcon = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal('WalkSpeed'):Connect(function()
            if azfake:returndata().humanoid then 
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().aotfreedomwar['walkspeedspeed']
            end
        end)
    end)
    weirdsector:AddSlider('Walkspeed',0,8,1170,1,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['walkspeedspeed'] = xstate
    end)
    weirdsector:AddToggle('Adjust Hook Range',false,function(xstate)
        getgenv().aotfreedomwar['adjusthookrange'] = xstate
    end)
    weirdsector:AddSlider('Hook Range',0,160,1170,1,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['hookrange'] = xstate
    end)
    weirdsector:AddToggle('Adjust Attack Speed',false,function(xstate)
        getgenv().aotfreedomwar['adjustattackspeed'] = xstate
    end)
    weirdsector:AddSlider('Attack Speed',0,0.6,0.6,10,function(xstate) -- min def max dec
        getgenv().aotfreedomwar['attackspeed'] = xstate
    end)
    local esp_lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/esp-library/main/lib.lua'))()
    esp_lib.Settings.usecustomespcolor = true;
    esp_lib.Players = false;
    esp_lib.Boxes = false;
    esp_lib.Names = true;
    esp_lib.AutoRemove = false;
    esp_lib.Settings.usecustomespcolor = true;
    esp_lib:Toggle(true)
    local titanespsave = esp_lib:AddObjectListener(workspace.OnGameTitans, {
        --Name = 'Titan';
        CustomName = 'Titan';
        Color = Color3.fromRGB(0,255,0);
        IsEnabled = 'titanesp';
        PrimaryPart = 'HumanoidRootPart';
    })
    esp_lib.titanesp = false;
    weirdsector:AddToggle('Titan Esp',false,function(xstate)
        getgenv().aotfreedomwar['titanesp'] = xstate
        esp_lib.titanesp = xstate
    end)
    weirdsector:AddToggle('Player Esp',false,function(xstate)
        getgenv().aotfreedomwar['playeresp'] = xstate
        esp_lib.Players = xstate
    end)
    weirdsector:AddColorpicker('Titan Esp Color',Color3.fromRGB(255, 255,255), function(ztx)
        getgenv().aotfreedomwar['titanespcolor'] = ztx
        esp_lib.titanesp.Color = getgenv().aotfreedomwar['titanespcolor']
        titanespsave.Color = getgenv().aotfreedomwar['titanespcolor']
    end)
    local boxes = {}
    weirdsector:AddButton('Show Shifters', function()
        for i,v in next, boxes do 
            v:Remove()
        end
        local shifters = {}
        for i,v in next, game.Players:GetChildren() do 
            -- if tostring(v.Team) == 'Warriors' then 
            --     warn(`{tostring(v.Team)} {v.Name} is a warrior`)
            --     if not shifters[v.Name] then shifters[v.Name] = v.Character end
            -- end
            if v.Character and v.Character:FindFirstChild('ShifterHolder') then --v.Character.Humanoid.Shifting:FindFirstChild('CanShift') and v.Character.Humanoid.Shifting:FindFirstChild('CanShift').Value == true then
                warn(`{tostring(v.Team)} {v.Name} is a warrior {v.Character:FindFirstChild('ShifterHolder').Value}`)
                if not shifters[v.Name] then shifters[v.Name] = {
                    --col = v.Character:FindFirstChild('COLocal')
                    Character = v.Character;
                    shiftval =  v.Character:FindFirstChild('ShifterHolder').Value;
                } end
                azfakenotify(`{v.Name} is {v.Character:FindFirstChild('ShifterHolder').Value}`,5)
            end
        end
        for i,v in next, shifters do 
            print(i)
            local plrshift = game.Players:GetPlayerFromCharacter(v.Character)
            local HeadPart = v.Character.Head
            local suc, nosuc = pcall(function() -- nosc
                if HeadPart.Position == HeadPart.Position then 

                end
            end)
            if not suc then 
                HeadPart = v.Character.Head:FindFirstChildWhichIsA('Part') or v.Character.Head:FindFirstChildWhichIsA('MeshPart')
            end
            local box = esp_lib:Add(v.Character, {
                --PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                --Name = plrshift.Name,
                --Player = plrshift,
                PrimaryPart = HeadPart;-- v.Character.Head;
                Name = `{v.Character:FindFirstChild('ShifterHolder').Value} Titan`;
                CustomName = 'Shifter';
                Player = plrshift;
                Color = Color3.fromRGB(255,0,0); --Color3.fromRGB(75,0,130), --(255,50,50),
                offset = Vector2.new(0,30);
                usecustomespcolor = true;
                -- ColorDynamic = false;,
                --Name = 'Shifter',
                --IsEnabled = 'Shifter'..i,
                --RenderInNil = options.RenderInNil
            })
            --esp_lib['Shifter'..i] = true;
            table.insert(boxes,box)
        end
    end)
    weirdsector:AddSeperator('Shifters Only')
    weirdsector:AddToggle('Auto M1 Shifter',false,function(xstate)
        if (xstate == false) then 
            maid.shifterautom1 = nil;
            return;
        end;
        maid.shifterautom1 = game.RunService.RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character then 
                print('ok')
                if game.Players.LocalPlayer.Character.Name == 'AttackTitan' then 
                    --print('atk')
                    local ohString1 = "MediumAttack"
                    game.Players.LocalPlayer.Character.ATLocal.Events.AttackEvent:FireServer(ohString1)
                elseif game.Players.LocalPlayer.Character.Name == 'FemaleTitan' then 
                    local ohString1 = "MediumAttack"
                    game.Players.LocalPlayer.Character.ATLocal.Events.AttackEvent:FireServer(ohString1)
                elseif game.Players.LocalPlayer.Character.Name == 'ArmoredTitan' then 
                    local ohString1 = "MediumAttack"
                    game.Players.LocalPlayer.Character.ARLocal.Events.AttackEvent:FireServer(ohString1)
                end
            end
        end)-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    end)
    weirdsector:AddToggle('Auto M2 Shifter',false,function(xstate)
        if (xstate == false) then 
            maid.shifterautom2 = nil;
            return;
        end;
        maid.shifterautom2 = game.RunService.RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character then 
                if game.Players.LocalPlayer.Character.Name == 'AttackTitan' then 
                    local ohString1 = "HeavyAttack"
                    game.Players.LocalPlayer.Character.ATLocal.Events.AttackEvent:FireServer(ohString1)
                elseif game.Players.LocalPlayer.Character.Name == 'FemaleTitan' then 
                    local ohString1 = "HeavyAttack"
                    game.Players.LocalPlayer.Character.ATLocal.Events.AttackEvent:FireServer(ohString1)
                elseif game.Players.LocalPlayer.Character.Name == 'ArmoredTitan' then 
                    local ohString1 = "HeavyAttack"
                    game.Players.LocalPlayer.Character.ARLocal.Events.AttackEvent:FireServer(ohString1)
                end
            end
        end)-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    end)
    weirdsector:AddToggle('Auto Block Shifter',false,function(xstate)
        if (xstate == false) then 
            maid.shifterautoblock = nil;
            return;
        end;
        maid.shifterautoblock = game.RunService.RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character then 
                if game.Players.LocalPlayer.Character.Name == 'AttackTitan' then 
                    local ohString1 = true
                    game.Players.LocalPlayer.Character.ATLocal.Events.BlockEvent:FireServer(ohString1)
                elseif game.Players.LocalPlayer.Character.Name == 'FemaleTitan' then 
                    local ohString1 = true
                    game.Players.LocalPlayer.Character.FELocal.Events.BlockEvent:FireServer(ohBoolean1)
                elseif game.Players.LocalPlayer.Character.Name == 'ArmoredTitan' then 
                    local ohString1 = true
                    game.Players.LocalPlayer.Character.ARLocal.Events.BlockEvent:FireServer(ohBoolean1)
                end
            end
        end)-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    end)
    weirdsector:AddToggle('No Stun Shifter',false,function(xstate)
        if (xstate == false) then 
            maid.nostunshifter = nil;
            return;
        end;
        maid.nostunshifter = game.RunService.RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character then 
                if game.Players.LocalPlayer.Character.Name == 'AttackTitan' then 
                    game.Players.LocalPlayer.Character.ATLocal.Events.UnstunnedEvent:FireServer()
                elseif game.Players.LocalPlayer.Character.Name == 'FemaleTitan' then 
                    game.Players.LocalPlayer.Character.FELocal.Events.UnstunnedEvent:FireServer()
                elseif game.Players.LocalPlayer.Character.Name == 'ArmoredTitan' then 
                    game.Players.LocalPlayer.Character.ARLocal.Events.UnstunnedEvent:FireServer()
                end
            end
        end)-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    end)
    local aimbot = false;
    local mouthaimbot = false;
    local MouseCon; MouseCon = Mouse.KeyDown:Connect(function(key)
        if key:lower() == getgenv().aotfreedomwar['titanaimbotkeybind'] then 
            aimbot = not aimbot
        elseif key:lower() == getgenv().aotfreedomwar['titanmouthaimkeybind'] then 
            mouthaimbot = not mouthaimbot
        elseif key:lower() == getgenv().aotfreedomwar['instakillkeybind'] then 
            for i,v in next, workspace.OnGameTitans:GetDescendants() do 
                if v:IsA('Part') and isnetworkowner(v) or v:IsA('MeshPart') and isnetworkowner(v) then 
                    warn(`network {v.Parent.Name}`)
                    v.Parent.Humanoid.Health = 0
                end
            end  
        elseif key:lower() == 'k' then 
            for i,v in next, game.Players:GetPlayers() do
                if v ~= game.Players.LocalPlayer and v.Character and aotfreedomwar.functions.checkiftitan(v.Character) == false then 
                    local dist = (Mouse.hit.p - v.Character.PrimaryPart.Position).Magnitude
                    if dist <= 6 then 
                        hookdrop:Set(v.Name)
                        azfakenotify('set hooking to {v.Name:sub(1,5)}',5)
                    end
                end
            end
        elseif key:lower() == '4' and hookingpvp ~= '' and game.Players:FindFirstChild(hookingpvp) then 
            if game.Players:FindFirstChild(hookingpvp) and game.Players:FindFirstChild(hookingpvp).Character then 
                local obj = game.Players:FindFirstChild(hookingpvp).Character.PrimaryPart
                local args = {
                    [1] = obj,
                    [2] = game.Players.LocalPlayer.Character.PrimaryPart.CFrame, --CFrame.new(3.90576171875, 54.0802001953125, 3.13983154296875) * CFrame.Angles(-3.1415927410125732, 0.8258955478668213, -3.1415927410125732),
                    [3] = game.Players.LocalPlayer.Character.PrimaryPart.CFrame, -- CFrame.new(4.955963134765625, -54.0802001953125, -0.7427978515625) * CFrame.Angles(-0.5150448083877563, 1.0880918502807617, 0.46471184492111206),
                    [4] = game.Players.LocalPlayer.Character.PrimaryPart.Position, --Vector3.new(830.6765747070312, 1184.00244140625, -585.1898803710938),
                    [5] = game.Players.LocalPlayer.Character.PrimaryPart.Position, --Vector3.new(11.006999969482422, -131.49099731445312, 0)
                }
                game:GetService("Players").LocalPlayer.Character.Gear.Events.MoreEvents.CastEKey:FireServer(unpack(args))   
            end
            -- task.spawn(function() 
            -- end)
        elseif key:lower() == 'space' and aotfreedomwar.spacetoimpulse then
            --aotfreedomwar.functions.pretendimpulse()
        end
    end)

    game.UserInputService.InputBegan:Connect(function(key,gameProcessed)
        if gameProcessed then return end --gamefunction gameyield - ctrltoimpulse
        if (key.KeyCode == Enum.KeyCode.Space and aotfreedomwar.spacetoimpulse) or (key.KeyCode == Enum.KeyCode.G and aotfreedomwar.gtoimpulse) then 
            aotfreedomwar.functions.pretendimpulse()
        end
    end)
    --expand legs toggle
    local aimbotctn; aimbotctn = game.RunService.RenderStepped:Connect(function() -- couldve done ainmbot or mouthaimbot then distinguish it in the fucntion
        if aimbot then 
            pcall(function()
                local Character = game.Players.LocalPlayer.Character
                local closestdist = nil
                local closesttitan = nil
                for i,v in next, workspace.OnGameTitans:GetChildren() do 
                    if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0  then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - Character.HumanoidRootPart.Position).Magnitude
                        if dist <= aotfreedomwar.titanaimbotrange then -- hooksrange
                            if closestdist == nil then 
                                closestdist = dist;
                                closesttitan = v
                            else
                                if closestdist > dist then 
                                    closestdist = dist;
                                    closesttitan = v
                                end
                            end
                        end
                    end
                end
                if closesttitan then  -- + additionalvector
                    local wallcheck = true
                    local Parts = workspace.Camera:GetPartsObscuringTarget({game.Players.LocalPlayer.Character.Head.Position, closesttitan.Nape.Position}, {workspace.Camera, game.Players.LocalPlayer.Character})
                    for i2, v2 in pairs(Parts) do
                        if v2:IsDescendantOf(closesttitan) == false and v2.Transparency == 0 then
                            wallcheck = false
                        end
                    end
                    if not wallcheck and aotfreedomwar.aimuptitanwall then 
                        workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,Vector3.new(0,10000000,0) )
                    else
                        local function tally(titanf) -- talaly taally --fucntion 
                            local num = 0
                            if titanf.LLDebounce.Value == true then 
                                num += 1
                            end
                            if titanf.RLDebounce.Value == true then 
                                num += 1
                            end
                            return num
                        end
                        if aotfreedomwar.stunlegsfirst and tally(closesttitan) ~= 2 then -- closesttitan.Stun.Value == false then 
                            local additionalvector = Vector3.new(0,-2,0)
                            workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,closesttitan.DamageRegion.Position + additionalvector )    
                        else
                            local additionalvector = Vector3.new(0,-0.5,0)
                            workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,closesttitan.Nape.Position + additionalvector )    
                        end

                    end
                end
            end)
        elseif mouthaimbot then 
            pcall(function()
                local Character = game.Players.LocalPlayer.Character
                local closestdist = nil
                local closesttitan = nil
                for i,v in next, workspace.OnGameTitans:GetChildren() do 
                    if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and v:FindFirstChild('Humanoid').Health > 0  then 
                        local dist = (v:FindFirstChild('HumanoidRootPart').Position - Character.HumanoidRootPart.Position).Magnitude
                        if dist <= aotfreedomwar.titanaimbotrange then -- hooksrange
                            if closestdist == nil then 
                                closestdist = dist;
                                closesttitan = v
                            else
                                if closestdist > dist then 
                                    closestdist = dist;
                                    closesttitan = v
                                end
                            end
                        end
                    end
                end
                if closesttitan then  -- + additionalvector
                    local wallcheck = true
                    local Parts = workspace.Camera:GetPartsObscuringTarget({game.Players.LocalPlayer.Character.Head.Position, closesttitan.Nape.Position}, {workspace.Camera, game.Players.LocalPlayer.Character})
                    for i2, v2 in pairs(Parts) do
                        if v2:IsDescendantOf(closesttitan) == false and v2.Transparency == 0 then
                            wallcheck = false
                        end
                    end
                    if not wallcheck and aotfreedomwar.aimuptitanwall then 
                        workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,Vector3.new(0,10000000,0) )
                    else
                        local additionalvector = Vector3.new(0,0.5,0)
                        workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,closesttitan.Mouth.Position + additionalvector )    
                    end
                end
            end)
        end
    end)



    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if call_type == 'FireServer'  and tostring(self) == 'LoseHoodEvent' and getgenv().aotfreedomwar.dontlosehood then 
            return 
        elseif call_type == 'Kick' then 
            return
        elseif call_type == 'FireServer'  and tostring(self) == 'HitEvent' and aotfreedomwar.spoofdamage  then 
            args[2] = aotfreedomwar.spoofdamagenumber
            return metahook(self,unpack(args))
        elseif call_type == 'GetState'  and aotfreedomwar['superjumpmidair'] then 
            return Enum.HumanoidStateType.Running
        end
        return metahook(self,...)
    end)

    -- local metaindex;
    -- metaindex = hookmetamethod(game,'__index',function(self,reading)
    --     if tostring(self) == 'Humanoid' and tostring(reading) == 'Value' and getgenv().fightlocalgame['superjumpmidair'] == true then 
    --         return false
    --     end
    --     return metaindex(self,reading)
    -- end)

    for i,v in next, workspace.OnGameTitans:GetChildren() do 
        if getgenv().aotfreedomwar['titannapehitbox'] then 
            changeSize(v)
        end
    end

    -- workspace.OnGameTitans.ChildAdded:Connect(function(x)
    --     changeSize(x)
    -- end)
    workspace.OnGameTitans.ChildAdded:Connect(function(x)
        task.spawn(function()
            if getgenv().aotfreedomwar['titannapehitbox'] then 
                x:WaitForChild('Nape')
                x:WaitForChild('DamageRegion')
                changeSize(x)
            end
        end)
    end)

    for i,v in next, workspace:GetChildren() do 
        if v.Name:find('Titan') and getgenv().aotfreedomwar['shifternapehitbox'] then 
            adjustNape(v)
        end
    end
    workspace.ChildAdded:Connect(function(v)
        if v.Name:find('Titan') and getgenv().aotfreedomwar['shifternapehitbox'] then 
            task.spawn(function()
                task.wait(2)
                adjustNape(v)
            end)

        elseif v.Name == 'CutArea' then 
            v.CanCollide = false;
        end
    end)

    local function findchildwithproperty(x,b) 
        for i,v in next, x:GetChildren() do 
            if v.Name:find(b) then 

            end
        end
    end
    local Player = game.Players.LocalPlayer
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then aimbotctn:Disconnect(); print('fw break end')  
                maid.lookatcon = nil; maid.nostunshifter = nil; maid.shifterautoblock = nil;
                maid.shifterautom1 = nil; maid.walkspeedcon = nil; maid.shifterautom2 = nil;
                MouseCon:Disconnect(); break 
            end
            pcall(function()
                Character = Player.Character
                Humanoid = Character and Character:FindFirstChild('Humanoid') or nil
                gearfolder = Humanoid and Humanoid:FindFirstChild('Gear') or nil
                local gearname = 'Gear'
                if not Character:FindFirstChild('Gear') and Character:FindFirstChild('APGear') then 
                    gearname = 'APGear'
                end
                local gearscript = Character and Character:FindFirstChild(gearname) and Character:FindFirstChild(gearname):FindFirstChild('Events')
                if aotfreedomwar.spawnnets == true and Character then 
                    local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position
                    game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
                    local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(15,0,0)
                    game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
                    local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(-15,0,0)
                    game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
                    local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(0,0,15)
                    game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
                    local ohVector31 = game.Players.LocalPlayer.Character.PrimaryPart.Position + Vector3.new(0,0,-15)
                    game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(ohVector31)
                end
                if aotfreedomwar.spawnontitans == true then 
                    for i,v in next, workspace:GetChildren() do
                        if v.Name:find('Titan') and v:FindFirstChild('LeftLowerLeg') and v.Name ~= 'AttackTitan' and v.Name ~= 'ColossalTitan' and game.Players.LocalPlayer.Character ~= v then 
                            game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.LeftLowerLeg.Position)
                        end
                    end
                end
                if aotfreedomwar.spawnonplayers == true then 
                    for i,v in next, game.Players:GetChildren() do
                        if game.Players.LocalPlayer ~= v then 
                            game:GetService("ReplicatedStorage").SpikeNetDeploy:FireServer(v.Character.LeftLowerLeg.Position)
                        end
                    end
                end
                if aotfreedomwar['adjusthookrange'] == true and Character and Humanoid and gearfolder and gearfolder:FindFirstChild('Upgrades') then 
                    if gearfolder.Upgrades:FindFirstChild('HooksRange') then 
                        gearfolder.Upgrades.HooksRange.Value = getgenv().aotfreedomwar['hookrange'] 
                    end
                end
                if aotfreedomwar['adjustattackspeed'] == true and Character and Humanoid and gearfolder then 
                    gearfolder.Upgrades.AttackSpeed.Value = getgenv().aotfreedomwar['attackspeed'] 
                end
                if aotfreedomwar.autom1 == true and Character and Humanoid and gearfolder and gearscript then 
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.AttackingEvent:FireServer(1)
                end;
                if aotfreedomwar.autokick == true and Character and Humanoid and gearfolder and gearscript then 
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.AttackingEvent:FireServer(nil,true)
                end;
                if aotfreedomwar.autohood == true and Character and Humanoid and gearfolder then
                    --aotfreedomwar.autohood = nil

                    -- for i,v in next, game.Players.LocalPlayer.Character:GetDescendants() do 
                    --     if v.Name == 'HoodOn' and v.Transparency == 1 then 
                    --         -- could remove losehoodevent
                    --         local btn = game:GetService("Players").LocalPlayer.PlayerGui.MenuGui.CustomizationScreen.HoodButton
                    --         firesignal(btn.MouseButton1Click)
                    --     end
                    -- end
                    -- local args = {
                    --     [1] = "Hood",
                    --     [3] = true
                    -- }
                    -- game:GetService("Players").LocalPlayer.PlayerGui.MenuGui.ClothesChange:InvokeServer(unpack(args))
                end
                if aotfreedomwar.autocounter == true and Character and Humanoid and gearfolder and gearscript then 
                   -- print('counta')
                    if Humanoid.Counter.Value == false then
                        if aotfreedomwar.autom1 == true then aotfreedomwar.autom1 = false end
                        task.spawn(function()
                            repeat 
                                task.wait()
                                pcall(function()
                                    game:GetService("Players").LocalPlayer.Character[gearname].Events.MoreEvents.Counter:InvokeServer(unpack({[1] = false}))
                                end)
                            until Humanoid.Counter.Value == true or aotfreedomwar.autocounter == false
                            if autom1tgl:Get() == true then 
                                aotfreedomwar.autom1 = true
                            end
                        end)
                    end
                
                end
                if aotfreedomwar.nohooktension == true and Character and Humanoid and gearfolder then
                    if Humanoid.Gear:FindFirstChild('HookTensionL') then 
                        Humanoid.Gear.HookTensionL.Value = 0
                    end
                    if Humanoid.Gear:FindFirstChild('HookTensionR') then 
                        Humanoid.Gear.HookTensionR.Value = 0  
                    end
                end
                if getgenv().aotfreedomwar['autoattackwhennearenemy'] == true and Character and Humanoid and gearfolder then 
                    for i,v in next, game.Players:GetPlayers() do 
                        if v ~= game.Players.LocalPlayer and v.Character ~= nil and v.Character:FindFirstChild('Gear') then
                            local canteamkill = false
                            if tostring(v.Team) == 'Rogue' or v.Team ~= game.Players.LocalPlayer.Team then 
                                canteamkill = true
                            end
                            if canteamkill and (v.Character.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude <= 20 then 
                                task.spawn(function()
                                    for i=1, 5 do 
                                        task.wait(0.05)
                                        local inputManager = game:GetService('VirtualInputManager')
                                        local m = game.Players.LocalPlayer:GetMouse();
                                        inputManager:SendMouseButtonEvent(m.X,m.Y,0,true,game,0)
                                        inputManager:SendMouseButtonEvent(m.X,m.Y,0,false,game,0)
                                    end
                                end)
                            end
                        end
                    end
                end
                
                if gearscript and Character and Humanoid and gearfolder and Player.PlayerGui:FindFirstChild('SkillsGui') and Player.PlayerGui:FindFirstChild('SkillsGui'):FindFirstChild('Dodge').Enabled == false and getgenv().aotfreedomwar['getallskills'] then 
                    for i,v in next, gearfolder.Skills:GetChildren() do 
                        v.Value = true;
                        warn(`set {v.Name}`)
                    end
                    for i,v in next, Player.PlayerGui.SkillsGui:GetChildren() do 
                        v.Enabled = true;
                    end
                end
                if gearfolder and gearfolder:FindFirstChild('Skills') and gearfolder.Skills.Dodge.Value == false and getgenv().aotfreedomwar['getallskills'] and Character and Humanoid and gearfolder and gearscript  then 
                    for i,v in next, gearfolder.Skills:GetChildren() do 
                        v.Value = true;
                        warn(`set {v.Name}`)
                    end
                end
                if gearfolder and Humanoid.Gear.BladesOut.Value == false and getgenv().aotfreedomwar['autoreload'] and Character and Humanoid and gearfolder and gearscript then 
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.SafeBlades:FireServer()
                    local args = {
                        [1] = game:GetService("Players").LocalPlayer.Character.Humanoid.Gear.Upgrades.BladesEfficiency
                    }
                    game:GetService("Players").LocalPlayer.Character[gearname].Events.BladeReload:FireServer(unpack(args))
                    local inputManager = game:GetService('VirtualInputManager')
                    inputManager:SendKeyEvent(true,Enum.KeyCode.R,false,game)
                    inputManager:SendKeyEvent(false,Enum.KeyCode.R,false,game)
                end
                -- if gearfolder == nil and Character and Humanoid  then 
                --     Character = Player.Character
                --     Humanoid = Character.Humanoid
                --     gearfolder = Humanoid:FindFirstChild('Gear')
                --     if getgenv().aotfreedomwar['getallskills'] then 
                --         for i,v in next, gearfolder.Skills:GetChildren() do 
                --             v.Value = true;
                --             warn(`set {v.Name}`)
                --         end
                --     end
                -- end
        
                if getgenv().aotfreedomwar['infinitegas'] and Character and Humanoid and gearfolder and gearscript then 
                    gearfolder.Gas.Value = 2000
                    gearfolder.Upgrades.GasEfficiency.Value = -80
                end
                if getgenv().aotfreedomwar['infiniteblades'] and Character and Humanoid and gearfolder and gearscript then 
                    gearfolder.Blades.Value = 2000
                    gearfolder.Upgrades.BladesEfficiency.Value = -80
                end
                if getgenv().aotfreedomwar['nostun'] and Character and Humanoid and gearfolder and gearscript then 
                    gearfolder.Upgrades.MentalStrength.Value = 80
                    Humanoid.Stunned.Value = false;
                    Humanoid.Ragdolling.Value = false;
                    Humanoid.BladeAttacking.Value = false;
                    Humanoid.Grabbed.Value = false;
                    Humanoid.Handcuffed.Value = false;
                    Humanoid.Handcuffed.Timer.Value = 0
                end
                if getgenv().aotfreedomwar['notitanattack'] and Character and Humanoid and gearfolder and gearscript then 
                    Humanoid.Invinsible.Value = true;
                end

                if getgenv().aotfreedomwar['nocooldown'] and Character and Humanoid and gearfolder and Player.PlayerGui:FindFirstChild('SkillsGui') and gearscript then 
                    Player.PlayerGui.SkillsGui.Dodge.Cooldown.Value = 25
                    Player.PlayerGui.SkillsGui.SuperJump.Cooldown.Value = 150
                    Player.PlayerGui.SkillsGui.Impulse.Cooldown.Value = 100
                    Player.PlayerGui.SkillsGui.HandCutMk2.Cooldown.Value = 3000
                    Player.PlayerGui.SkillsGui.HandCut.Cooldown.Value = 3000
                    Player.PlayerGui.SkillsGui.Counter.Cooldown.Value = 2000
                    Player.PlayerGui.SkillsGui.BladeThrow.Cooldown.Value = 100
                    --Player.Backpack.Medkit.Cooldown.Value = 2.8
                    Humanoid.HorseStamina.Value = 2800
                    if Character[gearname]:FindFirstChild('SkillsSpamLimit') then 
                        Character[gearname].SkillsSpamLimit.Impulse.Value = 0
                        Character[gearname].SkillsSpamLimit.Dodge.Value = 0
                        Character[gearname].SkillsSpamLimit.BladeThrow.Value = 0
                        Character[gearname].SkillsSpamLimit.HandCutMk2.Value = 0
                    end
                end
                --workspace.PlayersDataFolder:FindFirstChild(Player.Name).Rank.Value = 5
                --workspace.PlayersDataFolder:FindFirstChild(Player.Name).GamePoints.Value = 50000
            end)
        end
    end)
    AddConfigurations()
elseif game.PlaceId == 11534222714 then -- aot freedom war main menu
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')
    local FolderDir = game:GetService("ReplicatedStorage").ServersStore

    local ServerList = {}
    local ServerChosen = '';
    local bum = false;
    for i,v in pairs(FolderDir:GetChildren()) do 
        table.insert(ServerList,v.Value)
    end

    local Servers = sector:AddDropdown("Spam Join Server", ServerList, "", false, function(dropdownv)
        ServerChosen = dropdownv;
    end)
    sector:AddToggle('Spam Join',false,function(x)
        bum = x;
        if x then 
            print('joining')
            azfakenotify('joining.. '..ServerChosen:sub(1,5),10)
        end
    end)
    sector:AddButton('Refresh',function()
        for i,v in next, Servers:Get() do 
            v:Remove()
        end
        for i,v in pairs(FolderDir:GetChildren()) do 
            Servers:Add(v.Value)
        end
    end)
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('lobbyu bobyb') break end
            if bum and ServerChosen then 
                -- click button cuz the remote isnt fired wth
                for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.MainMenuGui.ServerList.ScrollingFrame:GetChildren() do 
                    if v:FindFirstChild('IdValue') and v:FindFirstChild('IdValue').Text == ServerChosen then -- joinbutton
                        print('ye')
                        firesignal(v.JoinButton.MouseButton1Click)
                        firesignal(v.JoinButton.MouseButton1Down)
                    end
                end
            end
        end
    end)

elseif table.find({'4111023553','5735553160','6032399813','8668476218'},tostring(game.PlaceId)) and vs == 'debug' then 
    window = library:CreateWindow("Azfake V3{"..game.PlaceId..'}', Vector2.new(700, 598), OpenGUBUTTON)
    local LogFunct = sharedRequires['SetupChatlogger']()
    local effectReplicator = require(game:GetService('ReplicatedStorage'):WaitForChild('EffectReplicator', math.huge));
    local MarkerWorkspace = game:GetService("ReplicatedStorage"):WaitForChild('MarkerWorkspace')
    warn('id',getthreadidentity())
    local setscriptes = function() end
    local getKey;
    local keyhandler = require(game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild('ClientManager'):WaitForChild('KeyHandler'))
    local stack = getupvalue(getrawmetatable(getupvalue(keyhandler, 8)).__index, 1)[1][1]
    local GetKey = stack[89]
    local key = stack[64]
    getupvalue(GetKey, 2)[0][1][2][4] = "HtttpGet"
    warn('id',getthreadidentity())
    setthreadcaps(7)

    getKey = GetKey

	local LocalPlayer = game.Players.LocalPlayer


    local functions = {}
    function functions.serverHop(bypass)
        if(bypass) then --  or library:ShowConfirm('Are you sure you want to switch server?')
            --library:UpdateConfig();
            local dataSlot = LocalPlayer:GetAttribute('DataSlot');
            MemStoreService:SetItem('DataSlot', dataSlot);

            BlockUtils:BlockRandomUser();
            game.TeleportService:Teleport(4111023553);
        end;
    end;

    local tab = window:CreateTab(gameName)
    local esptab = window:CreateTab('ESP Tab')
    local sector = tab:CreateSector('Cheats','left')
    local moresect = tab:CreateSector('Cheats','left')
    local rightsect = tab:CreateSector('Cheats', 'right')
    local moreright = tab:CreateSector('Cheats', 'right')
    local espsector = esptab:CreateSector('Cheats','left')
    local moreesp = esptab:CreateSector('Cheats','left') -- moresp
    local Stats = game:GetService("Stats")

    local esp_lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/esp-library/main/lib.lua'))()
    esp_lib.Players = false;
    esp_lib.Boxes = false;
    esp_lib.Names = false;
    esp_lib.AutoRemove = true;
    esp_lib:Toggle(true)

    getgenv().deepwokensettings = {
        functions = {};
        autoparrydistance = 15; --autoparryrange = 15;
        autoparry = false;
        usecustomwaitdelay = false;
        customwaitdelay = 0;
        playeresp = false;
        playerespdistance = 2000;
        playerespcolor = Color3.fromRGB(255,255,255);
        boxesp = false;
        tracers = false;
        espnames = false;
        ingredientesp = false;
        ingredientespcolor = Color3.fromRGB(255,255,255);
        artifactesp = false;
        whitelist = {'All', 'Mobs'};
        whitelistmode = 'All';
        mobesp = false;
        autovoidmobs = false;
        nofalldamage = false;
        knockedownership = false;
        nojumpcooldown = false;
        nostun = false;
        infinitejump = false;
        infiniteJumpHeight = 0;
        nokillbricks = false;
        nowind = false;
        antiacid = false;
        rollwhencantparry = false;
        rollcantparrystatus = false;
        blatantroll = false;
        rollcancel = false;
        talentsspoofable = {
            "Talent:Speed Emission",
            "Talent:Disbelief",
            "Talent:Endurance Runner",
            "Talent:Spinning Swordsman",
            "Talent:Nightchild",
            "Talent:Aerial Assault",
            "Talent:Moving Fortress",
            "Talent:Swift Rebound",
            "Talent:Blade Dancer",
            "Talent:Defiance",
            "Talent:Triathlete",
            "Talent:Graceful Landing",
            "Talent:Fast Blade",
            "Talent:Gale Leap",
            "Talent:Heavy Haul",
            "Talent:Kick Off",
            "Talent:Scaredy Cat",
            "Talent:Drifting Winds",
            "Talent:Strong Hold",
            "Talent:Tap Dancer",
            "Talent:Navae's Guidance",
            "Talent:Engage",
            "Talent:Seaborne",
        };
        lootablevariety = {
            ''
        };
        autoloot = false;
        autolootfilter = false;
        lootmedallion = false; -- lootmedallino
        lootmythic = false;
        lootenchant = false; --lootlegen = false;
        lootrare = false;
        lootcommon = false;
        lootunc = false;
        playerproximity = false;
        proximityrange = 200;
        proximitylabel = false;
        hidetextwhenclear = false;
        disableautoparryinproximity = false;
        modnotifer = true;
        chestesp = false;
        ingredientespdistance = 100;
        chestespdistance = 5000;
        disablenoclipknock = false;
        lognearby = false;
        lognearbydistance = 0;
        islandesp = false;
        islandespdistance = 2000;
        islandespcolor = Color3.fromRGB(255,255,255);
        noblind = false;
        whirlpoolesp = false;
        whirlpoolespdistance = 2000;
        whirlpoolespcolor = Color3.fromRGB(255,255,255);
        mobespcolor = Color3.fromRGB(255,255,255);
        mobespdistance = 200;
        npcesp = false;
        npcespdistance = 2000;
        npcespcolor = Color3.fromRGB(255,255,255);
        tptojars = false;
        lookatjars = false;
    }
    
    -- local ingredientesp = esp_lib:AddObjectListener(game:GetService("Workspace").Ingredients, {
    --     SelfName = true;
    --     TableReceiveColor = deepwokensettings;
    --     Color = function()
    --         return deepwokensettings.ingredientespcolor; --Color3.fromRGB(255,255,255); --Color3.fromRGB(0,70,70);
    --     end;
    --     IsEnabled = 'IngredientEsp';
    --     --PrimaryPart = 'HumanoidRootPart';
    --     flag = 'ingredient';
    -- }) 

    -- MOBESP CHANGING VISIBLITY DOESNT WORK (if i never tested that the system worked i wouldve typed "MOBESP DOESNT WORK")
    -- AUTOPARRY DOESNT WORK
    
    -- sharedRequires['CreateFlySystem'](sector,deepwokensettings)
    -- sharedRequires['CreateWalkSpeedSystem'](sector,deepwokensettings)

	local mathFloor = clonefunction(math.floor)
	local isDescendantOf = clonefunction(game.IsDescendantOf);
	local ffcisa = clonefunction(game.FindFirstChildWhichIsA);
	local ffc = clonefunction(game.FindFirstChild); -- ffs

    -- local keyhandler = require(game.ReplicatedStorage:WaitForChild("Modules", math.huge):WaitForChild("ClientManager", math.huge):WaitForChild("KeyHandler", math.huge))

    --local stack = debug.getupvalue(getrawmetatable(debug.getupvalue(keyhandler, 8)).__index, 1)[1][1]
    --local GetKey = stack[89]

    local effectReplicatorEnv = getfenv(effectReplicator.CreateEffect);
    local stunEffects = {'NoMove', 'NoJump', 'NoJumpAlt', 'Action', 'Unconscious', 'Knocked', 'Carried', 'Stun', 'Knocked'};
    local fastSwingEffects = {'OffhandAttack', 'HeavyAttack', 'MediumAttack', 'LightAttack', 'UsingSpell'};

    local oldClearEffect = effectReplicatorEnv.clearEffects;
    local isLayer2 = game.ReplicatedStorage:FindFirstChild('LAYER2_DUNGEON');

    local function setupNoStun()
        effectReplicator.EffectAdded:connect(function(effect)
            if (effect.Class == 'Knocked' and LocalPlayer.Character) then
                local humanoid = LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid');
                local handle = LocalPlayer.Backpack:FindFirstChild('Handle', true) and LocalPlayer.Backpack:FindFirstChild('Handle', true).Parent;
                local weapon = LocalPlayer.Backpack:FindFirstChild('Weapon') or LocalPlayer.Character:FindFirstChild('Weapon');

                local tool = weapon; -- not library.flags.useWeaponForKnockedOwnership and handle or

                if (not humanoid) then return end;

                local bone = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('Head') and LocalPlayer.Character.Head:WaitForChild('Bone', 5);
                while bone and bone.Parent do
                    if (not deepwokensettings.knockedownership) then task.wait(); continue; end;

                    tool.Parent = LocalPlayer.Character;
                    task.wait(tool == weapon and 0.15 or 0.05);
                    tool.Parent = LocalPlayer.Backpack;
                    task.wait(tool == weapon and 0.15 or 0.05);
                end;

                task.wait(0.1);

                if (deepwokensettings.knockedownership) then
                    if (weapon.Parent ~= LocalPlayer.Character) then
                        weapon.Parent = LocalPlayer.Character;
                    end;

                    handle.Parent = LocalPlayer.Backpack;
                end;
            end;


            if (effect.Class == 'Dodge') then
                task.wait(3);
                canDodge = true;
            end;

            if (deepwokensettings.nostun and table.find(stunEffects, effect.Class)) then
                task.defer(function()
                    effect:Remove(true);
                end);
            end;

            if (deepwokensettings.nojumpcooldown and effect.Class == "OverrideJumpPower") then
                task.defer(function()
                    effect:Remove(true);
                end);
            end;

            if (deepwokensettings.noStunLessBlatant and table.find(fastSwingEffects, effect.Class)) then
                task.defer(function()
                    effect:Remove(true);
                end);
            end;
        end);
    end;

    setupNoStun()

    lastUsedMantra = ''
    lastUsedMantraAt = tick()
    lastParryAt = tick()
    local canParry = false;

    local function HasParryCool()
        local b = false
        for i,v in next, effectReplicator:GetEffects() do 
            if v.Class == 'ParryCool' then 
                b = true;
            end
        end
        return b
    end

    lastAnimationLogged = ''

    -- function onParryRequest()
    --     if (not effectReplicator:FindEffect('ParryCool') and not effectReplicator:FindEffect('Action') and not effectReplicator:FindEffect('LightAttack') and canParry and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('Weapon')) then
    --         lastParryAt = tick();
    --         canParry = false;
    --         warn('Client read', lastParryAt);
    --     end;
    -- end;

    local function updateESP(tag, property, options)
        --print('called')
        for i,v in next, esp_lib.Objects do 
            if v['flag'] ~= nil then 
               -- print('flaggy waggy')
            end
            if v['flag'] and tostring(v['flag']) == tag then 
                --v.Color = options.color
                --sharedRequires.smartlog('(REMOVE THIS AFTER)','MATCHES TAG DOESNT CHANGE PROPERTY BRO WYD')
                --warn(v[property])
                if property == 'destroy' then 
                    -- couldve returned
                    v:Remove()
                else
                    v[property] = options
                end
            end
            if property == 'streamermode-on' then 
                if v.Player then 
                    local chooserandomtexts = {
                        'pinapple';
                        'sugarplum';
                        'azfakeian';
                        'nig-';
                    }
                    v.Name = chooserandomtexts[math.random(1,#chooserandomtexts)]..tostring(math.random(1,999999999))
                end;
            elseif property == 'streamermode-off' then 
                if v.Player then 
                    v.Name = v.Object.Name-- if nto v.Options.name (== nil)
                end
            end;
        end
    end
    --local setscriptes = function() end
    local inputClient = game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler'):WaitForChild('InputClient');

    local function returnKeyhandler()
      --  setscriptes(inputClient);
     --   setthreadidentity(2);


        
        --GetKey("Dodge", key):FireServer("roll",nil,nil,false) -- example how to use
       -- setthreadidentity(8);
      --  setscriptes();
        inputClient = game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler'):WaitForChild('InputClient', math.huge);
        setscriptes(inputClient);
        setthreadidentity(2);

        local keyhandler = require(game:GetService("ReplicatedStorage").Modules.ClientManager.KeyHandler)
        local stack = getupvalue(getrawmetatable(getupvalue(keyhandler, 8)).__index, 1)[1][1]
        local GetKey = stack[89]
        local key = stack[64]
        getupvalue(GetKey, 2)[0][1][2][4] = "HtttpGet"

        setthreadidentity(7);
        setscriptes();

        getKey = GetKey
        return key
    end

    local function safeGetKey(x)
        return getKey(x,key) -- if r == plum then
    end

    --local key = nil;
    --repeat task.wait(1); key = returnKeyhandler(); until getKey ~= nil and key ~= nil;
    warn('got key')
    --local key = returnKeyhandler()
    if not getKey then game.Players.LocalPlayer:Kick('[azfake kick] no key handler') end
    -- GetKey("Dodge", key)
    fallRemote = getKey('FallDamage', key);
    dialogueRemote = getKey('SendDialogue', key);
    blockRemote = getKey('Block', key);
    unblockRemote = getKey('Unblock', key);
    dodgeRemote = getKey('Dodge', key);
    leftClickRemote = getKey('LeftClick', key);
    rightClickRemote = getKey('RightClick', key);
    stopDodgeRemote = getKey('StopDodge', key);
    dropToolRemote = getKey('DropTool', key);
    serverSwimRemote = getKey('ServerSwim',key);

    getgenv().remotes = {
        fallRemote = fallRemote,
        dialogueRemote = dialogueRemote,
        leftClickRemote = leftClickRemote,
        blockRemote = blockRemote,
        dodgeRemote = dodgeRemote,
        rightClickRemote = rightClickRemote,
        stopDodgeRemote = stopDodgeRemote,
        unblockRemote = unblockRemote,
        dropToolRemote = dropToolRemote,
        serverSwimRemote = serverSwimRemote
    };

    --setthreadidentity(8);
    -- local oldFireserver;
    -- oldFireserver = hookfunction(blockRemote.FireServer, onFireserver);

    -- hookfunction(blockRemote.FireServer, onFireserver);

    effectReplicator.EffectRemoving:connect(function(effect)
        if (effect.Class == 'ParryCool') then
            canParry = true;
        end;
    end);

    local function onCharacterAdded(character)
        --repeat task.wait() until game.Players.LocalPlayer.Character
        --inputClient = game.Players.LocalPlayer.Character:FindFirstChild('CharacterHandler'):WaitForChild('InputClient', math.huge);
        if (not getKey) then
            repeat
                print('Waiting for get getkey func');
                RetKey = returnKeyhandler();
                key = RetKey
                task.wait(1);
            until getKey;
            print('Got Keyfunc')
        end;
        if not key then game.Players.LocalPlayer:Kick('[azfake kick] no key') end
        --key = 

        -- GetKey("Dodge", key)
        fallRemote = getKey('FallDamage', key);
        dialogueRemote = getKey('SendDialogue', key);
        blockRemote = getKey('Block', key);
        unblockRemote = getKey('Unblock', key);
        dodgeRemote = getKey('Dodge', key);
        leftClickRemote = getKey('LeftClick', key);
        rightClickRemote = getKey('RightClick', key);
        stopDodgeRemote = getKey('StopDodge', key);
        dropToolRemote = getKey('DropTool', key);
        serverSwimRemote = getKey('ServerSwim',key);
    
        getgenv().remotes = {
            fallRemote = fallRemote,
            dialogueRemote = dialogueRemote,
            leftClickRemote = leftClickRemote,
            blockRemote = blockRemote,
            dodgeRemote = dodgeRemote,
            rightClickRemote = rightClickRemote,
            stopDodgeRemote = stopDodgeRemote,
            unblockRemote = unblockRemote,
            dropToolRemote = dropToolRemote,
            serverSwimRemote = serverSwimRemote
        };
        setupNoStun()

        if not myRootPart then 
            repeat task.wait(1) myRootPart = azfake:returndata().humanoidrootpart until myRootPart
        end
        print('got root part')
        
        function onParryRequest()
            if (not effectReplicator:FindEffect('ParryCool') and not effectReplicator:FindEffect('Action') and not effectReplicator:FindEffect('LightAttack') and canParry and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('Weapon')) then
                lastParryAt = tick();
                canParry = false;
                warn('Client read', lastParryAt);
            end;
        end;
        local oldFireserver;
        local function onFireserver(self, ...)
            -- if (leftClickRemote and self == leftClickRemote and library.flags.blockInput and not _G.canAttack) then
            --     return;
            -- end;
            if (blockRemote and self == blockRemote) then
                task.spawn(onParryRequest);
            end;
            return oldFireserver(self, ...);
        end;
        oldFireserver = hookfunction(blockRemote.FireServer, onFireserver);

        --hookfunction(blockRemote.FireServer, onFireserver);


    end

    -- game.Players.LocalPlayer.CharacterAdded:Connect(function(x)
    --     onCharacterAdded(x)
    -- end)
    _G.canAttack = true;

    if (game.Players.LocalPlayer.Character) then
        task.spawn(onCharacterAdded, game.Players.LocalPlayer.Character);
    end;

    game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded);

    setthreadcaps(7)
    deepwokensettings.functions.autoloot = function(v)
        --[[
            Mythic = {Color3.fromRGB(),deepwokensettings.lootmythic}
        ]]
        local LootColors = {
            ["Mythic"] = {
                col = Color3.fromRGB(71, 204, 175); -- could make it a table and keep the color and the variable inside
                val = deepwokensettings.lootmythic;
            };
            ["Common"] = {
                col = Color3.fromRGB(64, 80, 76); -- could make it a table and keep the color and the variable inside
                val = deepwokensettings.lootcommon;
            };
            ["Rare"] = {
                col = Color3.fromRGB(136, 83, 83); -- could make it a table and keep the color and the variable inside
                val = deepwokensettings.lootrare;
            };
            ["Uncommon"] = {
                col = Color3.fromRGB(163, 142, 101); -- could make it a table and keep the color and the variable inside
                val = deepwokensettings.lootunc;
            };
            ["Enchant"] = {
                col = Color3.fromRGB(226, 255, 231); -- could make it a table and keep the color and the variable inside
                val = deepwokensettings.lootenchant;
            };
        };
        warn(`[autoloot] [func] [BG Color: {v.BackgroundColor3}] `) -- [IMG Color: {v.ImageColor3}]
        if v.Name:find('Medallion') and deepwokensettings.lootmedallion then 
            warn(`[autoloot] ->? picking up medallion`)
            return;
        end;
        for color, value in next, LootColors do 
            if v:IsA('TextButton') and value['col'] == v.BackgroundColor3 and (deepwokensettings.autolootfilter and value['val'] == true or deepwokensettings.autolootfilter == false and true) then 
                warn(`[autoloot] ->? picking up {color} [reason : {value['val']}]`)
                firesignal(v.MouseButton1Click)
            end
        end
    end
    game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)
        if child.Name == 'ChoicePrompt' and deepwokensettings.autoloot == true then 
            local UiLocation = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('ChoicePrompt').ChoiceFrame.Options;
            task.spawn(function()
                repeat 
                    task.wait()
                    for i,v in next, UiLocation:GetChildren() do 
                        if v:IsA('TextButton') then 
                            deepwokensettings.functions.autoloot(v);
                        end
                    end;
                until UiLocation == nil
            end)
        end;
    end);
    local ChaserTween = nil
    local BloodJar = nil
    
    deepwokensettings.functions.getactivebloodjar = function()
        local chaser = workspace.Live:FindFirstChild(".chaser")
        if not chaser then
            return nil
        end
        return chaser.HumanoidRootPart:FindFirstChild("BloodJar")
    end

	deepwokensettings.functions.resetchasertween = function() -- resetchartween
		if not ChaserTween then
			return
		end

		ChaserTween:Pause()
		ChaserTween:Cancel()
		ChaserTween = nil
	end

    deepwokensettings.functions.TPToClosestJar = function()
        if not deepwokensettings.tptojars then 
            deepwokensettings.functions.resetchasertween()
            return;
        end;
        deepwokensettings.functions.resetchasertween()
        -- local bloodjar deepwokensettings.functions.getactivebloodjar() = -- jarz
        -- if not bloodjar then 
        --     return;
        -- end;
        -- "better function"
        local jar = nil;
        local jardist = 0;
        local jarholderobj = nil;
        for i, jarholder in next, chaser.HumanoidRootPart:GetChildren() do 
            if jarholder.Name == 'BloodJar' and jarholder.Value ~= nil then 
                if jarholder.Value:FindFirstChildOfClass('Part') then 
                    local obj = jarholder.Value:FindFirstChildOfClass('Part')
                    local dist = (obj.Position - azfake:returndata().humanoidrootpart.Position).Magnitude
                    if dist < 50 then 
                        if jar == nil then 
                            jar = jarholder.Value;
                            jardist = dist;
                            jarholderobj = jarholder;
                        else
                            if jardist > dist then 
                                jar = jarholder.Value;
                                jardist = dist;
                                jarholderobj = jarholder;
                            end
                        end
                    end
                end
            end
        end
        -- local obj = bloodjar.Value.Parent:FindFirstChildOfClass("Part");
        -- if not obj then 
        --     return print('bloodjar no part');
        -- end;
        if not jar then return end;
        if ChaserTween then return end; -- already tweening

        BloodJar = jarholderobj;
        local tweenCompleted = false;
        ChaserTween = game.TweenService:Create(azfake:returndata().humanoidrootpart,TweenInfo.new(jardist/10,Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {CFrame = jar:FindFirstChildOfClass('Part').CFrame})
        ChaserTween:Play()
        ChaserTween.Completed:Connect(function()
            tweenCompleted = true;
        end)

        task.spawn(function()
            repeat
                task.wait() 
                if deepwokensettings.lookatjars == true then 
                    workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p,jar:FindFirstChildOfClass('Part').Position)    
                end
            until tweenCompleted == true and not jarholderobj or deepwokensettings.tptojars == false
            ChaserTween = nil;
            BloodJar = nil;
        end)


    end



    local function checkRange(range, part)
        local myRootPart = azfake:returndata().humanoidrootpart
        if (not myRootPart or not part) then
            return false;
        end;

        range += deepwokensettings['autoparrydistance'];

        if (typeof(part) == 'Vector3') then
            part = {Position = part}; -- Vector3.new() = {Position = Vector3.new()} -- make x the subject
        end;

        return (myRootPart.Position - part.Position).Magnitude <= range;
    end;

    -- Namecall

    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        if self == remotes.fallRemote and deepwokensettings.nofalldamage == true then 
            return
        elseif self.Name == 'AcidCheck' and deepwokensettings.antiacid == true then 
            return
        end
        return metahook(self,...)
    end)


    local function blockAttack()
        local blockrem = game.Players.LocalPlayer.Character.CharacterHandler.Requests:GetChildren()[2]
        blockrem:FireServer(nil)
    end
    local function unblockAttack()
        local blockrem = game.Players.LocalPlayer.Character.CharacterHandler.Requests:GetChildren()[3]
        blockrem:FireServer(nil)
    end

    local function parryfunc()
        task.spawn(function()
            blockAttack()
            task.wait()
            unblockAttack()
        end)
    end
    local function parryAttack(timings,rootPart,animationTrack,maxRange,useAnimSpeed)
        if not checkRange(maxRange,rootPart) then return print('didnt parry not in range ['..tostring(maxRange)..']') end
        local convertedWait = 0;
        local waited = 0;
        local offset = 0;

        _G.canAttack = false;
        for i,timing in next, timings do
            --convertedWait = calculate_taskwait(timing/(useAnimSpeed and animationTrack.Speed or 1));
            waited = 0; --parry(convertedWait-offset,rootPart,animationTrack,maxRange,i);
            --offset = waited-convertedWait;
            task.wait(timing)
            parryfunc()
        end

        _G.canAttack = true;
    end
    -- local function roll(cancel) 

    -- end
    local function detect(v,dect)
        local x = false
        if v:FindFirstChild('Humanoid') then 
            for i,anim in pairs(v.Humanoid:GetPlayingAnimationTracks()) do 
                if anim.Animation.AnimationId == dect and animx.Animation.AnimationId == dect then
                    -- rconsoleprint('\ndetected '..anim.Animation.AnimationId)
                    x =  true
                    break
                end
            end
        end
        return x
    end
    local function getswingspeed(mob)
        local swingspeed = 1;
        local myRootPart = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
    end
    local function calculateSwing(mob)
        local timing = 1;
        if mob:FindFirstChild('RightHand') then 
            if mob.RightHand:FindFirstChild('HandWeapon') then 
                if mob.RightHand.HandWeapon.Stats.SwingSpeed then 
                    timing = mob.RightHand.HandWeapon.Stats.SwingSpeed.Value
                end
            end
        else
            print('idk wtf went on buddy')
        end
        return timing
    end
    local function _taskwait(n)
        if deepwokensettings.usecustomwaitdelay then -- library.flags.useCustomDelay then
            n+=deepwokensettings.customwaitdelay/1000;
        else
            local playerPing = Stats.PerformanceStats.Ping:GetValue()/1000;
            n -= (playerPing*(deepwokensettings.customwaitdelay/100));
        end

        return task.wait(n);
    end;
    local function makeDelayBlockWithRange(range, time)
        return {
            waitTime = time,
            maxRange = range
        };
    end;




    if game.CoreGui:FindFirstChild('AzfakeProximity') then 
        game.CoreGui:FindFirstChild('AzfakeProximity'):Destroy()
    end
    local ProximityGUI = Instance.new('ScreenGui'); -- BILLBOARD GUI
    ProximityGUI.Name = 'AzfakeProximity'
    local ProximityFrame = Instance.new('Frame');
    ProximityFrame.BackgroundTransparency = 1
    ProximityFrame.Name = '_azfakeproximity';
    ProximityFrame.Parent = ProximityGUI;
    ProximityFrame.Position = UDim2.new(0.38,0,0.1,0)
    ProximityFrame.Size = UDim2.new(0.25,0,0.25,0)
    local ProximityLabel = Instance.new('TextLabel');
    ProximityLabel.BackgroundTransparency = 1
    ProximityLabel.Size = UDim2.new(1,0,1,0);
    ProximityLabel.Name = 'proximitylabel';
    ProximityLabel.RichText = true;
    ProximityLabel.TextSize = 20;
    ProximityLabel.Text = ''
    ProximityLabel.Parent = ProximityFrame;
    ProximityGUI.Parent = game.CoreGui


    local function roll()
        if deepwokensettings.blatantroll == false then 
            game.VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game);
            game.VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game);
        else
            dodgeRemote:FireServer('roll', nil, nil, false);
	
            local humanoid = azfake:returndata().humanoid;
            if (not humanoid) then return end;

            local cancelRight = game.ReplicatedStorage.Assets.Anims.Movement.Roll.CancelRight
            local track = humanoid:LoadAnimation(cancelRight);
            track:Play();
        end;   
    end;



    local moderatorIds = {}
    local function isInGroup(player, groupId)
        local suc, err = pcall(player.IsInGroup, player, groupId);

        if(not suc) then return false end;
        return err;
    end;
    
    local killBricks = {};
    local killBricksObjects = {};

    local killBricksNames = {'KillPlane', 'ChasmBrick', 'ThronePart', 'KillBrick', 'SuperWall'};

    warn('id',getthreadidentity())
    local Whitelist = sector:AddDropdown("AutoParry Whitelist", deepwokensettings.whitelist, "All", false, function(dropdownv)
        deepwokensettings.whitelistmode = dropdownv;
    end)
    for i,v in pairs(game:GetService('Players'):GetChildren()) do 
        if v:IsA('Player') then 
            table.insert(deepwokensettings.whitelist,v.Name)
            Whitelist:Add(v.Name)
        end
    end
    game.Players.PlayerAdded:Connect(function(player)
        table.insert(deepwokensettings.whitelist,player.Name)
        Whitelist:Add(player.Name)
        if deepwokensettings.modnotifer and (table.find(moderatorIds, tostring(userId)) or isInGroup(player, 5212858)) then
            azfakenotify('A Moderator Has Joined Your Server','untilClick')
        end
    end)
    sharedRequires.__task(function()
        print()
    end);
    game.Players.PlayerRemoving:Connect(function(player)
        for i,v in next, deepwokensettings.whitelist do 
            if v == player.Name then table.remove(deepwokensettings.whitelist,i); end;
        end
        Whitelist:Remove(player.Name);
        if deepwokensettings.modnotifer and (table.find(moderatorIds, tostring(userId)) or isInGroup(player, 5212858)) then
            azfakenotify('A Moderator Has Left The Game','untilClick')
        end
    end)
    rightsect:AddToggle("No Fall Damage", false, function(e)
        deepwokensettings['nofalldamage'] = e;
    end)
    sharedRequires['CreateFlySystem'](rightsect,deepwokensettings)
    sharedRequires['CreateWalkSpeedSystem'](rightsect,deepwokensettings)
    --sharedRequires['CreateNoclip'](rightsect,deepwokensettings)
    rightsect:AddToggle("Disable Noclip On Knock", false, function(e)
        deepwokensettings.disablenoclipknock = e;
    end)
    rightsect:AddToggle("Noclip", false, function(e)
        deepwokensettings['noclip'] = e;
        if e == false then 
            maid.noclipcentre = nil;
            return;
        end;
        maid.noclipcentre = game.RunService.Stepped:Connect(function()
            local myCharacterParts = azfake:returndata().parts;
            local isKnocked = effectReplicator:FindEffect('Knocked');
            local disableNoClipWhenKnocked = deepwokensettings.disablenoclipknock;

            for _, v in next, myCharacterParts do
                if (disableNoClipWhenKnocked) then
                    v.CanCollide = not not isKnocked;
                else
                    v.CanCollide = false;
                end;
            end;
        end)
    end)
    rightsect:AddToggle("Infinite Jump", false, function(e)
        deepwokensettings['infinitejump'] = e;
        task.spawn(function()
            repeat
                local rootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild('HumanoidRootPart');
                if(rootPart and game.UserInputService:IsKeyDown(Enum.KeyCode.Space)) then
                    rootPart.Velocity = Vector3.new(rootPart.Velocity.X, deepwokensettings.infiniteJumpHeight, rootPart.Velocity.Z);
                end;
                task.wait(0.1);
            until not deepwokensettings.infinitejump;
        end)
    end)
    rightsect:AddSlider("Infinite Jump Height", 0, 0, 250, 1, function(State)
        deepwokensettings['infiniteJumpHeight'] = State
    end)
    rightsect:AddToggle("Knocked Ownership", false, function(e)
        deepwokensettings['knockedownership'] = e;
    end)
    rightsect:AddToggle("No Jump Cooldown", false, function(e)
        deepwokensettings['nojumpcooldown'] = e;
    end)
    rightsect:AddToggle("No Stun", false, function(e)
        deepwokensettings['nostun'] = e;
    end)
    rightsect:AddToggle("Anti Acid", false, function(e)
        deepwokensettings['antiacid'] = e;
    end)
    -- sector:AddToggle("No Kill Bricks", false, function(e)
    --     deepwokensettings['nokillbricks'] = e;
    -- end)
    rightsect:AddToggle("Auto Void Mobs", false, function(e)
        deepwokensettings['autovoidmobs'] = e;
        if (e == false) then 
            --print('ended')
            maid.voidmobs = nil;
            return;
        end;
        maid.voidmobs = game.RunService.Heartbeat:Connect(function()
            --print('voiding')
            sethiddenproperty(LocalPlayer, "MaxSimulationRadius", math.huge)
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
    
            for _, v in pairs(workspace.Live:GetChildren()) do
                if
                    v.PrimaryPart
                    and v ~= LocalPlayer.Character
                then
                    if v.HumanoidRootPart.ReceiveAge == 0 then
                        local cf = v.PrimaryPart.CFrame
                        v.PrimaryPart.Velocity = Vector3.new(14.465, 14.465, 14.465)
                        v.HumanoidRootPart.CFrame = CFrame.new(cf.X, -4980, cf.Z)
                        --v.Humanoid.Health = 0
                        if sethiddenproperty then
                            sethiddenproperty(v.HumanoidRootPart, "NetworkIsSleeping", false)
                        end
                    end
                end
            end
            --[[

                                and v:FindFirstChild("HumanoidRootPart")
                    and not v.Name:find(".megalodaunt")
                    and not v.Name:find(".chaser")
                    and not v.Name:find("lionfish")
            ]]
        end)
    end);


    local autoparrytoggle = sector:AddToggle("Auto Parry", false, function(e)
        deepwokensettings['autoparry'] = e;
        if e == false then 
            maid.autoParryOnEffectAddd = nil;
            maid.autoParrySlotBall = nil;
            maid.autoParryOrb = nil;
            maid.autoParryLayer2DescAdded = nil;
            return
        end;
        if (game.PlaceId == 8668476218) then -- trial of 1
            if (isLayer2) then
                local chaserBeamDebounce = true;

                maid.autoParryLayer2DescAdded = workspace.DescendantAdded:Connect(function(obj)
                    if (obj.Name == 'BloodTendrilBeam') then -- Chaser Beam
                        if (not chaserBeamDebounce) then return end;
                        chaserBeamDebounce = false;
                        _G.canAttack = false;

                        task.delay(0.1, function() chaserBeamDebounce = true; end);
                        _taskwait(0.55);
                        blockAttack();
                        unblockAttack();
                        _G.canAttack = true;
                    elseif (obj.Name == 'SpikeStabEff') then -- Chaser Explosion
                        _G.canAttack = false;
                        _taskwait(0.6);
                        if (not checkRange(20, obj)) then _G.canAttack = true; return end;
                        print(obj, 'got added', obj:GetFullName());
                        blockAttack();
                        unblockAttack();
                        _G.canAttack = true;
                    elseif (obj.Name == 'ParticleEmitter3' and string.find(obj:GetFullName(), 'avatar')) then -- Avatar Beam
                        _taskwait(0.75);

                        local avatar = obj.Parent.Parent.Parent;
                        local target = avatar and avatar:FindFirstChild('Target');

                        if (target and target.Value ~= LocalPlayer.Character) then return end;

                        _G.canAttack = false;
                        warn('AVATAR BEAM: now we parry');
                        repeat
                            blockAttack();
                            unblockAttack();
                            task.wait(0.1);
                        until not obj.Parent or not obj.Enabled;
                        _G.canAttack = true;
                    elseif (obj.Name == 'GrabPart') then -- Avatar Blind Ball
                        repeat
                            task.wait();
                        until not obj.Parent or checkRange(20, obj);
                        if (not obj.Parent) then return end;
                        roll();
                    end
                end);
            else
                maid.autoParryOrb = RunService.RenderStepped:Connect(function(dt)
                    local myRootPart = azfake:returndata().humanoidrootpart
                    if (not myRootPart) then return end;
                    local myPosition = myRootPart.Position;
        
                    for _, v in next, workspace.Thrown:GetChildren() do
                        if (not spawnedAt) then
                            spawnedAt = tick();
                        end;
        
                        if (v.Name == 'ArdourBall2' and tick() - spawnedAt >= 3) then
                            local distance = (myPosition - v.Position).Magnitude;
        
                            if (distance <= 15 and tick() - lastParryAt >= 0.1) then
                                lastParryAt = tick();
                                --blockAttack(true);
                                --unblockAttack();
                                blockAttack();
                                unblockAttack();
                                break;
                            end;
                        end;
                    end;
                end);
            end
        end
        maid.autoParrySlotBall = workspace.Thrown.ChildAdded:Connect(function(obj)
            task.wait();
            local myRootPart = azfake:returndata().humanoidrootpart
            if (not myRootPart) then return end;

            if (obj.Name == 'SlotBall') then
                repeat
                    task.wait();
                until (obj.Position - myRootPart.Position).Magnitude <= 20 or not obj.Parent;

                if (not obj.Parent) then
                    return warn('Object got destroyed');
                end;

                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'BoulderProjectile' and (myRootPart.Position - obj.Position).Magnitude < 500) then
                repeat
                    task.wait()
                until (obj.Position - myRootPart.Position).Magnitude <= 30 or not obj.Parent;
                if (not obj.Parent) then return end;
                dodgeAttack();
            elseif (obj.Name == 'SpearPart' and (myRootPart.Position - obj.Position).Magnitude < 600) then
                -- Grand Javelin Long Range
                if (myRootPart.Position - obj.Position).Magnitude <= 35 then return; end
                repeat
                    task.wait()
                until (obj.Position - myRootPart.Position).Magnitude <= 80 or not obj.Parent;
                if (not obj.Parent) then return end;
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'StrikeIndicator' and (myRootPart.Position - obj.Position).Magnitude < 10) then
                _taskwait(0.2);
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'WindSlashProjectile' and (myRootPart.Position - obj.Position).Magnitude < 200) then
                if (myRootPart.Position - obj.Position).Magnitude <= 10 then return; end
                repeat
                    task.wait()
                until checkRange(30, obj) or not obj.Parent;
                if (not obj.Parent) then return end;
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'IceShuriken' and checkRange(300, obj) and not (lastUsedMantra == 'ForgeIce' and tick() - lastUsedMantraAt < 1)) then
                print(tick() - lastUsedMantraAt, lastUsedMantra);
                repeat
                    task.wait();
                until not obj.Parent or checkRange(20, obj);
                if (not obj.Parent) then return end;
                print('parry');
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'IceDagger' and not checkRange(20, obj)) then
                local rocketPropulsion = obj:WaitForChild('RocketPropulsion', 10);
                if (not rocketPropulsion or rocketPropulsion.Target ~= myRootPart) then return end;

                repeat
                    task.wait();
                until not obj.Parent or checkRange(20, obj);
                if (not obj.Parent) then return end;

                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'WindProjectile' and not checkRange(20, obj)) then
                repeat
                    task.wait();
                until checkRange(80, obj) or not obj.Parent;
                if (not obj.Parent) then return end;

                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'WindKickBrick' and not checkRange(15, obj)) then
                -- Tornado Kick

                repeat
                    task.wait();
                until checkRange(40, obj) or not obj.Parent;
                if (not obj.Parent) then return end;
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'SeekerOrb') then
                -- Shadow Seeker
                local rocketPropulsion = obj:WaitForChild('RocketPropulsion', 10);
                if (not rocketPropulsion or rocketPropulsion.Target ~= myRootPart) then return end;
                repeat
                    task.wait();
                until not obj.Parent or checkRange(2, obj);
                if (checkRange(2, obj)) then
                    blockAttack();
                    unblockAttack();
                end;
            elseif (obj.Name == 'Beam') then
                -- Arc Beam
                local endPart = obj:WaitForChild('End', 10);
                if (not endPart) then return; end;

                repeat task.wait(); until checkRange(30, endPart) or not obj.Parent;
                if (not obj.Parent) then print('Despawned') return; end;

                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'DiskPart' and checkRange(100, obj)) then
                -- Sinister Halo
                repeat task.wait(); until checkRange(20, obj) or not obj.Parent;
                if (not obj.Parent) then print('Despawned') return; end;

                _taskwait(0.3);
                blockAttack();
                unblockAttack();
                task.wait(0.3);
                if (not checkRange(15, obj)) then return end;
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'BoneSpear') then -- Avatar Bone Throw
                _taskwait(0.5);

                if (isLayer2) then
                    repeat
                        task.wait();
                    until not obj.Parent or checkRange(30, obj) checkRangeFromPing(obj, 30, 175);
                else
                    repeat
                        task.wait();
                    until not obj.Parent or checkRange(30, obj);
                end;

                if (not obj.Parent) then return end;
                blockAttack();
                unblockAttack();
            elseif (obj.Name == 'Bullet' and not checkRange(10, obj)) then
                repeat
                    task.wait();
                until checkRange(10,obj) or not obj.Parent;
                if (not obj.Parent) then return end; -- checkRangeFromPing(obj, 20, 20)

                blockAttack();
                unblockAttack();
            end;
        end);
        maid.autoParryOnEffectAddd = effectReplicator.EffectAdded:connect(function(effect)
            if (effect.Class == 'UsingMove') then
                lastUsedMantraAt = tick();
                lastUsedMantra = effect.Value.Name:match('Mantra%:(.-)%p');
            end;
        end);
    end)
    sector:AddSlider("Auto Parry Distance", 0, 0, 250, 1, function(State)
        deepwokensettings['autoparrydistance'] = State
    end)
    sector:AddToggle("Blatant Roll", false, function(e)
        deepwokensettings['blatantroll'] = e;
    end)
    sector:AddToggle("Roll Cancel", false, function(e)
        deepwokensettings['rollcancel'] = e;
    end)
    sector:AddToggle("Custom Auto Parry Wait", false, function(e)
        deepwokensettings['usecustomwaitdelay'] = e;
    end)
    sector:AddSlider("Custom Wait Time", 0, 0, 250, 1, function(State)
        deepwokensettings['customwaitdelay'] = State
    end)

    rightsect:AddButton('Serverhop',function()
        Notify('','Serverhopping... ',1)
        functions.serverHop(true)
    end)

    local selectedTalent = ''
    local selectionspoof = moresect:AddDropdown('Talents Spoofer', deepwokensettings.talentsspoofable, "" , false, function(e)
        -- nothing turned into something
        selectedTalent = e;
    end); 
    moresect:AddButton('Spoof Talent',function()
        if selectedTalent ~= '' then 
            if not LocalPlayer.Backpack:FindFirstChild(selectedTalent) then 
                local talent = Instance.new("Folder")
                talent.Name = selectedTalent
                talent.Parent = LocalPlayer.Backpack
                azfakenotify(`Gave Talent {string.split(selectedTalent,':')[2]}`,4)
                print(`gave talent {selectedTalent}`)
                --TalentSelect[selectedTalent] = talent
            end
        end
    end)
    local PlayersInProximity = {}
    local HasBeenAround = false;
    moresect:AddSlider("Proximity Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['proximityrange'] = State
    end)
    moresect:AddToggle("Player Proximity Label", false, function(e)
        deepwokensettings['proximitylabel'] = e;
        ProximityGUI.Enabled = e;
        if e == false then 
            ProximityLabel.Text = '' -- could make it check if proximity to set text
        end;
        if e == true then 
            -- label.Visible = true;
            --ProximityGUI.Enabled = e
        end;
    end)
    moresect:AddToggle("Hide Text When Clear", false, function(e)
        deepwokensettings['hidetextwhenclear'] = e;
    end)
    moresect:AddToggle("Disable AutoParry In Proximity", false, function(e)
        deepwokensettings['disableautoparryinproximity'] = e;
    end)
    moresect:AddToggle("Player Proximity", false, function(e)
        deepwokensettings['playerproximity'] = e;
        ProximityGUI.Enabled = e;
        if (e == false) then 
            maid.playerproximitycon = nil;
            return; 
        end;
        maid.playerproximitycon = game.RunService.Heartbeat:Connect(LPH_NO_VIRTUALIZE(function()
            local HumanoidRootPart = azfake:returndata().humanoidrootpart
            if not HumanoidRootPart then return end;
            -- print(#PlayersInProximity)
            -- for i,v in next, PlayersInProximity do 
            --     print(i,v)
            -- end
            if #PlayersInProximity > 0 then 
                local PluralText = 'PLAYER' -- add dist
                ProximityLabel.Text = `{#PlayersInProximity} {#PlayersInProximity==1 and 'PLAYER' or 'PLAYERS'} {#PlayersInProximity==1 and 'IS' or 'ARE'} IN PROXIMITY` -- `PLAYERS {#PlayersInProximity} ARE IN PROXIMITY`
                if deepwokensettings.disableautoparryinproximity then 
                    deepwokensettings.autoparry = false -- and autoparry == true()
                end
            else
                if deepwokensettings.disableautoparryinproximity and autoparrytoggle:Get() == true then 
                    deepwokensettings.autoparry = true;
                end
                if deepwokensettings.hidetextwhenclear == false then 
                    ProximityLabel.Text = 'NO PLAYERS ARE IN PROXIMITY'
                else
                    ProximityLabel.Text = ''
                end
            end
            local function cleanPlayersInProximity() -- could make a silder instead of 3
                if #PlayersInProximity >= 3 and HasBeenAround == false then 
                    print(`[azfake] -> starting proximity check`)
                    HasBeenAround = nil;
                    task.spawn(function()
                        task.wait(120)
                        if #PlayersInProximity >= 3 then
                            print(`[azfake] -> proximity check been close for 2 minutes`)
                            HasBeenAround = true;
                        end
                    end)
                elseif #PlayersInProximity >= 3 and HasBeenAround == true then 
                    for index, oldplayer in next, PlayersInProximity do 
                        if oldplayer == nil then -- cleanup
                            table.remove(PlayersInProximity,index) 
                            print(`[azfake][cleanup] -> removed nil in player proximity , probably left`)
                        end
                    end
                    HasBeenAround = false;
                else
                    -- do nothing
                end
            end;
            cleanPlayersInProximity()
            --[[
            x = {'x'}
            table.foreach(x, function(xr)
                warn(xr) -- index
                warn(x[xr]) -- value
            end)
            ]]
            for i, opp_player in next, game.Players:GetPlayers() do  -- PlayersInProximity[opp_player.Name] == nil
                if opp_player ~= game.Players.LocalPlayer and opp_player.Character ~= nil and opp_player.Character:FindFirstChild('HumanoidRootPart') then 
                    local OppHumanoidRootPart = opp_player.Character:FindFirstChild('HumanoidRootPart');
                    if (OppHumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude <= deepwokensettings.proximityrange then 
                        --PlayersInProximity[opp_player.Name] = {};
                        if not table.find(PlayersInProximity,opp_player.Name) then 
                            table.insert(PlayersInProximity,opp_player.Name)
                            azfakenotify(`{opp_player.Name} is in proximity`,'untilClick') -- could destroy after
                        end
                    else
                        if table.find(PlayersInProximity,opp_player.Name) then --~= nil then         PlayersInProximity[opp_player] == true
                            azfakenotify(`{opp_player.Name} left the proximity`,'untilClick')
                            for index, oldplayer in next, PlayersInProximity do 
                                if not game.Players:FindFirstChild(oldplayer) then -- cleanup   oldplayer == nil
                                    table.remove(PlayersInProximity,index) 
                                    print(`[azfake] -> removed nil in player proximity , probably left`)
                                end
                                if oldplayer == opp_player.Name then 
                                    print(`[azfake] -> removed {opp_player.Name} in player proximity , probably left`)
                                    table.remove(PlayersInProximity,index)
                                end
                            end
                        end
                    end
                end
            end;
            -- (())
        end))
    end)
    moresect:AddSeperator('-')
    moresect:AddToggle('Auto Loot', false, function(xstate)
        deepwokensettings.autoloot = xstate;
    end)
    moresect:AddToggle('Auto Loot Filter', false, function(xstate)
        deepwokensettings.autolootfilter = xstate; --autolootfiler
    end)
    moresect:AddToggle('Loot Medallions', false, function(xstate)
        deepwokensettings.lootmedallion = xstate;
    end)
    moresect:AddToggle('Loot Mythic', false, function(xstate)
        deepwokensettings.lootmythic = xstate;
    end)
    moresect:AddToggle('Loot Enchanted', false, function(xstate)
        deepwokensettings.lootenchant = xstate;
    end)
    moresect:AddToggle('Loot Rare', false, function(xstate)
        deepwokensettings.lootrare = xstate;
    end)
    moresect:AddToggle('Loot Common', false, function(xstate)
        deepwokensettings.lootcommon = xstate;
    end)
    moresect:AddToggle('Loot Uncommon', false, function(xstate)
        deepwokensettings.lootunc = xstate;
    end)

    local LoggingsNear = {} -- nEARy
    moreright:AddSlider("Nearby Distance", 0, 0, 250, 1, function(State) -- Nearyby
        deepwokensettings['lognearbydistance'] = State
    end)
    moreright:AddToggle("Log Nearby Animations", false, function(e)
        deepwokensettings['lognearby'] = e;
        if e == true then 
            for i,v in next, workspace.Live:GetChildren() do 
                if v:FindFirstChild('HumanoidRootPart') and v:FindFirstChild('Humanoid') and azfake:returndata().humanoidrootpart and v ~= game.Players.LocalPlayer.Character and (v.HumanoidRootPart.Position - azfake:returndata().humanoidrootpart.Position).Magnitude <= deepwokensettings.lognearbydistance then 
                    local ctn; ctn = v.Humanoid.AnimationPlayed:Connect(function(anim)
                        -- log speed
                        local AnimationName = '';
                        local animid = tostring(anim.Animation.AnimationId):split('/')[3]
                        for i,v in next, game:GetService("ReplicatedStorage").Assets.Anims:GetDescendants() do 
                            if v:IsA('Animation') then 
                                if v.AnimationId == anim.Animation.AnimationId then --if animationname ~='' then print duplicate
                                    AnimationName = v.Name
                                end
                            end
                        end
                        LogFunct(`[{AnimationName}][{animid}], [{anim.Speed}],{v.Name:sub(1,5)}`,'') -- remove .dot
                        task.spawn(function()
                            task.wait(1.5)
                            lastAnimationLogged = anim.Animation.AnimationId
                        end)
                        if v:FindFirstChild('HumanoidRootPart') and azfake:returndata().humanoidrootpart and (v.HumanoidRootPart.Position - azfake:returndata().humanoidrootpart.Position).Magnitude > deepwokensettings.lognearbydistance then 
                            for i,v in next, LoggingsNear do 
                                if v == ctn then 
                                    warn('disconnectefd funct')
                                    v:Disconnect()
                                end
                            end
                        end
                    end)
                    table.insert(LoggingsNear,ctn)
                end
            end
        else
            for i,v in next, LoggingsNear do 
                pcall(function()
                    v:Disconnect()
                    warn('[azfake] disconnected loggings')
                end)
            end
        end
    end)
    moreright:AddButton('Copy Last Animation',function()
        azfakenotify(`copied {lastAnimationLogged}`,3)
        setclipboard(lastAnimationLogged)
    end)
    moreright:AddToggle('No Blind', false, function(e)
        deepwokensettings.noblind = e;
        if e == false then 
            maid.checkifblind = nil;
            return;
        end;
        maid.checkifblind = game.RunService.Heartbeat:Connect(LPH_NO_VIRTUALIZE(function()
            if LocalPlayer and LocalPlayer.Backpack and LocalPlayer.Backpack:FindFirstChild('Talent:Blinded') then 
                LocalPlayer.Backpack:FindFirstChild('Talent:Blinded').Parent = LocalPlayer;
            end
            if LocalPlayer and LocalPlayer.Backpack and LocalPlayer.Backpack:FindFirstChild('Flaw:Blind') then 
                LocalPlayer.Backpack:FindFirstChild('Flaw:Blind').Parent = LocalPlayer;
            end
        end))
    end)
    moreright:AddToggle('No Fog', false, function(e)
        deepwokensettings.noog = e;
        if e == false then 
            maid.checkfog = nil;
            return;
        end;
        maid.checkfog = game.RunService.Heartbeat:Connect(LPH_NO_VIRTUALIZE(function()
            game.Lighting.FogStart = 10000000000
            game.Lighting.FogEnd = 10000000000
            if game.Lighting:FindFirstChildOfClass("Atmosphere") then
                game.Lighting:FindFirstChildOfClass("Atmosphere").Density = 0
            end
        end))
    end)
    moreright:AddToggle('No Wind', false, function(e)
        deepwokensettings.nowind = e;
        if e == false then 
            maid.checkwind = nil;
            return;
        end;
        maid.checkwind = game.RunService.Heartbeat:Connect(LPH_NO_VIRTUALIZE(function()
            local rootPart = azfake:returndata().humanoidrootpart;
            if (not rootPart) then return end;

            local windPusher = rootPart:FindFirstChild('WindPusher');
            if (windPusher) then
                windPusher.Parent = game.Lighting;
            end;
        end))
    end)
    local jartoggle = moreright:AddToggle('TP To Jars', false, function(e) -- jars:IsPressed()
        deepwokensettings.tptojars = e;
        task.spawn(function()
            repeat 
                task.wait()
                if ChaserTween ~= nil then 
                    deepwokensettings.functions.TPToClosestJar() -- tptTPtoojars
                end
            until getgenv().loopsUnload == true or deepwokensettings.tptojars == false
        end)
    end)
    moreright:AddToggle('Look At Jar', false, function(e) -- jars:IsPressed()
        deepwokensettings.lookatjars = e;
    end)
    jartoggle:AddKeybind()
    -- local selectionspoof = moresect:AddDropdown('Loot', deepwokensettings.lootablevariety, "" , false, function(e)
    --     selectedTalent = e;
    -- end); 
    espsector:AddToggle('Use Names', false, function(xstate)
        deepwokensettings.espnames = xstate;
        esp_lib.Names = xstate
    end)
    espsector:AddToggle('Use Boxes', false, function(xstate)
        deepwokensettings.boxesp = xstate;
        esp_lib.Boxes = xstate
    end)
    espsector:AddToggle('Use Tracers', false, function(xstate)
        deepwokensettings.tracers = xstate;
        esp_lib.Tracers = xstate
    end)
    espsector:AddToggle('Player Esp', false, function(xstate)
        deepwokensettings.playeresp = xstate;
        esp_lib.Players = xstate
    end)
    espsector:AddColorpicker('Player Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        deepwokensettings['playerespcolor'] = ztx
        esp_lib.Settings.playerespcolor = deepwokensettings.playerespcolor
    end)
    espsector:AddSlider("Player Esp Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['playerespdistance'] = State
        esp_lib.Settings.playerespdistance = deepwokensettings.playerespdistance
    end)


    espsector:AddToggle('Mob Esp', false, function(xstate)
        deepwokensettings.mobesp = xstate;
        --esp_lib.mobesp = xstate;
        --updateESP('mobesp', 'Visible', xstate)
    end)
    espsector:AddColorpicker('Mob Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)--ChIslandest
        deepwokensettings['mobespcolor'] = ztx
        --updateESP('island', 'Color', ztx)
    end)
    espsector:AddSlider("Mob Esp Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['mobespdistance'] = State
    end)

    -- have 20 ingredients display at a time
    -- one gets picked up another 1 gets added

    local function rayEsp(t)
        -- could set the global esp[flag] = {}
        local child = t.child
        local flag = t.flag
        local distcap = t.maxdist
        local color = t.color
        local nobox = t.nobox or false;
        local notracer = t.notracer or false; -- notraceror notraror notraacer
        local givenaname = t.name -- supposed to be given name
        local activet = t.active
        local disableremove = t.removeondisable
        local pivoting = t.usepivot
        local selfname = t.selfname
        local b = esp_lib:Add(child, {
            SelfName = selfname;
            IsEnabled = flag;
            flag = flag;
            tag = flag;
            maxdistance = distcap;
            Color = t.color;
            NoTracer = notracer;
            NoBox = nobox;
            Name = givenaname;
            active = activet;
            removeondisable = disableremove;
            usepivot = pivoting;
        });
        return b
    end

    if game:GetService("Workspace"):FindFirstChild('Ingredients') then 
        esp_lib:CreateOnPath(game:GetService("Workspace").Ingredients, {
            max = 20;
            renderclosest = true;
            SelfName = true;
            distance = function()
                return deepwokensettings.ingredientespdistance;
            end;
            TableReceiveColor = deepwokensettings;
            Color = function()
                return deepwokensettings.ingredientespcolor;
            end;
            IsEnabled = 'IngredientEsp';
            flag = 'ingredient';
        })
    end
    if game:GetService("Workspace"):FindFirstChild('Chests') then 
        esp_lib:CreateOnPath(game:GetService("Workspace").Chests,{
            max = 20;
            renderclosest = true;
            SelfName = true;
            distance = function()
                return deepwokensettings.chestespdistance;
            end;
            Color = function()
                return deepwokensettings.chestespcolor; --Color3.fromRGB(255,255,255); --Color3.fromRGB(0,70,70);
            end;
            IsEnabled = 'chestesp';
            --PrimaryPart = 'HumanoidRootPart';
            flag = 'chestesp';
        })
    end
    espsector:AddToggle('Ingredient Esp', false, function(xstate)
        deepwokensettings.ingredientesp = xstate;
        esp_lib.IngredientEsp = xstate
        if xstate == true then 
            -- local ingredientesp = esp_lib:AddObjectListener(game:GetService("Workspace").Ingredients, {
            --     SelfName = true;
            --     distance = function()
            --         return deepwokensettings.ingredientespdistance;
            --     end;
            --     TableReceiveColor = deepwokensettings;
            --     Color = function()
            --         return deepwokensettings.ingredientespcolor; --Color3.fromRGB(255,255,255); --Color3.fromRGB(0,70,70);
            --     end;
            --     IsEnabled = 'IngredientEsp';
            --     --PrimaryPart = 'HumanoidRootPart';
            --     flag = 'ingredient';
            -- }) 
        else
            updateEsp('ingredient','Visible',false) --updateEsp('ingredient','destroy')
        end
    end)
    espsector:AddColorpicker('Ingredient Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        deepwokensettings['ingredientespcolor'] = ztx
        updateESP('ingredient', 'Color', ztx)
    end)
    espsector:AddSlider("Ingredient Esp Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['ingredientespdistance'] = State
    end)


    local function addVoidedEsp(model,options)
        if not model:FindFirstChildOfClass('BasePart') then 
            -- esp:add(vector3position, {})
            options.child = model.WorldPivot
            rayEsp(options)
        end
    end



    local function onObjectAdded(child)  -- ESP.Objects[workspace.Part]:Remove() would work btw
        if child.Name == 'PieceofForge' and deepwokensettings.artifactesp then
            --local function addFo
            if not child:FindFirstChildOfClass('BasePart') then 
            end
            addVoidedEsp(child, {   -- SelfName = true;
                Name = function()
                    return 'Artifact' -- Artific
                end;
                IsEnabled = 'artifactesp';
                flag = 'artifact';
                tag = 'artifact';
                active = function()
                    return deepwokensettings.artifactesp
                end;
                removeondisable = true; -- removenoactive
            })
        elseif child:FindFirstChild('Lid') and deepwokensettings.chestesp then 
            rayEsp{
                Name = function()
                    return 'Chest'
                end;    
                child = child;
                flag = 'chestesp';
                maxdist = function()
                    return deepwokensettings.chestespdistance
                end,
                color = function()
                    return deepwokensettings.chestespcolor
                end,
                active = function()
                    return deepwokensettings.chestesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end;
    end
    local function onObjectRemoval(child) 
        if ESP.Objects[child] then 
            ESP.Objects[child]:Remove()
            print('removed esp[]')
        end
    end
    local function flagremove(flag) -- flagrm
        for i,v in next, ESP.Objects do 
            if v.flag == flag then 
                v:Remove()
            end
        end
    end;

    -- newgen fucnts

    local function loopdirectory(popdir)
        local dirs = popdir
        -- for _, Directory in next, dirs do 
        --     for i, child in next, Directory:GetChildren() do 
        --         onObjectAdded(child)
        --     end
        -- end
        for _, Directory in next, dirs do 
            for i, child in next, Directory:GetChildren() do 
                onObjectAdded(child)
            end
        end
    end



    espsector:AddToggle('Artifact Esp', false, function(xstate)
        deepwokensettings.artifactesp = xstate;
        loopdirectory({workspace.Thrown,workspace})
    end)
    -- espsector:AddToggle('Chest Esp', false, function(xstate)
    --     deepwokensettings.chestesp = xstate;
    --     esp_lib.chestesp = xstate
    --     if xstate == true then 
    --         -- local chestesp = esp_lib:AddObjectListener(game:GetService("Workspace").Chests, {
    --         --     SelfName = true;
    --         --     distance = function()
    --         --         return deepwokensettings.chestespdistance;
    --         --     end;
    --         --     Color = function()
    --         --         return deepwokensettings.chestespcolor; --Color3.fromRGB(255,255,255); --Color3.fromRGB(0,70,70);
    --         --     end;
    --         --     IsEnabled = 'chestesp';
    --         --     --PrimaryPart = 'HumanoidRootPart';
    --         --     flag = 'chestesp';
    --         -- }) 
    --     else
    --         updateEsp('chestesp','destroy')
    --     end
    -- end)
    espsector:AddToggle('Chest Esp', false, function(xstate)
        deepwokensettings.chestesp = xstate;
        esp_lib.chestesp = xstate;
        if xstate == true then 
            for i,v in next, workspace.Thrown:GetChildren() do --workspaace
                if v:FindFirstChild('Lid') then 
                    rayEsp{
                        child = v;
                        Name = function()
                            return 'Chest' 
                        end;
                        flag = 'chestesp';
                        maxdist = function()
                            return deepwokensettings.chestespdistance
                        end,
                        color = function()
                            return deepwokensettings.chestespcolor
                        end,
                        active = function()
                            return deepwokensettings.chestesp
                        end;
                        nobox = true;
                        notracer = true;
                        removeondisable = true;
                    }
                    --NoTracer = true;
                    --NoBox = true;
                end
            end
        else
            updateEsp('chestesp','destroy')
        end
    end)
    espsector:AddColorpicker('Chest Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        deepwokensettings['chestespcolor'] = ztx
        --updateESP('chestesp', 'Color', ztx)
    end)
    espsector:AddSlider("Chest Esp Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['chestespdistance'] = State
    end)



    moreesp:AddToggle('NPC Esp', false, function(xstate)
        deepwokensettings.npcesp = xstate;
        esp_lib.npcesp = xstate;
        if xstate == false then 
            return;
        end
        local function espIt(v)
            rayEsp{
                child = v;
                Name = function()
                    return v.Name;
                end;
                flag = 'npcesp';
                maxdist = function()
                    return deepwokensettings.npcespdistance
                end,
                color = function()
                    return deepwokensettings.npcespcolor
                end,
                active = function()
                    return deepwokensettings.npcesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
                RenderInNil = true;
                usepivot = true;
            }
        end
        esp_lib:CreateOnPath(game:GetService("Workspace").NPCs, {
            max = 30;
            renderclosest = true;
            --SelfName = true;
            SelfHumanoidName = true;
            flag = 'npcesp';
            distance = function()
                return deepwokensettings.npcespdistance;
            end;
            Color = function()
                return deepwokensettings.npcespcolor
            end,
            active = function()
                return deepwokensettings.npcesp
            end;
            nobox = true;
            notracer = true;
            removeondisable = true;
            RenderInNil = true;
            usepivot = true;
        })
        --for i,v in next, workspace.NPCs:GetChildren() do --workspaace
           -- espIt(v)
            -- if v.PrimaryPart ~= nil then 
            --     espIt(v)
            -- else
            --     local ctn; ctn = v.ChildAdded:Connect(function(c)
            --         task.wait(2)
            --         if v.PrimaryPart then 
            --             espIt(v)
            --         end
            --     end)
            -- end
        --end
    end)
    moreesp:AddColorpicker('NPC Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        deepwokensettings['npcespcolor'] = ztx
    end)
    moreesp:AddSlider("NPC Esp Range", 0, 200, 5000, 1, function(State)
        deepwokensettings['npcespdistance'] = State
    end)

    moreesp:AddToggle('Island Esp', false, function(xstate)
        deepwokensettings.islandesp = xstate;
        if xstate == false then 
            maid.locationcheck = nil;
            esp_lib.island = xstate;
            --updateESP('island', 'remove')
            return;
        end;
        if xstate == true then 
            local function AddESP(obj,island)
                task.spawn(function()
                    if not azfake:returndata().humanoidrootpart then 
                        repeat task.wait() until azfake:returndata().humanoidrootpart or getgenv().loopsUnload == true
                    end
                    if not azfake:returndata().humanoidrootpart then return end;
                    local dist = (obj.Position - azfake:returndata().humanoidrootpart.Position).Magnitude
                    if dist <= deepwokensettings.islandespdistance then 
                        print('ADD A ESP TO ISLAND')
                        local BoxCon = esp_lib:Add(obj,{
                            -- CustomName = function()
                            --     return island.Name;
                            -- end;
                            Color = function()
                                return deepwokensettings.islandespcolor
                            end;
                            RenderInNil = true;
                            Name = island.Name;
                            PrimaryPart = obj;
                            NoTracer = true;
                            NoBox = true;
                            flag = 'island';
                            IsEnabled = 'island';
                            maxdistance = function()
                                return deepwokensettings.islandespdistance
                            end;
                            active = function()
                                return deepwokensettings.islandesp
                            end;
                        })

                    end
                end)
            end
            local AreaMarkers = MarkerWorkspace:WaitForChild('AreaMarkers')
            for i,island in next, AreaMarkers:GetChildren() do 
                local obj = island:FindFirstChildWhichIsA('Part') 
                if island:FindFirstChildWhichIsA('Part') then 
                    -- if not azfake:returndata().humanoidrootpart then 
                    --     task.spawn(function()
                        
                    --     end)
                    -- end
                    --[[
                        local function AddESP(obj)
                    ]]
                    AddESP(obj,island)
                else
                    local ctn; ctn = island.ChildAdded:Connect(function(child)
                        if child:IsA('Part') then 
                            AddESP(obj,island)
                        end
                    end)
                end;
            end
        end ;
        esp_lib.island = xstate;
    end)
    moreesp:AddColorpicker('Island Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)--ChIslandest
        deepwokensettings['islandespcolor'] = ztx
        --updateESP('island', 'Color', ztx)
    end)
    moreesp:AddSlider("Island Esp Range", 0, 2000, 5000, 1, function(State)
        deepwokensettings['islandespdistance'] = State
    end)
    moreesp:AddToggle('Whirlpool Esp', false, function(xstate)
        deepwokensettings.whirlpoolesp = xstate;
        esp_lib.whirlpoolesp = xstate;
        -- if xstate == false then 
        --     -- could loop in workspace see if object is in esp.objects for i,v in next, 
        --     for i,v in next, ESP.Objects do 
        --         if v.flag == 'whirlpoolesp' then 
        --             v:Remove()
        --         end
        --     end
        --     return;
        -- end;    
        for i,v in next, workspace:GetChildren() do 
            if v.Name == 'DepthsWhirlpool' then --namee
                if v:FindFirstChild('Center') then                        --IsEnabled = 'whirlpoolesp'; -- depthsesp
                    esp_lib:Add(v, {
                        SelfName = true;
                        flag = 'whirlpoolesp';
                        tag = 'whirlpoolesp';
                        active = function()
                            return deepwokensettings.whirlpoolesp;
                        end;
                        Color = function()
                            return deepwokensettings.whirlpoolespcolor;
                        end;
                        maxdistance = function()
                            return deepwokensettings.whirlpoolespdistance;
                        end;
                    });
                else
                    task.spawn(function()
                        repeat 
                            task.wait() 
                        until deepwokensettings.whirlpoolesp == false or loopsUnload == true or v:FindFirstChild('Center')
                        if v:FindFirstChild('Center') then 
                            esp_lib:Add(v, {
                                SelfName = true;
                                IsEnabled = 'whirlpoolesp'; -- depthsesp
                                flag = 'whirlpoolesp';
                                tag = 'whirlpoolesp';
                                Color = function()
                                    return deepwokensettings.whirlpoolespcolor;
                                end;
                                maxdistance = function()
                                    return deepwokensettings.whirlpoolespdistance;
                                end;
                                active = function()
                                    return deepwokensettings.whirlpoolesp;
                                end;
                            });
                        end
                    end)
                end
            end
        end
    end)
    moreesp:AddColorpicker('Whirlpool Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)--ChIslandest
        deepwokensettings.whirlpoolespcolor = ztx
        --updateESP('whirlpoolesp', 'Color', ztx)
    end)
    moreesp:AddSlider("Whirlpool Esp Range", 0, 2000, 5000, 1, function(State)
        deepwokensettings.whirlpoolespdistance = State
    end)
    
    for i,v in next, workspace:GetChildren() do 
        onObjectAdded(v)
    end;
    for i,v in next, workspace.Thrown:GetChildren() do 
        onObjectAdded(v)
    end;
    workspace.ChildAdded:Connect(function(child)
        task.wait(.1)
        onObjectAdded(child)
        -- if child.Name == 'PieceofForge' then -- or :find('forge')
        --     esp_lib:Add(child, {
        --         SelfName = true;
        --         IsEnabled = 'artifactesp';
        --         tag = 'artifact';
        --     });
        -- end;
    end);
    workspace.Thrown.ChildAdded:Connect(function(child)
        task.wait(.1)
        onObjectAdded(child)
    end);
    workspace.Thrown.ChildRemoved:Connect(function(child)
        onObjectRemoval(child)
    end);
    workspace.ChildRemoved:Connect(function(child)
        onObjectRemoval(child)
    end);

    --AddListen
    --["Gathered Wheat"]

    --[[

    -- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
    local prt = workspace.Live.ExtinctPurchase.CharacterHandler.Requests;
    local dirname = 'FdhjclofbfOmkj';

    for i, v in next, prt:GetChildren() do
        if v.Name == dirname then print(i) end
    end


    ]]


    local parryAnimTables = {}

    -- Timings: 
    parryAnimTables['9236066780'] = function(_, mob) -- Shard Bow
        local distance = (mob.HumanoidRootPart.Position - myRootPart.Position).Magnitude;
        if (distance > 200) then return end;

        _taskwait(0.5);

        if (distance > 15) then
            for _, v in next, workspace.Thrown:GetChildren() do
                if (v.Name ~= 'Clip') then continue; end
                if not IsA(v,'BasePart') then continue; end
                task.spawn(function()
                    repeat
                        task.wait();
                    until not v.Parent or checkRange(15,v);

                    if not v.Parent then return; end
                    parryfunc()
                end)
            end;
        else
            blockAttack();
            unblockAttack();
        end;
    end;

    -- Physical Mantras

    parryAnimTables['8066909599'] = 0.47; -- Revenge
    parryAnimTables['7608490737'] = 0.6; -- HeavenlyWind (Need to be checked)
    parryAnimTables['12706574441'] = 0.45; -- Prominence Draw
    parryAnimTables['6510127521'] = 0.6; -- Prominence Draw 2nd part

    parryAnimTables['8085349676'] = 0.37; -- Strong Left
    parryAnimTables['8198492537'] = 0.3; --Exhaustion Strike

    parryAnimTables['8375086403'] = makeDelayBlockWithRange(40, 0.24); -- Masters Flourish
    parryAnimTables['8379406836'] = makeDelayBlockWithRange(35,0.4); --Rapid Slashes (timing is a big wrong)

    parryAnimTables['8150828674'] = function(_, mob) -- Rapid Punches
        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if (not mobRoot and not checkRange(100, mobRoot)) then return end;
        _taskwait(0.4);

        if (checkRange(10, mobRoot)) then
            blockAttack();
            unblockAttack();
            return;
        end;

        local didAt, lastParryAt = tick(), 0;

        repeat
            RunService.Stepped:Wait();

            if (checkRange(20, mobRoot) and tick() - lastParryAt > 0.2) then
                lastParryAt = tick();
                parryfunc()
            end;
        until tick() - didAt > 1.1;
        if (tick() - didAt > 1.1) then return print('timed out') end;
    end;

    --Flame Mantra
    parryAnimTables['8378263543'] = 0.3; --Fire Eruption
    parryAnimTables['5953326460'] = 0.35; --Rising Flame

    parryAnimTables['8199600822'] = function(_, mob) --Ash Slam
        task.wait(.3)
        parryfunc()
        --parryAttack({0.3,0.3},mob.PrimaryPart,_,30)
    end

    parryAnimTables['5963021481'] =  function(_, mob) --Meteor Slam (Rising Flame Pt2)
        if (not checkRange(10, mob.PrimaryPart)) then return end;

        _taskwait(0.3);
        parryfunc()
    end

    parryAnimTables['7693947084'] = makeDelayBlockWithRange(10,0.3); --Flame Grab Close
    parryAnimTables['5750353585'] = function(animationTrack, mob) -- Flame Grab Further
        repeat
            task.wait();
        until not animationTrack.IsPlaying or checkRange(15, mob.PrimaryPart);
        parryfunc()
    end;

    parryAnimTables['7608480718'] = function(_, mob) --Fire Forge
        if (not checkRange(30, mob.PrimaryPart) or not myRootPart) then return end;
        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if (not mobRoot) then return end;

        local distance = (myRootPart.Position - mobRoot.Position).Magnitude;
        _taskwait(0.05*distance-0.05);

        parryfunc()
    end;

    parryAnimTables['7542502881'] = function(_, mob) --Flame Leap
        if (not checkRange(15, mob.PrimaryPart) or not myRootPart) then return end;

        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if (not mobRoot) then return end;
        _taskwait(0.3);
        roll();
    end;

    parryAnimTables['5769343416'] = function(_, mob) --Burning Servants
        if (not checkRange(10, mob.PrimaryPart) or not myRootPart) then return end;
        local originalPos = mob.PrimaryPart.Position;
        local distance;
        _taskwait(0.3);
        task.spawn(function()
            distance = (originalPos - myRootPart.Position).Magnitude;
            if distance > 10 then return; end

            blockAttack();
            unblockAttack();
        end)
        _taskwait(1.8);
        distance = (originalPos - myRootPart.Position).Magnitude;
        if distance > 10 then return; end

        parryfunc();
    end;

    parryAnimTables['7585268054'] = function(_, mob) -- Flame Blind
        if (not checkRange(30, mob.PrimaryPart)) then return end;

        _taskwait(0.7);
        roll();
    end;

    --Thunder Mantra
    parryAnimTables['7599168630'] = 0.2; --Lightning Blade
    parryAnimTables['8183996606'] = makeDelayBlockWithRange(35, 0.4); -- Grand Javelin Small Range
    parryAnimTables['7617742471'] = makeDelayBlockWithRange(60,0.2); --Lightning Beam

    parryAnimTables['5750296638'] = function(_, mob) -- Jolt Grab
        _taskwait(0.3);
        if (not checkRange(35, mob.PrimaryPart)) then return end;

        table.foreach(mob:GetChildren(), warn);

        if (not mob:FindFirstChild('ShadowHand')) then
            print('we use other');
            _taskwait(0.2);
        end;

        parryfunc();
    end;

    parryAnimTables['5968282214'] = function(_, mob) -- Lightning Assault (The tp move)
        local target = mob:FindFirstChild('Target');
        if (target or not checkRange(85, mob.PrimaryPart)) then return end;

        _taskwait(0.4);
        parryfunc();
    end;

    parryAnimTables['7861127585'] = 0.45; -- Thunder Kick
    parryAnimTables['12333753799'] = 0.3; -- Thunder Rising windup

    parryAnimTables['12333759044'] = function(_, mob) -- Thunder Rising Cast
        _taskwait(0.3);

        repeat
            task.wait();
        until checkRange(30, mob.PrimaryPart) or not _.IsPlaying;
        if (not _.IsPlaying and not checkRange(30, mob.PrimaryPart)) then return print('stopped'); end;
        print('he close');

        parryfunc();
    end;

    parryAnimTables['5968796999'] = function(_, mob) -- Lightning Stream
        local distance = (mob.HumanoidRootPart.Position - myRootPart.Position).Magnitude;
        if (distance > 200) then return end;

        _taskwait(0.4);
        local ranAt = tick();

        if (distance > 15) then
            repeat
                for _, v in next, workspace.Thrown:GetChildren() do
                    if (v.Name == 'STREAMPART' and IsA(v, 'BasePart')) then
                        local rocket = v:FindFirstChild('RocketPropulsion');
                        local rocketTarget = rocket and rocket.Target;
                        if (rocketTarget ~= myRootPart) then continue end;
                        if(not checkRangeFromPing(v, 20, 30)) then continue end;

                        blockAttack();
                        unblockAttack();
                        break;
                    end;
                end;

                task.wait();
            until tick() - ranAt > 3.5;
        else
            blockAttack();
            unblockAttack();
        end;
    end;

    -- Silent Heart
    parryAnimTables['12564120372'] = 0.3; -- Silent heart slide m1

    -- Dawn Walker
    parryAnimTables['10622235550'] = function(anim,mob) -- Blinding Dawn
        _taskwait(0.5);
        local start = tick();
        repeat
            if checkRange(37,mob.PrimaryPart) then
                blockAttack();
                unblockAttack();
            end
            task.wait(0.1);
        until not anim.IsPlaying or tick()-start >= 2;
        print("FINISHED")
    end

    -- Link Strider
    parryAnimTables['10104294736'] = 0.3; -- Symbiotic Link

    -- Arc Warder
    parryAnimTables['9481400792'] = makeDelayBlockWithRange(20,0.3); -- Arc Beam
    parryAnimTables['9536688585'] = makeDelayBlockWithRange(30,0.4); -- Arc Wave

    -- Star Kindered (No element)
    parryAnimTables['9941118927'] = 0.3; -- Celestial Assault

    parryAnimTables['9461513613'] = function(anim,mob) -- Ascension
        repeat task.wait() until checkRange(25,mob.HumanoidRootPart) or not anim.IsPlaying
        if not anim.IsPlaying then return; end

        roll();
    end;

    -- Star Kindered Fire
    parryAnimTables['9717753391'] = function(anim,mob) -- Celestial Fireblade
        _taskwait(1);
        local start = tick();
        repeat
            if (checkRange(50, mob.PrimaryPart)) then
                blockAttack();
                unblockAttack();
            end;
            task.wait(0.1);
        until not anim.IsPlaying or tick() - start >= 2;
    end

    parryAnimTables['9919986614'] = function(anim,mob) -- Sinister Halo
        _taskwait(0.4);

        if not checkRange(25,mob.PrimaryPart) or not anim.IsPlaying then return; end
        parryfunc();
        _taskwait(0.6);
        if not checkRange(25,mob.PrimaryPart) then return; end;

        for i = 1,5 do
            blockAttack();
            unblockAttack();
        end;
    end;

    -- Contractor
    parryAnimTables['9726608174'] = makeDelayBlockWithRange(50, 0.5); -- Contractor Judgement
    parryAnimTables['11862841821'] = 0.3; -- Contractor Equalizer
    parryAnimTables['11328614766'] = function(_, mob) -- Contractor Pull
        _taskwait(0.4);
        repeat task.wait(); until checkRange(20, mob.PrimaryPart) or not _.IsPlaying;
        if (not _.IsPlaying) then return print('timed out'); end;
        parryfunc();
    end;

    --Monster Mantra
    parryAnimTables['11219902982'] = function(anim,mob) -- Dread Breath
        _taskwait(0.5);
        local start = tick();
        repeat
            if checkRange(40,mob.PrimaryPart) then
                blockAttack();
                unblockAttack();
            end
            task.wait(0.1);
        until not anim.IsPlaying or tick()-start >= 2;
    end

    --Ice Mantra
    parryAnimTables['7598898608'] = 0.45; --Ice Smash
    parryAnimTables['6396523003'] = 0.3; -- Crystal Knee
    parryAnimTables['7616100008'] = function(animTrack, mob) -- Ice Beam
        if (not checkRange(85, mob.PrimaryPart)) then return end;

        local t = 0.00142*(mob.PrimaryPart.Position - myRootPart.Position).Magnitude + 0.58;
        task.wait(t)
        blockAttack()
        task.wait(.1)
        unblockAttack()
        --parryAttack({t}, mob.PrimaryPart, animTrack, 85);
    end;

    parryAnimTables['5786525661'] = function(_,mob) -- Warden Blades
        local elapsedAt = tick();
        _taskwait(0.45);

        if (checkRange(25, mob.PrimaryPart)) then
            blockAttack();
            unblockAttack();
        end;

        repeat
            if (not checkRange(25, mob.PrimaryPart)) then task.wait() continue end;
            _taskwait(0.8);
            task.spawn(function()
                blockAttack();
                unblockAttack();
            end);
        until tick() - elapsedAt > 3;
    end;

    parryAnimTables['8018953639'] = function() -- Ice Chains
        _taskwait(1.1);
        local chainPortalIce = workspace.Thrown:FindFirstChild('ChainPortalIce');
        if (not checkRange(20, chainPortalIce)) then return end;
        roll();
    end;

	parryAnimTables['8265980703'] = function(_, mob) --Ice Lance
        if (not checkRange(50, mob.PrimaryPart) or not myRootPart) then return end;
        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if (not mobRoot) then return end;

        local distance = (myRootPart.Position - mobRoot.Position).Magnitude;

        if (distance < 15) then
            print('melee');
            _taskwait(0.3);
        elseif (distance < 20) then
            print('far melee');
            _taskwait(0.8);
        elseif (distance < 30) then
            print('far');
            _taskwait(0.9);
        elseif (distance < 40) then
            print('rly far');
            _taskwait(1);
        end;

        parryfunc();
	end;
    -- Wind Mantra
    parryAnimTables['7618754583'] = makeDelayBlockWithRange(40, 0.3); -- Gale Punch/Flame Palm
    parryAnimTables['6470684331'] = makeDelayBlockWithRange(40, 0.45); -- Astral Wind
    parryAnimTables['8310877920'] = makeDelayBlockWithRange(20, 0.4) -- Wind Gun
    parryAnimTables['5828315760'] = makeDelayBlockWithRange(50, 0.3); -- Air Force

    parryAnimTables['6466993564'] = 0.38; -- Wind Carve
    parryAnimTables['9629695751'] = 0.35; --Champions Whirl Throw
    parryAnimTables['10357806593'] = makeDelayBlockWithRange(15, 0.3); -- Tornado Kick

    parryAnimTables['6030770341'] = function(_, mob) --Heavenly Wind
        _taskwait(0.2);
        if (not checkRange(50, mob.PrimaryPart)) then return end;
        parryfunc();
    end;

    parryAnimTables['7794260173'] = function(_, mob) -- Wind Rising
        if (not checkRange(15, mob.PrimaryPart)) then return end;
        _taskwait(0.4);
        parryfunc();
    end;

    parryAnimTables['9400896040'] = function(_, mob) -- Shoulder Bash
        local startedAt = tick();
        _taskwait(0.3);

        repeat
            task.wait();
        until tick() - startedAt >= 5 or checkRange(20, mob.PrimaryPart);
        parryfunc();
    end;
    
    -- entity that comes into range of our autoparry would loop through all animations
    -- checking if its paryyable
    local dealtwithgalelunge = false
    parryAnimTables['6017393708'] = function(anim,mob) --makeDelayBlockWithRange(15, 0.3); -- Gale Lunge
        dealtwithgalelunge = false;
        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if checkRange(15, mobRoot) then 
            task.wait(.2) --(.4)
            if checkRange(9, mobRoot) then 
                dealtwithgalelunge = true;
                task.wait(.2)
                parryfunc()
            end
        else
            dealtwithgalelunge = false;
            -- task.spawn(function()
            --     repeat task.wait() until checkRange(9, mobRoot)
            --     parryfunc()
            --     print('parry gale lunge')
            -- end)
        end

    end;
    parryAnimTables['6017418456'] = function(_, mob) -- Gale Lunge Launch Anim
        if dealtwithgalelunge == true then 
            dealtwithgalelunge = false;
            return;
        end
        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        task.spawn(function()
            repeat task.wait() until checkRange(9, mobRoot)
            parryfunc()
            print('parry gale lunge')
        end)
        -- if (not mobRoot or not checkRange(35, mobRoot)) then return end;
        -- local distance = (mobRoot.Position - myRootPart.Position).Magnitude;
        -- _taskwait(0.01*distance + 0.25);

        -- blockAttack();
        -- unblockAttack();
    end;

    parryAnimTables['8375571405'] = function(animationTrack, mob) -- Pressure Blast
        if (not checkRange(40, mob.PrimaryPart)) then return end;
        _taskwait(0.5);
        blockAttack();
        repeat
            task.wait();
        until not animationTrack.IsPlaying or not checkRange(40, mob.PrimaryPart);
        unblockAttack();
    end;

    -- Uppercut
    parryAnimTables['11887898774'] = 0.3;
    parryAnimTables['11887938902'] = 0.3;
    parryAnimTables['11887876811'] = 0.3;
    parryAnimTables['11887887621'] = 0.3;
    parryAnimTables['11887892548'] = 0.3;
    parryAnimTables['11887901212'] = 0.3;
    parryAnimTables['11887874227'] = 0.3;

    -- Scythe
    parryAnimTables['11493920418'] = 0.3; -- Slash 1
    parryAnimTables['11493923277'] = 0.3; -- Slash 2
    parryAnimTables['9597289518'] = 0.3; -- Slash 3
    parryAnimTables['11493924588'] = 0.4; -- Running Attack

	-- Railblade
    parryAnimTables['9832721746'] = 0.4; -- Slash1
    parryAnimTables['9832724876'] = 0.4; -- Slash2
    parryAnimTables['9832727905'] = 0.4; -- Slash3
    parryAnimTables['9597289518'] = 0.3; -- Slash4
    parryAnimTables['9893133020'] = 0.4; -- Air Critical

    -- Dagger
    do 
        local function getSpeed(x)
            return -0.5*x + 1.275;
        end;
    
        local function f(animTrack, mob)
            if not checkRange(14,mob.PrimaryPart) then return end
            local swingSpeed = calculateSwing(mob) or 1;
    
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            task.wait(swingSpeed-0.5)
            parryfunc()
        end;
    
        parryAnimTables['7627854272'] = f; -- Slash1
        parryAnimTables['7627889074'] = f; -- Slash2
        parryAnimTables['5950080662'] = 0.3; -- Slash4 (Kick)
        parryAnimTables['5063313656'] = 0.39; -- Running Attack
        parryAnimTables['7576614609'] = 0.39; -- Aerial Stab
    end;


	
    --Spear Timings
    do 
        local function getSpeed(x)
            return -1*x+2.07;
        end;
    
        local function f(animTrack, mob)
            if not checkRange(14,mob) then return end
            local swingSpeed = calculateSwing(mob) or 1;
    
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            task.wait(swingSpeed-0.3)
            parryfunc()
        end;
    
        parryAnimTables['7626771915'] = 0.35; -- One Hand Slash 3
        parryAnimTables['7627049402'] = 0.35; -- One Hand Slash 4
    
        parryAnimTables['7627558238'] = 0.35; -- Two Hand Slash 2
        parryAnimTables['7627372304'] = 0.35; -- Two Hand Slash 3
    end
    parryAnimTables['5827250000'] = 0.35; -- Running Attack One Handed
    parryAnimTables['5827423063'] = 0.35; -- Slash1

    parryAnimTables['7576748728'] = 0.35; -- Aerial Stab

    do -- Great Axe
        local function getSpeed(x)
            return -1*x+2.05;
        end;

        local function f(animTrack, mob)
            if not checkRange(14,mob.PrimaryPart) then return end

            local ignoreHeavyHand = false;
            for i,v in next, mob.Humanoid:GetPlayingAnimationTracks() do
                if v.Animation.AnimationId ~= 'rbxassetid://5971953898' or not v.IsPlaying then continue; end

                ignoreHeavyHand = true;
            end
            --local swingSpeed = getSwingSpeed(mob,ignoreHeavyHand) or 1;
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            local animspeed = calculateSwing(mob)
            warn('swing speed '..tostring(animspeed))
            task.wait(animspeed - 0.35)
            parryfunc()
        end;

        parryAnimTables['5064195992'] = f; -- Slash1
        parryAnimTables['5067105317'] = f; -- Slash2
        parryAnimTables['5067090007'] = f; -- Slash3 Also running attack
        parryAnimTables['9484850093'] = 0.3; -- Slash4 (Kick)

        parryAnimTables['7388133473'] = 0.65; -- Critical
        parryAnimTables['10768748584'] = 0.6; -- Enforcer Axe Critical

        parryAnimTables['11363599835'] = function(_, mob) -- Heavy Aerial
            _taskwait(0.4);

            repeat
                task.wait();
            until checkRange(20, mob.PrimaryPart) or not _.IsPlaying;
            if (not _.IsPlaying) then return end;

            parryfunc()
        end;
    end;

    parryAnimTables['5805138186'] = 0.38;
    parryAnimTables['4880830128'] = 0.35;
    parryAnimTables['4880833465'] = 0.35;


    -- Crazy Slot
    parryAnimTables['7004327185'] = 0.3; --Crazy Slot Sword Mantra
    parryAnimTables['7003448248'] = 0.6; --Crazy Slot Greatsword Mantra
    parryAnimTables['7007372121'] = 1.8; --Crazy Slot Greataxe Mantra

    parryAnimTables['7007974914'] = function(_,mob)--Crazy Slot Gun Mantra
        parryAttack({0.2,0.4,0.4},mob.PrimaryPart,_,20)
    end;
    parryAnimTables['7005236296'] = makeDelayBlockWithRange(35,0.5); --Crazy Slot Dagger Mantra

    do -- Greatsword
        local function getSpeed(x)
            return -1*x+2.05;
        end;

        local function f(animTrack, mob)
            if not checkRange(14,mob.PrimaryPart) then return end
            local swingSpeed = calculateSwing(mob) or 1;
    
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            task.wait(swingSpeed - 0.4)
            parryfunc()
        end;

        parryAnimTables['12071495751'] = makeDelayBlockWithRange(10,0.5); --Petra Crit Start

        parryAnimTables['12071557016'] = function(_, mob) -- Petra Critical
            repeat
                task.wait();
            until not _.IsPlaying or checkRange(20, mob.PrimaryPart);
            if (not _.IsPlaying) then return print('timed out not playing') end;
            blockAttack();
            unblockAttack();
        end;

        parryAnimTables['12071942369'] = 0.6; -- Petra Critical (Pt2)

        parryAnimTables['6675698010'] = f;
        parryAnimTables['6675703249'] = f;

        parryAnimTables['10258479464'] = 0.65; -- DarkSteel Critical
        parryAnimTables['10053070573'] = function(animTrack, mob) --Crescent Cleaver (Timing is a little bit better but still inaccurate due to range)
            local root = mob:FindFirstChild('HumanoidRootPart');
            if (not root) then return end;

            local distance = (myRootPart.Position - root.Position).Magnitude;
            local t = math.max(0.7, 0.03*distance + 0.5);

            _taskwait(t);
            if (not checkRange(20, root)) then return end;

            blockAttack();
            unblockAttack();
        end;

        -- Firstlight

        parryAnimTables['13241958217'] = f;
        parryAnimTables['13242083070'] = f;
    end;

    -- Sword
    do
        local function getSpeed(x)
            return -1*x+2.1;
        end;

        local function f(animTrack, mob)
            if not checkRange(14,mob.PrimaryPart) then return end
            local swingSpeed = calculateSwing(mob) or 1;
    
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            task.wait(swingSpeed - 0.45) -- 0.5
            parryfunc()
        end;

        parryAnimTables['7600450739'] = f; -- Slash1
        parryAnimTables['7600485223'] = f; -- Slash2
        parryAnimTables['7600160919'] = f; -- Slash3
        parryAnimTables['7600224169'] = f; -- Slash4
    end;

    parryAnimTables['8095864854'] = 0.55; -- Special Critical (Serpent's Edge)

    -- Curve Blade Of Winds
    parryAnimTables['12106091136'] = 0.3; -- Slash1
    parryAnimTables['12106093579'] = 0.3; -- Slash2
    parryAnimTables['12106095892'] = 0.3; -- Slash3

    -- running attack (we use db)
    parryAnimTables['4699358112'] = 0.36;

    parryAnimTables['7827886914'] = 0.47; -- Katana critical
    parryAnimTables['7351158603'] = 0.35; -- Spear critical
    parryAnimTables['7318254065'] = 0.67; -- Sword critical
    parryAnimTables['7350770431'] = 0.45; -- Dagger critical
    parryAnimTables['7367818208'] = 0.73; -- Hammer critical
    parryAnimTables['12921226261'] = 0.52; -- Sacred Hammer Crit -- CHANGING NEED FIX -- 0.5
    parryAnimTables['9209255758'] = 0.3; -- Whailing Knife Critical

    -- Karate (Way of Navae)
    do
        local function f(animTrack, mob)
            --parryAttack({0.225}, mob.PrimaryPart, animTrack, 15, true);
            task.wait(0.225)
            parryfunc()
        end;

        parryAnimTables['6063188218'] = f; -- Slash 1
        parryAnimTables['7616407967'] = f; -- Slash 2
        parryAnimTables['6063195211'] = f; -- Slash 3
    end;

    -- Jus Karita
    parryAnimTables['8278926990'] = 0.25; -- Slash1
    parryAnimTables['8278929677'] = 0.25; -- Slash2
    parryAnimTables['8278931393'] = 0.25; -- Slash3
    parryAnimTables['9597289518'] = 0.3; -- Slash4 (Kick)
    parryAnimTables['8278933540'] = 0.25; -- Slash4 (Kick)

    parryAnimTables['7391446645'] = 0.5; -- Kick
    parryAnimTables['8295145565'] = 0.4; -- Kick Ground?
    parryAnimTables['8367730650'] = 0.3; -- Running Attack
    parryAnimTables['8194213529'] = 0.3; -- Aerial Stab
    parryAnimTables['10168663111'] = function(animationTrack,mob) --Tacet Drop Kick
        parryAttack({0.3},mob.PrimaryPart,animationTrack,30);
    end

    -- Legion Kata
    do
        local function f(animTrack, mob)
            --parryAttack({0.2}, mob.PrimaryPart, animTrack, 20, true);
            task.wait(0.2)
            parryfunc()
        end;

        parryAnimTables['8161039359'] = f; -- Slash 1
        parryAnimTables['8161043368'] = f; -- Slash 2
        parryAnimTables['8161044711'] = f; -- Slash 3
        parryAnimTables['8161094751'] = 0.3; -- Slash4 (Kick)
        parryAnimTables['8169914770'] = 0.25; --This timing is prob wrong prob ius 0.3 but idk for duke
    end;

    -- Lantern Kata
    parryAnimTables['11186652658'] = 0.3; -- Slash 1
    parryAnimTables['11186654931'] = 0.3; -- Slash 2
    parryAnimTables['11186656574'] = 0.3; -- Slash 3
    parryAnimTables['9597289518'] = 0.3; -- Slash 4

    -- Mace/Club (we use db)
    parryAnimTables['5805183957'] = 0.36; -- Slash1
    parryAnimTables['5805191624'] = 0.41; -- Slash2
    parryAnimTables['5805194816'] = 0.4; -- Slash3
    parryAnimTables['7599410106'] = 0.52; -- Club critical

    -- Rapier
    parryAnimTables['8249175106'] = 0.32; -- Slash
    parryAnimTables['8249177669'] = 0.32; -- Slash
    parryAnimTables['8249271040'] = 0.32; -- Critical

    -- Enforcer Blade (we use db)
    parryAnimTables['6607519294'] = 0.45;
    parryAnimTables['6607538047'] = 0.49;
    parryAnimTables['6669352471'] = 0.39;

    -- Widow
    parryAnimTables['6428519131'] = function(anim, mob) -- Widow Left Swing
        parryAttack({0.43}, mob.PrimaryPart, anim, 100, true);
    end;

    parryAnimTables['6428525211'] = function(anim, mob) -- Widow Doublestab
        parryAttack({0.3}, mob.PrimaryPart, anim, 100);
    end;

    parryAnimTables['6428514850'] = function(anim, mob) -- Widow RightSwing
        parryAttack({0.43}, mob.PrimaryPart, anim, 100, true);
    end;

    parryAnimTables['6428530032'] = function(_, mob) -- Widow Spit
        if (not checkRange(100, mob.PrimaryPart)) then return end;
        _taskwait(0.6);
        roll();
    end;

    parryAnimTables['6428533082'] = function(_, mob) -- Widow Bite
        if (not checkRange(100, mob.PrimaryPart)) then return end;
        _taskwait(0.4);
        roll();
    end;

    -- Primadon
    parryAnimTables['8940731625'] = function(_, mob) --Scream
        if (not checkRange(100, mob.PrimaryPart)) then return end;
        _taskwait(0.75);
        roll();
    end;

    parryAnimTables['8365199156'] = function(_, mob) -- Mid Swipe (Punch)
        if (not checkRange(100, mob.PrimaryPart)) then return end
        _taskwait(0.5/_.Speed);

        blockAttack();
        task.wait();
        unblockAttack();
    end;

    parryAnimTables['9225081967']  = function(_, mob) -- Swipe
        if (not checkRange(100, mob.PrimaryPart)) then return end
        _taskwait(0.6 / _.Speed)

        blockAttack();
        task.wait();
        unblockAttack();
    end;

    parryAnimTables['9225086332'] = function(_, mob) -- Grab
        if (not checkRange(100, mob.PrimaryPart)) then return end
        _taskwait(0.6 / _.Speed);
        print('we dodge', _.TimePosition, _.Speed);

        roll(true);
    end;

    parryAnimTables['6438111139'] = function(_, mob) -- Punt
        if (not checkRange(100, mob.PrimaryPart)) then return end
        _taskwait(0.75 / _.Speed);
        roll();
    end;

    parryAnimTables['9225098544'] = function(_, mob) --Stomp
        parryAttack({0.75}, mob.PrimaryPart, _, 100, true);
    end;

    parryAnimTables['6432260013'] = function(anim, mob) -- Triple Stomp
        parryAttack({0.8, 0.775, 0.75}, mob.PrimaryPart, anim, 100, true);
    end;

    -- Avatar (Ethiron)
    parryAnimTables['11508725111'] = function(_, mob)
        parryAttack({1.5}, mob.PrimaryPart, _, 400, true);
    end;
    -- crabbo
    parryAnimTables['8176091986'] = makeDelayBlockWithRange(50, 1); --Double slam
    parryAnimTables['7942002115'] = makeDelayBlockWithRange(50, 0.4); --Probably double swipe

    parryAnimTables['7938093143'] = function(_, mob) -- grab
        if (not checkRange(50, mob.PrimaryPart)) then return end;

        _taskwait(0.5);
        roll();
    end;

    parryAnimTables['7961600084'] = function(_,mob) --Jump attack
        if not checkRange(150,mob.PrimaryPart) then return; end
        repeat
            task.wait();
        until not _.IsPlaying or checkRange(15,mob.PrimaryPart)
        if not _.IsPlaying then return; end
        roll();
    end;
    --Guns
    do
        local function getSpeed(x)
            return -0.5*x + 1.275; --Should be -0.5*x + 1.05
        end;

        local function f(animTrack, mob)
            if not checkRange(14,mob.PrimaryPart) then return end
            local swingSpeed = calculateSwing(mob) or 1;
    
            --parryAttack({getSpeed(swingSpeed)},mob.PrimaryPart,animTrack,15);
            task.wait(swingSpeed-0.5)
            parryfunc()
        end;

        parryAnimTables['6437665734'] = f; -- Primary Shot
        parryAnimTables['6432920452'] = f; -- Offhand shot
        parryAnimTables['7565307809'] = f; -- Aerial Shot
        parryAnimTables['8172871094'] = makeDelayBlockWithRange(20, 0.3); -- Rifle Spear Crit
    end;


    parryAnimTables['9928429385'] = 0.3; -- Rifle
    parryAnimTables['9928485641'] = 0.3; -- Rifle
    parryAnimTables['9930447958'] = 0.3; -- Rifle
    parryAnimTables['9928485641'] = 0.3; -- Rifle
    parryAnimTables['9930618934'] = 0.3; -- Rifle

    parryAnimTables['11468287607'] = 0.4; -- Shadow Hero Blade Critical
    parryAnimTables['11312302005'] = 0.4; -- Wind Hero Blade Critical
    parryAnimTables['11308969885'] = 0.4; --Flame Hero Blade Critical
    parryAnimTables['10904625331'] = 0.4; --Thunder Hero Blade Critical
    parryAnimTables['11183196198'] = makeDelayBlockWithRange(28,0.4); --Frost Hero Blade Critical

    parryAnimTables['12108376249'] = 0.3; -- Eclipse kick
    parryAnimTables['9212883524'] = 0.6; -- Halberd Critical

    parryAnimTables['6415074870'] = function(_, mob) -- Shadow Gun
        if (not checkRange(60, mob.PrimaryPart)) then return end;

        _taskwait(0.5);
        blockAttack();
        task.wait(0.3);
        unblockAttack();
    end;

    -- Golem
    parryAnimTables['6500704554'] = function(_, mob) -- Upsmash (Dodge)
        if (not checkRange(50, mob.PrimaryPart)) then return end;

        _taskwait(0.4);
        roll();
    end;

    parryAnimTables['6501497627'] = function(animationTrack, mob) -- Cyclone
        if (not mob.PrimaryPart) then return end;
        _taskwait(3.3);

        repeat
            task.wait(0.1);

            if (not checkRange(50, mob.PrimaryPart)) then
                print('mob too far away :(');
                _G.canAttack = true;
                continue;
            end;

            _G.canAttack = false;
            print(animationTrack.IsPlaying, animationTrack.Parent);
            blockAttack();
            unblockAttack();
        until not animationTrack.IsPlaying or not mob.Parent;
        _G.canAttack = true;
    end;

    parryAnimTables['6499077558'] = makeDelayBlockWithRange(50, 0.4); -- Double Smash
    parryAnimTables['6501044846'] = makeDelayBlockWithRange(50, 0.5); -- Stomp

    -- Ice Mantra
    parryAnimTables['5808939025'] = function(_, mob) -- Ice Eruption
        if (not checkRange(40, mob.PrimaryPart)) then return end;

        _taskwait(0.35);
        roll();
    end;

    parryAnimTables['5865907089'] = function(_, mob) -- Glacial Arc
        if (not checkRange(40, mob.PrimaryPart)) then return end;

        _taskwait(0.6);
        parryfunc();
    end;

    parryAnimTables['7612017515'] = makeDelayBlockWithRange(50, 0.3); -- Ice Blade
    parryAnimTables['7543723607'] = 0.7; -- Ice Spike
    parryAnimTables['7599113567'] = 0.6; -- Ice Dagger
    parryAnimTables['6054920207'] = 0.3; -- Crystal Impale

    -- Shadow
    parryAnimTables['9470857690'] = makeDelayBlockWithRange(40, 0.2); -- Shade Bringer
    parryAnimTables['9359697890'] = 0.3; -- Shadow Devour
    parryAnimTables['11959603858'] = 0.9; -- Shadow Stomp
    parryAnimTables['11468287607'] = 0.4; -- Shadow Sword

    parryAnimTables['9149348937'] = function(_, mob) -- Rising Shadow
        myRootPart = azfake:returndata().humanoidrootpart
        local distance = (mob.HumanoidRootPart.Position - myRootPart.Position).Magnitude;
        if (distance > 200) then return end;

        _taskwait(0.4);
        local ranAt = tick();

        print(distance);
        if (distance > 8) then
            repeat
                for _, v in next, workspace.Thrown:GetChildren() do
                    if (v.Name == 'TRACKER' and IsA(v, 'BasePart')) then
                        if(not checkRangeFromPing(v, 5, 10)) then continue end;

                        print('block');
                        blockAttack();
                        unblockAttack();
                        break;
                    end;
                end;

                task.wait();
            until tick() - ranAt > 3.5;
        else
            blockAttack();
            unblockAttack();
        end;
    end;

    parryAnimTables['6318273143'] = function(_, mob) -- Shadow Assault
        myRootPart = azfake:returndata().humanoidrootpart
        if (not checkRange(80, mob.PrimaryPart) or not myRootPart) then return end;

        local mobRoot = mob:FindFirstChild('HumanoidRootPart');
        if (not mobRoot) then return end;

        local distance = (mobRoot.Position - myRootPart.Position).Magnitude;
        _taskwait(0.3);
        _taskwait(distance/60);
        parryfunc();
    end;

    parryAnimTables['8018881257'] = function(_, mob) -- Shadow eruption
        for i = 1, 2 do
            task.spawn(function()
                _taskwait(i*0.33);
                if (not checkRange(30, mob.PrimaryPart)) then return end;
                blockAttack();
                unblockAttack();
            end);
        end;
    end;

    parryAnimTables['7620630583'] = function(_, mob) -- Shadow Roar
        repeat
            _taskwait(0.2);
            if (not checkRange(40, mob.PrimaryPart)) then continue end;
            task.spawn(function()
                blockAttack();
                unblockAttack();
            end);
        until not _.IsPlaying;
    end;

    parryAnimTables['6038858570'] = function(animationTrack,mob) -- Darkblade
        if (not checkRange(80, mob.PrimaryPart)) then return end
        local distance = (myRootPart.Position - mob.PrimaryPart.Position).Magnitude;
        if distance < 5 then
            _taskwait(0.37);
            blockAttack();
            unblockAttack();
            return;
        end
        repeat
            task.wait();
        until not animationTrack.IsPlaying or checkRange(15,mob.PrimaryPart);
        if not animationTrack.IsPlaying then return; end
        parryfunc();
    end

    -- snow golem
    parryAnimTables['8131612979'] = function(_, mob) -- groundPunch
        if (not checkRange(60, mob.PrimaryPart)) then return end

        _taskwait(0.7);
        roll();
    end;

    parryAnimTables['8131156119'] = function(_, mob) -- Punt
        if (not checkRange(60, mob.PrimaryPart)) then return end

        _taskwait(0.2)
        roll();
    end;

    parryAnimTables['8130745441'] = makeDelayBlockWithRange(40, 0.3); -- Swing1
    parryAnimTables['8130778356'] = makeDelayBlockWithRange(40, 0.3); -- Swing2

    parryAnimTables['8131374542'] = makeDelayBlockWithRange(100, 0.7); -- Air cutter

    -- squiddo (we use db)
    parryAnimTables['6916513795'] = 0.225;
    parryAnimTables['6916546485'] = 0.225;
    parryAnimTables['6916545890'] = 0.225;

    -- enforcer (we use db)
    parryAnimTables['7018046790'] = makeDelayBlockWithRange(50, 0.45); -- slash 1
    parryAnimTables['7018083796'] = makeDelayBlockWithRange(50, 0.45); -- slash 2
    parryAnimTables['7019686291'] = makeDelayBlockWithRange(50, 0.45); -- kick

    parryAnimTables['7019018522'] = function(animationTrack, mob) -- spin
        print('got spin to win');

        repeat
            _taskwait(0.1);

            if (not checkRange(30, mob.PrimaryPart)) then
                print('mob too far away :(');
                continue;
            end;

            blockAttack();
            unblockAttack();
        until not animationTrack.IsPlaying;
    end;

    -- Hive Mech
    parryAnimTables['11834551880'] = function(_,mob)  --Roguemech upsmash
        if not checkRange(40,mob.PrimaryPart) then return; end
        _taskwait(0.8);
        roll();
    end;

    parryAnimTables['11834549387'] = 0.5; --Roguemech Stomp
    parryAnimTables['11834545925'] = 0.3; --Roguemech  Baragge Stomp
    parryAnimTables['11867360757'] = makeDelayBlockWithRange(40,0.7); --Roguemech GroundPound

    -- crocco (we use db)
    parryAnimTables['8226933122'] = function(_, mob) -- Triple bite
        parryAttack({0.44, 0.44, 0.44}, mob.PrimaryPart, _,  30);
    end;

    parryAnimTables['10976633163'] = function(_, mob) -- Crocco Dig Move
        _taskwait(0.7);

        local ranAt = tick();

        repeat
            task.wait();
            print(mob.HumanoidRootPart.Transparency);
        until checkRange(10, mob.HumanoidRootPart) or mob.HumanoidRootPart.Transparency == 0;
        if (tick() - ranAt > 8) then return print('not playing') end;

        print('parry!');

        parryfunc();
    end;

    parryAnimTables['8227583745'] = function(_, mob) --Double shlash Crocco
        parryAttack({0.3, 0.8}, mob.PrimaryPart, _, 30);
    end;

    parryAnimTables['8228293862'] = function(_, mob) -- Breath
        if (not checkRange(75, mob.PrimaryPart)) then return end;

        _taskwait(0.35);
        roll();
    end;

    parryAnimTables['8229868275'] = function(_, mob) -- Dig
        if (not checkRange(30, mob.PrimaryPart)) then return end;

        _taskwait(2);
        roll();
    end;

    parryAnimTables['8227878518'] = function(_, mob) -- Tail
        parryAttack({0.65}, mob.PrimaryPart, _, 30);
    end;

    -- Black Tresher
    parryAnimTables['11095471496'] = 0.4; -- Crocco Flip
    parryAnimTables['9474995715'] = function(_,mob)-- CRocco Breath
        if not checkRange(20,mob.PrimaryPart) then return; end
        task.wait(0.2);
        roll();
    end;

    -- sharko (we use db)
    parryAnimTables['5117879514'] = function(animTrack, mob) -- Swipe
        parryAttack({0.37}, mob.PrimaryPart, animTrack, 40);
    end;

    parryAnimTables['11710417615'] = function(animationTrack, mob) --Coral Attack
        -- sharko could do aoe attack if lots of player check that

        local target = mob:FindFirstChild('Target');
        target = target and target.Value;
        if (target ~= LocalPlayer.Character) then return end;

        _taskwait(0.4);
        blockAttack();

        repeat
            task.wait();
        until not animationTrack.IsPlaying;

        unblockAttack();
    end;

    parryAnimTables['10739102450'] = function(_, mob) -- Cortal Attack But for Player
        parryAttack({0.4}, mob.PrimaryPart, _, 35);
    end;

    parryAnimTables['5121733951'] = function(_, mob) -- sharko double swipe
        parryAttack({0.43,0.58},mob.PrimaryPart,_,40);
    end;

    parryAnimTables['11710290503'] = function(_, mob) -- sharko punt
        if (not checkRange(40, mob.PrimaryPart)) then return end;

        _taskwait(0.35)
        roll();
    end;

    parryAnimTables['9357410713'] = function(_,mob) -- Mechalodant Beam
        _taskwait(1.6);
        if not checkRange(80,mob.PrimaryPart) then return; end
        parryfunc();
    end

    parryAnimTables['9356892933'] = function(animationTrack, mob) -- Mechalodant GunFire
        local target = mob:FindFirstChild('Target');
        target = target and target.Value;
        if (target ~= LocalPlayer.Character) then return end;

        _taskwait(0.4);
        blockAttack();

        repeat
            task.wait();
        until not animationTrack.IsPlaying;

        unblockAttack();
    end;

    parryAnimTables['11710316011'] = function(_,mob) -- Sharko Water bite
        _taskwait(0.5);
        if not checkRange(50,mob.PrimaryPart) then return; end
        roll();
    end;

    parryAnimTables['9903304018'] = function(_, mob) --Teleport Move
        _taskwait(0.5);
        if (not checkRange(20, mob.PrimaryPart)) then return print('too far away') end;
        warn('block');
        roll();
    end;

    --Ferryman
    local teleportedAt = tick();
    local firstAnim = tick();
    parryAnimTables['5968288116'] = function(_, mob) -- Ferryman Teleport Attack (Doesn't work in second phase...)
        local target = mob:FindFirstChild('Target');
        if (not target or target.Value ~= LocalPlayer.Character) then return  warn('Ferryman Dash: Target is not LocalPlaye') end;

        if (mob.Humanoid.Health/mob.Humanoid.MaxHealth)*100 >= 50 then
            if tick()-teleportedAt > 2 then
                if tick() - firstAnim > 3 then
                    firstAnim = tick();
                    return;
                end
                teleportedAt = tick();
                parryAttack({0.8},mob.PrimaryPart,_,1000,true)
            else
                teleportedAt = tick();
                parryAttack({0.2},mob.PrimaryPart,_,1000,true)
            end
        else
            if tick()-teleportedAt > 2 then
                if tick() - firstAnim > 3 then
                    firstAnim = tick();
                    return;
                end
                teleportedAt = tick();
                parryAttack({0.8},mob.PrimaryPart,_,1000,true)
            else
                teleportedAt = tick();
                parryAttack({0.1},mob.PrimaryPart,_,1000,true)
            end
        end
    end;


    -- Owl
    parryAnimTables['7639648215'] = makeDelayBlockWithRange(40, 0.3); -- Swipe (Idk)
    parryAnimTables['7639988883'] = makeDelayBlockWithRange(40, 0.6); -- Slow Swipe (Ok)
    parryAnimTables['7675544287'] = function(_, mob) -- Grab
        local target = mob:FindFirstChild('Target');
        target = target and target.Value;

        if (target ~= LocalPlayer.Character) then return warn('owl grab: target is not localplayer') end;

        _taskwait(0.35);
        roll();
    end;

    parryAnimTables['7673097597'] = function(_, mob) -- Owl rush (spinning attack)
        local target = mob:FindFirstChild('Target');
        target = target and target.Value;

        if (target ~= LocalPlayer.Character) then return print('owl spin target is not localplayer') end;

        _taskwait(0.37);
        roll();
    end;

    -- Mud Skipper
    parryAnimTables['11573034823'] = 0.22;
    parryAnimTables['11572468462'] = 0.22;

    -- Lion Fish

    parryAnimTables['5680585677'] = function(_, mob)
        if (not checkRange(70, mob.PrimaryPart)) then return print('lion fish beam triple bite too far away') end;

        task.spawn(function()
            _taskwait(0.4);
            blockAttack();
            unblockAttack();
        end);

        task.spawn(function()
            _taskwait(1.1);
            blockAttack();
            unblockAttack();
        end);

        task.spawn(function()
            _taskwait(1.8);
            blockAttack();
            unblockAttack();
        end);
    end;

    parryAnimTables['6372560712'] = function(animTrack, mob) -- FishBeam
        local target = mob:FindFirstChild('Target');
        target = target and target.Value;

        if (target ~= LocalPlayer.Character) then return print('lion fish beam target not set to player') end;

        local wasUp = false;

        repeat
            local _, _, z = mob:GetPivot():ToOrientation();

            if (z < -1.7 and not wasUp) then
                wasUp = true;
                warn('rised up');
            elseif (z > -1.5 and wasUp) then
                warn('rised down', animTrack.TimePosition, animTrack.Speed);
                roll();
                break;
            end;

            task.wait();
        until not animTrack.IsPlaying or not mob.Parent;
    end;

    -- Duke
    parryAnimTables['8285321158'] = function(_, mob)
        parryAttack({0.87},mob.PrimaryPart,_,34)
        print("---------------WIND BALL SHOT----------------")
    end;

    parryAnimTables['8285534401'] = function(_, mob) --Wind Stomp thing
        _taskwait(0.5);
        if (not checkRange(28, mob.PrimaryPart)) then return end;
        roll();
        print("---------------Wind stomp")
    end;

    parryAnimTables['8290626574'] = function(_, mob) --Wind Stomp 2
        _taskwait(0.7);
        if (not checkRange(118, mob.PrimaryPart)) then return end;
        roll();
        print("---------------Wind Stomp 2",tick());
    end;


    parryAnimTables['8285638571'] = function(_, mob) --Downward punch?
        _taskwait(0.1);
        if (not checkRange(47, mob.PrimaryPart)) then return end;
        roll();
        print("---------------Downward Punch")
    end;

    parryAnimTables['8286153000'] = function(_, mob) --Wind Arrow
        parryAttack({0.4},mob.PrimaryPart,_,34)
        print("---------------Wind Arrow")

    end;

    parryAnimTables['8290899374'] = function(_, mob) --Levitate
        _taskwait(0.8);
        if (not checkRange(28, mob.PrimaryPart)) then return end;
        roll();
        print("---------------Levitate")
    end;

    parryAnimTables['8294560344'] = function(_, mob) --Spirit Bomb?
        _taskwait(2.1);
        if (not checkRange(47, mob.PrimaryPart)) then return end;
        roll();
        print("---------------Spirint Bomb")
    end;

    -- Car Buncle
    parryAnimTables['9422296675'] = 0.8; -- Leap
    parryAnimTables['9422278968'] = function(_, mob) -- Flail
        if (not checkRange(100, mob.PrimaryPart)) then return end;

        _taskwait(0.9);

        repeat
            task.wait();
            if (not checkRange(40, mob.PrimaryPart)) then continue end;

            blockAttack();
            unblockAttack();
            _taskwait(0.4);
        until not _.IsPlaying or not mob.Parent;
    end;

    -- Boneboy (Bonekeeper)
    parryAnimTables['9681905891'] = function(_, mob) -- Charge Prep
        print('charge anim star!t');
        --_taskwait(0.8);
        task.wait(0.78)

        repeat task.wait(); until checkRange(30, mob.PrimaryPart) or not _.IsPlaying;

        print('charge!');
        roll();
    end;

    parryAnimTables['9681421310'] = function(_, mob)
        print('sweep1');
        parryAttack({0.6}, mob.PrimaryPart, _, 30);
    end;

    parryAnimTables['9710538334'] = function(_, mob)
        print('choke start');
        if (not checkRange(30, mob.PrimaryPart)) then return end;
        _taskwait(0.3);
        roll();
        unblockAttack();
    end;

    -- Chaser
    parryAnimTables['10099861170'] = makeDelayBlockWithRange(70, 0.8); -- The Slam (end part)
    local effectsList = {};
	
    -- Silent heart uppercut
    effectsList.Mani = function(effectData)
        if (effectData.target ~= myRootPart.Parent) then return end;

        parryfunc();
    end;

    effectsList.ManiWindup = function(effectData)
        if((effectData.pos - myRootPart.Position).Magnitude >= 45) then return print('too far'); end;

        _taskwait(0.3);
        parryfunc();
    end;

    effectsList.EthironPointSpikes = function(effectData)
        _taskwait(0.5);
        for _, point in next, effectData.points do
            if(checkRange(20, point.pos)) then
                roll();
                break;
            end;
        end;
    end;

    effectsList.EnforcerPull = function(effectData)
        if (string.find(effectData.char.Name, '.enforcer')) then return end;
        if (effectData.targ ~= LocalPlayer.Character) then return end;
        parryfunc();
    end;

    effectsList.Perilous = function(effectData)
        if (not string.find(effectData.char.Name, '.chaser')) then return end;
        _taskwait(0.5);
        roll();
    end;

    effectsList.DisplayThornsRed = function(effectData) -- Umbral Knight
        if (effectData.Character ~= LocalPlayer.Character) then return print('Umbral Knight wasnt on me')  end;
        parryfunc();
    end;

    effectsList.DisplayThorns = function(effectData) --Providence Thorns
        if effectData.Character ~= LocalPlayer.Character then return print('Providence Hit wasnt on me') end;
        _taskwait(effectData.Time-effectData.Window);
        parryfunc();
    end;

    effectsList.FireHit2 = function(effectData)
        if effectData.echar ~= LocalPlayer.Character then return print('Fire Hit wasnt on me'); end
        _taskwait(1);
        parryfunc();
    end

    effectsList.GolemLaserFire = function(effectData)
        if (not checkRange(15, effectData.aimPos)) then return print('Golem laser: Too far away') end;
        print('DA DODGIES');
        roll();
    end;

    effectsList.WindCarve = function(effectData)
        if (effectData.char == LocalPlayer.Character) then return; end
        if (effectData.command ~= 'startAttack' or not checkRange(17, effectData.char.PrimaryPart)) then return end;
        local startedAt = tick();

        repeat
            task.spawn(function()
                blockAttack();
                unblockAttack();
            end);
            task.wait(0.2);
        until tick() - startedAt > effectData.dur+0.5;
        table.foreach(effectData, warn);
    end;

    -- Fire SongSeeker

    effectsList.FireSword = function(effectData)
        if (not checkRange(25, effectData.Character.PrimaryPart)) then return print('Fire Sword: Too far away') end;
        if (effectData.Character == LocalPlayer.Character) then return end;
        if (effectData.BlueFlame) then return; end
        _taskwait(0.55);
        print('we parry it!');
        parryfunc();
    end;

    effectsList.FireSwordBlue = function(effectData)
        if (not checkRange(25, effectData.Character.PrimaryPart)) then return print('Fire Sword: Too far away') end;
        if (effectData.Character == LocalPlayer.Character) then return end;

        _taskwait(0.6);
        print('we parry it!');
        parryfunc();
    end;

    effectsList.FireDash = function(effectData)
        if (not checkRange(50, effectData.Character.PrimaryPart)) then return print('Fire Dash: Too far away') end;
        if (effectData.Character == LocalPlayer.Character) then return end;

        table.foreach(effectData, warn);
        print('OOOOMG EPICO');
        parryfunc();
    end;

    effectsList.fireRepulseWindup = function(effectData)
        if (not checkRange(50, effectData.char.PrimaryPart)) then return print('Fire Repulse Wind Up: Too far away') end;
        if (effectData.char == LocalPlayer.Character) then return end;

        _taskwait(0.8);
        blockAttack();
        _taskwait(1);
        unblockAttack();
    end;

    effectsList.FireSlashSpin = function(effectData)
        -- RisingFlame
        if (not checkRange(20, effectData.Character.PrimaryPart)) then return print('Fire Slash Spin: Too far away') end;
        if not (effectData.pos) then return print("Ignoring Fire Spin"); end
        if (effectData.Character == LocalPlayer.Character) then return end;

        parryfunc();
    end;

    -- Wind Song Seeker

    effectsList.WindSword = function(effectData)
        if (not checkRange(25, effectData.Character.PrimaryPart)) then return print('Wind Sword: Too far away') end;
        if (effectData.Character == LocalPlayer.Character) then return end;
        if (effectData.Time == 1.1) then return end; -- Gale Lunge wind sword (hopefully dont break anything)

        _taskwait(0.4);
        parryfunc();
    end;

    effectsList.OwlDisperse = function(effectData)
        local target = effectData.Character and effectData.Character:FindFirstChild('Target');
        if (not target or target.Value ~= LocalPlayer.Character) then return end;

        print('owl disperse!');

        local startedAt = tick();
        local duration = effectData.Duration;

        task.wait(duration/3);

        while (tick() - startedAt <= duration+0.3) do
            task.spawn(function()
                blockAttack();
                unblockAttack();
            end);
            task.wait(0.2);
        end;
        print('owl disperse finished');
    end;

    effectsList.ThrowWeaponLocal = function(data) --Stormbreaker Recall
        local obj = data.Primary;
        if (not obj) then return end;

        repeat task.wait() until obj.Anchored;

        repeat
            task.wait();
        until not obj.Parent or checkRange(20, obj);
        if not obj.Parent then return; end

        parryfunc();
    end;

    -- Vent
    effectsList.BlueStun = function(effectData)
        if (effectData.CH == LocalPlayer.Character) then return; end
        if (not checkRange(20,effectData.CH.PrimaryPart)) then return; end
        if (not library.flags.parryVent) then return end;

        parryfunc();
    end;

    local function getCaster(data)
        if not data then return; end
        local caster;
        for _,obj in next, data do
            if typeof(obj) ~= "Instance" or obj.Parent ~= workspace.Live or obj == LocalPlayer.Character then continue; end

            return obj;
        end
        return caster;
    end

    game.ReplicatedStorage.Requests.ClientEffect.OnClientEvent:Connect(function(effectName, effectData)
        if (not library.flags.autoParry or table.find(_G.blacklistedNames, effectName)) then return end;

        local caster = getCaster(effectData);

        if (caster) then
            local autoParryMode = library.flags.autoParryMode;
            local isPlayer = Players:FindFirstChild(caster.Name)

            if (not autoParryMode.All) then
                --If not Parry Guild and its a player and hes in your guild do nothing
                if (not autoParryMode.Guild and isPlayer and Utility:isTeamMate(isPlayer)) then
                    return;
                end
                --If Parry Mobs and its a player and they dont parry players then do nothing
                if (autoParryMode.Mobs and isPlayer and not autoParryMode.Players) then
                    return
                end;
                --If Parry Player and its not a player and don't parry mobs then do nothing
                if (autoParryMode.Players and not isPlayer and not autoParryMode.Mobs) then
                    return;
                end;
                --If Parry Guild And Its a Player and its not guild member then do nothing
                if (autoParryMode.Guild and isPlayer and not Utility:isTeamMate(isPlayer)) then
                    return;
                end
            end;
        end;

        local f = effectsList[effectName];

        if (f) then
            warn('Using custom effectFunc for', effectName);
            f(effectData, effectName);
        elseif (getgenv().UNKNOWN_EFFECT_LOG) then
            print('Unknown effect', effectName);
        end;
    end);
    local function parry(oppcharacter, animationid, supposedfunc, animation)
        if deepwokensettings.whitelistmode ~= 'All' and deepwokensettings.whitelistmode ~= 'Mobs' and oppcharacter.Name ~= deepwokensettings.whitelistmode then 
            print('parry not whitelsited')
            return
        end
        if deepwokensettings.whitelistmode == 'Mobs' and game.Players:FindFirstChild(oppcharacter.Name) then 
            return print('parry not a mob')
        end
        print('parry called')
        if type(parryAnimTables[animationid]) ~= 'function' and type(parryAnimTables[animationid]) ~= 'table' then 
            print('parry number timing')
            task.wait(parryAnimTables[animationid])
            parryfunc()
        elseif type(parryAnimTables[animationid]) == 'table' then 
            local data = parryAnimTables[animationid]
            if checkRange(data.maxRange,oppcharacter.PrimaryPart) then 
                task.wait(data.waitTime)
                parryfunc()
            end
        else
            print('parry func1')
            parryAnimTables[animationid](animation, oppcharacter)
        end
    end



    local function attachAnimationPlayed(char,hum)
        print('attached')
        hum.AnimationPlayed:Connect(function(anim)
            --print('animation played')
            -- parryAnimTables[anim.Animation.AnimationId]:split('')[2]
            local AnimationMainID = string.split(anim.Animation.AnimationId,'//')[2]
            if parryAnimTables[AnimationMainID] and deepwokensettings['autoparry'] == true then 
                --print('parry found anim')
                if char:FindFirstChild('HumanoidRootPart') then 
                    if type(parryAnimTables[AnimationMainID]) ~= 'table' and type(parryAnimTables[AnimationMainID]) ~= 'function' then
                        if (char:FindFirstChild('HumanoidRootPart').Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > deepwokensettings.autoparrydistance then 
                            return
                        end
                    end
                    print('parrying, '..AnimationMainID)
                    parry(char,AnimationMainID, parryAnimTables[AnimationMainID], anim)
                end
            end
        end)
    end

    local function attachMobEsp(char) -- deepwokensettings.mobesp == true and
        if not game.Players:FindFirstChild(char.Name) then 
            task.spawn(function()
                repeat task.wait(); until char:FindFirstChild('HumanoidRootPart');
                esp_lib:Add(char, {
                    SelfName = true;
                    PrimaryPart = char.PrimaryPart;
                    flag = 'mobesp';
                    tag = 'mobesp';
                    IsEnabled = 'mobesp';
                    entity = true;
                    maxdistance = function()
                        return deepwokensettings.mobespdistance
                    end;
                    active = function()
                        return deepwokensettings.mobesp
                    end;
                    Color = function()
                        return deepwokensettings.mobespcolor
                    end;
                });
            end)
        end;
    end;

    for i,char in next, workspace.Live:GetChildren() do 
        if char ~= game.Players.LocalPlayer.Character then 
            task.spawn(function()
                -- char:WaitForChild('Humanoid');
                -- char:WaitForChild('HumanoidRootPart');
                --print('starting ctn;');
                if char:FindFirstChildWhichIsA('Humanoid') then 
                    -- if deepwokensettings.mobesp == true then 
                    --     esp_lib:Add(char, {
                    --         SelfName = true;
                    --         PrimaryPart = char.PrimaryPart;
                    --         flag = 'mobesp';
                    --         tag = 'mobesp';
                    --     })
                    -- end;
                    attachMobEsp(char);
                    attachAnimationPlayed(char,char:FindFirstChildWhichIsA('Humanoid'));
                else
                    local ctn; ctn = char.ChildAdded:Connect(function(x)
                        task.wait(0.1);
                        if x:IsA('Humanoid') then 
                            attachAnimationPlayed(char,x);
                            attachMobEsp(char);
                            -- if not game.Players:FindFirstChild(char.Name) then 
                            --     if deepwokensettings.mobesp == true then 
                            --         esp_lib:Add(char, {
                            --             SelfName = true;
                            --             PrimaryPart = char.PrimaryPart;
                            --             tag = 'mobesp';
                            --             flag = 'mobesp';
                            --         })
                            --     end;
                            -- end;
                            ctn:Disconnect();
                        end
                    end);
                end
            end)
        end
    end

    workspace.Live.ChildAdded:Connect(function(char)
        local canstop = false;
        pcall(function()
            if char == game.Players.LocalPlayer.Character then canstop = true; end
        end)
        if canstop == true then return end;
        task.spawn(function()
          --  char:WaitForChild('Humanoid');
          --  char:WaitForChild('HumanoidRootPart');
            --print('starting ctn;');
            --attachAnimationPlayed(char,char:FindFirstChildWhichIsA('Humanoid'))
            if char:FindFirstChildWhichIsA('Humanoid') then 
                -- if deepwokensettings.mobesp == true then 
                --     esp_lib:Add(char, {
                --         SelfName = true;
                --         PrimaryPart = char.PrimaryPart;
                --         flag = 'mobesp';
                --         tag = 'mobesp';
                --     })
                -- end;
                attachAnimationPlayed(char,char:FindFirstChildWhichIsA('Humanoid'));
            else
                local ctn; ctn = char.ChildAdded:Connect(function(x)
                    task.wait(0.1);
                    if x:IsA('Humanoid') then 
                        attachAnimationPlayed(char,x);
                        attachMobEsp(char);
                        -- if not game.Players:FindFirstChild(char.Name) then 
                        --     if deepwokensettings.mobesp == true then 
                        --         esp_lib:Add(char, {
                        --             SelfName = true;
                        --             PrimaryPart = char.PrimaryPart;
                        --             flag = 'mobesp';
                        --             tag = 'mobesp';
                        --         })
                        --     end;
                        -- end;
                        ctn:Disconnect();
                    end
                end);
            end
        end)
    end)
    --game.Players.L
    setsimulationradius(1000)
    task.spawn(function()
        while task.wait() do 
            -- if deepwokensettings.autovoidmobs == true then 
            --     -- for i,v in next, workspace.Live:GetDescendants() do 
            --     --     if not v:GetFullName():find(game.Players.LocalPlayer.Character.Name) and not game.Players:FindFirstChild(v.Parent).Name and not game.Players:FindFirstChild(v.Parent.Parent).Name and not game.Players:FindFirstChild(v.Parent.Parent.Parent).Name then 
            --     --         -- not our characters belongings;
            --     --         if v:IsA('Part') or v:IsA('MeshPart') then 
            --     --             -- unionpart
            --     --             if isnetworkowner(v) then 
            --     --                 print('isNetworkowner, '..v:GetFullName())
            --     --                 if v.Parent:FindFirstChildWhichIsA('Humanoid') then 
            --     --                     v.Parent:FindFirstChildWhichIsA('Humanoid').Health = 0
            --     --                 end
            --     --             end
            --     --         end;
            --     --     end;
            --     -- end;
            --     for i,v in next, workspace.Live:GetChildren() do 
            --         if not game.Players:FindFirstChild(v.Name) and v.PrimaryPart then
            --             if isnetworkowner(v.PrimaryPart) then -- or isnetworkowner(v.HumanoidRootPart)
            --                 print('isNetworkowner, '..v:GetFullName())
            --                 if v.Parent:FindFirstChildWhichIsA('Humanoid') and v.Parent:FindFirstChild('Head') then 
            --                     --v.Parent:FindFirstChildWhichIsA('Humanoid').Health = 0
            --                     --v.Parent.Head:Destroy()
            --                     --v.Parent:SetPrimaryPartCFrame(CFrame.new(0,-10000,0))
            --                     local cf = v.PrimaryPart.CFrame
            --                     v.PrimaryPart.Velocity = Vector3.new(14.465, 14.465, 14.465)
            --                     v.HumanoidRootPart.CFrame = CFrame.new(cf.X, -4980, cf.Z)
            --                 end
            --             end
            --         end;
            --     end;
            -- end;   
        end;    
    end)

    AddConfigurations()
elseif universeid == 4871329703 then -- type soul
    if getgenv().typesoulsettings then 
        for i,v in next, getgenv().typesoulsettings.connections do 
            pcall(function()
                v:Disconnect()
            end)
        end
    end
    local tab = window:CreateTab(gameName)
    local betatab = window:CreateTab('Beta Features')
    if game.PlaceId == 14067600077 then 
        azfakenotify('Waiting to join game.','untilClick')
        azfakenotify('nah but wtf u expecting executing here','untilClick')
        return
    end
    local esptab = window:CreateTab('ESP')
    local sector = tab:CreateSector('Cheats','left')
    local earlyaccess = betatab:CreateSector('Beta Cheats','left')
    local newother = tab:CreateSector('Cheats','left')
    local lefttab = tab:CreateSector('Cheats','left')
    local rightsect = tab:CreateSector('Cheats','right')
    local farmrightsect = tab:CreateSector('Cheats','right')
    local espsector = esptab:CreateSector('Cheats','left')

    local esp_lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/esp-library/main/lib.lua'))()
    esp_lib.Players = false;
    esp_lib.Boxes = false;
    esp_lib.Names = false;
    esp_lib.AutoRemove = true;
    esp_lib.Settings.usecustomespcolor = true;
    esp_lib:Toggle(true)

    --local esp_lib = {}

    local RaidJoin = signals.new(function()
        local gameIDS = {}
        gameIDS[14069122388] = "Hueco Mundo"
        gameIDS[14069678431] = "Karakura Town"
        gameIDS[14069956183] = "Rukon District"
        gameIDS[14070029709] = "Soul Society"
        gameIDS[14069866342] = "Las Noches"
        gameIDS[14071822972] = "Wandenreich City"
        local GameName = ''
        for i,v in next, gameIDS do 
            if i == game.PlaceId then 
                print('found game id')
                GameName = v
            end;
        end;
        print(GameName)
        local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
        local foundTP = nil;
        local statusafter = 'No Servers Avaiable'
        for i,jobIdTable in next, GetTable do 
            local shouldbreak = false
            if foundTP then break end;
            for ind,val in next, jobIdTable do
                --print(ind,val)
                --if foundTP then break end;
                if ind == 'Raid' and val == true and jobIdTable['ServerPlayers'] <= 29 then 
                    print(jobIdTable['ServerPlayers'])
                    statusafter = 'Joining Server With '..tostring(jobIdTable['ServerPlayers'])
                    foundTP = jobIdTable['JobID']
                    shouldbreak = true
                    pcall(function()
                        game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(GameName,foundTP)
                    end)
                    task.wait(3)
                end
            end
        end
        return statusafter
    end)
    local RAIDFUNCTIONHASH = RaidJoin.hash


    getgenv().typesoulsettings = {
        functions = {};
        connections = {};
        tweens = {};
        autoparry = false;
        autoparrydistance = 0;
        pingadjuster = 0;
        latencyadjuster = 0;
        autoflashstep = false;
        missionboardesp = false;
        missionboardespcolor = Color3.fromRGB(255,255,255);
        missionboardespdistance = 1000; -- 10009
        playeresp = false;
        playerespdistance = 2000;
        playerespcolor = Color3.fromRGB(255,255,255);
        autofarm = false;
        farmx = 0;
        farmy = 0;
        farmz = 0;
        farmrotation = 0;
        tweenspeed = 100;
        autocreateparty = false;
        selectednpc = '';
        selectedfarm = 'Mobs';
        autom1 = false;
        autom2 = false;
        lootboxesp = false;
        lootboxespcolor = Color3.fromRGB(255,255,255);
        lootboxespdistance = 2000;
        autoequipweapon = false;
        useskillselect = {};
        autouseskills = false;
        autogrip = false;
        tweenspeed = 100;
        lootnonblatant = false;
        autolootlootbox = false;
        childgamermode = false;
        randomtext = false;
        rainbowcloak = false;
        npcesp = false;
        npcespcolor = Color3.fromRGB(255,255,255);
        npcespdistance = 2000;
        mobesp = false;
        mobespcolor = Color3.fromRGB(255,255,255);
        mobespdistance = 2000;
        goupafterdeath = false;
        fullbright = false;
        m2beforeparry = false;
        goundermapforlootbox = false;
        autoparrywhitelist = 'All';
        whitelistap = {'All','Mobs'};
        rollback = false;
        serverhopafterlootbox = false;
        m1hold = false;
        instakill = false;
        antiaagun = false;
        speecchanger = false;
        flashstepspeed = 55;
        breakais = false;
        sendtowebhook = false;
        sendurl = '';
        parrynotifications = false;
        timetowait = 30;
        kisukedelay = false;
        teleportKisukeBeforeUse = true;
        selecttradeitem = {};
        slotselected = {};
        instateleport = false;
        useparryvirtualiser = false;
        useparrytiming = false;
        listoneitemonfour = false;
        autobongbong = false;
        skipserver = 0;
        skipservertgl = false;
        lookataxiszyxy = false;
        useaagun = false;
        fasteranimations = false;
        animationspeed = 1;
        usemanualteleport = false;
        publicwebhook = false;
        scrapeamount = 1500;
        autoparryholdtime = 0.1;
    }
    typesoulsettings.functions.removecurrenttweens = function()
        for i,v in next, typesoulsettings.tweens do 
            v:Pause();
            v:Cancel();
            table.remove(typesoulsettings.tweens, i)
        end
    end;
    typesoulsettings.functions.teleport = function(pos, speed) -- another arg for should cancel any tweens in table
        if pos and typeof(pos) ~= 'Vector3' and typeof(pos) ~= 'CFrame' and pos:IsA('BasePart') then
            pos = pos.CFrame;
        end;   
        if pos and typeof(pos) == 'Vector3' then 
            pos = CFrame.new(pos);
        end;
        -- @init
        if not pos then 
            print('[tween]: no position arg #1, nil?')
        end
        if azfake:returndata().humanoidrootpart and pos then 
            local rootPart = azfake:returndata().humanoidrootpart;
            local dist = (pos.Position - azfake:returndata().humanoidrootpart.Position).Magnitude
            local _time = dist / 250 --650;
            _time += 0.2
            if speed then 
                _time -= (speed / 250) -- +=  1000
            end
            local newtween = game.TweenService:Create(rootPart,TweenInfo.new(_time,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = pos})
            newtween:Play()
            table.insert(typesoulsettings.tweens, newtween)
            -- repeat 
            --     task.wait(.5)
            --     dist = (pos.Position - azfake:returndata().humanoidrootpart.Position).Magnitude
            --     local _time = dist / 650;
            --     _time += 0.2
            --     if speed then 
            --         _time += (speed / 1000)
            --     end
            --     game.TweenService:Create(rootPart,TweenInfo.new(_time,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = pos}):Play()
            -- until dist <= 40
            -- game.TweenService:Create(rootPart,TweenInfo.new(0.6,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = pos}):Play()
            -- azfake:returndata().humanoidrootpart.CFrame = pos

            -- when close just teleport
            --rootPart.Parent = nil;
            --rootPart.CFrame = pos;
            --rootPart.Parent = azfake:returndata().character
        end;
        --workspace.NPCs.MissionNPC:GetChildren()[4].Board.Union.CFrame
        -- @ successfully tp
    end -- tp(part, 100)

    local function checkdist(range, pos)
        if typeof(pos) ~= 'Vector3' and typeof(pos) ~= 'CFrame' and pos and pos:IsA('BasePart') then pos = pos.Position end;
        if typeof(pos) ~= 'Vector3' and typeof(pos) ~= 'CFrame' and pos and pos:IsA('Model') then 
            if pos.PrimaryPart then 
                pos = pos.PrimaryPart.Position
            else
                pos = pos:FindFirstChildOfClass('BasePart').Position
            end
        end;
        if typeof(pos) == 'CFrame' then pos = pos.Position end;
        if not pos then print('aint no way u checking distance with no pos, ',tostring(range)) return end;
        local b = false;
        if azfake:returndata().humanoidrootpart then 
            local rootPart = azfake:returndata().humanoidrootpart
            local dist = (pos - rootPart.Position).Magnitude;
            if dist <= range then 
                b = dist;
            end
        end
        return b
    end;

    local function conceal(f)
        task.spawn(function()
            f()
        end )
    end
    local function getskilltreegui()
        if not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('SkillTree') then return end;
        local tree = nil;
        for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui:GetChildren() do 
            if v.Name == 'SkillTree' and v:FindFirstChild('MainFrame') then 
                if #v.MainFrame.page1Frame.Hakuda.hakudaMain:GetChildren() > 1 then 
                    tree = v;
                end
            end
        end;
        return tree; --.MainFrame.page1Frame.Hakuda.hakudaMain
    end;    
    local function getInventory()
        local inventory = {};
        local treegui = getskilltreegui();
        if not treegui then return end;
        for i,v in next, treegui.MainFrame.page3Frame.itemsFrame.itemsMain:GetChildren() do 
            if v:IsA('TextButton') then 
                table.insert(inventory, v.Name) -- treegui.MainFrame.page3Frame.itemsFrame.itemsMain
            end;    
        end;
        return inventory
    end

    --[[
    local xb = {'rbxassetid://14069236613','rbxassetid://14079307927','rbxassetid://14069005805'}
    game.Players.LocalPlayer.Character.Humanoid.AnimationPlayed:Connect(function(x)
        if table.find(xb,tostring(x.Animation.AnimationId)) then return end
        if x.Priority == Enum.AnimationPriority.Idle then return end;
        if x.Priority == Enum.AnimationPriority.Movement then return end;
        if x.Priority == Enum.AnimationPriority.Core then return end;
        setclipboard(x.Animation.AnimationId)
    end)
    ]]

    typesoulsettings.functions.getentityfolder = function(x)
        if not x then x = game.Players.LocalPlayer.Name end;
        return workspace.Entities:FindFirstChild(x)
    end;    

    typesoulsettings.functions.parry = function(hold)
        if not typesoulsettings.functions.getentityfolder() then return print('no entity folder') end;
        typesoulsettings.functions.getentityfolder().CharacterHandler.Remotes.Block:FireServer("Released")
        if typesoulsettings.m2beforeparry then 
            azfake:returndata().character.CharacterHandler.Remotes.M2:FireServer()
        end
        if typesoulsettings.useparryvirtualiser == false then 
            typesoulsettings.functions.getentityfolder().CharacterHandler.Remotes.Block:FireServer("Pressed")
        else
            signals.VirtualiseKeypress('F', true)
        end
        if hold then 
            task.wait(hold) -- @shouldve concealed
        else
            task.wait(typesoulsettings.autoparryholdtime); --(0.1)
        end
        if typesoulsettings.useparryvirtualiser == false then
            typesoulsettings.functions.getentityfolder().CharacterHandler.Remotes.Block:FireServer("Released")
        else
            signals.VirtualiseKeypress('F', false)
        end
    end;
    typesoulsettings.functions.parrylist = function(tbl,  mob, dist ,anim)
        if not typesoulsettings.functions.getentityfolder() then return print('no entity folder') end;
        if not mob.PrimaryPart then return print('no primary part for '..mob.Name) end;
        for i,v in next, tbl do
            local timetowait = v
            if typesoulsettings.pingadjuster > 0  then 
                timetowait -= typesoulsettings.pingadjuster / 1400 -- 100 
            end; 
            task.wait(timetowait) -- v
            if checkdist(dist, mob.PrimaryPart) and anim.IsPlaying then 
                typesoulsettings.functions.getentityfolder().CharacterHandler.Remotes.Block:FireServer("Pressed")
                typesoulsettings.functions.getentityfolder().CharacterHandler.Remotes.Block:FireServer("Released")
            end
        end
    end;

    local function makeBlockRange(dist, info) -- makeBlockRange(15, {delay = 0.7, holdtime = 1})
        if not typesoulsettings.functions.getentityfolder() then return print('no entity folder') end;
        local rootPart = azfake:returndata().humanoidrootpart
        if not rootPart then return end;
        --local dist
        if not checkdist(dist, rootPart) then 
            return;
        end;
        task.wait(info.delay); -- 0.7;
        typesoulsettings.functions.parry(info.holdtime)
    end

    typesoulsettings.functions.makeBlockRange = makeBlockRange

    typesoulsettings.functions.flashstep = function()
        if workspace.Entities:FindFirstChild(game.Players.LocalPlayer.Name) then 
            local folder = workspace.Entities:FindFirstChild(game.Players.LocalPlayer.Name);
            folder.CharacterHandler.Remotes.Flashstep:FireServer('Pressed');
        end;
    end;    -- could make a check to get folder

    typesoulsettings.functions.m1 = function()
        game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler:FireServer('LightAttack')
    end;
    typesoulsettings.functions.m2 = function()
        game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler:FireServer('CriticalAttack')
    end;

    local parryAnims = {};

    local parrywhitelist = sector:AddDropdown("Auto Parry Whitelist", typesoulsettings.whitelistap, "All", false, function(State) -- could change to quest  getWhitelsited
        typesoulsettings.autoparrywhitelist = State 
    end)
    local playeraddedap; playeraddedap = game.Players.PlayerAdded:Connect(function(child)
        task.wait(.1);
        parrywhitelist:Add(child.Name)
    end); table.insert(typesoulsettings.connections, playeraddedap);
    local playerremovedap; playerremovedap = game.Players.PlayerRemoving:Connect(function(child)
        task.wait(.1);
        parrywhitelist:Remove(child.Name)
    end); table.insert(typesoulsettings.connections, playerremovedap);
    sector:AddToggle('Auto Parry', false, function(e)
        typesoulsettings.autoparry = e;
        if not e then 
            maid.autoparrycheck = nil;
            maid.autoparrycheck2 = nil;
            return;
        end;

        local function onAdded(obj)
            local hardNames = {
                'SchwertCritical'; --,'Tenran','Byakurai'
                'HaienFireball';

            };
            local dontParry = {
                'WaveshotProjectile'; -- already got parry down;
            }
            if obj.Name:find('hitbox') or obj.Name:find('Hitbox') or obj.Name:find('Projectile') then 
                signals.conceal(function()
                    local hurtPart = obj;
                    if obj:IsA('Model') then
                        hurtPart = obj.PrimaryPart
                    end
                    repeat task.wait() until not hurtPart or checkdist(6,hurtPart)
                    if hurtPart and checkdist(6, hurtPart) then 
                        print('@parrying hurtpart '..obj.Name)
                        typesoulsettings.functions.parry()
                    end
                end)
            elseif table.find(hardNames,obj.Name) then --obj.Name == 'SchwertCritical'  then 
                local hurtPart = obj;
                if obj:IsA('Model') then hurtPart = obj.PrimaryPart end;
                signals.conceal(function()
                    repeat task.wait() until not hurtPart or checkdist(14,hurtPart)
                    if hurtPart and checkdist(13,hurtPart) then 
                        print(':parrying hardname '..obj.Name)
                        typesoulsettings.functions.parry(0.3)
                    end
                end)
            -- elseif obj:IsA('BasePart') then 
            --     signals.conceal(function()
            --         repeat task.wait() until not obj or checkdist(10,obj)
            --         if obj and checkdist(6,obj) then 
            --             print(':parrying random part '..obj.Name)
            --             typesoulsettings.functions.parry()
            --         end
            --     end)
            end
        end

        maid.autoparrycheck = workspace.Effects.ChildAdded:Connect(function(child)
            if child.Name ~= game.Players.LocalPlayer.Name then 
                local ctn; ctn = child.ChildAdded:Connect(function(obj)
                    task.wait(0.05)
                    onAdded(obj)
                end)
                typesoulsettings.connections[child.Name] = ctn;
                --table.insert(typesoulsettings.connections,ctn);
                child.Destroying:Connect(function()
                    ctn:Disconnect()
                end)
            end;
        end)
        maid.autoparrycheck2 = workspace.Effects.ChildRemoved:Connect(function(child)
            if typesoulsettings.connections[child.Name] then 
                typesoulsettings.connections[child.Name]:Disconnect()
                typesoulsettings.connections[child.Name] = nil;
            end
        end)
        for i,v in next, workspace.Effects:GetChildren() do 
            if v.Name ~= game.Players.LocalPlayer.Name then 
                local ctn; ctn = v.ChildAdded:Connect(function(obj)
                    task.wait(0.05)
                    onAdded(obj)
                end)
                table.insert(typesoulsettings.connections,ctn);
                v.Destroying:Connect(function()
                    ctn:Disconnect()
                end)
            end
        end
    end)
    sector:AddToggle('Feint Before Parry', false, function(e)
        typesoulsettings.m2beforeparry = e;
    end)
    sector:AddToggle('Parry Notifications', false, function(e)
        typesoulsettings.parrynotifications = e;
    end)
    sector:AddToggle('Virtualise Parry Keypress', false, function(e)
        typesoulsettings.useparryvirtualiser = e;
    end)
    sector:AddToggle('Look AXIS XZ', false, function(e)
        typesoulsettings.lookataxiszyxy = e;
    end)
    sector:AddToggle('Automatic Timings', false, function(e)
        typesoulsettings.useparrytiming = e;
    end)
    -- sector:AddToggle('Auto Feint', false, function(e)
    --     typesoulsettings.m2beforeparry = e;
    -- end)
    sector:AddSlider("Auto Parry Distance", 0, 0, 100, 1, function(State)
        typesoulsettings.autoparrydistance = State -- deepwtykensettings  typesoulsettings
    end)
    sector:AddSlider("Hold Time", 0, 0.2, 1, 100, function(State)
        typesoulsettings.autoparryholdtime = State -- deepwtykensettings  typesoulsettings
    end)
    local pingadjust = sector:AddSlider("Parry Ping Adjuster", 0, 0, 100, 1, function(State)
        typesoulsettings.pingadjuster = State -- deepwtykensettings  typesoulsettings pingadjust
    end)
    local latency = sector:AddSlider("Parry Latency Adjuster", 0, 0, 100, 1, function(State)
        typesoulsettings.latencyadjuster = State -- deepwtykensettings  typesoulsettings pingadjust
    end)
    sector:CreateHintOnItem(latency,'How late it will parry')
    sector:CreateHintOnItem(pingadjust,'How early it will parry')
    --
    --

    local npclist = {};
    local entitylist = {'Mobs'};
    for i,v in next, workspace.NPCs:GetDescendants() do 
        if v:IsA('Model') and not v.Name:find('MissionBoard') then 
            table.insert(npclist,v.Name)
        end;
    end;
    for i,v in next, workspace.Entities:GetChildren() do 
        if v:IsA('Model') and v.Name ~= game.Players.LocalPlayer.Name then 
            table.insert(entitylist,v.Name)
        end;
    end;
    sector:AddDropdown("NPC Teleport List", npclist, "", false, function(State)
        typesoulsettings.selectednpc = State 
    end)
    sector:AddToggle("Instant NPC Teleport", false, function(State)
        typesoulsettings.instateleport = State 
    end)
    sector:AddButton("Teleport To NPC", function()
        if typesoulsettings.selectednpc == '' then return end;
        local obj = nil; --workspace.NPCs:FindFirstChild(typesoulsettings.selectednpc);
        for i,v in next, workspace.NPCs:GetDescendants() do 
            if v.Name == typesoulsettings.selectednpc and v:IsA('Model') then obj = v break end;
        end;
        if not obj then return azfakenotify('couldnt find npc??', 3) end;
        azfakenotify('Teleporting to, '..obj.Name,3)
        local tpPart = obj.PrimaryPart;
        if not tpPart then 
            tpPart = obj:FindFirstChildOfClass('BasePart')
        end;
        if not tpPart then tpPart = signals.findpartindir(obj) end;
        if not tpPart then
            tpPart = obj.WorldPivot
        end;
        if typesoulsettings.instateleport == false then 
            typesoulsettings.functions.teleport(tpPart, 100)
        else
            game.Players.LocalPlayer.Character.Head:Destroy()
            local newAdd; newAdd = workspace.Entities.ChildAdded:Connect(function(b)
                if b.Name == game.Players.LocalPlayer.Name then 
                    local beentick = tick() --os.tick()
                    repeat 
                        task.wait()
                        b.PrimaryPart.CFrame = obj.WorldPivot; --tpPart.CFrame; --workspace.NPCs.RaidBoss.Kisuke.WorldPivot
                    until (tick() - beentick ) > 1
                    newAdd:Disconnect()
                end
            end)
        end
    end)
    sector:AddSeperator('-')
    local forentity = rightsect:AddDropdown("Entity List", entitylist, "Mobs", false, function(State) -- could change to quest
        typesoulsettings.selectedfarm = State 
    end)
    local entityadded; entityadded = workspace.Entities.ChildAdded:Connect(function(child)
        task.wait(.1);
        if child.Name ~= game.Players.LocalPlayer.Name and not table.find(entitylist, child.Name) then 
            forentity:Add(child.Name)
        end;
    end); table.insert(typesoulsettings.connections, entityadded);
    local entityremoved; entityremoved = workspace.Entities.ChildRemoved:Connect(function(child)
        task.wait(.1);
        if child.Name ~= game.Players.LocalPlayer.Name and table.find(entitylist, child.Name) then 
            forentity:Remove(child.Name)
        end;
    end); table.insert(typesoulsettings.connections, entityremoved);

    local function getclosestboard() -- fucntion
        local closestdist = nil;
        local closestboard = nil;
        for i,v in next, workspace.NPCs.MissionNPC:GetChildren() do -- checkdist(10000,v.PrimaryPart) :FindFirstChildOfClass('BasePart')
            local dist = (v.WorldPivot.Position - azfake:returndata().humanoidrootpart.Position).Magnitude;
            if closestdist == nil then 
                closestdist = dist;
                closestboard = v;
            else
                if closestdist > dist then 
                    closestdist = dist;
                    closestboard = v;
                end;
            end;    
        end;   
        return {board = closestboard, dist = closestdist} 
    end;
    rightsect:AddToggle('Auto M1', false, function(e)
        typesoulsettings.autom1 = e;
    end)
    rightsect:AddToggle('Auto M2', false, function(e)
        typesoulsettings.autom2 = e;
    end)
    local forentity = rightsect:AddDropdown("Use Skills", {'One','Two','Three'}, "", true, function(State) -- could change to quest
        typesoulsettings.useskillselect = State -- useskillselection 
    end)
    rightsect:AddToggle('Auto Use Skills', false, function(e)
        typesoulsettings.autouseskills = e;
    end)
    local concurrentdialogueframe
    game.Players.LocalPlayer.PlayerGui:WaitForChild('DialogueUI').ChildAdded:Connect(function(child)
        concurrentdialogueframe = child;
    end)
    local justresettofix = false;
    rightsect:AddToggle('Auto Farm', false, function(e) -- autofarmsect
        typesoulsettings.autofarm = e;
        if not e then maid.autofarmtype = nil return end;
        -- signals.conceal(function()
        --     maid.autofarmtype = signals.heartbeat:connect("@autofarm go wild",function()

        --     end);
        -- end);
    end)
    rightsect:AddToggle('Auto Create Party', false, function(e)
        typesoulsettings.autocreateparty = e;
    end)
    rightsect:AddToggle('Auto Get Quest', false, function(e)
        typesoulsettings.autogetquest = e;
    end)
    rightsect:AddToggle('Auto Equip Weapon', false, function(e) -- srightsectector
        typesoulsettings.autoequipweapon = e;
    end)
    rightsect:AddToggle('Auto Grip', false, function(e) -- srightsectector
        typesoulsettings.autogrip = e;
    end)
    rightsect:AddButton("Teleport To Board", function() -- Bounty
        if not azfake:returndata().humanoidrootpart then return end
        local rootPart = azfake:returndata().humanoidrootpart
        signals.conceal(function()
            local closestbounty = nil;
            local closestdist = nil;
            for i,v in next, workspace.NPCs.MissionNPC:GetChildren() do -- (v:IsA('Model') and v.PrimaryPart and v.PrimaryPart.Position or v:FindFirstChildOfClass('BasePart').Position)
                local dist = (v.WorldPivot.Position - rootPart.Position).Magnitude
                if closestbounty == nil then 
                    closestbounty = v
                    closestdist = dist
                else
                    if closestdist > dist then 
                        closestbounty = v
                        closestdist = dist
                    end
                end
            end;
            if closestbounty then 
                typesoulsettings.functions.teleport(closestbounty:IsA('Model') and closestbounty.Part or closestbounty, typesoulsettings.tweenspeed)
            end
        end);
    end)
    rightsect:AddSeperator('-')
    rightsect:AddSlider("Tween Speed", 0, 100, 250, 1, function(State)
        typesoulsettings.tweenspeed = State --faermx
    end)
    rightsect:AddSlider("Farm X Offset", -20, 0, 20, 1, function(State)
        typesoulsettings.farmx = State --faermx
    end)
    rightsect:AddSlider("Farm Y Offset", -20, 0, 20, 1, function(State)
        typesoulsettings.farmy = State 
    end)
    rightsect:AddSlider("Farm Z Offset", -20, 0, 20, 1, function(State)
        typesoulsettings.farmz = State 
    end)
    rightsect:AddSlider("Farming Rotation", -360, 0, 360, 1, function(State)
        typesoulsettings.farmrotation = State -- farmrot
    end)
    rightsect:AddSeperator('-')

    local bkeytroll = lefttab:AddButton('Use Key Troll', function()
        if not azfake:returndata().character then return end;
        signals.conceal(function()
            local rootPart = azfake:returndata().character.PrimaryPart
            rootPart.Anchored = true;
            rootPart.CFrame *= CFrame.new(0,-15,0)
            local t1 = 0
            repeat 
                task.wait(0.1)
                t1 += 0.5
                local ohString1 = "Skill"
                local ohString2 = 'One'
                local ohString3 = "Pressed"
            
                game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler:FireServer(ohString1, ohString2, ohString3)
            until t1 > 2
            task.wait(2)
            rootPart.CFrame *= CFrame.new(0,16,35)
            rootPart.Anchored = false;
        end)
    end)
    bkeytroll:ActivateKnowledge()
    bkeytroll:AddKnowledge('Put Key On 1')
    lefttab:AddToggle('Use AA Gun', false, function(e)
        typesoulsettings.useaagun = e; -- useaagan
    end)
    lefttab:AddButton('Kill Self', function()
        if not azfake:returndata().character then return end;
        if not localPlayer.rootPart then return end;
        if typesoulsettings.useaagun then 
            task.spawn(function()
                repeat
                    task.wait(1)
                    local toX = math.random(1,1500);
                    local toY = math.random(1,1500)
                    local toZ = math.random(1,1500)
                    localPlayer.rootPart.CFrame = CFrame.new(toX,toY,toZ)
                until localPlayer.humanoid.Health <= 0
            end)
            return;
        end;
        if azfake:returndata().character:FindFirstChild('Head') then 
            azfake:returndata().character:FindFirstChild('Head'):Destroy();
        end;
    end)
    local willTeleportID = '';
    lefttab:AddTextbox('Server JobId', nil, function(toTeleport)
        local replacement = toTeleport;
        if string.find(replacement, 'mixous') then 
            print('has mixous',replacement)
            local mainTable = {};
            replacement = replacement:sub(2, string.len(replacement))
            replacement = string.gsub(toTeleport, ']' , '') -- [mixous,10000,gggg-hhhh-gggg]
            -- [mixous[10000[gggg-hhhh-gggg
            -- replacement = string.gsub(toTeleport, '[' , ',')
            print(replacement)
            -- ,mixous,10000,gggg-hhhh-gggg
            local mainSplit = string.split(replacement, '[') -- concat
            -- [1] = placeId
            -- [2] = jobid
            for i,v in next, mainSplit do 
                print(i,v)
            end
            mainTable['placeid'] = tonumber(mainSplit[3])
            mainTable['jobid'] = mainSplit[4]:sub(1, string.len(mainSplit[4]))
            print(mainTable['jobid'], mainTable['placeid'])
            replacement = mainTable;
        end;
        willTeleportID = replacement; -- [mixous][10000][gggg-hhhh-gggg]
    end)
    lefttab:AddButton('Join Server ID', function()
        local teleportId = true;
        local teleportInstance = willTeleportID;
        if type(willTeleportID) == 'table' then 
            teleportId = willTeleportID['placeid']
            teleportInstance = willTeleportID['jobid']
        end; -- teleportId = type(willtpid) == 'table' and willtpid['placeid']
        if typesoulsettings.usemanualteleport then 
            localPlayer.teleport.toInstance(teleportId, teleportInstance)
        else
            local gameIDS = {}
            gameIDS[14069122388] = "Hueco Mundo"
            gameIDS[14069678431] = "Karakura Town"
            gameIDS[14069956183] = "Rukon District"
            gameIDS[14070029709] = "Soul Society"
            gameIDS[14069866342] = "Las Noches"
            gameIDS[14071822972] = "Wandenreich City"
            game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(gameIDS[teleportId],teleportInstance)
        end
    end)
    lefttab:AddButton('Get Server Details', function()
        local mainstring = '[mixous][placeid][jobid]' -- could have a table to loop for placeid, jobid
        mainstring = string.gsub(mainstring, 'placeid', game.PlaceId)
        mainstring = string.gsub(mainstring, 'jobid', game.JobId)
        -- setclipboard(mainstring);
        local maintable = {
            ['placeid'] = game.PlaceId;
            ['jobid'] = game.JobId;
            --'jobid'
        }
        pcall(setclipboard, mainstring)
        azfakenotify('Copied server details to clipboard.', 3)
    end)
    lefttab:AddSeperator('-')
    lefttab:AddSlider("Servers to Skip", 0, 0, 300, 1, function(State) -- 150
        typesoulsettings.skipserver = State -- farmrot
    end)
    --
    lefttab:AddToggle('Use Skip Server', false, function(e)
        typesoulsettings.skipservertgl = e;
    end)
    lefttab:AddToggle('Use Manual Teleport', false, function(e)
        typesoulsettings.usemanualteleport = e;
    end)
    lefttab:AddButton('Serverhop', function()
        local gameIDS = {}
        gameIDS[14069122388] = "Hueco Mundo"
        gameIDS[14069678431] = "Karakura Town"
        gameIDS[14069956183] = "Rukon District"
        gameIDS[14070029709] = "Soul Society"
        gameIDS[14069866342] = "Las Noches"
        gameIDS[14071822972] = "Wandenreich City"
        if typesoulsettings.usemanualteleport then 
            localPlayer.teleport.serverHop(true);
            return;
        end;
        local GameName = ''
        for i,v in next, gameIDS do 
            if i == game.PlaceId then 
                --print('found game id')
                GameName = v
            end;
        end;
        local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
        if not GetTable then 
            repeat 
                if GetTable == nil then 
                    GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
                end
                task.wait()
            until GetTable
            print('waited get cooldown')
        end
        local foundTP = nil;
        local index = 0
        for i,jobIdTable in next, GetTable do 
            index += 1
            local shouldbreak = false
            if jobIdTable['JobID'] ~= game.JobId and not jobIdTable['Raid'] and (typesoulsettings.skipservertgl == false and true or index > typesoulsettings.skipserver) then 
                if typesoulsettings.skipservertgl == true then 
                    azfakenotify(`skipping {typesoulsettings.skipserver} servers. [{typesoulsettings.skipserver}vs{index}:{index>typesoulsettings.skipserver}]`, 3) 
                    task.wait(.5)
                end
                game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(GameName,jobIdTable['JobID'])
                break
            end
        end
    end)
    lefttab:AddButton('Rejoin Same Server', function()
        game.TeleportService:TeleportToPlaceInstance(game.PlaceId,game.JobId)
    end)
    local savedGames = {
        "Hueco Mundo";
        "Karakura Town";
        "Rukon District";
        "Soul Society";
        "Las Noches";
        "Wandenreich City";
    }
    local bworld = lefttab:AddDropdown("Worlds", savedGames, "", false, function(State) -- true would join every game in list, use queueteleport
        --
    end)
    lefttab:AddButton('Join World', function() -- Join Game
        game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(bworld:Get())
    end)
    -- lefttab:AddButton('Join Karakura Town', function()
    --     game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town")
    -- end)
    lefttab:AddSeperator('-')
    --
    lefttab:AddButton('Join Raid Server', function()
        if not azfake:returndata().character then return end;
        print('raid func hash '..RaidJoin.hash)
        local raidresult = RaidJoin.func()
        azfakenotify(tostring(statusafter),3)
    end)
    lefttab:AddToggle('Rainbow Cloak', false, function(e)
        typesoulsettings.rainbowcloak = e;
    end)
    local WasARaidServer = false
    lefttab:AddToggle('Auto Join Raid', false, function(e)
        typesoulsettings.autojoinraid = e;
        if not e then 
            maid.autojoinraid = nil;
            return;
        end; -- signals.connection.new()
        -- maid.autojoinraid = signals.heartbeat:connect("auto join raids", function()
        --     task.wait()
        --     local gameIDS = {}
        --     gameIDS[14069122388] = "Hueco Mundo"
        --     gameIDS[14069678431] = "Karakura Town"
        --     gameIDS[14069956183] = "Rukon District"
        --     gameIDS[14070029709] = "Soul Society"
        --     gameIDS[14069866342] = "Las Noches"
        --     gameIDS[14071822972] = "Wandenreich City"
        --     local GameName = ''
        --     for i,v in next, gameIDS do 
        --         if i == game.PlaceId then 
        --             --print('found game id')
        --             GameName = v
        --         end;
        --     end;
        --     local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
        --     if not GetTable then 
        --         repeat 
        --             if GetTable == nil then 
        --                 GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
        --             end
        --             task.wait()
        --         until GetTable
        --         print('waited get cooldown')
        --     end
        --     local foundTP = nil;
        --     local statusafter = 'No Servers Avaiable'

        --     local function checkifourserverisntaraid()
        --         local b = false;
        --         for i,jobIdTable in next, GetTable do 
        --             local shouldbreak = false
        --             if tostring(jobIdTable['JobID']) == tostring(game.JobId) and jobIdTable['Raid'] == true then 
        --                 b = true
        --                 WasARaidServer = true
        --                 --break
        --             end
        --         end
        --         return b
        --     end

        --     if WasARaidServer == false and checkifourserverisntaraid() == false and typesoulsettings.autojoinraid == true then 
        --         for i,jobIdTable in next, GetTable do 
        --             local shouldbreak = false
        --             --if foundTP then break end;
        --             for ind,val in next, jobIdTable do
        --                 --print(ind,val)
        --                 --if foundTP then break end;
        --                 if ind == 'Raid' and val == true and jobIdTable['ServerPlayers'] <= 29 then 
        --                     print(jobIdTable['ServerPlayers'])
        --                     statusafter = 'Joining Server With '..tostring(jobIdTable['ServerPlayers'])
        --                     foundTP = jobIdTable['JobID']
        --                     shouldbreak = true
        --                     pcall(function()
        --                         game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(GameName,foundTP)
        --                     end)
        --                     task.wait(3)
        --                 end
        --             end
        --         end
        --     end
        -- end)
        signals.conceal(function()
            while task.wait() do 
                if typesoulsettings.autojoinraid == false or getgenv().loopsUnload == true then print('concealed raid join break end') break end;
                --task.wait()
                local gameIDS = {}
                gameIDS[14069122388] = "Hueco Mundo"
                gameIDS[14069678431] = "Karakura Town"
                gameIDS[14069956183] = "Rukon District"
                gameIDS[14070029709] = "Soul Society"
                gameIDS[14069866342] = "Las Noches"
                gameIDS[14071822972] = "Wandenreich City"
                local GameName = ''
                for i,v in next, gameIDS do 
                    if i == game.PlaceId then 
                        --print('found game id')
                        GameName = v
                    end;
                end;
                local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
                if not GetTable then 
                    repeat 
                        if GetTable == nil then 
                            GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
                        end
                        task.wait()
                    until GetTable or typesoulsettings.autojoinraid == false or getgenv().loopsUnload == true 
                    print('waited get cooldown')
                end
                local foundTP = nil;
                local statusafter = 'No Servers Avaiable'
    
                local function checkifourserverisntaraid()
                    local b = false;
                    for i,jobIdTable in next, GetTable do 
                        local shouldbreak = false
                        if tostring(jobIdTable['JobID']) == tostring(game.JobId) and jobIdTable['Raid'] == true then 
                            b = true
                            WasARaidServer = true
                            --break
                        end
                    end
                    return b
                end
    
                if WasARaidServer == false and checkifourserverisntaraid() == false and typesoulsettings.autojoinraid == true and GetTable then 
                    for i,jobIdTable in next, GetTable do 
                        local shouldbreak = false
                        --if foundTP then break end;
                        for ind,val in next, jobIdTable do
                            --print(ind,val)
                            --if foundTP then break end;
                            if ind == 'Raid' and val == true and jobIdTable['ServerPlayers'] <= 29 then 
                                print(jobIdTable['ServerPlayers'])
                                statusafter = 'Joining Server With '..tostring(jobIdTable['ServerPlayers'])
                                foundTP = jobIdTable['JobID']
                                shouldbreak = true
                                pcall(function()
                                    game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(GameName,foundTP)
                                end)
                                task.wait(3)
                            end
                        end
                    end
                end
            end
        end)
    end,'DONTSAVE')
    lefttab:AddToggle('Lootbox Non-Blatant', false, function(e)
        typesoulsettings.lootnonblatant = e;
    end)
    lefttab:AddToggle('Lootbox Underground', false, function(e)
        typesoulsettings.goundermapforlootbox = e;
    end)
    lefttab:AddToggle('Serverhop after Lootbox', false, function(e)
        typesoulsettings.serverhopafterlootbox = e;
    end)
    lefttab:AddToggle('Auto Lootbox', false, function(e)
        typesoulsettings.autolootlootbox = e;
        if not e then 
            maid.autolootbox = nil;
            return
        end;
        local function takeLootbox(child)
            local rootPart = azfake:returndata().humanoidrootpart
            signals.conceal(function()
                local closestbounty = nil;
                local closestdist = nil; -- (v:IsA('Model') and v.PrimaryPart and v.PrimaryPart.Position or v:FindFirstChildOfClass('BasePart').Position)
                for i,v in next, workspace.Lootboxes:GetChildren() do 
                    local dist = (v.WorldPivot.Position - rootPart.Position).Magnitude
                    if closestbounty == nil then 
                        closestbounty = v
                        closestdist = dist
                    else
                        if closestdist > dist then 
                            closestbounty = v
                            closestdist = dist
                        end
                    end
                end;
                if closestbounty then 
                    task.delay(20,function()
                        WasARaidServer = false;
                    end)
                    closestbounty:WaitForChild('Items')
                    print('waiting for items')
                    local tpPart = closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:FindFirstChildOfClass('BasePart') or nil;
                    for i,v in next, closestbounty:GetDescendants() do 
                        if v:IsA('BasePart') then 
                            tpPart = v 
                        elseif v:IsA('MeshPart') then 
                            tpPart = v 
                        elseif v:IsA('Part') then 
                            tpPart = v;
                        end;
                    end;
                    local function claimLootbox(item, lootbox)
                        if tpPart and checkdist(10, tpPart) then 
                            print('[pciked]')
                            local inputManager = game.VirtualInputManager; --UserInputService
                            inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                            task.wait(.03)
                            inputManager:SendKeyEvent(false,Enum.KeyCode.W,false,game)
                            local id = lootbox:GetAttribute('ID')
                            game:GetService("ReplicatedStorage").Lootbox.Remotes.Collect:FireServer(id, item)
                        else
                            if not tpPart then 
                                print('gettign new tp part')
                                for i,v in next, closestbounty:GetDescendants() do 
                                    for i,v in next, closestbounty:GetDescendants() do 
                                        if v:IsA('BasePart') then 
                                            tpPart = v 
                                        elseif v:IsA('MeshPart') then 
                                            tpPart = v 
                                        elseif v:IsA('Part') then 
                                            tpPart = v;
                                        end;
                                    end;
                                end;
                            end
                        end
                    end;
                    task.spawn(function()
                        --print(closestbounty.PrimaryPart)
                        for i,v in next, closestbounty:GetDescendants() do 
                            print(v:GetFullName())
                        end;
                        local itemsTho = {}
                        local ID = nil
                        for i,v in next, closestbounty.Items:GetChildren() do -- .Model.Items
                            claimLootbox(v.Name, closestbounty)
                            table.insert(itemsTho,v.Name)
                            ID = closestbounty:GetAttribute('ID')
                        end
                        local ticky = 0
                        task.spawn(function()
                            repeat 
                                task.wait()
                                ticky += 0.1
                                if ID and checkdist(10, tpPart) then 
                                    print('grabbing with id '..ID)
                                    for i,v in next, itemsTho do 
                                        print('getting '..v)
                                        game:GetService("ReplicatedStorage").Lootbox.Remotes.Collect:FireServer(ID, v)
                                    end
                                else
                                    ID = closestbounty:GetAttribute('ID')
                                end
                            until ticky > 5
                        end)
                        repeat 
                            task.wait()
                            if closestbounty and closestbounty:FindFirstChild('Items') then 
                                for i,v in next, closestbounty.Items:GetChildren() do -- .Model.Items
                                    claimLootbox(v.Name, closestbounty)
                                end
                                for i,v in next, closestbounty:GetDescendants() do 
                                    --print(v:GetFullName())
                                    if v:IsA('ClickDetector') then 
                                        fireclickdetector(v)
                                    end;
                                end;
                                for i,v in next, closestbounty.Items:GetChildren() do -- .Model.Items
                                    claimLootbox(v.Name, closestbounty)
                                    table.insert(itemsTho,v.Name)
                                    ID = closestbounty:GetAttribute('ID')
                                end
                            end
                        until not closestbounty or not tpPart or tpPart.Transparency == 1 or not  closestbounty:FindFirstChild('Items'); --not closestbounty or not closestbounty and closestbounty:FindFirstChild('Items')  or not  closestbounty:FindFirstChild('Items')
                        if typesoulsettings.serverhopafterlootbox  then 
                            local gameIDS = {}
                            gameIDS[14069122388] = "Hueco Mundo"
                            gameIDS[14069678431] = "Karakura Town"
                            gameIDS[14069956183] = "Rukon District"
                            gameIDS[14070029709] = "Soul Society"
                            gameIDS[14069866342] = "Las Noches"
                            gameIDS[14071822972] = "Wandenreich City"
                            local GameName = ''
                            for i,v in next, gameIDS do 
                                if i == game.PlaceId then 
                                    --print('found game id')
                                    GameName = v
                                end;
                            end;
                            local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
                            if not GetTable then 
                                repeat 
                                    if GetTable == nil then 
                                        GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer(GameName)
                                    end
                                    task.wait()
                                until GetTable
                                print('waited get cooldown')
                            end
                            local foundTP = nil;
                            for i,jobIdTable in next, GetTable do 
                                local shouldbreak = false
                                if jobIdTable['JobID'] ~= game.JobId then -- check if not max 
                                    game.TeleportService:TeleportToPlaceInstance(game.PlaceId,jobIdTable['JobID'])
                                    --game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer(GameName,jobIdTable['JobID'])
                                end
                            end
                        end
                    end)
                    if typesoulsettings.lootnonblatant == false then 
                        --rootPart.Anchored = true;
                        --local tppart = closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:IsA('Model') and closestbounty:FindFirstChildOfClass('BasePart')
                        if tpPart then 
                            typesoulsettings.functions.teleport(tpPart,150) --(closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:FindFirstChildOfClass('BasePart'), 150)
                            task.spawn(function()
                                repeat 
                                    task.wait()
                                    if closestbounty then 
                                        if checkdist(30, tpPart) then 
                                            game.Players.LocalPlayer.Character.PrimaryPart.CFrame = tpPart.CFrame
                                        else
                                            typesoulsettings.functions.teleport(tpPart,150) --(closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:FindFirstChildOfClass('BasePart'), 150)
                                        end
                                    end
                                until not closestbounty or not tpPart or tpPart.Transparency == 1 or not  closestbounty:FindFirstChild('Items')
                                --rootPart.Anchored = false;
                            end)
                        end
                    elseif typesoulsettings.goundermapforlootbox == true then 
                        local CframeBelow = tpPart.CFrame * CFrame.new(0,-15,0)
                        if tpPart then 
                            task.spawn(function()
                                repeat 
                                    task.wait()
                                    game.Players.LocalPlayer.Character.PrimaryPart.CFrame = CframeBelow ;--tpPart.CFrame
                                    claimLootbox(v.Name, closestbounty)
                                until not closestbounty:FindFirstChild('Items')
                            end)
                        end
                    end
                end
            end);
        end
        maid.autolootbox = workspace.Lootboxes.ChildAdded:Connect(function(child)
            task.wait(0.5)
            takeLootbox(child)
        end);
        for i,v in next, workspace.Lootboxes:GetChildren() do 
            takeLootbox(v)
        end
    end)
    lefttab:AddButton("Teleport To Lootbox", function() -- Bounty
        if not azfake:returndata().humanoidrootpart then return end
        local rootPart = azfake:returndata().humanoidrootpart
        signals.conceal(function()
            local closestbounty = nil;
            local closestdist = nil; -- (v:IsA('Model') and v.PrimaryPart and v.PrimaryPart.Position or v:FindFirstChildOfClass('BasePart').Position)
            for i,v in next, workspace.Lootboxes:GetChildren() do 
                local dist = (v.WorldPivot.Position - rootPart.Position).Magnitude
                if closestbounty == nil then 
                    closestbounty = v
                    closestdist = dist
                else
                    if closestdist > dist then 
                        closestbounty = v
                        closestdist = dist
                    end
                end
            end;
            if closestbounty then 
                local tppart = closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:IsA('Model') and closestbounty:FindFirstChildOfClass('BasePart')
                typesoulsettings.functions.teleport(closestbounty:IsA('Model') and closestbounty.PrimaryPart or closestbounty:FindFirstChildOfClass('BasePart'))
            end
        end);
    end)

    lefttab:AddSeperator('-')
    lefttab:AddToggle('Auto Flashstep', false, function(e)
        typesoulsettings.autoflashstep = e;
        if not e then 
            maid.autoflashstep = nil;
            return;
        end;
        maid.autoflashstep = signals.heartbeat:connect("omega flashy", function()
            typesoulsettings.functions.flashstep()
        end)
    end)
    lefttab:AddSeperator('Streamer Mode Settings')
    lefttab:AddToggle('Child Gamer Mode', false, function(e)
        typesoulsettings.childgamermode = e;
    end)
    lefttab:AddToggle('Random Text', false, function(e)
        typesoulsettings.randomtext = e;
    end)
    local holdUsernames = {}
    lefttab:AddToggle('Streamer Mode', false, function(e)
        typesoulsettings.streamermode = e;
        if not e then 
            maid.streamermode = nil
            for i,v in next, holdUsernames do 
                for _, child in next, game:GetService("Players").LocalPlayer.PlayerGui.Leaderboard.PlayerList.PlayerListFrame:GetChildren() do 
                    -- for index, child in next, v:GetChildren() do 
                    --     if child.Name == i then 
                    --         print('renaming ',i)
                    --         child.PlayerName.Text = v:split('-')[1]
                    --         child.PlayerTitle.Text = v:split('-')[2]
                    --     end
                    -- end;
                    if child.Name == i then 
                        print('renaming ',i)
                        child.PlayerName.Text = v:split('-')[1]
                        child.PlayerTitle.Text = v:split('-')[2]
                    end
                end; 
            end;
            holdUsernames = {}
            return
        end; 
        local random = Random.new()
        local letters = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}
        function getRandomLetter()
            return letters[random:NextInteger(1,#letters)]
        end
        function getRandomString(length, includeCapitals)
            local length = length or 10
            local str = ''
            for i=1,length do
                local randomLetter = getRandomLetter()
                if includeCapitals and random:NextNumber() > .5 then
                    randomLetter = string.upper(randomLetter)
                end
                str = str .. randomLetter
            end
            return str
        end
        maid.streamermode = signals.heartbeat:connect("black", function()
            pcall(function()
                local path = game:GetService("Players").LocalPlayer.PlayerGui.Settings.Frame
                -- getRandomString(math.random(1,10,true))
                path.PlayerName.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or 'POWERED BY AZFAKE'
                --path.PlayerName.Text = 'PROTECTED BY AZFAKE'
                local defaultRegion = 'OHIO, NIGGERLAND' -- defaultregion:split(' ',2)
                if typesoulsettings.childgamermode then defaultRegion = 'OHIO, WONDERLAND' end;
                path.Region.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or defaultRegion --'OHIO, NIGGERLAND'
                path.CurrentServer.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or 'AZFAKES SERVER'
                path.CharacterName.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or 'PROTECTED BY AZFAKE'
                path.ServerTime.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or 'TIME TO SHINE'
                path.Version.Text = typesoulsettings.randomtext == true and getRandomString(math.random(1,10),true) or 'V3'

                for i, child in next, game:GetService("Players").LocalPlayer.PlayerGui.Leaderboard.PlayerList.PlayerListFrame:GetChildren() do 
                    -- for index, child in next, v:GetChildren() do 
                    --     if child:FindFirstChild('PlayerName') then 
                    --         if not holdUsernames[child.Name] then 
                    --             holdUsernames[child.Name] = child:FindFirstChild('PlayerName').Text..'-'..child:FindFirstChild('PlayerTitle').Text 
                    --         end;
                    --         -- AZFAKE NIGGER #1
                    --         local function getsummary(vv)
                    --             local text = 'AZFAKE NIGGER #'..tostring(i)
                    --             if typesoulsettings.randomtext == true then 
                    --                 text = getRandomString(math.random(1,10),true);
                    --             end;
                    --             if typesoulsettings.childgamermode then 
                    --                 text = 'AZFAKE CHILD #'..tostring(i)
                    --             end
                    --             if vv == 'title' then text = '' end;
                    --             return text
                    --         end;    
                    --         child:FindFirstChild('PlayerName').Text = getsummary()
                    --         child:FindFirstChild('PlayerTitle').Text = ''
                    --     end;
                    if child:FindFirstChild('PlayerName') then 
                        if not holdUsernames[child.Name] then 
                            holdUsernames[child.Name] = child:FindFirstChild('PlayerName').Text..'-'..child:FindFirstChild('PlayerTitle').Text 
                            print('hold')
                        end;
                        -- AZFAKE NIGGER #1
                        local function getsummary(vv)
                            local text = 'AZFAKE NIGGER #'..tostring(i)
                            if typesoulsettings.randomtext == true then 
                                text = getRandomString(math.random(1,10),true);
                            end;
                            if typesoulsettings.childgamermode then 
                                text = 'AZFAKE CHILD #'..tostring(i)
                            end
                            if vv == 'title' then text = '' end;
                            return text
                        end;    
                        child:FindFirstChild('PlayerName').Text = getsummary()
                        child:FindFirstChild('PlayerTitle').Text = ''
                    end;
                end;
            end)
        end);
    end)
    -- rightsect:AddToggle('Use 1', false, function(e)
    --     typesoulsettings.use1 = e;
    -- end)
    -- rightsect:AddToggle('Use 2', false, function(e)
    --     typesoulsettings.use2 = e;
    -- end)
    -- rightsect:AddToggle('Use 3', false, function(e) -- srightsectector
    --     typesoulsettings.use3 = e;
    -- end)
    --
    newother:AddToggle('Auto Sprint',false,function(e)
        typesoulsettings.autosprint = e;
        if e == false then 
            maid.autosprint = nil;
            maid.autosprint2 = nil;
            return
        end;
        local sprintkeys = {'w','a','s','d'}
        local holdingkeys = {};
        maid.autosprint = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
            if table.find(sprintkeys,k:lower()) and azfake:returndata().character then 
                -- table.insert(holdingkeys, true)
                pcall(function()
                    if #holdingkeys == 0 then 
                        azfake:returndata().character.CharacterHandler.Remotes.Sprint:FireServer('Pressed')
                    end
                end)
                table.insert(holdingkeys, k:lower())
            end;
        end)
        maid.autosprint2 = game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(k)
            if table.find(sprintkeys,k:lower()) and azfake:returndata().character then 
               -- print(#holdingkeys,'let go of '..k:lower())
                if #holdingkeys > 0 then table.remove(holdingkeys,1) end;
               -- print(#holdingkeys,'2let go of '..k:lower())
                if #holdingkeys == 0 then 
                    pcall(function()
                        print('had to release')
                        azfake:returndata().character.CharacterHandler.Remotes.Sprint:FireServer('Released')
                    end)
                end
            end;
        end)
    end)
    newother:AddToggle('M1 Hold',false,function(e)
        typesoulsettings.m1hold = e;
    end)
    if vs == 'debug' then 
        newother:AddToggle('Anti AA Gun',false,function(e)
            typesoulsettings.antiaagun = e;
            if not e then 
                maid.antiaagun = nil;
                return
            end;
            maid.antiaagun = signals.gamestepped:connect('no anims', function()--game.RunService:Connect(function())
                if not  azfake:returndata().character then return end;
                if not  azfake:returndata().humanoid then return end;
                local haswalk = false
                for i,v in next, azfake:returndata().character.Humanoid:FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks() do 
                    if v.Animation.AnimationId  == 'rbxassetid://16930848691' then 
                        haswalk = true; -- trye
                    end
                end
                if haswalk == false then 
                    local animholder = Instance.new('Animation');
                    animholder.AnimationId = 'rbxassetid://14079307927'; --'rbxassetid://16930848691' --'rbxassetid://'..animid
                    local anim = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(animholder) anim:Play()
                    animholder:Destroy()
                end
                local function createPlatform()
                    local part = Instance.new('Part'); part.Size = Vector3.new(15,1,15);part.Transparency = 0.5
                    part.Parent = workspace; part.Name = 'myplatform';part.Anchored = true
                end
                
                local function setPlatform(cfr)
                    if workspace:FindFirstChild('myplatform') then 
                        workspace:FindFirstChild('myplatform').CFrame = cfr.CFrame * CFrame.new(0,-3,0)
                    else
                        createPlatform()
                        workspace:WaitForChild('myplatform').CFrame = cfr.CFrame * CFrame.new(0,-3,0)
                    end
                end
                setPlatform(azfake:returndata().humanoidrootpart)
            end)
        end)
        newother:AddToggle('Break Mob Ais',false,function(e)
            typesoulsettings.breakais = e;
            if not e then 
                maid.mobaibreak1 = nil; -- mobaibrwak
                maid.mobaibreak2 = nil;
                return
            end;
            oldHRPVelo = azfake:returndata().humanoidrootpart.Velocity;
            maid.mobaibreak1 = signals.heartbeat:connect('no anims', function()--game.RunService:Connect(function())
                if not  azfake:returndata().character then return end;
                if not  azfake:returndata().humanoid then return end;
                if not azfake:returndata().humanoidrootpart then return end;
                local rootPart = azfake:returndata().humanoidrootpart
                rootPart.Velocity = (rootPart.CFrame.LookVector.Unit * 20) + Vector3.new(0,-1000,0);
            end)
            maid.mobaibreak2 = signals.gamestepped:connect('no anims', function()--game.RunService:Connect(function())
                if not  azfake:returndata().character then return end;
                if not  azfake:returndata().humanoid then return end;
                if not azfake:returndata().humanoidrootpart then return end;
                azfake:returndata().humanoidrootpart.Velocity = oldHRPVelo;
            end)
        end)
    end
 
    newother:AddToggle('Flashstep Speed Changer',false,function(e)
        typesoulsettings.speecchanger = e;
        if not e then 
            maid.speedchange = nil;
            return
        end;
        maid.speedchange = signals.gamestepped:connect('no anims', function()--game.RunService:Connect(function())
            if not  azfake:returndata().character then return end;
            if not  azfake:returndata().humanoid then return end;
            if azfake:returndata().character:FindFirstChild('Head') then 
                if azfake:returndata().character.Head.Transparency == 1 then 
                    if azfake:returndata().character['Left Leg'].Transparency == 1 and azfake:returndata().character['Right Leg'].Transparency == 1 then 
                        -- @flashstep
                        azfake:returndata().humanoid.WalkSpeed = typesoulsettings.flashstepspeed
                    end
                end
            end
        end)
    end)
    --[[
        thise game checks if my parry key is in the parry box window like 0.3 - 0.5
        other game checks if im in the distance / box to parry it
    ]]
    newother:AddSlider("Flashstep Speed", 0, 55, 500, 1, function(State)
        typesoulsettings['flashstepspeed'] = State
    end)
    print(LRM_UserNote,LRM_LinkedDiscordID,LRM_TotalExecutions,LRM_SecondsLeft )
    newother:AddSeperator('-')
    local KisukeTime = 0
    local EnemyTime = 0;
    game.Players.LocalPlayer.PlayerGui:WaitForChild('ScreenEffects').ChildAdded:Connect(function(child)
        task.wait(.2)
        if typesoulsettings.autokisuke and child.Name == 'ItemFrame' then 
            signals.conceal(function()
                pcall(function()
                    task.wait(0.25)
                    local newItem = localPlayer.waitforchildwhichisa(child, 'TextLabel').Text
                    print('@item set',newItem)
                    repeat 
                        typesoulsettings.getentityfolder().CharacterHandler.Remotes.EquipSkill:FireServer('Equals', newItem)
                        task.wait(0.2)
                    until 1 == 2
                    --localPlayer.character.CharacterHandler.Remotes.EquipSkill:FireServer("Equals", child:FindFirstChildWhichIsA('TextLabel').Text)
                end)  
            end)
        end -- game.Players.LocalPlayer.Character.CharacterHandler.Remotes.EquipSkill:FireServer("Equals", 'Hogyoku Fragment')
        if child.Name == 'ItemFrame' and typesoulsettings.autokisuke and typesoulsettings.sendtowebhook then
            -- pcall(function()
            --     localPlayer.character.CharacterHandler.Remotes.EquipSkill:FireServer("Equals", child:FindFirstChildWhichIsA('TextLabel').Text)
            -- end)
            local KisukeData = {
                ['content'] = '';
                ['embeds'] = {{
                    ['title'] = 'AZFAKE WEBHOOK';
                    ['description'] = 'powered by azfake';
                    ['type'] = 'rich';
                    ['color'] = tonumber(0xffffff);
                    ['fields'] = {
                        {
                            ['name'] = 'Date';
                            ['value'] = os.date();
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Item Received';
                            ['value'] = child:FindFirstChildWhichIsA('TextLabel').Text;
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Time Elasped';
                            ['value'] = tostring(KisukeTime);
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Time After Enemy Spawned';
                            ['value'] = tostring(EnemyTime);
                            ['inline'] = true;
                        };
                        -- { -- amount of skillboxes
                        --     ['name'] = 'Current Gyakusatsu Sacs';
                        --     ['value'] = game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value;
                        --     ['inline'] = true;
                        -- };
                    }
                }}
            }
            request(
                {
                    Url = typesoulsettings.sendurl,
                    Method = 'POST',
                    Headers = {
                        ['Content-Type'] = 'application/json'
                    }, -- AZFAKE WEBHOOK
                    Body = game:GetService('HttpService'):JSONEncode(KisukeData) -- {data.title; content = data.content} CDOE
                }
            );
            if typesoulsettings.publicwebhook == true then 
                request(
                    {
                        Url = 'https://discord.com/api/webhooks/1232362857010827264/mUDiigqcsTsH6YNIG0U_IJB3L3wpIXfnRZDzPIVBQ__zV3B8X6MnYslUmCaxNl3gdUd2',
                        Method = 'POST',
                        Headers = {
                            ['Content-Type'] = 'application/json'
                        }, -- AZFAKE WEBHOOK
                        Body = game:GetService('HttpService'):JSONEncode(KisukeData) -- {data.title; content = data.content} CDOE
                    }
                );
            end
        elseif child.Name == 'ItemFrame' and typesoulsettings.autokisuke and typesoulsettings.publicwebhook then
            local KisukeData = {
                ['content'] = '';
                ['embeds'] = {{
                    ['title'] = 'AZFAKE WEBHOOK';
                    ['description'] = 'powered by azfake';
                    ['type'] = 'rich';
                    ['color'] = tonumber(0xffffff);
                    ['fields'] = {
                        {
                            ['name'] = 'Date';
                            ['value'] = os.date();
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Item Received';
                            ['value'] = child:FindFirstChildWhichIsA('TextLabel').Text;
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Time Elasped';
                            ['value'] = tostring(KisukeTime);
                            ['inline'] = true;
                        };
                        {
                            ['name'] = 'Time After Enemy Spawned';
                            ['value'] = tostring(EnemyTime);
                            ['inline'] = true;
                        };
                        -- { -- amount of skillboxes
                        --     ['name'] = 'Current Gyakusatsu Sacs';
                        --     ['value'] = game:GetService("Players").LocalPlayer.PlayerFolder.Inventory.GyaSacs.Value;
                        --     ['inline'] = true;
                        -- };
                    }
                }}
            }
            request(
                {
                    Url = 'https://discord.com/api/webhooks/1232362857010827264/mUDiigqcsTsH6YNIG0U_IJB3L3wpIXfnRZDzPIVBQ__zV3B8X6MnYslUmCaxNl3gdUd2',
                    Method = 'POST',
                    Headers = {
                        ['Content-Type'] = 'application/json'
                    }, -- AZFAKE WEBHOOK
                    Body = game:GetService('HttpService'):JSONEncode(KisukeData) -- {data.title; content = data.content} CDOE
                }
            );
        end
    end)
    local wasinsta = newother:AddToggle('Insta Kill Mobs',false,function(e, wasclicked)
        -- if wasclicked then 
        --     if typesoulsettings.instakill == false then 
        --         library:CheckForPermission('This might only work on bosses. Still use?')
        --     else
        --         -- @clicked when it was true; destined to set to false.
        --     end
        -- else
        --     wasinsta:Set(false)
        --     return
        -- end
        typesoulsettings.instakill = e;
        if not e then 
            maid.instakillctn = nil;
            return
        end;
        sethiddenproperty(game.Players.LocalPlayer, "MaxSimulationRadius", math.huge) -- Playuers
        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
        -- local newrem = Instance.new('RemoteEvent', game.Players.LocalPlayer); newrem.Name = 'Kisuke';
        -- newrem:FireServer('Yes')
        maid.instakillctn = signals.gamestepped:connect('insta kill', function()--game.RunService:Connect(function())
            if not  azfake:returndata().character then return end;
            for i,v in next, workspace.Entities:GetChildren() do 
                if not game.Players:GetPlayerFromCharacter(v) then 
                    -- if v.PrimaryPart and v.PrimaryPart.ReceiveAge == 0 then
                    --     local cf = v.PrimaryPart.CFrame
                    --     v.PrimaryPart.Velocity = Vector3.new(14.465, 14.465, 14.465)
                    --    -- v.HumanoidRootPart.CFrame = CFrame.new(cf.X, -7000, cf.Z)
                    --     if sethiddenproperty then
                    --         sethiddenproperty(v.HumanoidRootPart, "NetworkIsSleeping", false)
                    --     end
                    -- end
                    local isPrimaryPartOwner = false;
                    for indexpart, part in next, v:GetChildren() do 
                        if part:IsA('BasePart') and signals.findinstring(part.Name, 'Leg', 'Arm', 'Head', 'RootPart') then -- isnetworkowner
                            isPrimaryPartOwner = true;
                            if isnetworkowner(part) then 
                                for i,v in next, part:GetChildren() do 
                                    if v:IsA('Motor6D') or v:IsA('Weld') then v:Destroy() end;
                                end
                            end
                        end
                    end;
                    if (isPrimaryPartOwner == true or v.PrimaryPart and isnetworkowner(v.PrimaryPart) or v:FindFirstChild('HumanoidRootPart') and isnetworkowner(v.HumanoidRootPart)) and v:FindFirstChildWhichIsA('Humanoid') then 
                        print('network owner')
                        v:FindFirstChildWhichIsA('Humanoid').Health = 0
                        if v:FindFirstChild('Head') then 
                            v:FindFirstChild('Head'):Destroy()
                        end
                        pcall(function()
                            v:BreakJoints()
                        end)
                    end;
                end
            end
        end)
    end)
    wasinsta.info = {shouldcheck =  true, ask = 'This may only work on bosses.'} -- shouldask  This might not work. Still use?

    local butokw = newother:AddButton('Method 2 Instant Ownership', function()
        local res = library:CheckForPermission(`Are you sure you want attempt to insta kill? This kills you.`)
        if res == false then return end;
        if localPlayer.character:FindFirstChild('Head') then 
            localPlayer.character:FindFirstChild('Head'):Destroy()
        end;    
    end)
    newother:CreateHintOnItem(butokw,'This tries to kill you to gain ownership.')
    newother:AddTextbox('Kisuke Webhook',nil,function(e)
        typesoulsettings.sendurl = e;
    end)
    local webhooksend = newother:AddToggle('Send to Webhook',false,function(e, wasclicked)
        typesoulsettings.sendtowebhook = e;
    end)
    newother:AddToggle('Send to Public Webhook',false,function(e, wasclicked)
        typesoulsettings.publicwebhook = e; -- need to make security on this
    end)
    newother:AddSlider("Time To Wait", 0, 30, 120, 1, function(State)
        typesoulsettings['timetowait'] = State
    end)
    newother:AddToggle('Wait Time Before Killing',false,function(e, wasclicked)
        typesoulsettings.kisukedelay = e;
    end)
    newother:AddToggle('TP To NPC before Boss',true,function(e, wasclicked)
        typesoulsettings.teleportKisukeBeforeUse = e;
    end)
    
    local autokisuke = newother:AddToggle('Auto Kisuke',false,function(e, wasclicked)
        typesoulsettings.autokisuke = e;
        if not e then 
            maid.autokisukectn = nil;
            return
        end;
        -- local newrem = Instance.new('RemoteEvent', game.Players.LocalPlayer); newrem.Name = 'Kisuke';
        -- newrem:FireServer('Yes')
        local playedIt = false;
        local hasAttemptedToTeleport = false;
        local canUseKisuke = 0;
        maid.autokisukectn = signals.heartbeat:connect('kisuke tp', function()--game.RunService:Connect(function())
            local basicworld = {14069678431, 17047374266}
            local raidWorld = 17047374266
            if not table.find(basicworld,game.PlaceId) then 
                local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Karakura Town")
                if not GetTable then return end;
                local foundTP = nil;
                for i,jobIdTable in next, GetTable do 
                    local shouldbreak = false
                    if jobIdTable['JobID'] ~= game.JobId and not jobIdTable['Raid'] then 
                        task.wait(1)
                        pcall(function()
                            game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town",jobIdTable['JobID'])
                        end)
                    end
                end
                --game.TeleportService:Teleport(14069678431)
            else
                if game.PlaceId == raidWorld then 
                    if playedIt == false then 
                        playedIt = true;
                        local willTP = false;
                        local saveEnemy = nil;

                        task.spawn(function()
                            while task.wait(1) do 
                                KisukeTime += 1
                                if saveEnemy then 
                                    EnemyTime += 1
                                end;
                                if typesoulsettings.kisukedelay == true and typesoulsettings. KisukeTime < typesoulsettings.timetowait and saveEnemy ~= nil then 
                                    typesoulsettings.instakill = false;
                                    localPlayer.rootPart.CFrame = saveEnemy.PrimaryPart.CFrame * CFrame.new(50,0,50)
                                else
                                    if KisukeTime >= typesoulsettings.timetowait and typesoulsettings.kisukedelay == true then 
                                        willTP = true;
                                        typesoulsettings.instakill = true;
                                    elseif typesoulsettings.kisukedelay == false then 
                                        willTP = true;
                                        typesoulsettings.instakill = true;
                                    end
                                end;
                            end
                        end)

                        task.spawn(function()
                            repeat task.wait()
                            until azfake:returndata().humanoid
                            azfake:returndata().humanoid.Died:Connect(function()
                                local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Karakura Town")
                                if not GetTable then return end;
                                local foundTP = nil;
                                for i,jobIdTable in next, GetTable do 
                                    local shouldbreak = false
                                    if jobIdTable['JobID'] ~= game.JobId then 
                                        task.wait(1)
                                        pcall(function()
                                            game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town",jobIdTable['JobID'])
                                        end)
                                    end
                                end
                            end)   
                        end)

                        
                        local enemy = nil
                        local usestop = false
                        repeat task.wait() until #workspace:WaitForChild('Entities'):GetChildren() >= 2
                        task.wait(0.1)
                        for i,v in next, workspace:WaitForChild('Entities'):GetChildren() do 
                            if not game.Players:GetPlayerFromCharacter(v) and v.PrimaryPart then 
                                enemy = v;
                                saveEnemy = v;
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame
                                task.delay(4,function()
                                    usestop = false
                                end)
                                task.spawn(function()
                                    repeat 
                                        if willTP == true then 
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame
                                        end
                                        task.wait()
                                    until usestop == true
                                end)
                                local inputManager = game.VirtualInputManager
                                inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                                task.wait(.1)
                                inputManager:SendKeyEvent(false,Enum.KeyCode.W,false,game)
                            end
                        end
                        local diddie = false;
                        task.spawn(function()
                            repeat 
                                task.wait(7)
                                pcall(function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = enemy.PrimaryPart.CFrame * CFrame.new(0,5,0) --)
                                end)
                            until diddie == true
                        end)
                        enemy.Humanoid.Died:Connect(function()
                            diddie = true;
                            azfakenotify('wow killed boss', 'untilClick')
                            task.delay(0.5,function()
                                task.spawn(function()
                                    repeat
                                        task.wait(.5)
                                        local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Karakura Town")
                                        if not GetTable then return end;
                                        local foundTP = nil; -- GameVersion
                                        for i,jobIdTable in next, GetTable do 
                                            local shouldbreak = false
                                            if jobIdTable['JobID'] ~= game.JobId and not jobIdTable['Raid'] and tonumber(jobIdTable['ServerPlayers']) < 15 then 
                                                game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town",jobIdTable['JobID'])
                                            end
                                        end
                                    until 1 == 2
                                end)
                            end)
                        end)
                    end
                else
                    --
                    task.delay(10,function() -- could make toReach and have a counter and up toreach
                        local GetTable = game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Karakura Town")
                        if not GetTable then return end;
                        local foundTP = nil;
                        local ind = 0
                        for i,jobIdTable in next, GetTable do 
                            local shouldbreak = false
                            ind += 1
                            if jobIdTable['JobID'] ~= game.JobId and not jobIdTable['Raid'] and ind > 10 and jobIdTable['ServerPlayers'] < 15 then 
                                game.Players.LocalPlayer.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town",jobIdTable['JobID'])
                            end
                        end
                    end)
                    if canUseKisuke == 0 then 
                        canUseKisuke = true;
                        print('[newly swet kisuke]')
                    end
                    local didTeleportHighlight = localPlayer.character:FindFirstChildWhichIsA('Highlight')
                    if not didTeleportHighlight and typesoulsettings.teleportKisukeBeforeUse and not workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart') then 
                        local didKillself = true;
                        if hasAttemptedToTeleport == false then 
                            hasAttemptedToTeleport = true
                            --
                            if localPlayer.character:FindFirstChild('Head') then 
                                if not localPlayer.character:FindFirstChildWhichIsA('Highlight') and hasAttemptedToTeleport ~= 0 then  -- HeWad
                                    if not checkdist(10, workspace.NPCs.RaidBoss.Kisuke.WorldPivot) then -- workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart')
                                        localPlayer.humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                                        game.Players.LocalPlayer.Character.Head:Destroy()
                                        didKillself = true;
                                    else
                                        didKillself = 'dialogue'
                                    end
                                else
                                    didKillself = false;
                                end
                            end
                            canUseKisuke = (didKillself == true and false or didKillself == 'dialogue' and 1 or  nil); --false; 
                        end
                    end;  
                    if not didTeleportHighlight and canUseKisuke == true and workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart') then 
                        if not checkdist(10, workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart')) then 
                            canUseKisuke = false;
                            if localPlayer.character:FindFirstChild('Head') then 
                                if not localPlayer.character:FindFirstChildWhichIsA('Highlight') then
                                    localPlayer.humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                                    game.Players.LocalPlayer.Character.Head:Destroy()
                                else
                                    canUseKisuke = nil;
                                end
                            end
                        end
                    end;    
                    --
                    if not didTeleportHighlight and canUseKisuke == false then 
                        local newAdd; newAdd = workspace.Entities.ChildAdded:Connect(function(b)
                            if b.Name == game.Players.LocalPlayer.Name then 
                                -- task.delay(0.7,function()
                                --     canUseKisuke = true;
                                -- end)
                                repeat 
                                    task.wait()
                                    b.PrimaryPart.CFrame = workspace.NPCs.RaidBoss.Kisuke.WorldPivot
                                until not b or workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart')
                                if workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart') then 
                                    canUseKisuke = true;
                                    hasAttemptedToTeleport = false;
                                end
                            end
                        end)
                    end
                    if localPlayer.character:FindFirstChildWhichIsA('Highlight') then 
                        if not checkdist(15, workspace.NPCs.RaidBoss.Kisuke.WorldPivot) and hasAttemptedToTeleport == false then 
                            hasAttemptedToTeleport = 0;
                            localPlayer.rootPart.CFrame = workspace.NPCs.RaidBoss.Kisuke.WorldPivot
                            localPlayer.character:FindFirstChildWhichIsA('Highlight'):Destroy();
                        end
                        task.wait(.5)
                        canUseKisuke = true; -- -=
                    end
                    -- if canUseKisuke == nil and localPlayer.character:FindFirstChildWhichIsA('Highlight') then 
                    --     -- if hasAttemptedToTeleport == false then 
                    --     --     hasAttemptedToTeleport = true;
                    --     -- end
                    --     local wasTicked = tick();
                    --     -- repeat 
                    --     --     if not checkdist(10, workspace.NPCs.RaidBoss.Kisuke:FindFirstChild('HumanoidRootPart')) then 
                    --     --         localPlayer.rootPart.CFrame = workspace.NPCs.RaidBoss.Kisuke.WorldPivot
                    --     --     end
                    --     --     task.wait()
                    --     -- until tick() - wasTicked > 1.5
                    --     localPlayer.rootPart.CFrame = workspace.NPCs.RaidBoss.Kisuke.WorldPivot
                    --     task.wait(1)
                    --     canUseKisuke = true;
                    -- end
                    if canUseKisuke == 'dialogue' then 
                        canUseKisuke = true;
                    end;
                    if not checkdist(15, workspace.NPCs.RaidBoss.Kisuke.WorldPivot) and hasAttemptedToTeleport == false then 
                        task.wait(1)
                        hasAttemptedToTeleport = false;
                        canUseKisuke = false;
                    end
                    repeat task.wait(.5) until canUseKisuke == true;
                    local kisuke = workspace:WaitForChild('NPCs'):WaitForChild('RaidBoss'):WaitForChild('Kisuke');
                    local hasKisukeAdded;
                    game.Players.LocalPlayer.ChildAdded:Connect(function(child)
                        if child.Name == 'Kisuke' then 
                            hasKisukeAdded = child;
                        end
                    end);
                    task.spawn(function()
                        repeat  
                            task.wait(2)
                            fireclickdetector(kisuke:WaitForChild('ClickDetector'))
                        until hasKisukeAdded
                        hasKisukeAdded:FireServer('Yes')
                    end)
                    -- hasKisukeAdded:workspace.NPCs.RaidBoss.Kisuke.ClickDetector
                end
            end
        end)
    end)
    wasinsta.info = {shouldcheck =  true, ask = 'This may only work on bosses.'} -- shouldask  This might not work. Still use?
    newother:AddSeperator('-')
    --
    if LRM_UserNote and string.find(LRM_UserNote, 'beta') or vs == 'debug' then 
        -- where the stuff was
        local inventory = getInventory();
        -- earlyaccess:AddSlider("Trade Slot (1-4)", 0, 30, 120, 1, function(State)
        --     typesoulsettings['tradeslot'] = State
        -- end)
        local tradeslots = earlyaccess:AddDropdown("Trade Slots", {'Slot 1', 'Slot 2', 'Slot 3', 'Slot 4'}, "", true, function(State) -- could change to quest
            local toState = State;
            if type(toState) == 'string' then toState = {State} end;
            typesoulsettings.slotselected = toState -- useskillselection 
        end)
        local inventorysafe = earlyaccess:AddDropdown("Inventory", inventory, "", true, function(State) -- could change to quest
            local toState = State;
            if type(toState) == 'string' then toState = {State} end;
            typesoulsettings.selecttradeitem = toState -- useskillselection 
        end) -- DONTSAVE AUTOLOADNOSAVEMENT  DONTSAVE
        earlyaccess:AddButton('Update Inventory', function()
            for i,v in next, inventorysafe.defaultitems do 
                inventorysafe:Remove(v);
            end
            for i,v in next, getInventory() do 
                inventorysafe:Add(v)
            end
            inventorysafe:Set('')
        end)
        inventorysafe.dontsave = true;
        earlyaccess:AddToggle('List One Item All Four',false,function(e, wasclicked)
            typesoulsettings.listoneitemonfour = e;
        end)
        -- earlyaccess:AddTextbox('Item To Spoof', nil, function(wasitem)
        --     table.insert(typesoulsettings.selecttradeitem, wasitem)
        --     azfakenotify(`Added {wasitem} to trade.`, 3)
        -- end);
        -- earlyaccess:AddButton('Clear Trade Spoof List', function()
        --     typesoulsettings.selecttradeitem = {};
        --     azfakenotify(`Cleared List.`, 3)
        -- end)
        earlyaccess:AddToggle('Auto BONG BONG',false,function(e, wasclicked)
            if not wasclicked then return end;
            local newtable = typesoulsettings.selecttradeitem;
            if #newtable >= 2 then table.remove(newtable,1) end;
            -- local formatted = table.concat(newtable,',')
            -- local res = library:CheckForPermission(`Are you sure you want to use bong bong on\n{newtable[1]}? Make sure you only have 1\nof the item.`)
            -- if res == false then return end;
            if #newtable == 0 then azfakenotify('no item sdelect', 3) return end;
            local toBong = newtable[1]

            typesoulsettings.autobongbong = e;
            if not e then 
                maid.bonging = nil;
                -- game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
                return;
            end
            local bongfarm = 'nothing'
            local bongdelay = false;
            local nelnpc = workspace:WaitForChild('NPCs'):WaitForChild('Nel'):WaitForChild('Nel')
            local bongnpc = workspace:WaitForChild('NPCs'):WaitForChild('Exechange'):WaitForChild('BONG BONG')
            local inputManager = game.VirtualInputManager
            local m = game.Players.LocalPlayer:GetMouse()
            local isTaken = false;
            game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)
                task.wait(.1)
                if child.Name == 'Storing' then 
                    child:WaitForChild('MainFrame').Size = UDim2.new(1,1,1,1)
                    child:WaitForChild('MainFrame').Position = UDim2.new(0.5,0,0.5,0)
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame').ZIndex = 1000
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame').Size = UDim2.new(2,2,2,2)
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List').Size = UDim2.new(0.5,0,0.5,0) --UDim2.new(2,2,2,2)
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List').ZIndex = 1000
                    --child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List'):FindFirstChild('UIListLayout'):Destroy(); --LiS
                    if child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List'):FindFirstChild('UIGridLayout') then 
                        child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List'):FindFirstChild('UIGridLayout'):Destroy()
                    end
                    -- {0, 500}, {0, 200} StoraegFrame
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame').Position = UDim2.new(0.5, 0, 0.5, 0)
                    child:WaitForChild('MainFrame'):WaitForChild('StorageFrame').List.Position = UDim2.new(0.5,0,0.5,0)
                    for i,v in next, child:WaitForChild('MainFrame'):WaitForChild('StorageFrame'):WaitForChild('List'):GetChildren() do 
                        if v:FindFirstChild('AddItem') then 
                            if v.AddItem.Text:find(toBong) then -- 
                                print('found')
                                v.Size = UDim2.new(1,1,1,1)
                                --v.AddItem.
                                --v.AddItem.Size = UDim2.new(4,4,4,4)
                                v.ZIndex = 999
                                --v.AddItem.ZIndex = 1000
                                task.wait(0.1)
                                local toPress = {
                                    X = workspace.CurrentCamera.ViewportSize.X/2;
                                    Y = workspace.CurrentCamera.ViewportSize.Y/2;
                                }
                                inputManager:SendMouseButtonEvent(toPress.X,toPress.Y,0,true,game,0) -- 1319,574
                                task.wait(0.1)
                                inputManager:SendMouseButtonEvent(toPress.X,toPress.Y,0,false,game,0)
                                isTaken = true;
                                for i=1, 10 do 
                                    task.wait(.1)
                                end
                                print('prssed')
                                --task.wait(1)
                                child:Destroy()
                                break
                            end
                        end
                    end
                    --child:WaitForChild('MainFrame').Size = UDim2.new(5,5,5,5)
                end
            end)
            local function instantTeleport(teleportNpc)
                -- if teleportNpc == nelnpc  then 
                --     r = workspace:WaitForChild('NPCs'):WaitForChild('Nel'):WaitForChild('Nel')
                --     local inputManager = game:GetService('VirtualInputManager')  
                --     t = tick()
                --     repeat
                --     if game.Players.LocalPlayer:FindFirstChild('Nel') then 
                --     game.Players.LocalPlayer:FindFirstChild('Nel'):FireServer('Yes')
                --     game:GetService("ReplicatedStorage").Remotes.PromptStorageUI:FireServer()
                --     else

                --     fireclickdetector(r.ClickDetector)
                --     end

                --     game.Players.LocalPlayer.Character.PrimaryPart.CFrame = r.WorldPivot

                --     task.wait()
                --     until tick() - t > 1
                --     --fireclickdetecotr
                --     return;
                -- end;
                -- if teleportNpc == nelnpc then 
                --     repeat 
                --         task.wait() 
                --         localPlayer.character.PrimaryPart.CFrame = teleportNpc.WorldPivot; -- chaa racter
                --         game:GetService("ReplicatedStorage").Remotes.PromptStorageUI:FireServer()
                --     until localPlayer.character.Humanoid.Health <= 0
                --     print('shouldve got')
                -- end
                localPlayer.character.Head:Destroy();
                local completed = false;
                local ctn; ctn = workspace.Entities.ChildAdded:Connect(function(xyzc)
                    task.wait(.1)
                    if xyzc.Name == localPlayer.instance.Name then 
                        local timeTakebnk = tick();
                        repeat
                            task.wait()
                            if xyzc.PrimaryPart then 
                                xyzc.PrimaryPart.CFrame = teleportNpc.WorldPivot;
                            end; -- ajnd
                        until tick() - timeTakebnk > 0.5 and teleportNpc:FindFirstChild('HumanoidRootPart')
                        completed = true;
                        ctn:Disconnect()
                    end;
                end)
                repeat task.wait() until completed == true;
            end;    
            localPlayer.instance.ChildAdded:Connect(function(remote)
                if bongfarm == 'teleportedtonel' then 
                    azfakenotify('on nel dialogue', 2)
                    bongfarm:FireServer('Yes')
                elseif bongfarm == 'teleportedtobong' and remote:IsA('RemoteEvent') then 
                    azfakenotify('on bong dialogue', 2)
                    remote:FireServer('Yes')       
                end
            end)
            maid.bonging = signals.heartbeat:connect('@bonging', function()
                if bongfarm == 'nothing' and bongdelay == false then 
                    bongdelay = true;
                    bongfarm = 'teleportingtonel'
                    -- get 1 of item;
                    azfakenotify('tp to nel',3)
                    instantTeleport(nelnpc)
                    
                    bongfarm = 'teleportedtonel';
                    game:GetService("ReplicatedStorage").Remotes.PromptStorageUI:FireServer()
                    if not localPlayer.instance.PlayerGui:FindFirstChild('Storage') then 
                        task.wait(1.5)
                        repeat 
                            task.wait(1.5)
                            if not localPlayer.instance.PlayerGui:FindFirstChild('Storage') then 
                                game:GetService("ReplicatedStorage").Remotes.PromptStorageUI:FireServer()
                            end
                        until localPlayer.instance.PlayerGui:FindFirstChild('Storage') or isTaken == true
                    end
                    bongfarm = 'teleportotbong';
                    --localPlayer('fire', nelnpc.ClickDetector); --fireclickdetector(nelnpc.ClickDetector);
                    task.wait(.2); 
                    azfakenotify('shouldve taken item!!!!!!!', 2)
                    bongfarm = 'teleportotbong';
                    bongdelay = false;
                elseif bongfarm == 'teleportotbong' and bongdelay == false then 
                    bongdelay = true;
                    bongfarm = 'willtptobong';
                    azfakenotify('tp to bong npc',3)
                    instantTeleport(bongnpc); -- bonnp
                    bongfarm = 'teleportedtobong';
                    localPlayer('fire', bongnpc.ClickDetector); --
                    task.wait(.2);
                    repeat task.wait() localPlayer('fire', bongnpc.ClickDetector); until localPlayer.instance.PlayerGui:FindFirstChild('EXECHANGE ITEM')
                    local exchangeGui = localPlayer.instance.PlayerGui:FindFirstChild('EXECHANGE ITEM');
                    local exchangeRemote = exchangeGui.RemoteEvent;
                    local fire_bvong = { }
                    for i=1, 10 do 
                        fire_bvong[i] = {
                            ["ID"] = game.HttpService:GenerateGUID(false),
                            ["ItemName"] = toBong,
                            ["Rarity"] = "Legendary"
                        }
                    end
                    localPlayer('fire', exchangeRemote, fire_bvong)
                    task.wait(.1)
                    azfakenotify('bongged', 2);
                    task.wait(.5);
                    bongfarm = 'nothing';
                    bongdelay = false;
                    isTaken = false;
                end;
            end);
        end)
        local bong = earlyaccess:AddButton('Bong Bong Item', function()
            local newtable = typesoulsettings.selecttradeitem;
            if #newtable >= 2 then table.remove(newtable,1) end;
            -- local formatted = table.concat(newtable,',')
            -- local res = library:CheckForPermission(`Are you sure you want to use bong bong on\n{newtable[1]}? Make sure you only have 1\nof the item.`)
            -- if res == false then return end;
            local ohTable1 = {

            }
            for i=1, 10 do 
                ohTable1[i] = {
                    ["ID"] = game.HttpService:GenerateGUID(false),
                    ["ItemName"] = newtable[1],
                    ["Rarity"] = "Legendary"
                }
            end
            local exnchanger = game:GetService("Players").LocalPlayer.PlayerGui["EXECHANGE ITEM"].RemoteEvent; --:FireServer(ohTable1)
            localPlayer('fire', exnchanger, ohTable1)
            azfakenotify('BONG BONGED '..newtable[1], 3)
        end);
        bong.info = {shouldcheck =  true, ask = 'Are you sure?'}
        local spof = earlyaccess:AddButton('Spoof Trade', function()
            local formatted = table.concat(typesoulsettings.selecttradeitem,',')
            local res = library:CheckForPermission(`Are you sure you want to Spoof {formatted}?`)
            if res == false then return end;
            local lengthofitem = typesoulsettings.selecttradeitem
            local lengthofslot = typesoulsettings.slotselected
            --print(lengthofslot,lengthofitem)
            for i,v in next, lengthofitem do 
                if string.len(tostring(v)) <= 2 then table.remove(lengthofitem,i) print('rem',v) end
            end
            for i,v in next, lengthofslot do 
                if string.len(tostring(v)) <= 2 then table.remove(lengthofslot,i)  print('rem',v) end -- lengthlengthofslotofitem
            end
            local amountAssigned = 0;
            local function getsameIndex(item) 
                local toAssign = nil;
                for i,v in next, lengthofslot do 
                   -- print(i,v)
                    if i == item then 
                        --print(i,v)
                        toAssign = v;
                        break
                    end;
                end;
                return toAssign
            end;
            --[[
                table preview
                itemselect = {'Hogyoku','Skill Box'}
                slotselect = {'Slot 3', 'Slot 4'}
                getsameindex returns what slot it should put it
                v is the item name
            ]]
            local entityfolder = typesoulsettings.functions.getentityfolder();
            local tradeEvent = entityfolder.CharacterHandler.Remotes.TradeEvent
            local justBreak = false;
            for i,v in next, lengthofitem do
                if justBreak == true then print(':justbreak') break end; 
                local objectReplacement = getsameIndex(i) 
                --print(objectReplacement)
                if objectReplacement and string.len(tostring(v)) > 2 then --string.find(objectr)
                    print(`{string.len(tostring(v))} Adding {v} To`,objectReplacement)
                    objectReplacement = string.gsub(objectReplacement,'Slot','')
                    objectReplacement = string.gsub(objectReplacement,' ','')
                    objectReplacement = tonumber(objectReplacement);
                    --print(objectReplacement)
                    -- gives us 1 2 3 or 4
                    localPlayer('fire', tradeEvent, 'AddItem', v, objectReplacement)
                    if #lengthofitem == 1 and typesoulsettings.listoneitemonfour == true then -- t yep  tep    t y e  p s o
                        justBreak = true; --rtru
                        for i=1,4 do 
                            if i ~= objectReplacement then 
                                localPlayer('fire', tradeEvent, 'AddItem', v, i)
                            end
                        end
                    end
                    --print('spooffed')
                    task.wait(.5)
                end;
                --:FireServer(ohString1, ohString2, ohNumber3)
            end;
        end);   -- {shouldcheck = true, ask = 'Are you sure you want to spoof?'}
        spof:AddKnowledge('Uses 1 of the item\nMake sure u have only 1')
        spof:ActivateKnowledge()
        --workspace.NPCs.RaidBoss.Kisuke.ClickDetector
    end
    newother:AddSlider("Animation Speed", 0, 1, 10, 100, function(State)
        typesoulsettings['animationspeed'] = State
    end)
    newother:AddToggle('Faster Animations',false,function(e)
        typesoulsettings.fasteranimations = e;
        if not e then 
            maid.fastanim = nil;
            maid.fastanim2 = nil;
            return
        end;
        maid.fastanim = signals.gamestepped:connect('no anims', function()--game.RunService:Connect(function())
            if not  azfake:returndata().character then return end;
            if not  azfake:returndata().humanoid then return end;
            if not maid.fastanim2 and typesoulsettings.fasteranimations == true then -- azfake:returndata().character and
                maid.fastanim2 = azfake:returndata().character.Humanoid.AnimationPlayed:Connect(function(anim)
                    anim:AdjustSpeed(typesoulsettings.animationspeed)
                end)
            end
        end)
    end)
    newother:AddToggle('No Animations',false,function(e)
        typesoulsettings.noanims = e;
        if not e then 
            maid.noanims = nil;
            maid.noanims2 = nil;
            return
        end;
        maid.noanims = signals.gamestepped:connect('no anims', function()--game.RunService:Connect(function())
            if not  azfake:returndata().character then return end;
            if not  azfake:returndata().humanoid then return end;
            if not maid.noanims2 and typesoulsettings.noanims == true then -- azfake:returndata().character and
                maid.noanims2 = azfake:returndata().character.Humanoid.AnimationPlayed:Connect(function(anim)
                    anim:AdjustSpeed(0)
                    anim:Stop()
                end)
            end
            for i,v in next, azfake:returndata().character.Humanoid:FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks() do 
                v:Stop()
                v:AdjustSpeed(0)
            end
        end)
    end)
    newother:AddToggle('Auto Division 12',false,function(e)
        typesoulsettings.autodivision12 = e;
    end)
    -- local rollbacktogfgl = newother:AddToggle('Rollback Data',false,function(e, clicked)
    --     --library:CheckForPermission({ask = 'Rollback, Are you sure?'})
    --     if clicked and typesoulsettings.rollback == false and library:CheckForPermission('Rollback, Are you sure?') == false then
    --         rollbacktogfgl:Set(false) 
    --         return
    --     end
    --     if clicked then 
    --         typesoulsettings.rollback = e;
    --     else
    --         rollbacktogfgl:Set(false)
    --     end
    --     -- if e == false then 
    --     --     maid.rollbackctn = nil;
    --     --     local args = {
    --     --         [1] = {
    --     --             ["SkillInputs"] = {
    --     --                 [1] = "One",
    --     --                 [2] = "Two",
    --     --                 [3] = "Three",
    --     --                 [4] = "Four",
    --     --                 [5] = "Five",
    --     --                 [6] = "Six",
    --     --                 [7] = "Seven",
    --     --                 [8] = "Eight",
    --     --                 [9] = "Nine",
    --     --                 [10] = "Zero",
    --     --                 [11] = "Minus",
    --     --                 [12] = "Equals"
    --     --             },
    --     --             ["ShikaiInputs2"] = {
    --     --                 ["E"] = "X",
    --     --                 ["C"] = "C",
    --     --                 ["Z"] = "Z"
    --     --             },
    --     --             ["BankaiInputs2"] = {
    --     --                 ["LeftShift"] = "T",
    --     --                 ["G"] = "G"
    --     --             },
    --     --             ["SkillInputs2"] = {
    --     --                 ["Zero"] = "Zero",
    --     --                 ["Equals"] = "Equals",
    --     --                 ["Four"] = "Four",
    --     --                 ["Seven"] = "Seven",
    --     --                 ["Eight"] = "Eight",
    --     --                 ["Nine"] = "Nine",
    --     --                 ["Six"] = "Six",
    --     --                 ["Two"] = "Two",
    --     --                 ["Three"] = "Three",
    --     --                 ["Five"] = "Five",
    --     --                 ["One"] = "One"
    --     --             },
    --     --             ["ShikaiInputs"] = {
    --     --                 [1] = "Z",
    --     --                 [2] = "E",
    --     --                 [3] = "C"
    --     --             },
    --     --             ["BankaiInputs"] = {
    --     --                 [1] = "LeftShift",
    --     --                 [2] = "G"
    --     --             }
    --     --         }
    --     --     }
            
    --     --     game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SendKeybindInfo"):FireServer(unpack(args))
    --     --     azfakenotify('Removed rollback',2)
    --     --     return
    --     -- end;
    --     -- azfakenotify('Rolling back...',2)
    --     -- local strs = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/general/main/megabyte'))()
    --     -- maid.rollbackctn = signals.heartbeat:connect('@duper', function()
    --     --     local r = {}
    --     --     r.SkillInputs = {
    --     --         [1] = "One",
    --     --         [2] = "Two",
    --     --         [3] = "Three",
    --     --         [4] = "Four",
    --     --         [5] = "Five",
    --     --         [6] = "Six",
    --     --         [7] = "Seven",
    --     --         [8] = "Eight",
    --     --         [9] = "Nine",
    --     --         [10] = "Zero",
    --     --         [11] = "Minus",
    --     --         [12] = "Equals"
    --     --     }
                
    --     --     for i=1, 100000 do 
    --     --        -- r.SkillInputs[i] = "One"
    --     --     end
    --     --     local args = {
    --     --         [1] = {
    --     --             --r.SkillInputs,
    --     --             -- Length
    --     --             -- If its a string
    --     --             -- if it isnt equal to nul

    --     --             ['SkillInputs'] = {
    --     --                 [nil] = nil
    --     --             };
    --     --             ["ShikaiInputs2"] = {
    --     --                 ["E"] = "X",
    --     --                 ["C"] = "C",
    --     --                 ["Z"] = "Z"
    --     --             },
    --     --             ["BankaiInputs2"] = {
    --     --                 ["LeftShift"] = "T",
    --     --                 ["G"] = "G"
    --     --             },
    --     --             ["SkillInputs2"] = {
    --     --                 ["Zero"] = "Zero",
    --     --                 ["Equals"] = "Equals",
    --     --                 ["Four"] = "Four",
    --     --                 ["Seven"] = "Seven",
    --     --                 ["Eight"] = "Eight",
    --     --                 ["Nine"] = "Nine",
    --     --                 ["Six"] = "Six",
    --     --                 ["Two"] = "Two",
    --     --                 ["Three"] = "Three",
    --     --                 ["Five"] = "Five",
    --     --                 ["One"] = "One"
    --     --             },
    --     --             ["ShikaiInputs"] = {
    --     --                 [1] = "Z",
    --     --                 [2] = "E",
    --     --                 [3] = "C"
    --     --             },
    --     --             ["BankaiInputs"] = {
    --     --                 [1] = "LeftShift",
    --     --                 [2] = nil; --"G"
    --     --             }
    --     --         }
    --     --     }
    --     --     --print(unpack(args))
    --     --     game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SendKeybindInfo"):FireServer(unpack(args))
    --     -- end)
    --     -- task.delay(3,function()
    --     --     azfakenotify('Successfully stopped data!','untilClick') -- rolled back!
    --     -- end)
    -- end)
    newother:AddToggle('Anti Void After Quest',false,function(e)
        typesoulsettings.goupafterdeath = e;
    end)
    newother:AddToggle('Full Bright',false,function(e)
        typesoulsettings.fullbright = e;
    end)
    farmrightsect:AddSlider('Scrape Amount', 0 , 1500, 10000, 1, function(x) -- scrape
        typesoulsettings.scrapeamount = x;
    end)
    farmrightsect:AddButton('Redeem All Codes', function()
        if not typesoulsettings.functions.getentityfolder() then return end;
        local enTi = typesoulsettings.functions.getentityfolder() -- lenTi
        local codeRemote = enTi.CharacterHandler.Remotes.Codes
        local response = game:HttpGet("https://www.escapistmagazine.com/type-soul-codes/")
        response = string.gsub(response,' ','')
        local basecodeoffset = 688086 -- string.find(code) in response gets u base line, code has to be first
        response = response:sub(basecodeoffset,basecodeoffset+typesoulsettings.scrapeamount)
        local codes = response:split('<strong>') -- </strong>:
        for i,v in next, codes do 
            local realCode = '';
            for index = 1, string.len(v) do -- index, _v in next, string.len(v)
                local value = v:sub(index,index)
                if value == '<' or value == '>' then 
                    print('broke to',realCode)
                    break; -- ene
                else
                    realCode = realCode..value
                end
            end;
            codeRemote:InvokeServer(realCode)
            task.wait(.25)
        end
    end);
    --
    local isUp = true;
    local m1con; m1con = game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
        isUp = false 
        if typesoulsettings.m1hold then 
            task.spawn(function()
                repeat 
                    task.wait(0.2)
                    typesoulsettings.functions.m1()
                until isUp == true or getgenv().loopsUnload == true -- terue
            end)
        end
    end)
    local m2con; m2con = game.Players.LocalPlayer:GetMouse().Button1Up:Connect(function()
        isUp = true
    end)
    --

    sharedRequires['CreateFlySystem'](sector, typesoulsettings)
    sharedRequires['CreateWalkSpeedSystem'](sector, typesoulsettings)
    sharedRequires['CreateNoclip'](sector, typesoulsettings)
    sharedRequires['SetupChatlogger'](sector, typesoulsettings)
    local function rayEsp(t)
        -- could set the global esp[flag] = {}
        local child = t.child
        local flag = t.flag
        local distcap = t.maxdist
        local color = t.color
        local nobox = t.nobox or false;
        local notracer = t.notracer or false; -- notraceror notraror notraacer
        local givenaname = t.name -- supposed to be given name
        local activet = t.active
        local disableremove = t.removeondisable
        local pivoting = t.usepivot
        local selfname = t.selfname
        local primarypart = t.primarypart -- ppart
        local entity = t.entity
        local b = esp_lib:Add(child, {
            SelfName = selfname;
            IsEnabled = flag;
            flag = flag;
            tag = flag;
            maxdistance = distcap;
            Color = t.color;
            NoTracer = notracer;
            NoBox = nobox;
            Name = givenaname;
            active = activet;
            removeondisable = disableremove;
            usepivot = pivoting;
            PrimaryPart = primarypart;
            entity = entity;
        });
        return b
    end

    espsector:AddToggle('Enable ESP', false, function(xstate)
        esp_lib:Toggle(xstate)
    end)
    espsector:AddToggle('Use Names', false, function(xstate)
        typesoulsettings.espnames = xstate;
        esp_lib.Names = xstate
    end)
    espsector:AddToggle('Use Boxes', false, function(xstate)
        typesoulsettings.boxesp = xstate;
        esp_lib.Boxes = xstate
    end)
    espsector:AddToggle('Use Tracers', false, function(xstate)
        typesoulsettings.tracers = xstate;
        esp_lib.Tracers = xstate
    end)
    espsector:AddToggle('Player Esp', false, function(xstate)
        typesoulsettings.playeresp = xstate;
        esp_lib.Players = xstate
    end)
    espsector:AddColorpicker('Player Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        typesoulsettings['playerespcolor'] = ztx
        esp_lib.Settings.playerespcolor = typesoulsettings.playerespcolor
    end)
    espsector:AddSlider("Player Esp Range", 0, 200, 5000, 1, function(State)
        typesoulsettings['playerespdistance'] = State
        esp_lib.Settings.playerespdistance = typesoulsettings.playerespdistance
    end)

    espsector:AddToggle('NPC Esp',false,function(e)
        typesoulsettings.npcesp = e;
        if not e then return end;
        for i,v in next, workspace.NPCs:GetDescendants() do -- workspace.MissionBoards:GetChildren()  
            if v.Parent:FindFirstChild('Humanoid') then 
                rayEsp{
                    child = v.Parent;
                    usepivot = true;
                    Name = function()
                        return v.Parent.Name
                    end;
                    flag = 'npc';
                    maxdist = function()
                        return typesoulsettings.npcespdistance
                    end,
                    color = function()
                        return typesoulsettings.npcespcolor
                    end,
                    active = function()
                        return typesoulsettings.npcesp
                    end;
                    nobox = true;
                    notracer = true;
                    removeondisable = true;
                }
            end
        end
    end)
    espsector:AddColorpicker('NPC Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        typesoulsettings['npcespcolor'] = ztx
    end)
    espsector:AddSlider("NPC Esp Range", 0, 200, 5000, 1, function(State)
        typesoulsettings['npcespdistance'] = State
    end)


    espsector:AddToggle('Mission Board Esp',false,function(e)
        typesoulsettings.missionboardesp = e;
        if not e then return end;
        for i,v in next, workspace.NPCs.MissionNPC:GetChildren() do -- workspace.MissionBoards:GetChildren()  
            rayEsp{
                child = v;
                Name = function()
                    return 'Mission Board' 
                end;
                flag = 'board';
                maxdist = function()
                    return typesoulsettings.missionboardespdistance
                end,
                color = function()
                    return typesoulsettings.missionboardespcolor
                end,
                active = function()
                    return typesoulsettings.missionboardesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end
    end)
    espsector:AddColorpicker('Board Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        typesoulsettings['missionboardespcolor'] = ztx
        --updateESP('chestesp', 'Color', ztx)
    end)
    espsector:AddSlider("Board Esp Range", 0, 200, 5000, 1, function(State)
        typesoulsettings['missionboardespdistance'] = State
    end)

    espsector:AddToggle('Lootbox Esp',false,function(e)
        typesoulsettings.lootboxesp = e;
        if not e then return end;
        for i,v in next, workspace.Lootboxes:GetChildren() do -- workspace.MissionBoards:GetChildren()  
            rayEsp{
                child = v;
                Name = function()
                    return 'LOOTBOX' 
                end;
                flag = 'lootbox';
                maxdist = function()
                    return typesoulsettings.lootboxespdistance
                end,
                color = function()
                    return typesoulsettings.lootboxespcolor
                end,
                active = function()
                    return typesoulsettings.lootboxesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end
    end)
    espsector:AddColorpicker('Lootbox Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        typesoulsettings.lootboxespcolor = ztx
    end)
    espsector:AddSlider("Lootbox Esp Range", 0, 200, 5000, 1, function(State)
        typesoulsettings.lootboxespdistance = State -- ['lootboxespdistance']
    end)

    workspace:WaitForChild('Lootboxes').ChildAdded:Connect(function(child)
        if typesoulsettings.lootboxesp then 
            rayEsp{
                child = child;
                Name = function()
                    return 'LOOTBOX' 
                end;
                flag = 'lootbox';
                maxdist = function()
                    return typesoulsettings.lootboxespdistance
                end,
                color = function()
                    return typesoulsettings.lootboxespcolor
                end,
                active = function()
                    return typesoulsettings.lootboxesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end
    end)




    espsector:AddToggle('Mob Esp',false,function(e)
        typesoulsettings.mobesp = e;
        if not e then return end;
        for i,v in next, workspace.Entities:GetChildren() do -- workspace.MissionBoards:GetChildren() 
            if not game.Players:GetPlayerFromCharacter(v) then 
                rayEsp{
                    child = v;
                    PrimaryPart = v.PrimaryPart;
                    selfname = true;
                    entity = true;
                    flag = 'mobesp';
                    maxdist = function()
                        return typesoulsettings.mobespdistance
                    end,
                    color = function()
                        return typesoulsettings.mobespcolor
                    end,
                    active = function()
                        return typesoulsettings.mobesp
                    end;
                    --nobox = true;
                    --notracer = true;
                    removeondisable = true;
                }   
            end
        end
    end)
    espsector:AddColorpicker('Mob Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        typesoulsettings.mobespcolor = ztx
    end)
    espsector:AddSlider("Mob Esp Range", 0, 200, 5000, 1, function(State)
        typesoulsettings.mobespdistance = State -- ['lootboxespdistance']
    end)

    workspace:WaitForChild('Entities').ChildAdded:Connect(function(child)
        task.wait(0.5)
        if typesoulsettings.mobesp then 
            if not game.Players:GetPlayerFromCharacter(child) then 
                rayEsp{
                    child = child;
                    PrimaryPart = child.PrimaryPart;
                    selfname = true;
                    entity = true;
                    flag = 'mobesp';
                    maxdist = function()
                        return typesoulsettings.mobespdistance
                    end,
                    color = function()
                        return typesoulsettings.mobespcolor
                    end,
                    active = function()
                        return typesoulsettings.mobesp
                    end;
                    --nobox = true;
                    --notracer = true;
                    removeondisable = true;
                }   
            end
        end
    end)




    -- do parry when windup finishes
    do
        parryAnims['14070372787'] = 0.3; --0.33; --36
        parryAnims['14070373836'] = 0.26; --0.33
        parryAnims['14070374931'] = 0.26; --0.28; --0.3 -- 0.33 matches eprfectly
        parryAnims['14069237877'] = 0.27; --0.3; --0.33
        parryAnims['14069239027'] = 0.25;-- 0.3
        parryAnims['14069241762'] = 0.21
        parryAnims['14069240312'] = 0.2; --0.3
        parryAnims['14663938197'] = 0.3 --0.33 --0.38 -- idk
        parryAnims['14663985722'] = 0.27 --0.33
        parryAnims['14666888203'] = 0.31 --0.35
        parryAnims['14664132464'] = 0.28 --0.31
        parryAnims['14069009404'] = 0.27 --0.33
        parryAnims['14069010389'] = 0.28 --0.32
        parryAnims['14069017740'] = 0.28 -- might do 275
        parryAnims['14771379522'] = 0.24 --0.26 --0.3
        parryAnims['14069243455'] = 0.21

        parryAnims['14069023072'] = 0.22
        parryAnims['14774768876'] = 0.24 --0.31
        parryAnims['14774820991'] = 0.24 --0.33
        parryAnims['14776252587'] = 0.22;
        parryAnims['14776880646'] = 0.22;
        
        -- gun
        do 
            local function getguntiming(mob, anim, id, custom)
                typesoulsettings.functions.parrylist({0.15}, mob, 15, anim)
            end
            parryAnims['16749239700'] = getguntiming; --0.12
            parryAnims['16749240878'] = getguntiming; --0.12--8
            parryAnims['16749241651'] = getguntiming; --0.12--4
            parryAnims['14070502124'] = function(mob, anim, id)
                typesoulsettings.functions.parrylist({0.1,0.1,0.1}, mob, 15, anim)
            end;
    
        end
        -- reaper sword

        parryAnims['14070072624'] = 0.36
        parryAnims['14070073772'] = 0.33
        parryAnims['14070074688'] = 0.3 -- 0.33 matches eprfectly

        -- hollow 
        parryAnims['14070836033'] = 0.32; --0.36 -- could do 0.4 (m1 1)
        parryAnims['14070837481'] = 0.32; --0.36 -- second
        parryAnims['14070839321'] = 0.45; --0.52 -- crit


        -- dagger j m1
        parryAnims['14069281959'] = 0.2 -- m1
        parryAnims['14069283779'] = 0.22 -- m2
        parryAnims['14069285542'] = 0.25 -- m3
        parryAnims['14069287149'] = 0.25 -- m4 
        parryAnims['14069288615'] = 0.2 -- m5
        parryAnims['14069267865'] = 0.56 -- crit

        -- fist m1
        parryAnims['14069449901'] = 0.25 --3 m1
        parryAnims['14069451875'] = 0.25 -- m2
        parryAnims['14069453052'] = 0.25; -- m3
        parryAnims['14069454554'] = 0.2 -- m4
        parryAnims['14069455958'] = 0.25 -- m5
        parryAnims['14069440034'] = 0.33 -- crit

        -- claw - cang
        parryAnims['14069185844'] = 0.18; -- 1
        parryAnims['14069186980'] = 0.18; -- 2
        parryAnims['14069188532'] = 0.2; -- 3
        parryAnims['14069190199'] = 0.2; -- 4
        parryAnims['14069191458'] = 0.2; -- 5
        parryAnims['14069170145'] = 0.18; -- crit

        -- idek what weapon this is
        parryAnims['14070163707'] = 0.32 -- 1
        parryAnims['14070164504'] = 0.32 -- 2
        parryAnims['14070165536'] = 0.32; -- 3
        parryAnims['14070166724'] = 0.32; -- 4
        parryAnims['14070167474'] = 0.32; -- 5

        -- some uql ult
        parryAnims['14068264382'] = 0.26; -- 1
        parryAnims['14068263374'] = 0.26; -- 2
        parryAnims['14081676773'] = 0.26; -- 3
        parryAnims['14081673698'] = 0.24; -- 4
        parryAnims['14068257009'] = 0.24; -- 5
        parryAnims['14068255583'] = 0.22; -- crit - 0.25

        -- some executioners blade typa weapon
        parryAnims['16990963565'] = 0.34; --  1 and 3
        parryAnims['16990965363'] = 0.32 -- 2 and 4
        parryAnims['16990967955'] = 0.34 -- 5
        parryAnims['16990945760'] = 0.38 -- crit

        -- crits
        parryAnims['14069224323'] = 0.4 -- might make funct

        parryAnims['14068997392'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.4,0.3,0.2}, mob, 10, anim)
        end;

        -- piercing light
        parryAnims['14071690484'] = function(mob, anim, id) -- {0.3,0.31
            typesoulsettings.functions.parrylist({0.25,0.25}, mob, 10, anim) -- {0.4,0.3}
        end;

        parryAnims['14070060393'] = 0.45

        parryAnims['14070029680'] = 0.4

        -- magic

        -- volley
        parryAnims['14071712668'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.7, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ,0.1, 0.1, 0.1 ,0.1, 0.1}, mob, 18, anim)
        end;

        -- brace
        parryAnims['14071654671'] = 0.35 -- attack is at 0.4 tho

        -- suikawari
        parryAnims['14071653586'] = 0.65 -- attack taken at 0.7

        -- bisection
        parryAnims['14071628131'] = 0.52

        --senmaioroshi
        parryAnims['14071650108'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.3,0.2,0.2,0.2}, mob, 10, anim) -- {0.4,0.3}
        end;

        -- rising swallow
        parryAnims['14071648861'] = 0.25 -- attack fully happens at 0.35 (swirl) the attack to confirm the swirl is at 0.3

        -- vertical down
        parryAnims['14071657488'] = 0.35 -- just did 0.4 on random cuz it was already there for testing a previous timing and the attack was exactly on 0.4

        -- spit gate
        parryAnims['14071652427'] = 0.45

        -- overpowering slash
        parryAnims['14071644383'] = 0.5

        -- byakurai
        parryAnims['14071666095'] = 0.48

        -- tenran
        parryAnims['14071705811'] = 0.5 -- whole charge finishes at 0.51

        -- geki
        parryAnims['14071676388'] = 0.9 -- havent actually tested what geki does

        -- hainawa + raikoho
        parryAnims['14071708829'] = 0.8 -- attack at 0.9?? havent actually tested what hainawa does

        -- zangerin
        parryAnims['14071719657'] = 0.72

        -- gakia rekko
        parryAnims['14071674410'] = function(mob, anim, id) --makeBlockRange(15, {delay = 0.7, holdtime = 1})
            typesoulsettings.functions.parrylist({0.7,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2}, mob, 15, anim)
        end

        -- dropping fang
        parryAnims['14071794187'] = 0.68

        -- fast fang
        parryAnims['14071795665'] = 0.34

        -- waterfall dance  {0.4,0.3,0.3,0.3,0.3,0.25}
        parryAnims['14071818194'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.4,0.25,0.25,0.25,0.25,0.25}, mob, 10, anim) -- {0.4,0.3}
        end;

        -- timecut
        parryAnims['15325122671'] = 0.2

        -- strata strike
        parryAnims['14071816805'] = 0.22

        -- blooming cut
        parryAnims['14071792688'] = 0.62
        -- flash fakout
        parryAnims['14071798998'] = 0.53

        -- flash cut
        parryAnims['14071797324'] = 0.48
    
        -- rising shot
        parryAnims['14071553774'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.3,0.3}, mob, 10, anim) -- {0.4,0.3}
        end;

        -- grand entrance
        parryAnims['14071538689'] = 0.93

        -- catching dragon
        parryAnims['14071527834'] = 0.38

        -- ankle splitter
        parryAnims['16804140650'] = 0.38 --

        -- triple striker
        parryAnims['14071562219'] = 0.27

        -- heavenly cannon
        parryAnims['14071682948'] = 1.3

        -- fushibi
        parryAnims['14071673176'] = 1.63

        --sokatsui
        parryAnims['14071701914'] = 1.5

        -- danku
        parryAnims['14071670402'] = 0.58

        -- mortal ties
        parryAnims['14071642506'] = 0.7

        -- flower passage
        parryAnims['14068932670'] = function(mob, anim ,id)
            task.spawn(function()
                repeat task.wait() until checkdist(8, mob.PrimaryPart) or not mob.PrimaryPart
                if mob.PrimaryPart and anim.IsPlaying then 
                    typesoulsettings.functions.parrylist({0}, mob, 10, anim)
                end
            end)
        end;

        -- delayed crossings
        parryAnims['14071632343'] = 0.65

        -- flowing petals
        parryAnims['16889680733'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.34,0.5}, mob, 35, anim)
        end

        -- tora reach
        parryAnims['14071559270'] = function(mob, anim, id)
            typesoulsettings.functions.parrylist({0.24,0.34}, mob, 15, anim)
        end

        -- spine rend
        parryAnims['14071558168'] = 0.55

    end


    local function attachAnimationPlayed(child)
        signals.conceal(function()
            child:WaitForChild('Humanoid')
            child:WaitForChild('HumanoidRootPart')
            pcall(function()
                typesoulsettings.connections[child.Name]:Disconnect();
            end)
            pcall(function()
                typesoulsettings.connections[child.Name] = nil;
            end)
            local hasAnimationPlayed = false; -- = 0
            for i,v in next, typesoulsettings.connections do 
                if i == child.Name and v ~= nil then 
                    hasAnimationPlayed = true;
                end
            end
            if hasAnimationPlayed == true then return print('already has animation played',child.Name) end;
            local ctn; ctn = child.Humanoid.AnimationPlayed:Connect(function(anim)
                --print(tostring(anim.Animation.AnimationId))
                if child.Humanoid.Health <= 0 then 
                    --ctn:Disconnect();
                    pcall(function()
                        typesoulsettings.connections[i]:Disconnect();
                        typesoulsettings.connections[i] = nil;
                    end)
                    return;
                end;
                local animationId = tostring(anim.Animation.AnimationId):split('/')[3]
               -- print(animationId)
                local IsAnimationIdRegistered = parryAnims[animationId]; --false
                local hasHitframe = nil;
                pcall(function()
                    hasHitframe = anim:GetTimeOfKeyframe('HitFrame');
                end)
                if (IsAnimationIdRegistered or hasHitframe) and typesoulsettings.autoparry == true and child.PrimaryPart then 
                    --print('can parry')
                    if typesoulsettings.autoparrywhitelist ~= 'All' and (typesoulsettings.autoparrywhitelist == 'Mobs' and game.Players:GetPlayerFromCharacter(child)) then 
                        return
                    end
                    if typesoulsettings.autoparrywhitelist ~= 'All' and (typesoulsettings.autoparrywhitelist ~= 'Mobs' and child.Name ~= typesoulsettings.autoparrywhitelist) then 
                        return
                    end
                    -- where i moved it to
                    local objdist = child.PrimaryPart
                    if not objdist then objdist = child:FindFirstChildOfClass('BasePart') end
                    if not objdist then 
                        --print(child.Name..' has no part to detect distance')
                        return
                    end;
                    -- if typesoulsettings.m2beforeparry and azfake:returndata().character then 
                    --     azfake:returndata().character.CharacterHandler.Remotes.M2:FireServer()
                    -- end
                    local function attemptLookat()
                        if typesoulsettings.lookataxiszyxy then 
                            signals.conceal(function()
                                for i = 1, 10 do 
                                    task.wait(0.05);
                                    local targetPosition = objdist.Position;
                                    local sourcePosition = localPlayer.rootPart.Position
                                    local targetVector = Vector3.new(targetPosition.X, sourcePosition.Y, targetPosition.Z);
                                    --local cframe = CFrame.lookAt(sourcePosition, targetVector)
                                    localPlayer.rootPart.CFrame = CFrame.new(localPlayer.rootPart.Position, targetVector)
                                end
                            end)
                        end
                    end;
                    if IsAnimationIdRegistered == false and hasHitframe or typesoulsettings.useparrytiming and hasHitframe then 
                        if objdist and checkdist(typesoulsettings.autoparrydistance,objdist) then 
                            --
                            if typesoulsettings.m2beforeparry and azfake:returndata().character then 
                                azfake:returndata().character.CharacterHandler.Remotes.M2:FireServer()
                            end
                            attemptLookat();
                            signals.conceal(function()
                                local timetowait = hasHitframe - 0.2; -- 0.25; -- 0.15
                                if typesoulsettings.pingadjuster > 0  then 
                                    timetowait -= typesoulsettings.pingadjuster / 1400 -- 100 
                                end;
                                if typesoulsettings.latencyadjuster > 0 then 
                                    timetowait += typesoulsettings.latencyadjuster / 1400 -- 100 
                                end
                                task.spawn(function()
                                    if typesoulsettings.parrynotifications then
                                        local tohit = tostring(hasHitframe):sub(1,4) -- 0.5555 
                                        azfakenotify(`autoparry {tohit}`,3)
                                    end;
                                end)
                                task.wait(timetowait);
                                if anim.IsPlaying then 
                                    typesoulsettings.functions.parry()
                                end
                            end)
                        end
                        return
                    end;
                    local registry = parryAnims[animationId] -- parryregistration
                    if type(registry) == 'function' then 
                        print('parrying '..animationId)
                        if typesoulsettings.parrynotifications and checkdist(typesoulsettings.autoparrydistance) then 
                            azfakenotify(`parrying {parryAnims[animationId]}`,5)
                        end
                        registry(child, anim, animationId);
                        return;
                    elseif type(registry) == 'table' then 
                        return;
                    end
                    -- where objdist was
                    if objdist and checkdist(typesoulsettings.autoparrydistance,objdist) then 
                        attemptLookat()
                        print('parrying ',animationId);
                        if typesoulsettings.parrynotifications then 
                            azfakenotify(`parrying {parryAnims[animationId]}`,5)
                        end
                        if typesoulsettings.m2beforeparry and azfake:returndata().character then 
                            azfake:returndata().character.CharacterHandler.Remotes.M2:FireServer()
                        end
                        signals.conceal(function()
                            local timetowait = registry;
                            if typesoulsettings.pingadjuster > 0  then 
                                timetowait -= typesoulsettings.pingadjuster / 1400 -- 100 
                            end;
                            if typesoulsettings.latencyadjuster > 0 then 
                                timetowait += typesoulsettings.latencyadjuster / 1400 -- 100 
                            end
                            task.wait(timetowait);
                            if anim.IsPlaying then 
                                typesoulsettings.functions.parry()
                            end
                        end)
                    end;
                end
            end);
            --local bigs = {}
            typesoulsettings.connections[child.Name] = ctn
            --table.insert(typesoulsettings.connections,ctn)
            local diedctn;diedctn = child.Humanoid.Died:Connect(function()
                local index = 0
                for i,v in next, typesoulsettings.connections do 
                    index += 1
                    if i == child.Name then 
                        table.remove(typesoulsettings.connections, index)
                        typesoulsettings.connections[i]:Disconnect()
                        typesoulsettings.connections[i] = nil; --['noway']
                        print('removing',child.Name)
                    end
                end
                pcall(function()
                    ctn:Disconnect();
                end)
                diedctn:Disconnect()
            end)
        end)
    end;    

    for i,v in next, workspace.Entities:GetChildren() do 
        if v ~= game.Players.LocalPlayer.Character then 
            attachAnimationPlayed(v)
        end;
    end

    workspace.Entities.ChildAdded:Connect(function(v)
        if v ~= game.Players.LocalPlayer.Character then 
            attachAnimationPlayed(v)
        end;
    end)
    workspace.Entities.ChildRemoved:Connect(function(v)
        if typesoulsettings.connections[v.Name] then 
            pcall(function()
                typesoulsettings.connections[v.Name]:Disconnect()
            end)
        end
    end)

    -- game.Players.PlayerAdded:Connect(function(opp)
    --     if opp ~= game.Players.LocalPlayer then 

    --     end
    -- end)
    local function connectTouched(child)
        child.PlayerName.MouseButton1Down:Connect(function()
            if workspace.Camera.CameraSubject == workspace.Entities:FindFirstChild(child.Name) then
                if game.Players.LocalPlayer.Character then 
                    workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character
                end
                maid.oldcameracon = nil;
                return
            end
            maid.oldcameracon = nil;
            maid.oldcameracon = workspace.CurrentCamera:GetPropertyChangedSignal('CameraSubject'):Connect(function()
                if workspace.Entities:FindFirstChild(child.Name) then 
                    workspace.Camera.CameraSubject = workspace.Entities:FindFirstChild(child.Name)
                end
            end)
            if workspace.Entities:FindFirstChild(child.Name) then 
                workspace.Camera.CameraSubject = workspace.Entities:FindFirstChild(child.Name)
            end
        end)
    end
    local function setupLeaderboardAdded()
        for i,v in next, game:GetService("Players").LocalPlayer.PlayerGui.Leaderboard.PlayerList.PlayerListFrame:GetChildren() do 
            if v:FindFirstChild('PlayerName') then connectTouched(v) end;
        end
        game:GetService("Players").LocalPlayer.PlayerGui.Leaderboard.PlayerList.PlayerListFrame.ChildAdded:Connect(function(child)
            if child ~= game.Players.LocalPlayer.Name then 
                connectTouched(child)
            end;
        end)
    end
    local function divison12setup(child)
        task.spawn(function()
            repeat 
                if typesoulsettings.autodivision12 then 
                    for i,v in next, child:WaitForChild('Frame'):GetChildren() do 
                        firesignal(v.MouseButton1Click)
                    end;
                end
                task.wait(0.05)
            until not child
        end)
    end
    game:GetService("Players").LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)
        if child.Name == 'Leaderboard' then task.wait(2) setupLeaderboardAdded() end;
        if child.Name == 'Division11Minigame' then 
            divison12setup(child)
        end
    end)
    if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui') then 
        if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('Leaderboard') then 
            setupLeaderboardAdded()
        end
        if game:GetService("Players").LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('Division11Minigame') then 
            divison12setup(child)
        end
    end

    AddConfigurations()

    local grip2 = 0
    local isfarming = false;
    local farmstatus = 'idle'
    local made1godead = false;
    local gripped = false;
    local teleportingtoboard = false;
    local AmountOfDeadEnemies = 0;
    local AmountOfGripped = 0;
    local AmountOfEnemies = 0; --{}
    local function getstatus()
        return farmstatus
    end
    local function setstatus(x)
        farmstatus = x
        return farmstatus
    end
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then 
                print('type soul break end');
                for i,v in next, typesoulsettings.connections do 
                    v:Disconnect(); -- print(i) cna u name connections?
                end
                break
            end
            if typesoulsettings.fullbright == true then 
                game.Lighting.ClockTime = 12;
                game.Lighting.FogEnd = 1400;
                game.Lighting.Ambient = Color3.fromRGB(255,255,255)
                game.Lighting.Brightness = 0;
                game.Lighting.GlobalShadows = false;
            end
            if typesoulsettings.rainbowcloak == true and azfake:returndata().character then 
                pcall(function()
                    local colors = {
                        'White';
                        'Black';
                        'Red';
                        'Blue';
                    }
                    for i,v in next, colors do 
                        local ohString1 = "Equip"
                        local ohString2 = v..' '.."Puffer"
                        azfake:returndata().character.CharacterHandler.Remotes.EquipAccessory:FireServer(ohString1, ohString2)
                        task.wait(.25)
                    end
                end)
            end
            if typesoulsettings.autofarm == true then 
                signals.conceal(function()
                    local statusfu = false;
                    if not azfake:returndata().humanoidrootpart then return end;
                    local rootPart = azfake:returndata().humanoidrootpart 
                    local cframecheck = CFrame.new(typesoulsettings.farmx,typesoulsettings.farmy,typesoulsettings.farmz) * CFrame.Angles(math.rad(typesoulsettings.farmrotation),math.rad(0),math.rad(0))
                    local quested = false;
                    if not game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI') then return end;
                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true and not checkdist(15, getclosestboard()['board'].Board.WorldPivot.Position) then 
                        game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible = false;
                    end
                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then
                        quested = true;
                    end;
                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then
                        quested = true;
                    end;
                    if typesoulsettings.selectedfarm == 'Mobs' then 
                        if typesoulsettings.autogetquest and not quested and statusfu == false and getstatus() == 'idle' and justresettofix == false then -- and getstatus() == 'idle'
                            setstatus('tweening')
                            -- local index = 0
                            -- for i,v in next, holdfolder do 
                            --     index += 1
                            --     print('removing '..i)
                            --     holdfolder[i] = nil
                            --     -- pcall(function()
                            --     --     table.remove(holdfolder, i) -- dict takes string not number wont remove   index
                            --     -- end)
                            --     -- pcall(function()
                            --     --     table.remove(holdfolder, index) -- dict takes string not number wont remove   index
                            --     -- end)    
                            -- end
                            statusfu = true;
                            local gui = nil;
                            local boardget = getclosestboard()['board'].Board
                            --print('[teleporting to board]')
                            -- if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then
                            --     quested = true;
                            -- end;
                            -- if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then
                            --     quested = true;
                            -- end;
                            local hasqueue = false;
                            --teleportingtoboard = true 
                            if teleportingtoboard == false and azfake:returndata().character then 
                                teleportingtoboard = true 
                                repeat 
                                    task.wait(1)
                                    if azfake:returndata().humanoidrootpart then 
                                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false or game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false then 
                                            boardget = getclosestboard()['board'].Board
                                            typesoulsettings.functions.teleport(boardget.WorldPivot.Position, typesoulsettings.tweenspeed) --150)
                                            if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then 
                                                hasqueue = true;
                                            end
                                            if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then 
                                                hasqueue = true;
                                            end
                                        end
                                    end
                                until typesoulsettings.autofarm == false or hasqueue == true or checkdist(10, boardget.WorldPivot.Position) or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true
        
                                task.wait(.5)
                                -- else could return
                            end
                            teleportingtoboard = false
                            -- repeat -- teleport to board
                            --     task.wait(.5);
                            --     if not checkdist(30, boardget.WorldPivot.Position) then 
                            --         typesoulsettings.functions.teleport(boardget.Union, 150)
                            --     end;
                            --     rootPart.CFrame = boardget.Union.CFrame
                            -- until quested == true or checkdist(10, boardget.WorldPivot.Position) or typesoulsettings.autofarm == false or justresettofix == true
                            gui = game.Players.LocalPlayer.PlayerGui:FindFirstChild('DialogueUI')
    
                            if vs == 'debug' then 
                                --print('[accepting quest]')
                                --print('[also running anti quest bug]')
                            end
                            if justresettofix == false then 
                                task.delay(7,function()
                                    if justresettofix then return print('[no run fix]') end
                                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then
                                        quested = true;
                                    end;
                                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then
                                        quested = true;
                                    end;
                                    if quested == false and azfake:returndata().character and justresettofix == false then -- justresetted
                                        task.wait(2)
                                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then
                                            quested = true;
                                        end;
                                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then
                                            quested = true;
                                        end;
                                        if quested == false then 
                                            setstatus('idle')
                                            print('[anti quest bug triggered, potential fix]')
                                            justresettofix = true
                                            if game.Players.LocalPlayer.Character:FindFirstChild('Head') then 
                                                game.Players.LocalPlayer.Character.Head:Destroy()
                                            else
                                                if game.Players.LocalPlayer.Character:FindFirstChild('Chest') then 
                                                    if game.Players.LocalPlayer.Character:FindFirstChild('Chest'):FindFirstChild('Hollow Head') then 
                                                        game.Players.LocalPlayer.Character.Humanoid.Health = 0
                                                    end
                                                end
                                            end

                                            game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible = false;
                                            task.delay(5,function()
                                                setstatus('idle')
                                                justresettofix = false
                                                isfarming = false;
                                                made1godead = false;
                                                gripped = false;
                                                AmountOfGripped = 0
                                                AmountOfDeadEnemies = 0;
                                            end)
                                        end
                                    end
                                end)
                            end
                            --task.delay(1,function()
                                -- typesoulsettings.functions.teleport(boardget.Union, 150)
                            --end)
    
                            local isnearboard = false;
                            repeat 
                                task.wait()
                                isnearboard = checkdist(10, boardget.WorldPivot.Position)
                            until typesoulsettings.autofarm == false or isnearboard ~= false or typesoulsettings.autofarm == false or justresettofix == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true
                            --print('[is near board]')
                            gui = game.Players.LocalPlayer.PlayerGui:FindFirstChild('DialogueUI')
                            if gui and #gui:GetChildren() ~= 2 and game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false then 
                                if boardget:FindFirstChild('Union') then 
                                    fireclickdetector(boardget.Union.ClickDetector);
                                end
                            end
                            if gui then 
                                task.wait(1)
                                for i,v in next, gui:GetChildren() do 
                                    firesignal(v.Yes.MouseButton1Click);
                                end;
                                -- print('[trying to accept gui quest]')
                                if #gui:GetChildren() == 2 then 
                                    -- print('shouldve accepted')
                                else
                                    -- print('wasnt another gui quest idk why')
                                end

                                task.spawn(function()
                                    task.wait(1)
                                    repeat 
                                        task.wait(2)
                                        typesoulsettings.functions.teleport(boardget.WorldPivot.Position, typesoulsettings.tweenspeed)
                                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false and game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false  then 
                                            typesoulsettings.functions.teleport(boardget.Union, typesoulsettings.tweenspeed)
                                            task.wait(0.5)
                                            fireclickdetector(boardget.Union.ClickDetector);
                                            task.wait(1)
                                            for i,v in next, gui:GetChildren() do 
                                                firesignal(v.Yes.MouseButton1Click);
                                            end;
                                        end
                                    until justresettofix == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true
                                end);
    
                                task.spawn(function()
                                    if getstatus() == 'tweening' or getstatus() == 'idle' then 
                                        local status = getstatus()
                                        local haschanged = false;
                                        local timeawaited = 0;
                                        repeat 
                                            task.wait(1)
                                            haschanged = status ~= getstatus() or false
                                            timeawaited += 1
                                        until justresettofix == true or haschanged or timeawaited >= 7
                                        if justresettofix == false and not haschanged and timeawaited >= 7 and game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false then 
                                            print('[status has been tweening for time]'..status..'-'..getstatus())
                                            if checkdist(10, boardget.WorldPivot.Position)  then 
                                                fireclickdetector(boardget.Union.ClickDetector);
                                                task.wait(1.5)
                                                for i,v in next, gui:GetChildren() do 
                                                    firesignal(v.Yes.MouseButton1Click);
                                                end;
                                                print('[BUGFIX TRYING TO ACCEPT AGAIN]')
                                            end
                                        end
                                    end
                                end)
                                --task.delay(8,function()
                                    --if checkdist(10, boardget.WorldPivot.Position) and 
                                --end)
                            end
                            -- repeat 
                            --     gui = game.Players.LocalPlayer.PlayerGui:FindFirstChild('DialogueUI')
                            --     if gui and #gui:GetChildren() ~= 2 and game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false then 
                            --         fireclickdetector(boardget.Union.ClickDetector);
                            --     end
                            --     if gui then 
                            --         task.wait(1)
                            --         for i,v in next, gui:GetChildren() do 
                            --             firesignal(v.Yes.MouseButton1Click);
                            --         end;
                            --     end
                            --     task.wait(2)
                            --     if game.Players.LocalPlayer:FindFirstChild('MissionBoard') then 
                            --         --game.Players.LocalPlayer.MissionBoard:FireServer('Yes')
                            --     end
                            -- until quested == true or typesoulsettings.autofarm == false or justresettofix == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true  -- (gui and #gui:GetChildren() ~= 1);
                            
                            
                            task.wait(0.1)--(2)
                            --gui = gui:GetChildren()[2]
                            -- repeat
                            --print('got quest')
                            statusfu = false
                            if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then
                                justresettofix = false;
                            end;
                            if game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == true then
                                justresettofix = false;
                            end;
                            setstatus('idle')
                            --print('[fixing]')
                            --if then 
                            --    justresettofix = false;
                            --end
                            --firesignal(gui.Yes.MouseButton1Click);
                        end;
                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false and game.Players.LocalPlayer.PlayerGui:FindFirstChild('MissionsUI').Queueing.Visible == false then 
                            quested = false;
                            teleportingtoboard = false
                            if getstatus() ~= 'tweening' then 
                                teleportingtoboard = false
                                setstatus('idle')
                            end
                        end;    
                        -- or just queueui enabled
                        if isfarming == false and typesoulsettings.autofarm ~= false and getgenv().loopsUnload ~= true and quested == true and getstatus() ~= 'attacking' and getstatus() ~= 'gripping' then 
                            --setstatus('attacking') -- farmimg
                            local holdfolder = {}
                            local bothdead = false
                            teleportingtoboard = false
                            --typesoulsettings.functions.removecurrenttweens()
                            if AmountOfEnemies == 0 then 
                                for i,v in next, workspace.Entities:GetChildren() do -- get closestenemies in 150
                                    if v:IsA('Model') and not game.Players:FindFirstChild(v.Name) and v.PrimaryPart and (v:FindFirstChildWhichIsA('BillboardGui') and checkdist(5000,v.PrimaryPart) or checkdist(5000,v.PrimaryPart)) and (v:FindFirstChildWhichIsA('Highlight') or v:FindFirstChildWhichIsA('BillboardGui')) and v:FindFirstChildWhichIsA('Humanoid') and v:FindFirstChildWhichIsA('Humanoid').Health > 0 then
                                        AmountOfEnemies += 1
                                    end
                                end
                            end
                            local function getClosestEnemies()
                                local enemy = nil;
                                local enemydist = nil;
                                for i,v in next, workspace.Entities:GetChildren() do -- get closestenemies in 150
                                    if v:IsA('Model') and not game.Players:FindFirstChild(v.Name) and v.PrimaryPart and (v:FindFirstChildWhichIsA('BillboardGui') and checkdist(5000,v.PrimaryPart) or checkdist(5000,v.PrimaryPart)) and (v:FindFirstChildWhichIsA('Highlight') or v:FindFirstChildWhichIsA('BillboardGui')) and v:FindFirstChildWhichIsA('Humanoid') and v:FindFirstChildWhichIsA('Humanoid').Health > 0 then
                                        local distget = checkdist(5000,v.PrimaryPart)
                                        if enemy == nil then 
                                            enemy = v;
                                            enemydist = distget; --checkdist(5000,v.PrimaryPart);
                                        else 
                                            if enemydist > distget then 
                                                enemy = v;
                                                enemydist = distget;
                                            end
                                        end
                                    end
                                end
                                return enemy
                            end
                            local enemy = getClosestEnemies()
                            if enemy and game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == true then 
                                local v = enemy;
                                if not holdfolder[v.Name] then 
                                    holdfolder[v.Name] = false;
                                end;
                                isfarming = true;
                                --holdfolder[v.Name] = false;
                                local amount = 0
                                -- for i,v in next, holdfolder do 
                                --     if v == true then 
                                --         amount += 1
                                --     end
                                -- end
                                -- if amount == #holdfolder then bothdead = true print('both dead') end;
                                local dist = checkdist(45,v.PrimaryPart) -- 30
                                local function gethrp()
                                    local _r = nil;
                                    for __, gg in next, v:GetChildren() do
                                        if gg.Name == 'HumanoidRootPart' and gg:IsA('BasePart') then 
                                            _r = gg ;
                                            break
                                        end
                                    end 
                                    return _r
                                end
                                local HumanoidRootPart_Enemy = gethrp()
                                local canAttack = true;
                                if not dist then 
                                    repeat 
                                        task.wait(0.1)
                                        if v.PrimaryPart then 
                                            typesoulsettings.functions.teleport(HumanoidRootPart_Enemy.CFrame * cframecheck, typesoulsettings.tweenspeed) --150)
                                        end

                                    until not v or v.PrimaryPart and checkdist(45,v.PrimaryPart) or not HumanoidRootPart_Enemy or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false
                                end;
                                print('enter re')
                                setstatus('attacking') -- farmimg
                                typesoulsettings.functions.removecurrenttweens()
                                repeat 
                                    task.wait()
                                    typesoulsettings.functions.removecurrenttweens()
                                    cframecheck = CFrame.new(typesoulsettings.farmx,typesoulsettings.farmy,typesoulsettings.farmz) * CFrame.Angles(math.rad(typesoulsettings.farmrotation),math.rad(0),math.rad(0))
                                    if v:FindFirstChildWhichIsA('Humanoid').Health == 1 then 
                                        if holdfolder[v.Name] == false then 
                                           -- AmountOfDeadEnemies += 1
                                        end
                                        -- if smaller then amountofenemies
                                        if AmountOfDeadEnemies < AmountOfEnemies then 
                                            AmountOfDeadEnemies += 1
                                        end
                                        holdfolder[v.Name] = true;
                                        -- if made1godead == false then 
                                        --     made1godead = nil
                                        -- elseif made1godead == nil then 
                                        --     made1godead = true;
                                        -- end;
                                        
                                        for i,v in next, holdfolder do 
                                            if v == true then 
                                                amount += 1
                                            end
                                        end
                                        local amountinfolder = 0
                                        for __, vv in next, holdfolder do 
                                            amountinfolder += 1
                                        end;
                                        if amount == amountinfolder then bothdead = true print('both dead') else print(amount,amountinfolder) end;
                                    end;
                                    rootPart.CFrame = HumanoidRootPart_Enemy.CFrame * cframecheck; -- v.HumanoidRootPart
                                    -- if dist then 
                                    --     --rootPart.CFrame = v.HumanoidRootPart.CFrame * cframecheck;
                                    --     -- carry; tp to sky; grip
                                    --     rootPart.CFrame = v.HumanoidRootPart.CFrame * cframecheck;
                                    -- else
                                    --     typesoulsettings.functions.teleport(v.HumanoidRootPart, typesoulsettings.tweenspeed) --150)
                                    --     dist = checkdist(45,v.PrimaryPart)
                                    -- end
                                    if getstatus() == 'gripping' then canAttack = false end;
                                    if canAttack == true then 
                                        -- m1
                                        if typesoulsettings.autom1 then 
                                            task.delay(0.1,function()
                                                typesoulsettings.functions.m1() -- autom1
                                            end)
                                        end;  
                                        if typesoulsettings.autom2 then 
                                            task.delay(0.1,function()
                                                typesoulsettings.functions.m2() -- autom1
                                            end)
                                        end;  
                                        if typesoulsettings.autouseskills and type(typesoulsettings.useskillselect) == 'table' then 
                                            for i,v in next, typesoulsettings.useskillselect do 
                                                local ohString1 = "Skill"
                                                local ohString2 = tostring(v)
                                                local ohString3 = "Pressed"
                                            
                                                game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler:FireServer(ohString1, ohString2, ohString3)
                                            end;
                                        end;
                                    end
                                until typesoulsettings.autofarm == false or holdfolder[v.Name] == true or not v or v == nil or getstatus() == 'idle' or getstatus() == 'gripping' or v.Parent == nil or v:FindFirstChildWhichIsA('Humanoid').Health <= 0 or bothdead == true or game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false
                                print('shouldve broken')
                                
                                local function revertFarmingStatus()
                                    setstatus('idle')
                                    bothdead = false;
                                    isfarming = false;
                                    made1godead = false;
                                    gripped = false;
                                    AmountOfGripped = 0
                                    AmountOfDeadEnemies = 0;
                                end
                                if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled ~= false and v:FindFirstChildWhichIsA('Humanoid').Health == 1 and bothdead == true then -- and AmountOfDeadEnemies >= AmountOfEnemies then -- typesoulsettings.autogrip only players
                                    --if gripped == false then 
                                        --gripped = nil;
                                    --elseif gripped == nil then 
                                        --gripped = true;
                                    --end;
                                    rootPart.CFrame = v.HumanoidRootPart.CFrame 
                                    repeat 
                                        task.wait(1) 
                                        if azfake:returndata().character.Humanoid.WalkSpeed ~= 0 and v:FindFirstChild('HumanoidRootPart') then 
                                            rootPart.CFrame = v.HumanoidRootPart.CFrame
                                            azfake:returndata().character.CharacterHandler.Remotes.Execute:FireServer()
                                        end
                                        task.wait(2)
                                    until azfake:returndata().character.Humanoid.WalkSpeed == 0 or not v:FindFirstChild('HumanoidRootPart')
                                    print('MID GRIP')
                                    repeat 
                                        task.wait(1) 
                                    until azfake:returndata().character.Humanoid.WalkSpeed ~= 0 or not v:FindFirstChild('HumanoidRootPart')
                                    print('FINISHED GRIP')
                                    if AmountOfGripped >= AmountOfDeadEnemies then -- RESET  FUNCTION
                                        revertFarmingStatus()
                                    else
                                        isfarming = false;
                                        AmountOfGripped += 1
                                        setstatus('idle')
                                    end;
                                else
                                    setstatus('idle')
                                    isfarming = false;
                                    print('WASNT A HUMANOID MOB',AmountOfDeadEnemies,AmountOfEnemies)
                                    AmountOfGripped = 0
                                    AmountOfDeadEnemies = 0;
                                    if made1godead ~= nil then 
                                        made1godead = false;
                                        gripped = false;
                                    end
                                end
                                if typesoulsettings.goupafterdeath == true then 
                                    task.delay(0.2,function()-- reeutnda
                                        if game.Players.LocalPlayer.PlayerGui:FindFirstChild('QueueUI').Enabled == false then 
                                            azfake:returndata().humanoidrootpart.CFrame *= CFrame.new(0,25,0)
                                        end
                                    end)
                                end
                                --
                                
                                
                                -- if typesoulsettings.autogrip and bothdead and v then  -- and not getstatus('gripping')        v:FindFirstChildWhichIsA('Humanoid').Health == 1 and 
                                --     if getstatus() ~= 'gripping' then 
                                --         setstatus('gripping')
                                --         rootPart.CFrame = v.HumanoidRootPart.CFrame 
                                --         canAttack = false;
                                --         task.spawn(function()
                                --             repeat 
                                --                 task.wait(0.5)
                                --             until not v
                                --             if grip2 < 3 then grip2 += 1 end;
                                --         end)
                                --         repeat 
                                --             task.wait(1) 
                                --             if azfake:returndata().character.Humanoid.WalkSpeed ~= 0 then 
                                --                 azfake:returndata().character.CharacterHandler.Remotes.Execute:FireServer()
                                --             end
                                --             task.wait(2)
                                --         until azfake:returndata().character.Humanoid.WalkSpeed == 0
                                --         repeat 
                                --             task.wait(1) 
                                --         until azfake:returndata().character.Humanoid.WalkSpeed > 0
                                --         --task.wait(4)
                                --         print('gripping shouldve stopped')
                                --         setstatus('idle')
                                --     end
                                -- else
                                --     setstatus('idle')
                                --     isfarming = false;
                                -- end;
                                -- if grip2 >= 2 then 
                                --     print('reset with my ball sacks man')
                                --     isfarming = false;
                                --     setstatus('idle')
                                -- end;
                            end
                            -- for i,v in next, workspace.Entities:GetChildren() do -- get closestenemies in 150
                            --     if v:IsA('Model') and not game.Players:FindFirstChild(v.Name) and v.PrimaryPart and (v:FindFirstChildWhichIsA('BillboardGui') and checkdist(5000,v.PrimaryPart) or checkdist(5000,v.PrimaryPart)) and (v:FindFirstChildWhichIsA('Highlight') or v:FindFirstChildWhichIsA('BillboardGui')) and v:FindFirstChildWhichIsA('Humanoid') and v:FindFirstChildWhichIsA('Humanoid').Health > 0 then 
                            --         -- check if highlight maybe
                            --         -- make function a repeat
                            --         -- print(holdfolder)

                            --     end;
                            -- end;
                        end
                        --end)
                    else
                        local opp = workspace.Entities:FindFirstChild(typesoulsettings.selectedfarm);
                        if opp and opp.PrimaryPart then 
                            if not checkdist(30,opp.PrimaryPart) then 
                                repeat 
                                    task.wait(1) 
                                    typesoulsettings.functions.teleport(opp.PrimaryPart, typesoulsettings.tweenspeed) --150)
                                until not opp or checkdist(30,opp.PrimaryPart)
                            end
                            rootPart.CFrame = opp.HumanoidRootPart.CFrame * cframecheck;
                            if typesoulsettings.autom1 then 
                                typesoulsettings.functions.m1() -- autom1
                            end;  
                            if typesoulsettings.autom2 then 
                                typesoulsettings.functions.m2() -- autom1
                            end;  
                            if typesoulsettings.autouseskills then 
                                for i,v in next, typesoulsettings.useskillselect do 
                                    local ohString1 = "Skill"
                                    local ohString2 = tostring(v)
                                    local ohString3 = "Pressed"
                                
                                    game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler:FireServer(ohString1, ohString2, ohString3)
                                end;
                            end;
                        end;
                    end
                end)
            end
            if typesoulsettings.autoequipweapon == true and azfake:returndata().character then 
                pcall(function()
                    if azfake:returndata().character["Right Arm"].Handle.Part1 == nil and azfake:returndata().character:FindFirstChild('Right Arm') then 
                        task.delay(0.1,function()
                            if azfake:returndata().character:FindFirstChild('Right Arm') and azfake:returndata().character["Right Arm"].Handle.Part1 == nil then 
                                azfake:returndata().character.CharacterHandler.Remotes.Weapon:FireServer()
                            end
                        end)
                    end
                end)
            end;
            if typesoulsettings.autocreateparty == true and game.Players.LocalPlayer:FindFirstChild('PlayerGui') then --filldirection
                -- check if isnt in party;
                if game.Players.LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('MissionsUI') and azfake:returndata().character then 
                    if game.Players.LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('MissionsUI').MainFrame.Visible == false then 
                        pcall(function()
                            azfake:returndata().character.CharacterHandler.Remotes.PartyCreate:FireServer()
                        end)
                    end;
                end;  
            end;
        end
    end)
elseif universeid == 3734304510 then  -- south bronx
    local tab = window:CreateTab(gameName)
    local esptab = window:CreateTab('ESP')
    local sector = tab:CreateSector('Cheats','left')
    local leftsect = tab:CreateSector('Cheats','left')
    local rightsector = tab:CreateSector('Cheats','right')
    local modsector = tab:CreateSector('Cheats','right')
    local espsector = esptab:CreateSector('Cheats','left')
    esp_lib = loadstring(game:HttpGet('https://raw.githubusercontent.com/hairlinebrockeb/esp-library/main/lib.lua'))()

    if getgenv().southbroxsettings ~= nil then 
        for i,v in next, getgenv().southbroxsettings.assets do 
            pcall(function()
                v:Remove()
            end)
        end
    end
    getgenv().southbroxsettings = {
        assets = {};
        objects = {};
        boxfarm = false;
        oneshotkill = false;
        headhitbox = false;
        hitx = 3;
        hity = 3;
        hitz = 3;
        transparencyhitbox = 0;
        playerespcolor = Color3.fromRGB(255,255,255);
        playeresp = false;
        playerespdistance = 2000;
        npcespcolor = Color3.fromRGB(255,255,255);
        npcesp = false;
        npcespdistance = 2000;
        atmesp = false;
        atmespcolor = Color3.fromRGB(255,255,255);
        atmespdistance = 2000;
        atmespdisablecolor = Color3.fromRGB(255,255,255);
        silentaim = false;
        cardfarm = false;
        safefarm = false;
        usevehicleteleport = false;
        antijam = false; --autoslide = false;
        nocooldownshoot = false;
        bringall = false;
        alwayshitheadshots = false;
        autoloot = false;
        autoloottp = false;
        autobankloot = false;
        usehighlight = false;
        hitboxcolor = Color3.fromRGB(255,255,255);
        outlinecolor = Color3.fromRGB(255,255,255);
        seethroughwalls = false;
        noblur = false; -- disableblur
        norecoil = false; -- disablerecoil
        maxbulletspeed = false;
        maxbulletrange = false;
        holdtoshoot = false;
        fullbright = false;
        silentaimradius = 90; --30;
        silentaimthicky = 3;
        silentaimcolor = Color3.fromRGB(255,255,255);
        silentaimdistance = 100;
    }
    setupAimbotTab(getgenv().southbroxsettings)
    
    --AddConfigurations()
    sharedRequires['CreateFlySystem'](rightsector, southbroxsettings)
    sharedRequires['CreateWalkSpeedSystem'](rightsector, southbroxsettings)
    sharedRequires['CreateNoclip'](rightsector, southbroxsettings)

    local function sethitbox() -- upd
        for i,v in next, game.Players:GetPlayers() do 
            if v ~= game.Players.LocalPlayer and v.Character then 
                if southbroxsettings.headhitbox then -- oneshotkill
                    task.wait(0.1)
                    if not v.Character:FindFirstChild('CustomHead') then 
                        local headclone = v.Character.Head:Clone()
                        headclone.Name = 'CustomHead';
                        headclone.Parent = v.Character;
                        headclone.CanCollide = false;
                        for i,vr in next, headclone:GetChildren() do 
                            if typeof(vr) ~= 'Weld' and typeof(vr) ~= 'Motor6D' then 
                                vr:Destroy()
                                print(vr.Name)
                            end
                        end
                        local newweld = Instance.new('Motor6D',v.Character);
                        newweld.Name = 'azfake' -- random guid
                        newweld.Part0 = v.Character.Head;
                        newweld.Part1 = headclone --;v.CustomHead
                    end
                    if southbroxsettings.usehighlight == true and not v.Character.CustomHead:FindFirstChild('Highlight') then 
                        Instance.new('Highlight',v.Character.CustomHead)
                    end
                    if v.Character.CustomHead:FindFirstChild('Highlight') then 
                        v.Character.CustomHead.Highlight.FillColor = southbroxsettings.highlightcolor
                        v.Character.CustomHead.Highlight.OutlineColor = southbroxsettings.outlinecolor
                        v.Character.CustomHead.Highlight.FillTransparency = southbroxsettings.transparencyhitbox 
                        if southbroxsettings.seethroughwalls then 
                            v.Character.CustomHead.Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        else
                            v.Character.CustomHead.Highlight.DepthMode = Enum.HighlightDepthMode.Occluded
                        end
                    end
                    if southbroxsettings.usehighlight == false and v.Character.CustomHead:FindFirstChild('Highlight') then 
                        v.Character.CustomHead:FindFirstChild('Highlight'):Destroy()
                    end
                    v.Character.azfake.C0 = CFrame.new(0,southbroxsettings.hitboxoffset,0) --  v.Character.Head.CFrame *
                    v.Character.CustomHead.Color = southbroxsettings.hitboxcolor
                    v.Character.CustomHead.Size = Vector3.new(southbroxsettings.hitx,southbroxsettings.hity,southbroxsettings.hitz)
                    v.Character.CustomHead.Transparency = southbroxsettings.transparencyhitbox 
                    --v.Character.Head.OriginalSize.Value = Vector3.new(southbroxsettings.hitx,southbroxsettings.hity,southbroxsettings.hitz)
                else
                    if v.Character:FindFirstChild('CustomHead') then 
                        v.Character.CustomHead.Size = Vector3.new(1.1542654037475586, 1.1710413694381714, 1.1542654037475586)
                    end
                   -- v.Head.OriginalSize.Value = Vector3.new(1.1542654037475586, 1.1710413694381714, 1.1542654037475586)
                end;
            end;
        end;
    end

    sector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)

    --sector:AddButton('Anti Cheat Bypass',function()
    
    --end);
    local dumpfunctions = {
        slide = nil;
        reload = nil;
        tactreload = nil;
    }
    local function dumpgunmodules()
        for index,funct in next, getgc() do 
            if type(funct) == 'function' and getinfo(funct).source:find('Gun') then
                if tostring(getinfo(funct).name) == 'SlideHandler' then 
                    dumpfunctions.slide = funct;
                elseif tostring(getinfo(funct).name) == 'Reload' then 
                    dumpfunctions.reload = funct
                elseif tostring(getinfo(funct).name) == 'TacticalReload' then 
                    dumpfunctions.tactreload = funct
                end;
            end
        end
        print('[successfully compiled]')
    end
    dumpgunmodules()

    sector:AddToggle('One Shot Gun', false, function(e)
        southbroxsettings.oneshotkill = e;
    end);
    --
    sector:AddToggle('Always Hit Headshot',false, function(e)
        southbroxsettings.alwayshitheadshots = e;
        if not e then return end;
    end)
    sector:AddToggle('Bring All',false, function(e)
        southbroxsettings.bringall = e;
        if not e then 
            maid.ringbring = nil;
            return
        end;
        maid.ringbring = signals.heartbeat:connect('bring all func',function()
            if not azfake:returndata().humanoidrootpart then return end;
            local rootPart = azfake:returndata().humanoidrootpart
            for i,v in next, game.Players:GetPlayers() do 
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild('HumanoidRootPart') then 
                    v.Character.HumanoidRootPart.CFrame = rootPart.CFrame * CFrame.new(0,0,-25)
                    -- could put them in that frame that can view any 3d model
                    -- aimbot could do that too
                end
            end;
        end);
    end)
    sector:AddToggle('Custom Head Hitbox', false, function(e)
        southbroxsettings.headhitbox = e;
        sethitbox()
    end);
    sector:AddSlider("Hitbox X", 0, 3, 40, 1, function(State)
        southbroxsettings.hitx = State -- deepwtykensettings  typesoulsettings
        sethitbox()
    end)
    sector:AddSlider("Hitbox Y", 0, 3, 40, 1, function(State)
        southbroxsettings.hity = State -- deepwtykensettings  typesoulsettings
        sethitbox()
    end)
    sector:AddSlider("Hitbox Z", 0, 3, 40, 1, function(State)
        southbroxsettings.hitz = State -- deepwtykensettings  typesoulsettings
        sethitbox()
    end)
    sector:AddSlider("Hitbox Transparency", 0, 0, 1, 10, function(State)
        southbroxsettings.transparencyhitbox = State -- deepwtykensettings  typesoulsettings
        sethitbox()
    end)
    sector:AddSlider("Hitbox Offset", 0, 0, 10, 1, function(State)
        southbroxsettings.hitboxoffset = State -- deepwtykensettings  typesoulsettings
        sethitbox()
    end)
    -- sector:AddToggle('Custom Hitbox Color', false, function(e)
    --     southbroxsettings.headhitbox = e;
    --     sethitbox()
    -- end);
    sector:AddToggle('Use Highlight', false, function(e)
        southbroxsettings.usehighlight = e;
        sethitbox()
    end);
    sector:AddToggle('See through walls', false, function(e)
        southbroxsettings.seethroughwalls = e;
        sethitbox()
    end)
    sector:AddColorpicker('Highlight Outline Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['outlinecolor'] = ztx
        sethitbox()
    end)
    sector:AddColorpicker('Highlight Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['highlightcolor'] = ztx
        sethitbox()
    end)
    sector:AddColorpicker('Custom Hitbox Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['hitboxcolor'] = ztx
        sethitbox()
    end)
    game.Players.PlayerAdded:Connect(function(child)
        sethitbox()
    end)
    game.Players.PlayerRemoving:Connect(function(child)
        sethitbox()
    end)
    sector:AddSeperator('-')

    local available = {}
    local selection = ''
    for i,v in next, workspace:GetChildren() do 
        if v.Name:find("'s Car") then 
            table.insert(available,v.Name)
        end
    end
    local carlist = sector:AddDropdown('Steal Available Cars', available, '', false, function(e)
        selection = e;
    end)
    workspace.ChildAdded:Connect(function(child)
        task.wait(0.5)
        if child.Name:find("'s Car") then 
            table.insert(available,child.Name)
            carlist:Add(child.Name)
        end
    end)
    workspace.ChildRemoved:Connect(function(child) -- child removing
        if child.Name:find("'s Car") then 
            carlist:Remove(child.Name)
            for i,v in next, available do 
                if v == child.Name then 
                    table.remove(available,i)
                end
            end
        end
    end)
    sector:AddButton('Steal The Car',function()
        if selection ~= '' and workspace:FindFirstChild(selection) then 
            azfakenotify('Teleporting to Car',3)
            workspace:FindFirstChild(selection).DriveSeat:Sit(azfake:returndata().character.Humanoid)
        end
    end)
    local teleports = {
        'Gun Store 1';
        'Gun Store 2';
        'Boxes';
        'Dealership';
        'Apartments 1';
        'Apartments 2';
    }
    local tpselection = ''
    sector:AddDropdown('Teleports', teleports, '', false, function(e)
        tpselection = e;
    end)
    local tpbutton = sector:AddButton('Teleport', function()
        if not azfake:returndata().humanoidrootpart then return end
        local rootPart = azfake:returndata().humanoidrootpart
        local tpconvert = {
            ['Gun Store 1'] = CFrame.new(239.5153045654297,1.41786527633667,-165.37364196777344);
            ['Gun Store 2'] = CFrame.new(-468.4276123046875,3.8621323108673096,351.5307312011719);
            ['Boxes'] = CFrame.new(-551.2281494140625,3.5371456146240234,-79.05714416503906);
            ['Dealership'] = CFrame.new(727.8724365234375,3.709824562072754,440.3905944824219);
            ['Apartments 1'] = CFrame.new(-519.360107421875,3.7872262001037598,174.12612915039062);
            ['Apartments 2'] = CFrame.new(284.4169616699219,5.23713493347168,38.47633743286133);
        }
        local tpPart = nil;
        for i,v in next, workspace:GetChildren() do 
            if v.Name:find("'s Car") then 
                if v.DriveSeat.Occupant == azfake:returndata().humanoid then
                    tpPart = v.DriveSeat
                end
            end
        end
        if tpPart then 
            for i,v in next, tpconvert do 
                if tostring(tpselection) == tostring(i) then 
                    azfakenotify('Anchoring')
                    tpPart.Anchored = true
                    tpPart.CFrame = v
                    task.delay(6 ,function() -- for i=1,4 do print unachoring in 4-i
                        azfakenotify('Unanchoring')
                        tpPart.Anchored = false
                    end)
                end
            end
        else
            azfakenotify('No Part to TP',3)
        end
    end)
    local tpbutton = sector:AddButton('Unanchor Car', function()
        if not azfake:returndata().humanoidrootpart then return end
        local tpPart = nil;
        for i,v in next, workspace:GetChildren() do 
            if v.Name:find("'s Car") then 
                if v.DriveSeat.Occupant == azfake:returndata().humanoid and azfake:returndata().humanoid ~= nil then
                    tpPart = v.DriveSeat
                end
            end
        end
        if tpPart then 
            tpPart.Anchored = false
        end
    end)
    tpbutton:ActivateKnowledge();
    tpbutton:AddKnowledge('Go on a bike') -- Be in a Vehicle

    rightsector:AddToggle('Auto Loot', false, function(e)
        southbroxsettings.autoloot = e;
        if not e then return end;
    end);
    rightsector:AddToggle('Auto Loot Teleport', false, function(e) -- could add a safe mode
        southbroxsettings.autoloottp= e;
        if not e then return end;
    end);

    rightsector:AddButton('Serverhop',function()
        local Http = game:GetService("HttpService")
        local Api = "https://games.roblox.com/v1/games/"
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        
        
        
        local _servers = Api..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        function ListServers(cursor)
           local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
           return Http:JSONDecode(Raw)
        end
        
        local listed = 0
        local reg = {}
        for _,server in next, ListServers(nil).data do 
            pcall(function()
                if server.id ~= game.JobId then 
                    table.insert(reg,server.id)  
                end
                --print(server.id)
            end)
        end
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,reg[math.random(1,#reg)],game.Players.LocalPlayer)
        
    end)
    -- sector:AddToggle('Auto Bank Loot', false, function(e)
    --     southbroxsettings.autobankloot = e;
    --     if not e then return end;
    -- end);
    

    --sector:AddSeperator('-')
    --
    sector:AddSeperator('-')
    sector:AddLabel('Goto Boxes before Use')
    sector:AddToggle('Box Farm', false, function(e)
        southbroxsettings.boxfarm = e;
        if not e then return end;
        local function jobfunct()
            game:GetService("ReplicatedStorage").RemoteEvents.FetchGUI:FireServer('Box Job')
        end;  
        signals.conceal(function()
            while task.wait() do 
                local root = azfake:returndata().humanoidrootpart
                if getgenv().loopsUnload == true or southbroxsettings.boxfarm == false then print('south bronx farm break end') break end;
                print('starting')
                task.wait(.3)
                jobfunct()                 
                local newargs = {
                    CFrame.new(-551.3541870117188,3.5371456146240234,-83.16889953613281);
                    CFrame.new(-546.5244140625,3.5371460914611816,-83.23412322998047);
                    CFrame.new(-538.115234375,3.72835111618042,-83.00000762939453);
                    CFrame.new(-531.1220703125,3.4735217094421387,-82.80518341064453);
                    CFrame.new(-522.7515869140625,3.4121322631835938,-82.6013412475586);
                    CFrame.new(-516.1234130859375,3.4121322631835938,-82.47898864746094);
                    CFrame.new(-508.5804748535156,3.4121322631835938,-82.33951568603516);
                    CFrame.new(-500.9989929199219,3.4121322631835938,-82.19927215576172);
                    CFrame.new(-492.8343200683594,3.4121322631835938,-82.0482406616211);
                    CFrame.new(-486.2525939941406,3.4121322631835938,-81.9264907836914);
                    CFrame.new(-480.1707458496094,3.4121322631835938,-81.8139877319336);
                    CFrame.new(-473.3390808105469,3.4121322631835938,-81.68761444091797);
                    CFrame.new(-467.1322937011719,3.4121322631835938,-81.57279968261719);
                    CFrame.new(-459.9673767089844,3.4121322631835938,-81.44026184082031);
                    CFrame.new(-453.3022766113281,3.7371323108673096,-81.32750701904297);
                    CFrame.new(-446.3456726074219,3.5898265838623047,-81.22049713134766);
                    CFrame.new(-439.3890380859375,3.4121932983398438,-81.11347198486328);
                    CFrame.new(-432.2657775878906,3.4121932983398438,-81.0038833618164);
                    CFrame.new(-425.55908203125,3.4121932983398438,-80.90070343017578);
                    CFrame.new(-418.4358215332031,3.4121932983398438,-80.7911148071289);
                    CFrame.new(-411.5208435058594,3.4121932983398438,-80.68473052978516);
                    CFrame.new(-406.4444580078125,3.411583423614502,-80.25312805175781);
                    CFrame.new(-401.73095703125,3.4121766090393066,-76.04637908935547);
                    CFrame.new(-401.2643127441406,3.4121928215026855,-73.4693603515625);
                    CFrame.new(-401.2643127441406,3.4121928215026855,-73.4693603515625);
                }
                local inputManager = game:GetService('VirtualInputManager')  
                local changed = false
                for i,v in next, newargs do 
                    if getgenv().loopsUnload == true or southbroxsettings.boxfarm == false then print('south bronx farm break end') break end;
                    changed = false;
                    root.CFrame = v
                    if i > 3 then 
                        task.spawn(function()
                            repeat task.wait()
                                workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p, workspace.cratetruck2.Model.ClickBox.Position)
                            until changed == true
                        end)
                    else
                        workspace.Camera.CFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p, workspace.PlaceHere.Position)
                    end
                    --
                    task.wait(.275)
                    if i == 1 then 
                        task.wait(.1)
                        fireproximityprompt(workspace.PlaceHere.Attachment.ProximityPrompt)
                    end
                    pcall(function()
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild('Crate'))
                    end)
                    if i == #newargs then 
                        print('ended')
                        inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                        task.wait(.03)
                        inputManager:SendKeyEvent(false,Enum.KeyCode.W,false,game)
                        task.wait(0.3)
                        fireproximityprompt(workspace.cratetruck2.Model.ClickBox.ProximityPrompt)
                    end
                    changed = true
                end;
                task.wait(.3)
                jobfunct()
                print('tping back to')
                for i,v in next, newargs do 
                    if getgenv().loopsUnload == true or southbroxsettings.boxfarm == false then print('south bronx farm break end') break end;
                    pcall(function()
                        local num = #newargs;
                        num = num - i
                        root.CFrame = newargs[num]
                        task.wait(.275)
                    end)
                end;
                print('claiming')
                task.wait(0.15)
            end
        end);
    end);
    sector:AddToggle('Safe Card Farm', false, function(e)
        southbroxsettings.safefarm = e;
    end)
    sector:AddToggle('Use Vehicle Teleport', false, function(e)
        southbroxsettings.usevehicleteleport = e;
    end)
    local function teleportVehicle(cf)
        local getstring = "{pname}'s Car"
        getstring = string.gsub(getstring,'{pname}',game.Players.LocalPlayer.Name)
        if workspace:FindFirstChild(getstring) then 
            --workspace[getstring].DriveSeat.Anchored = true;
            workspace[getstring].DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
            repeat task.wait() 
                pcall(function()
                    workspace[getstring].DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
                end)
            until game.Players.LocalPlayer.Character.Humanoid.Sit == true 
            task.wait(0.001)
            workspace[getstring].DriveSeat.CFrame = cf
        else
            print('[no car]')
        end
    end
    local function jumpVehicle(cf)
        local getstring = "{pname}'s Car"
        getstring = string.gsub(getstring,'{pname}',game.Players.LocalPlayer.Name)
        if workspace:FindFirstChild(getstring) then 
            game.Players.LocalPlayer.Character.Humanoid.Sit = false;
            --workspace[getstring].Jump:FireServer()
        else
            print('[no car]')
        end
    end
    sector:AddToggle('Card Farm', false, function(e)
        southbroxsettings.cardfarm = e;
        --game.Players.LocalPlayer.Character.PrimaryPart.Anchored = e;
        if not e then return end;
        game.Players.LocalPlayer.Character.PrimaryPart.CFrame *= CFrame.new(0,-12,0)
        local inputManager = game.VirtualInputManager
        task.spawn(function()
            local function tweento(b,g)
                local root = game.Players.LocalPlayer.Character.PrimaryPart
                local timing = (b.Position - root.Position).Magnitude / 37
                timing += 1
                if g then timing += g end
                if southbroxsettings.usevehicleteleport then 
                    local tt1 = 0
                    repeat 
                        task.wait()
                        teleportVehicle(b)
                        tt1 += 0.1
                        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then -- check if has vehicle in the first place
                            --teleportVehicle(b)
                        end
                    until tt1 > 1
                    task.wait(0.05)
                    jumpVehicle(); --jumpVehice()
                else
                    local t = game.TweenService:Create(root,TweenInfo.new(timing,Enum.EasingStyle.Linear,Enum.EasingDirection.Out),{CFrame = b}); t:Play()
                    local timer = 0
                    task.spawn(function()
                        repeat 
                            task.wait(1);
                            timer += 1
                            inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                        until timer >= timing
                    end);
                    task.wait(timing+0.01)
                    --repeat task.wait() until t.Completed
                    print('done tween')
                end
            end;
            local function createPlatform()
                local part = Instance.new('Part'); part.Size = Vector3.new(15,1,15);part.Transparency = 0.5
                part.Parent = workspace; part.Name = 'myplatform';part.Anchored = true
            end
            
            local function setPlatform(cfr)
                if workspace:FindFirstChild('myplatform') then 
                    workspace:FindFirstChild('myplatform').CFrame = cfr.CFrame * CFrame.new(0,-3.9,0)
                else
                    createPlatform()
                    workspace:WaitForChild('myplatform').CFrame = cfr.CFrame * CFrame.new(0,-3.9,0)
                end
            end
            game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(x)
                if x.Name == 'ATM' then 
                    x:FindFirstChildOfClass('Frame').Size = UDim2.new(1,0,1,0)
                    x:FindFirstChildOfClass('Frame').Swipe.Size = UDim2.new(1,0,1,0)
                    x:FindFirstChildOfClass('Frame').Swipe.Position = UDim2.new(0,0,0,0)
                    x:FindFirstChildOfClass('Frame').Swipe.ZIndex = 5
                    x:FindFirstChildOfClass('Frame').Position = UDim2.new(0,0,0,0)
                end
            end)
            signals.conceal(function()
                while task.wait(0) do 
                    if getgenv().loopsUnload == true or southbroxsettings.cardfarm == false then  break end;
                    if azfake:returndata().humanoidrootpart then 
                        setPlatform(azfake:returndata().humanoidrootpart)
                        if game.Players.LocalPlayer.Character.Humanoid.Sit == true and southbroxsettings.usevehicleteleport == false then 
                            game.Players.LocalPlayer.Character.Humanoid.Sit = false
                        end
                    end
                end;
            end)
            local function checkdist(cf)
                return (cf.Position - azfake:returndata().humanoidrootpart.Position).Magnitude < 8
            end
            local inputManager = game.VirtualInputManager
            while task.wait() do 
                if getgenv().loopsUnload == true or southbroxsettings.cardfarm == false then  break end;
                if game.Players.LocalPlayer.Character then 
                    --Daler
                    --if azfake:returndata().character.Humanoid.FloorMaterial == Enum.Material.Air then 
                        --setPlatform(root)
                    --end
                    --inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                    local DealerCFrame = CFrame.new(217.7833709716797,3.7371320724487305,-334.5723876953125);
                    local bankNPCcFRAME = CFrame.new(-49.11941146850586,3.7371387481689453,-322.2247619628906);
                    local checkCardCFrame = CFrame.new(-42.873199462890625,3.7371387481689453,-331.6510925292969);
                    if southbroxsettings.safefarm then 
                        DealerCFrame *= CFrame.new(0,-6,0)
                        bankNPCcFRAME *= CFrame.new(0,-6,0)
                        --checkCardCFrame *= CFrame.new(0,-5,0)
                    end
                    if not game.Players.LocalPlayer.Character:FindFirstChild('Fake ID') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') then 
                        repeat 
                            task.wait(1)
                            if not game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') and not game.Players.LocalPlayer.Character:FindFirstChild('Fake ID') then 
                                tweento(DealerCFrame, 4)
                                inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                                fireproximityprompt(workspace.NPCs.FakeIDSeller.UpperTorso.Attachment.ProximityPrompt)
                            end
                        until checkdist(DealerCFrame) and (game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') or game.Players.LocalPlayer.Character:FindFirstChild('Fake ID')) or game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') or getgenv().loopsUnload == true or southbroxsettings.cardfarm == false

                        --fireproximityprompt(workspace.NPCs.FakeIDSeller.UpperTorso.Attachment.ProximityPrompt)
                        print('[got fake id]')
                        if game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') then 
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID'))
                        end
                    end

                    if southbroxsettings.safefarm then 
                    -- tweento(DealerCFrame, -1)
                    -- fireproximityprompt(workspace.NPCs.FakeIDSeller.UpperTorso.Attachment.ProximityPrompt)
                    -- task.wait(0.1)
                    -- tweento(DealerCFrame, -1)
                    end;

                    if game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') then 
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:WaitForChild('Fake ID'))
                    end
                    --inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                    print('[teleporting to banekr]') -- Character:FindFirstChild('Backpack')
                    repeat 
                        task.wait()
                        --inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                        tweento(bankNPCcFRAME, 2)
                        if game.Players.LocalPlayer.Character:FindFirstChild('Fake ID') then 
                            fireproximityprompt(workspace.NPCs["Bank Teller"].UpperTorso.Attachment.ProximityPrompt)
                        end
                    until not game.Players.LocalPlayer.Character:FindFirstChild('Fake ID') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Fake ID') or getgenv().loopsUnload == true or southbroxsettings.cardfarm == false
                    print('[banker took card]')
                    --tweento(bankNPCcFRAME) --DealerbankNPCcFRAMEFram)
                    -- check for 'application' cuz this function woul;d run if check for id saying (you already have an id)
                    repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui.Main.Message.Warning.TextTransparency == 0 and game:GetService("Players").LocalPlayer.PlayerGui.Main.Message.Warning.Text:find('application')  --and game:GetService("Players").LocalPlayer.PlayerGui.Main.Message.Warning.TextColor3 ~= Color3.fromRGB(255,0,0)
                    task.wait(0.5)
                    print('[banker gave us result]')
                    -- task.wait(5)
                    local checkingText = game:GetService("Players").LocalPlayer.PlayerGui.Main.Message.Warning --Frame
                    local CompletedMessage = 'Your application was successful. Please allow 30 seconds for the bank to prepare your card.'
                    if checkingText.Text:find('was successful.') and getgenv().loopsUnload == false and southbroxsettings.cardfarm == true then 
                        --inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                        print('[card application was a success]')
                        print('[tweening to nearest atm]')
                        tweento(checkCardCFrame)
                        task.wait(30.5)
                        if not checkdist(checkCardCFrame) then 
                            tweento(checkCardCFrame)
                        end
                        fireproximityprompt(workspace.Blank.Attachment.ProximityPrompt)
                        local atm = nil;
                        local atmdsist = nil;
                        for i,v in next, workspace.ATMS:GetChildren() do 
                            if v.ATMScreen.Transparency == 0 then 
                                local dist = (v.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude;
                                if atm == nil then 
                                    atm = v;
                                    atmdsist = dist--(atm.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude;
                                elseif atmdsist > dist then 
                                    atm = v;
                                    atmdsist = dist
                                end;
                            end;
                        end;
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:WaitForChild('Card'))
                        if atm == nil then print('[THERE WERE NO ATMS]') 
                            repeat 
                                task.wait(1)
                                for i,v in next, workspace.ATMS:GetChildren() do 
                                    if v.ATMScreen.Transparency == 0 then 
                                        local dist = (v.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude;
                                        if atm == nil then 
                                            atm = v;
                                            atmdsist = dist--(atm.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude;
                                        elseif atmdsist > dist then 
                                            atm = v;
                                            atmdsist = dist
                                        end;
                                    end;
                                end;
                            until atm ~= nil
                        end;
                        local inputManager = game.VirtualInputManager
                        repeat 
                            tweento(atm.CFrame, 2)
                            inputManager:SendKeyEvent(true,Enum.KeyCode.W,false,game)
                            task.wait(.03)
                            inputManager:SendKeyEvent(false,Enum.KeyCode.W,false,game)
                            task.wait(0.3)
                            fireproximityprompt(atm.Attachment.ProximityPrompt)
                            task.wait(1)
                            local inputManager = game:GetService('VirtualInputManager')
                            local m = game.Players.LocalPlayer:GetMouse()
                            inputManager:SendMouseButtonEvent(m.X,m.Y,0,true,game,0) -- 1319,574
                            task.wait(0.1)
                            inputManager:SendMouseButtonEvent(m.X,m.Y,0,false,game,0)
                        until not game.Players.LocalPlayer.Character:FindFirstChild('Card')
                        task.wait(2)
                    else
                        print('[application not successful]')
                    end;
                end
            end;
        end);
    end)

    modsector:AddButton('Infinite Ammo', function()
        local getunf = nil;
        for index,funct in next, getgc() do 
            if type(funct) == 'function' and getinfo(funct).source:find('Gun')  then
                warn(getinfo(funct).name)
                if getinfo(funct).name == 'Reload' then 
                    print('got reload funct')
                    getunf = funct
                end;
                for i,v in next, debug.getupvalues(funct) do 
                    print(i,v)
                end
            end
        end
        
        debug.setupvalue(getunf,3,math.huge)
        debug.setupvalue(getunf,5,math.huge)
        debug.setupvalue(getunf,6,math.huge)
        azfakenotify('Reload Gun.',3)
    end);
    local function applyRestraint(dumpfunctions)
        task.spawn(function()
            repeat 
                task.wait()
                if dumpfunctions.slide then 
                    debug.setupvalue(dumpfunctions.slide, 3, true)
                   -- debug.setupvalue(dumpfunctions.slide, 3, true)
                    debug.setupvalue(dumpfunctions.slide, 1, false)
                    debug.setupvalue(dumpfunctions.slide, 4, false)
                end
                if dumpfunctions.reload then 
                    debug.setupvalue(dumpfunctions.reload, 1, true)
                end
                if dumpfunctions.tactreload then 
                    debug.setupvalue(dumpfunctions.tactreload, 1, true)
                end
            until 1 == 2 or not game.Players.LocalPlayer.Character
        end)
    end; -- applyRestraint{slide = fuunct}

    modsector:AddButton('Anti Jam Gun',function(e)
        --southbroxsettings.antijam = e;
        --if not e then return end;
        dumpgunmodules()
        task.spawn(function()
            for index,funct in next, getgc() do 
                if type(funct) == 'function' and getinfo(funct).source:find('Gun') then
                    if tostring(getinfo(funct).name) == 'SlideHandler' then 
                        --dumpfunctions.slide = funct;
                        applyRestraint({slide = funct})
                    end
                end
            end
        end)
    end) -- ani
    modsector:AddButton('No Cooldown Shoot', function(e)
        --southbroxsettings.nocooldownshoot = e;
        --if not e then return end;
        task.spawn(function()
            for index,funct in next, getgc() do 
                if type(funct) == 'function' and getinfo(funct).source:find('Gun') then
                    -- if tostring(getinfo(funct).name) == 'SlideHandler' then 
                    --     --dumpfunctions.slide = funct;
                    --     applyRestraint{slide = funct}
                    if tostring(getinfo(funct).name) == 'Reload' then 
                        --dumpfunctions.reload = funct
                        applyRestraint({reload = funct})
                    elseif tostring(getinfo(funct).name) == 'TacticalReload' then 
                        --dumpfunctions.tactreload = funct
                        applyRestraint({tactreload = funct})
                    end;
                end
            end
        end)

    end)
    modsector:AddToggle('Full Bright', false, function(e)
        southbroxsettings.fullbright = e;
    end)
    modsector:AddToggle('No Blur', false, function(e)
        southbroxsettings.noblur = e;
    end)
    modsector:AddButton('Max Bullet Range',  function(e)
        southbroxsettings.maxbulletrange = e;
    end)
    modsector:AddToggle('Hold Gun To Shoot', false, function(e)
        southbroxsettings.holdtoshoot = e;
    end)
    modsector:AddButton('Max Bullet Speed', function(e)
        southbroxsettings.maxbulletspeed = e;
    end)
    modsector:AddButton('No Recoil', function(e)
       -- southbroxsettings.norecoil = e;
       task.spawn(function()
            for index,funct in next, getgc() do 
                if type(funct) == 'function' and getinfo(funct).source:find('Gun') then
                    -- if tostring(getinfo(funct).name) == 'SlideHandler' then 
                    --     --dumpfunctions.slide = funct;
                    --     applyRestraint{slide = funct}
                    if tostring(getinfo(funct).name) == 'RecoilCamera' then 
                        hookfunction(funct, function()
                            return nil
                        end)
                    end;
                end
            end
        end)
    end)
    -- modsector:AddTextbox('S', nil, function(e)
    --     -- southbroxsettings.norecoil = e;
    --     task.spawn(function()
    --          for index,funct in next, getgc() do 
    --              if type(funct) == 'function' and getinfo(funct).source:find('Gun') then
    --                  -- if tostring(getinfo(funct).name) == 'SlideHandler' then 
    --                  --     --dumpfunctions.slide = funct;
    --                  --     applyRestraint{slide = funct}
    --                  if tostring(getinfo(funct).name) == 'RecoilCamera' then 
    --                      hookfunction(funct, function()
    --                          return nil
    --                      end)
    --                  end;
    --              end
    --          end
    --      end)
    --  end)
    local function getclosestotmouse()
        local closestplayer = nil;
        local closestdist = nil;
        local mosue = game.Players.LocalPlayer:GetMouse()
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
            for i,v in next, game.Players:GetPlayers() do 
                if v~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass('Humanoid') and v.Character:FindFirstChildOfClass('Humanoid').Health > 0 then 
                    local dist = (mosue.hit.p - v.Character.PrimaryPart.Position).Magnitude
                    local hrpdist = (v.Character.PrimaryPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if hrpdist <= southbroxsettings.silentaimdistance then --100 then -- dist
                        if dist <= southbroxsettings.silentaimradius then 
                            if closestplayer == nil then 
                                closestplayer = v;
                                closestdist = hrpdist
                            else
                                if closestdist > dist then 
                                    closestplayer = v;
                                    closestdist = hrpdist
                                end
                            end
                        end
                    end
                end
            end
        end
        return closestplayer
    end
    local inputManager = game:GetService('VirtualInputManager')
    local m = game.Players.LocalPlayer:GetMouse()
    local released = false
    game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
        released = false;
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool') and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool') :FindFirstChild('GunScript_Server') then 
            local _, v = pcall(getclosestotmouse)
            if not v then return end;
            local ohInstance1 = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool') --["Hi-Point"]
            local ohInstance2 = game:GetService("Players").LocalPlayer
            local ohInstance3 = v.Character.Humanoid
            local ohInstance4 = v.Character.HumanoidRootPart
            local ohNumber5 = 20
            local ohTable6 = {
                [1] = 0,
                [2] = 0,
                [3] = false,
                [4] = false,
                [5] = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool').GunScript_Server.IgniteScript,
                [6] = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool').GunScript_Server.IcifyScript,
                [7] = 100,
                [8] = 100
            }
            local ohTable7 = {
                [1] = false,
                [2] = 0,
                [3] = 0
            }
            local ohInstance8 = v.Character.Head
            local ohTable9 = {
                [1] = false,
                [2] = {
                    [1] = 3734304510
                },
                [3] = 0,
                [4] = 10,
                [5] = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Tool').GunScript_Local.HeadshotEffect
            }
            local ohVector310 = ohInstance8.Position
            local ohVector311 = Vector3.new(-0.9115819931030273, 0.23721949756145477, -0.3357754945755005)
            local ohNumber12 = os.time()
            local ohVector313 = Vector3.new(0.7709456086158752, 0.6844817399978638, 1.2795101404190063)
            
            game:GetService("ReplicatedStorage").RemoteEvents.InflictTarget:FireServer(ohInstance1, ohInstance2, ohInstance3, ohInstance4, ohNumber5, ohTable6, ohTable7, ohInstance8, ohTable9, ohVector310, ohVector311, ohNumber12, ohVector313)
            
        end;    
        if southbroxsettings.holdtoshoot then 
            task.spawn(function()
                repeat 
                    task.wait()
                    if released == false and southbroxsettings.holdtoshoot and southbroxsettings.silentaim == false then 
                        inputManager:SendMouseButtonEvent(m.X,m.Y,0,true,game,0) -- 1319,574
                        --task.wait(0.05)
                        inputManager:SendMouseButtonEvent(m.X,m.Y,0,false,game,0)
                    end
                until released or southbroxsettings.holdtoshoot == false
            end)
        end
    end)-- mouse 1 down
    game.Players.LocalPlayer:GetMouse().Button1Up:Connect(function()
        for i=1, 10 do 
            released = true;
        end
    end)-- mouse 1 down
    leftsect:AddSlider('Silent Aim Distance', 0, 100, 250, 100, function(ztx)
        southbroxsettings.silentaimdistance = ztx
        -- if southbroxsettings.assets.silentaimcircle then 
        --     southbroxsettings.assets.silentaimcircle.Thickness = southbroxsettings.silentaimdistance
        --     -- upd
        -- end
    end)
    leftsect:AddToggle('Silent Aim', false, function(e)
        southbroxsettings.silentaim = e;
        if not e then 
            if southbroxsettings.assets.silentaimcircle then 
                southbroxsettings.assets.silentaimcircle:Remove()
            end
            maid.silentaimcon = nil;
            return
        end
        southbroxsettings.assets.silentaimcircle = Drawing.new('Circle') -- objects   fdov   fov
        southbroxsettings.assets.silentaimcircle.Color = southbroxsettings['silentaimcolor']
        --southbroxsettings.assets.silentaimcircle = Drawing.new('Circle')
        local UserInputService = game.UserInputService
        --southbroxsettings.assets.silentaimcircle.Visible = true
        southbroxsettings.assets.silentaimcircle.Radius = southbroxsettings.silentaimradius; --90
        southbroxsettings.assets.silentaimcircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X/2,workspace.CurrentCamera.ViewportSize.Y/2)
        southbroxsettings.assets.silentaimcircle.Thickness = southbroxsettings.silentaimthicky; --3
        southbroxsettings.assets.silentaimcircle.Visible = true
        maid.silentaimcon = signals.gamestepped:connect('@radius', function()
            southbroxsettings.assets.silentaimcircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
        end)
    end);
    leftsect:AddSlider('Silent Aim Radius', 0, 90, 360, 1, function(ztx)
        southbroxsettings.silentaimradius = ztx
        if southbroxsettings.assets.silentaimcircle then 
            southbroxsettings.assets.silentaimcircle.Radius = southbroxsettings.silentaimradius
            -- upd
        end
    end)
    leftsect:AddSlider('Silent Aim Thickness', 0, 3, 5, 100, function(ztx)
        southbroxsettings.silentaimthicky = ztx
        if southbroxsettings.assets.silentaimcircle then 
            southbroxsettings.assets.silentaimcircle.Thickness = southbroxsettings.silentaimthicky
            -- upd
        end
    end)
    leftsect:AddColorpicker('Silent Aim Color',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['silentaimcolor'] = ztx
        if southbroxsettings.assets.silentaimcircle then 
            southbroxsettings.assets.silentaimcircle.Color = ztx; --southbroxsettings.ztx
        end
    end)
    local function rayEsp(t)
        -- could set the global esp[flag] = {}
        local child = t.child
        local flag = t.flag
        local distcap = t.maxdist
        local color = t.color
        local nobox = t.nobox or false;
        local notracer = t.notracer or false; -- notraceror notraror notraacer
        local givenaname = t.name -- supposed to be given name
        local activet = t.active
        local disableremove = t.removeondisable
        local pivoting = t.usepivot
        local selfname = t.selfname
        local b = esp_lib:Add(child, {
            SelfName = selfname;
            IsEnabled = flag;
            flag = flag;
            tag = flag;
            maxdistance = distcap;
            Color = t.color;
            NoTracer = notracer;
            NoBox = nobox;
            Name = givenaname;
            active = activet;
            removeondisable = disableremove;
            usepivot = pivoting;
        });
        return b
    end
    espsector:AddToggle('Enable ESP', false, function(e)
        esp_lib:Toggle(e) --.Enabled = e;
    end)
    espsector:AddToggle('Use Names', false, function(xstate)
        southbroxsettings.espnames = xstate;
        esp_lib.Names = xstate
    end)
    espsector:AddToggle('Use Boxes', false, function(xstate)
        southbroxsettings.boxesp = xstate;
        esp_lib.Boxes = xstate
    end)
    espsector:AddToggle('Use Tracers', false, function(xstate)
        southbroxsettings.tracers = xstate;
        esp_lib.Tracers = xstate
    end)
    espsector:AddToggle('Player Esp', false, function(xstate)
        southbroxsettings.playeresp = xstate;
        esp_lib.Players = xstate
    end)
    espsector:AddColorpicker('Player Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['playerespcolor'] = ztx
        esp_lib.Settings.playerespcolor = southbroxsettings.playerespcolor
    end)
    espsector:AddSlider("Player Esp Range", 0, 200, 5000, 1, function(State)
        southbroxsettings['playerespdistance'] = State
        esp_lib.Settings.playerespdistance = southbroxsettings.playerespdistance
    end)

    espsector:AddToggle('NPC Esp',false,function(e)
        southbroxsettings.npcesp = e;
        if not e then return end;
        print('loading esp')
        for i,v in next, workspace.NPCs:GetChildren() do -- workspace.MissionBoards:GetChildren()  
            rayEsp{
                child = v;
                Name = function()
                    return v.Name 
                end;
                flag = 'npc'; -- npctag npcflag
                maxdist = function()
                    return southbroxsettings.npcespdistance
                end,
                color = function()
                    return southbroxsettings.npcespcolor
                end,
                active = function()
                    return southbroxsettings.npcesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end
    end)
    espsector:AddColorpicker('NPC Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['npcespcolor'] = ztx
    end)
    espsector:AddSlider("NPC Esp Range", 0, 200, 5000, 1, function(State)
        southbroxsettings['npcespdistance'] = State
    end)
    espsector:AddToggle('ATM Esp',false,function(e)
        southbroxsettings.atmesp = e;
        if not e then return end;
        print('loading esp')
        for i,v in next, workspace.ATMS:GetChildren() do -- workspace.MissionBoards:GetChildren()  
            rayEsp{
                child = v; -- Color == Color3.fromRGB(248, 248, 248) 
                Name = function()
                    return v.ATMScreen.Transparency == 0 and 'AVAILABLE ATM' or 'NOT AVAILABLE ATM'
                end;
                flag = 'atm'; -- npctag npcflag
                maxdist = function()
                    return southbroxsettings.atmespdistance
                end,
                color = function()
                    return v.ATMScreen.Transparency == 0 and southbroxsettings.atmespcolor or southbroxsettings.atmespdisablecolor --southbroxsettings.npcespcolor
                end,
                active = function()
                    return southbroxsettings.atmesp
                end;
                nobox = true;
                notracer = true;
                removeondisable = true;
            }
        end
    end)
    espsector:AddColorpicker('ATM Esp Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['atmespcolor'] = ztx
    end)
    espsector:AddColorpicker('ATM Disabled Colour',Color3.fromRGB(255, 255,255), function(ztx)
        southbroxsettings['atmespdisablecolor'] = ztx
    end)
    espsector:AddSlider("ATM Esp Range", 0, 200, 5000, 1, function(State)
        southbroxsettings['atmespdistance'] = State
    end)

    -- local function getclosetomouse(originalargs)
    --     local wasclose = nil;
    --     local closedist = nil;
    --     for i,v in next, game.Players:GetPlayers() do 
    --         if v ~= game.Players.LocalPlayer and v.Character then 
    --             local mouseget = game.Players.LocalPlayer:GetMouse().hit.p 
    --             local dist = (mouseget - v.Character.PrimaryPart.Position)
    --             if dist.Magnitude < 15 then 
    --                 if wasclose == nil then 
    --                     wasclose = v;
    --                     closedist = dist;
    --                 else
    --                     if closedist > dist then 
    --                         wasclose = v;
    --                         closedist = dist;
    --                     end
    --                 end
    --             end
    --         end
    --     end;    
    --     return {closest = wasclose}
    -- end;

    --setupEspTab(getgenv().southbroxsettings)
    
    -- local metaindex;
    -- metaindex = hookmetamethod(game,'__index',function(self,reading)
    --     if tostring(self) == 'Lighting' and southbroxsettings['fullbright'] == true  then -- full bring
    --         if tostring(reading) == 'ClockTime' then -- TimeOfDay 
    --             return 12
    --         elseif tostring(reading) == 'FogEnd' then 
    --             return game.Lighting.FogStart
    --         elseif tostring(reading) == 'Ambient' then 
    --             return Color3.fromRGB(255, 255, 255)
    --         elseif tostring(reading) == 'Brightness' then 
    --             return 2
    --         elseif tostring(reading) == 'GlobalShadows' then 
    --             return false
    --         else
    --             return metaindex(self,reading)
    --         end
    --     else
            
    --         return metaindex(self,reading) --false
    --     end
    --     return metaindex(self,reading)
    -- end)

    -- local function getclosestotmouse()
    --     local closestplayer = nil;
    --     local closestdist = nil;
    --     local mosue = game.Players.LocalPlayer:GetMouse()
    --     if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then 
    --         for i,v in next, game.Players:GetPlayers() do 
    --             if v~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass('Humanoid') and v.Character:FindFirstChildOfClass('Humanoid').Health > 0 then 
    --                 local dist = (mosue.hit.p - v.Character.PrimaryPart.Position).Magnitude
    --                 local hrpdist = (v.Character.PrimaryPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    --                 if hrpdist <= southbroxsettings.silentaimdistance then --100 then -- dist
    --                     if dist <= southbroxsettings.silentaimradius then 
    --                         if closestplayer == nil then 
    --                             closestplayer = v;
    --                             closestdist = dist
    --                         else
    --                             if closestdist > dist then 
    --                                 closestplayer = v;
    --                                 closestdist = dist
    --                             end
    --                         end
    --                     end
    --                 end
    --             end
    --         end
    --     end
    --     return closestplayer
    -- end

    local metahook;
    metahook = hookmetamethod(game,'__namecall',function(self,...)
        local args = {...}
        local call_type = getnamecallmethod();
        -- headhitbox  customh
        if (southbroxsettings.alwayshitheadshots or southbroxsettings.headhitbox) and call_type == 'FireServer' and tostring(self) == 'InflictTarget' then 
            args[4] = args[4].Parent.Head
            args[8] = args[4]
        end
    
        if call_type == 'Kick' then 
            warn('Attempted to kick')
            return task.wait(math.huge)
        elseif call_type == 'FireServer' and tostring(self) == 'InflictTarget' and southbroxsettings.oneshotkill and not checkcaller()  then 
            args[5] = 100
            args[4] = args[4].Parent.Head
            args[8] = args[4]
            --print('spoofed and firing multiple times')
            metahook(self,unpack(args))
            metahook(self,unpack(args))
            metahook(self,unpack(args))
            return metahook(self,unpack(args))
        elseif call_type == 'FireServer' and tostring(self) == 'VisualizeBullet' then --'VisualiseBullet' then -- and southbroxsettings.silentaim  then 
            if southbroxsettings.silentaim then 
                args[9][11] = Vector3.new(5,5,5)
            end
            if southbroxsettings.maxbulletspeed  then 
                args[9][8] = 2000
            end
            if southbroxsettings.maxbulletrange  then 
                args[9][7] = 2000
            end
        else
            return metahook(self,...)
        end
        return metahook(self,...)
    end)



    local mouse = game.Players.LocalPlayer:GetMouse()

    --
    -- local metaindex;
    -- metaindex = hookmetamethod(game,'__index',function(self,reading)
    --     if southbroxsettings.silentaim and (self and self:IsA('PlayerMouse')) and pcall(getclosestotmouse) and not checkcaller() then 
    --         -- and (tostring(reading) == 'Hit' or tostring(reading) == 'Target')
    --         local _,closestPlayer = pcall(getclosestotmouse)
    --         print(_,closestPlayer)
    --         if closestPlayer then 
    --             --print(closestPlayer)
    --             --return metaindex(self, closestPlayer.Character.HumanoidRootPart)
    --             if tostring(reading) == 'Hit' then 
    --                 return closestPlayer.Character.HumanoidRootPart.CFrame;
    --             elseif tostring(reading) == 'Target' then 
    --                 return closestPlayer.Character.HumanoidRootPart
    --             end
    --         end
    --         return metaindex(self,reading) --Vector3.new(0,0,0)
    --     end
    --     return metaindex(self,reading)
    -- end)
    
    
    
    

    local thelooted = {}
    local function findlooted(v)
        local b = false
        for i,c in next, thelooted do 
            if c == v then b = true end; -- check if b is alr true
        end
        return b
    end
    task.spawn(function()
        while task.wait() do 
            if getgenv().loopsUnload == true then print('south bronx break end') break end;
            --print('loo0p')
            if southbroxsettings.autoloot then 
                for i,v in next, game.Players:GetPlayers() do 
                    if v ~= game.Players.LocalPlayer and v.Character then 
                        if v.Character.Humanoid.Health <= 0 and v.Character:FindFirstChild('UpperTorso') then 
                            if not findlooted(v) and v.Character.UpperTorso.ProximityPrompt.Enabled == true and (v.Character.PrimaryPart.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude <= 5 and game.Players.LocalPlayer.Character.Humanoid.MoveDirection == Vector3.new(0,0,0) then 
                                table.insert(thelooted, v)
                                
                                print('looting '..v.Character.Name)
                                
                                if southbroxsettings.autoloottp and azfake:returndata().humanoidrootpart then 
                                    azfake:returndata().humanoidrootpart.CFrame = v.Character.UpperTorso.CFrame
                                end
                                --pcall(function()
                                    fireproximityprompt(v.Character.UpperTorso.ProximityPrompt)
                                --end)
                                --task.wait(0.5)
                            end
                        end
                    end
                end
            end
            --print('loo0p2')
            if southbroxsettings.noblur == true then 
                pcall(function()
                    --game:GetService("Lighting").Blur.Enabled = false;
                    game:GetService("Lighting")['gun blur'].Enabled = false;
                end)
            end
            --print('loo0pe')
            if southbroxsettings.fullbright then 
                game.Lighting.ClockTime = 12;
                game.Lighting.FogEnd = 1400;
                game.Lighting.Ambient = Color3.fromRGB(255,255,255)
                game.Lighting.Brightness = 2;
                game.Lighting.GlobalShadows = false;
            end
        end
    end)

    AddConfigurations()
elseif universeid == 1511883870 then --  shindo life
    local tab = window:CreateTab(gameName)
    local sector = tab:CreateSector('Cheats','left')

    getgenv().shindolifesettings = {
        rollback = false;
        spinfor = '';
        infinitespin = false;
        ['kg1'] = true; -- false : dont spin
        ['kg2'] = true; -- false : dont spin
        ['kg3'] = true; -- false : dont spin
        ['kg4'] = true; -- false : dont spin
        el1 = true;
        el2 = true;
        el3 = true;
        el4 = true;
        default = '';
    }

    --using('UnloadService')
    setupAimbotTab(getgenv().shindolifesettings)
    
    --AddConfigurations()
    sharedRequires['CreateFlySystem'](sector, shindolifesettings)
    sharedRequires['CreateWalkSpeedSystem'](sector, shindolifesettings)
    sharedRequires['CreateNoclip'](sector, shindolifesettings)
    task.spawn(function()
        sharedRequires['SetupChatlogger'](sector, shindolifesettings)
    end)

    -- sector:AddTextbox('Spin For',nil,function(xstate)
    --     shindolifesettings.spinfor = xstate;
    -- end)

    if game.PlaceId == 4616652839 then 
        local spinning = {};
        for i,v in next, game:GetService("ReplicatedStorage").alljutsu:GetChildren() do  -- STYLESD
            if not signals.findinstring(v.Name,'BOSS','spec','SPEC','powers','CUSTOMSUSANOO','JINSPO','STYLES','MENTOR','NPC','SUBABILITY') then 
                table.insert(spinning,v.Name)
            end;
        end
        sector:AddDropdown('KG Spin', spinning, shindolifesettings.default, true, function(xtstae)
            if type(xstate) == 'string' then 
                shindolifesettings.spinfor = {xtstae}
            else
                shindolifesettings.spinfor = xtstae
            end;    
            print(shindolifesettings.spinfor)
        end)
        sector:AddToggle('Infinite Spin', false, function(opn)
            shindolifesettings.infinitespin = opn
            if not opn then return end;
            game:GetService("Players").LocalPlayer:WaitForChild('statz'):WaitForChild('main'):WaitForChild('kg1')
            repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild('Main'):WaitForChild('startupframe'):WaitForChild('arrowup1').Visible == true
            firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Main.startupframe.arrowup1.MouseButton1Down)
            firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Main.startupframe.mode.MouseButton1Down)
            firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Main.Customization.KG.MouseButton1Down)
        end)
        sector:AddToggle('Spin KG1', true, function(opn)
            shindolifesettings.kg1 = opn
        end)
        sector:AddToggle('Spin KG2', true, function(opn)
            shindolifesettings.kg2 = opn
        end)
        sector:AddToggle('Spin KG3', true, function(opn)
            shindolifesettings.kg3 = opn
        end)
        sector:AddToggle('Spin KG4', true, function(opn)
            shindolifesettings.kg4 = opn
        end)
        sector:AddSeperator('-')
        sector:AddToggle('Spin Element1', true, function(opn)
            shindolifesettings.el1 = opn
        end)
        sector:AddToggle('Spin Element2', true, function(opn)
            shindolifesettings.el2 = opn
        end)
        sector:AddToggle('Spin Element3', true, function(opn)
            shindolifesettings.el3 = opn
        end)
        sector:AddToggle('Spin Element4', true, function(opn)
            shindolifesettings.el4 = opn
        end)
    
    end
    sector:AddToggle('Rollback Data', false, function(opn)
        shindolifesettings.rollback = opn
        if not opn then 
            maid.rollbackdata = nil;
            return
        end;
        local backed = false;
        maid.rollbackdata = signals.heartbeat:connect('@', function()
            pcall(function()
                if backed == false then 
                    backed = true; 
                    game:GetService("Players").LocalPlayer.startevent:FireServer("mouth", "\255")
                    task.delay(2,function()
                        backed = false;
                    end)
                end
            end)
        end)
    end)
    game:GetService("Players").LocalPlayer:WaitForChild('statz'):WaitForChild('main')
    local WantedBloodlines = {
        'RELL';
        -- 'Code-Gaiden';
        -- 'Kamaki-Akuma';
        -- 'Kamaki-Inferno';
        -- 'Aizden-Reverse'
    
    }
    local function CheckForGenkai()
        local AchievedGenkai = false;
        local K1 = game:GetService("Players").LocalPlayer.statz.main.kg1
        local K2 = game:GetService("Players").LocalPlayer.statz.main.kg2
        local K3 = game:GetService("Players").LocalPlayer.statz.main.kg3
        local K4 = game:GetService("Players").LocalPlayer.statz.main.kg4
        local CurrentBloodlines = {}
        for _,v in next, game:GetService("Players").LocalPlayer.statz.main:GetChildren() do 
            if v.Name:sub(1,2) == 'kg' then 
                table.insert(CurrentBloodlines, v.Value)
            end
        end
        if type(shindolifesettings.spinfor) == 'table' and shindolifesettings.spinfor ~= '' then 
            for _,v in next, shindolifesettings.spinfor do 
                if table.find(CurrentBloodlines, v) then 
                    AchievedGenkai = true
                    azfakenotify('got bloodline '..v,3) -- seeking after
                end
                for __,vv in next, game:GetService("Players").LocalPlayer.statz.genkailevel:GetChildren() do 
                    if v == vv.Name or string.lower(v) == vv.Name then  
                        AchievedGenkai = true
                    end
                    local nosub = string.gsub(v,' ','')
                    nosub = string.gsub(nosub,'-','')
                    if string.lower(nosub) == string.lower(vv.Name) then 
                        AchievedGenkai = true
                    end
                end
            end
        end
        return AchievedGenkai
    end

    local GotBloodlines = false;
    local MANUALSPIN = false
    local function SetRollback()
        task.spawn(function()
            game:GetService("Players").LocalPlayer.startevent:FireServer("mouth", "\255")
            tttick = 0
            repeat task.wait(); tttick += 0.1; game:GetService("Players").LocalPlayer.startevent:FireServer("mouth", "\255") until tttick >= 1
        end)
    end
    local function Spin()
        if MANUALSPIN == false then 
            for i = 1, 4 do 
                if shindolifesettings['kg'..i] == true then 
                    local ohString1 = "spin"
                    local ohString2 = "kg"..i
                    game:GetService("Players").LocalPlayer.startevent:FireServer(ohString1, ohString2)
                end
            end
        else
            -- game:GetService("Players").rawrssz1.PlayerGui.Main.Customization.KGTab.Frame2.KG2.spins : the button
            for _,v in next, game:GetService("Players").LocalPlayer.PlayerGui.Main.Customization.KGTab:GetChildren() do 
                -- Frame2.KG2.spins
                for i,kg in next, v:GetChildren() do 
                    if shindolifesettings[string.lower(kg.Name)] == true and kg.ImageTransparency ~= 0.5 then 
                        task.spawn(function()
                            firesignal(kg.spins.MouseButton1Down)
                        end)
                    end
                end
            end
        end
    end
    local function RevertRollback()
        task.spawn(function()
            repeat task.wait() 	game:GetService("Players").LocalPlayer.startevent:FireServer("mouth", "http://www.roblox.com/asset/?id=5262168414") until 1 == 2
        end)
    end
    --[[
        elseif table.find(shindogames,tostring(game.PlaceId)) then 
        local tab = window:CreateTab(gameName)
        local sector = tab:CreateSector('Cheats','left')
        getgenv().shindo1settings = {
            instakill = false;
            autoquest = false;
            autorebirth = false;
            autostats = {
                on = false;
                chakra = false;
                ninjutsu = false;
                taijutsu = false;
                health = false;
            };

        };

        local MissionRepo = game:GetService("Workspace").missiongivers

        local function addstat(x,a) -- chakra,ninjutsu,taijutsu,health
            local ohString1 = "addstat"
            local ohString2 = x
            local ohNumber3 = a

            game:GetService("Players").LocalPlayer.startevent:FireServer(ohString1, ohString2, ohNumber3)
        end

        task.spawn(function()
            while task.wait(0) do 
                --if getgenv()
            end
        end)
    ]]
    game:GetService("Players").LocalPlayer.statz.genkailevel.ChildAdded:Connect(function(x)
        print('new bloodline: '..x.Name)
        azfakenotify('bloodline '..x.Name,'untilClick')
    end)
    task.spawn(function()
        while task.wait() do 
            if shindolifesettings.infinitespin then 
                shindolifesettings.infinitespin = nil

                -- game:GetService("TeleportService"):teleport(game.PlaceId)
                SetRollback()
                --Spin()
                
                
                repeat 
                    task.wait(1) 
                    Spin()
                until CheckForGenkai() == true or game:GetService("Players").LocalPlayer.statz.spins.Value == 0 or shindolifesettings.infinitespin == false
                
                if shindolifesettings.infinitespin == nil then 
                    game:GetService("TeleportService"):teleport(game.PlaceId)
                else
                    RevertRollback()
                end
            end
        end
    end)
    AddConfigurations()
else

    -- PlayerExperience


    local tab = window:CreateTab(gameName)
    local weirdsector = tab:CreateSector('Cheats','left')

    getgenv().nogamesettings = {
        
    }
    setupAimbotTab(getgenv().nogamesettings)
    
    --AddConfigurations()
    getgenv().AddPlayerList(weirdsector)
    sharedRequires['CreateFlySystem'](weirdsector, nogamesettings)
    sharedRequires['CreateWalkSpeedSystem'](weirdsector, nogamesettings)
    sharedRequires['CreateNoclip'](weirdsector, nogamesettings)
    task.spawn(function()
        sharedRequires['SetupChatlogger'](weirdsector, nogamesettings)
    end)

    weirdsector:AddButton('Rejoin',function()
        game:GetService('TeleportService'):teleport(game.PlaceId)
    end)
    weirdsector:AddToggle('Testing Toggle', false, function(on)
        --if not on 
    end)
    local beenx = ''
    weirdsector:AddTextbox('whats da word',nil, function(x)
        beenx = x
    end)
    weirdsector:AddButton('compile',function()
        setclipboard(signals.encode(beenx))
    end)
    weirdsector:AddButton('decompile',function()
        dephdaLLoura.__ = true
        setclipboard(signals.decode(beenx))
        dephdaLLoura.__ = false
    end)
    weirdsector:AddButton('load compiled text',function()
        dephdaLLoura.__ = true
        loadstring(signals.decode(beenx))();
        dephdaLLoura.__ = false
    end)
    local offsetsforbaseplate = {
        '0x648A82E60060'; -- BC_TriggerPunishment
    }
    local encoded = signals.encode('wow THIS is a random generated string encoded')
    print(encoded)
    print(signals.decode(encoded))
    setupEspTab(getgenv().nogamesettings)
    AddConfigurations()
end


-- percentage of a number  CURRENT VALUE INSIDE THE WHOLE DIVIDED BY WHOLE  * 100
-- humanoid.AnimationPlayed

-- bottom

loadstop = true
--azfakenotify('has loaded','untilClick')

--[[
data loss is when data doesnt save and at that point you corrupt it
local con=childadded:connect(function()

end)
-- can put more connections
while task.wait() do
    if getgenv().loopsunload ==true then con:Disconnect() 
        -- break the while loop along with disablling the connections here
        break
    end 
end

]]
-- for lowatone could replace all the player value with a folder or a folder inside a folder
-- put players in a folder in game.Players
--[[
    game:GetService("Workspace").NPCs.Inari.HumanoidRootPart
    r = 0
repeat
-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide
task.wait(0.001)
r+=0.1
game.Players.LocalPlayer.Character.M1:FireServer()
until r == 1
print('e')
]]

-- game:GetService("Workspace").NPCs["enchant person"].HumanoidRootPart
--[[

imagine if roblox was like a windows desktop
since theyre changing it to be an app typa stuff
you choose roblox games to be on ur home screen and it would look like the game thumbnail in an app 
dark blue background with builderman pointing at a roblox logo sun in the night
roblox logo sun would be the moon
this ^ is on the right side of the screen on the moon
dark setting and builderman isnt white; white but little dark to set the atmosphere
and no hes not smiling hes with a straight face
and then roblox studio is like an app on the desktop but on the roblox ui background
you get apps by going on the store which is basically microsoft store or the web app searcher and u can put games to ur
desktop by buying them with robux or just being able to do it by default it it is free


]]

getgenv().versioncode = '#5c'
getgenv().azfake_version = 'v3, 4a'--'v3 '..getgenv().versioncode



Notify('','Running | Version | '..compiledVersion,'untilClick')
if vs == 'debug' then 
    azfakenotify('A real scripter has the power for code to come to life;','untilClick') -- 'AZFAKE',
end
-- print(typeofazfake)
-- pee es fiye

local getVersion = string.upper(azfakebuild.build)

window.NameLabel.Text = `Mixous Hub {getVersion} - `..typeofazfake -- Project V3 
--[[
    local BillboardGui = Instance.new('BillboardGui')
BillboardGui.LightInfluence = 1
BillboardGui.MaxDistance = 100
BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
BillboardGui.Active = true
BillboardGui.StudsOffset = 3, -1.5, 0
BillboardGui.AlwaysOnTop = false
BillboardGui.Size = UDim2.new({0.600000024, 0}, {6, 0})
]]
task.spawn(function()
    task.wait(3)
    for _,v in next, getgenv() do 
        LengthOfGlobals += 1
    end
    for _,v in next, _G do 
        LengthOf_G += 1
    end
    LengthOf_G += 5
    LengthOfGlobals += 5
    task.spawn(function()
        task.wait(3)
        FinishedLoadingAllVariables = true
    end)
    
end)

runDebugPanel()
